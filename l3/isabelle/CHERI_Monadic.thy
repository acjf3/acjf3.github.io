(* CHERI_Monadic.thy - generated by L3 - 02/11/2017 *)
theory CHERI_Monadic
imports "$ISABELLE_HOME/src/HOL/Word/Word" "L3_Lib"
begin

ML_file "$ISABELLE_HOME/src/HOL/Word/Tools/word_lib.ML"
ML_file "L3.ML"

record EntryLo =
  C :: "3 word"
  D :: bool
  G :: bool
  L :: bool
  PFN :: "28 word"
  S :: bool
  V :: bool
  entrylo'rst :: "28 word"

record TLBEntry =
  ASID :: "8 word"
  C0 :: "3 word"
  C1 :: "3 word"
  D0 :: bool
  D1 :: bool
  G :: bool
  L0 :: bool
  L1 :: bool
  Mask :: "12 word"
  PFN0 :: "28 word"
  PFN1 :: "28 word"
  R :: "2 word"
  S0 :: bool
  S1 :: bool
  V0 :: bool
  V1 :: bool
  VPN2 :: "27 word"

datatype AccessType = LOAD | STORE

record Index = Index :: "9 word" P :: bool index'rst :: "22 word"

record Random = Random :: "8 word" random'rst :: "24 word"

record Wired = Wired :: "8 word" wired'rst :: "24 word"

record PageMask = Mask :: "12 word" pagemask'rst :: "20 word"

record EntryHi = ASID :: "8 word" R :: "2 word" VPN2 :: "27 word" entryhi'rst :: "27 word"

record StatusRegister =
  BEV :: bool
  CU0 :: bool
  CU1 :: bool
  CU2 :: bool
  CU3 :: bool
  ERL :: bool
  EXL :: bool
  FR :: bool
  IE :: bool
  IM :: "8 word"
  KSU :: "2 word"
  KX :: bool
  RE :: bool
  SX :: bool
  UX :: bool
  statusregister'rst :: "9 word"

record ConfigRegister =
  AR :: "3 word"
  AT :: "2 word"
  BE :: bool
  K0 :: "3 word"
  M :: bool
  MT :: "3 word"
  configregister'rst :: "19 word"

record ConfigRegister1 =
  C2 :: bool
  CA :: bool
  DA :: "3 word"
  DL :: "3 word"
  DS :: "3 word"
  EP :: bool
  FP :: bool
  IA :: "3 word"
  IL :: "3 word"
  IS :: "3 word"
  M :: bool
  MD :: bool
  MMUSize :: "6 word"
  PCR :: bool
  WR :: bool

record ConfigRegister2 =
  M :: bool
  SA :: "4 word"
  SL :: "4 word"
  SS :: "4 word"
  SU :: "4 word"
  TA :: "4 word"
  TL :: "4 word"
  TS :: "4 word"
  TU :: "3 word"

record ConfigRegister3 =
  DSPP :: bool
  LPA :: bool
  M :: bool
  MT :: bool
  SM :: bool
  SP :: bool
  TL :: bool
  ULRI :: bool
  VEIC :: bool
  VInt :: bool
  configregister3'rst :: "22 word"

record ConfigRegister6 = LTLB :: bool TLBSize :: "16 word" configregister6'rst :: "15 word"

record CauseRegister =
  BD :: bool
  CE :: "2 word"
  ExcCode :: "5 word"
  IP :: "8 word"
  TI :: bool
  causeregister'rst :: "15 word"

record Context = BadVPN2 :: "19 word" PTEBase :: "41 word" context'rst :: "4 word"

record XContext = BadVPN2 :: "27 word" PTEBase :: "31 word" R :: "2 word" xcontext'rst :: "4 word"

record HWREna =
  CC :: bool
  CCRes :: bool
  CPUNum :: bool
  DS :: bool
  KS :: bool
  RS :: bool
  UL :: bool
  hwrena'rst :: "25 word"

record CP0 =
  BadVAddr :: "64 word"
  Cause :: CauseRegister
  Compare :: "32 word"
  Config :: ConfigRegister
  Config1 :: ConfigRegister1
  Config2 :: ConfigRegister2
  Config3 :: ConfigRegister3
  Config6 :: ConfigRegister6
  Context :: Context
  Count :: "32 word"
  Debug :: "32 word"
  EInstr :: "32 word"
  EPC :: "64 word"
  EntryHi :: EntryHi
  EntryLo0 :: EntryLo
  EntryLo1 :: EntryLo
  ErrCtl :: "32 word"
  ErrorEPC :: "64 word"
  HWREna :: HWREna
  Index :: Index
  LLAddr :: "64 word"
  PRId :: "32 word"
  PageMask :: PageMask
  Random :: Random
  Status :: StatusRegister
  UsrLocal :: "64 word"
  Wired :: Wired
  XContext :: XContext

record CoreStats = branch_not_taken :: nat branch_taken :: nat

record procState =
  c_BranchDelay :: "64 word option"
  c_BranchTo :: "64 word option"
  c_CP0 :: CP0
  c_CoreStats :: CoreStats
  c_LLbit :: "bool option"
  c_PC :: "64 word"
  c_exceptionSignalled :: bool
  c_hi :: "64 word option"
  c_lo :: "64 word option"

record UPerms = Reserved :: "28 word" soft :: "4 word"

record Perms =
  Access_System_Registers :: bool
  Global :: bool
  Permit_CCall :: bool
  Permit_Execute :: bool
  Permit_Load :: bool
  Permit_Load_Capability :: bool
  Permit_Seal :: bool
  Permit_Store :: bool
  Permit_Store_Capability :: bool
  Permit_Store_Local_Capability :: bool
  Reserved :: "22 word"

record Capability =
  base :: "64 word"
  cursor :: "64 word"
  length :: "64 word"
  otype :: "24 word"
  perms :: "15 word"
  reserved :: "8 word"
  sealed :: bool
  tag :: bool
  uperms :: "16 word"

record CapCause = ExcCode :: "8 word" RegNum :: "8 word"

datatype ExceptionType = Int | Mod | TLBL | TLBS | AdEL | AdES | Sys | Bp | ResI | CpU | Ov | Tr |
  CTLBL | CTLBS | C2E | MCheck | XTLBRefillL | XTLBRefillS

datatype CapExceptionType = capExcNone | capExcLength | capExcTag | capExcSeal | capExcType |
  capExcCall | capExcRet | capExcUnderflowTSS | capExcUser | capExcTLBNoStore | capExcInexact |
  capExcGlobal | capExcPermExe | capExcPermLoad | capExcPermStore | capExcPermLoadCap |
  capExcPermStoreCap | capExcPermStoreLocalCap | capExcPermSeal | capExcAccessSysReg |
  capExcPermCCall

datatype DataType = Cap Capability | Raw "256 word"

datatype RegSet = Lo_rs | Hi_rs | CLo_rs | CHi_rs

datatype CmpType = EQ | NE | LT | LE | LTU | LEU | EXEQ | NEXEQ

datatype Branch =
    BEQ "5 word \<times> 5 word \<times> 16 word"
  | BEQL "5 word \<times> 5 word \<times> 16 word"
  | BGEZ "5 word \<times> 16 word"
  | BGEZAL "5 word \<times> 16 word"
  | BGEZALL "5 word \<times> 16 word"
  | BGEZL "5 word \<times> 16 word"
  | BGTZ "5 word \<times> 16 word"
  | BGTZL "5 word \<times> 16 word"
  | BLEZ "5 word \<times> 16 word"
  | BLEZL "5 word \<times> 16 word"
  | BLTZ "5 word \<times> 16 word"
  | BLTZAL "5 word \<times> 16 word"
  | BLTZALL "5 word \<times> 16 word"
  | BLTZL "5 word \<times> 16 word"
  | BNE "5 word \<times> 5 word \<times> 16 word"
  | BNEL "5 word \<times> 5 word \<times> 16 word"
  | J "26 word"
  | JAL "26 word"
  | JALR "5 word \<times> 5 word"
  | JR "5 word"

datatype CP =
    DMFC0 "5 word \<times> 5 word \<times> 3 word"
  | DMTC0 "5 word \<times> 5 word \<times> 3 word"
  | MFC0 "5 word \<times> 5 word \<times> 3 word"
  | MTC0 "5 word \<times> 5 word \<times> 3 word"

datatype Store =
    SB "5 word \<times> 5 word \<times> 16 word"
  | SC "5 word \<times> 5 word \<times> 16 word"
  | SCD "5 word \<times> 5 word \<times> 16 word"
  | SD "5 word \<times> 5 word \<times> 16 word"
  | SDL "5 word \<times> 5 word \<times> 16 word"
  | SDR "5 word \<times> 5 word \<times> 16 word"
  | SH "5 word \<times> 5 word \<times> 16 word"
  | SW "5 word \<times> 5 word \<times> 16 word"
  | SWL "5 word \<times> 5 word \<times> 16 word"
  | SWR "5 word \<times> 5 word \<times> 16 word"

datatype Load =
    LB "5 word \<times> 5 word \<times> 16 word"
  | LBU "5 word \<times> 5 word \<times> 16 word"
  | LD "5 word \<times> 5 word \<times> 16 word"
  | LDL "5 word \<times> 5 word \<times> 16 word"
  | LDR "5 word \<times> 5 word \<times> 16 word"
  | LH "5 word \<times> 5 word \<times> 16 word"
  | LHU "5 word \<times> 5 word \<times> 16 word"
  | LL "5 word \<times> 5 word \<times> 16 word"
  | LLD "5 word \<times> 5 word \<times> 16 word"
  | LW "5 word \<times> 5 word \<times> 16 word"
  | LWL "5 word \<times> 5 word \<times> 16 word"
  | LWR "5 word \<times> 5 word \<times> 16 word"
  | LWU "5 word \<times> 5 word \<times> 16 word"

datatype Trap =
    TEQ "5 word \<times> 5 word"
  | TEQI "5 word \<times> 16 word"
  | TGE "5 word \<times> 5 word"
  | TGEI "5 word \<times> 16 word"
  | TGEIU "5 word \<times> 16 word"
  | TGEU "5 word \<times> 5 word"
  | TLT "5 word \<times> 5 word"
  | TLTI "5 word \<times> 16 word"
  | TLTIU "5 word \<times> 16 word"
  | TLTU "5 word \<times> 5 word"
  | TNE "5 word \<times> 5 word"
  | TNEI "5 word \<times> 16 word"

datatype Shift =
    DSLL "5 word \<times> 5 word \<times> 5 word"
  | DSLL32 "5 word \<times> 5 word \<times> 5 word"
  | DSLLV "5 word \<times> 5 word \<times> 5 word"
  | DSRA "5 word \<times> 5 word \<times> 5 word"
  | DSRA32 "5 word \<times> 5 word \<times> 5 word"
  | DSRAV "5 word \<times> 5 word \<times> 5 word"
  | DSRL "5 word \<times> 5 word \<times> 5 word"
  | DSRL32 "5 word \<times> 5 word \<times> 5 word"
  | DSRLV "5 word \<times> 5 word \<times> 5 word"
  | SLL "5 word \<times> 5 word \<times> 5 word"
  | SLLV "5 word \<times> 5 word \<times> 5 word"
  | SRA "5 word \<times> 5 word \<times> 5 word"
  | SRAV "5 word \<times> 5 word \<times> 5 word"
  | SRL "5 word \<times> 5 word \<times> 5 word"
  | SRLV "5 word \<times> 5 word \<times> 5 word"

datatype MultDiv =
    DDIV "5 word \<times> 5 word"
  | DDIVU "5 word \<times> 5 word"
  | DIV "5 word \<times> 5 word"
  | DIVU "5 word \<times> 5 word"
  | DMULT "5 word \<times> 5 word"
  | DMULTU "5 word \<times> 5 word"
  | MADD "5 word \<times> 5 word"
  | MADDU "5 word \<times> 5 word"
  | MFHI "5 word"
  | MFLO "5 word"
  | MSUB "5 word \<times> 5 word"
  | MSUBU "5 word \<times> 5 word"
  | MTHI "5 word"
  | MTLO "5 word"
  | MUL "5 word \<times> 5 word \<times> 5 word"
  | MULT "5 word \<times> 5 word"
  | MULTU "5 word \<times> 5 word"

datatype ArithR =
    ADD "5 word \<times> 5 word \<times> 5 word"
  | ADDU "5 word \<times> 5 word \<times> 5 word"
  | AND "5 word \<times> 5 word \<times> 5 word"
  | DADD "5 word \<times> 5 word \<times> 5 word"
  | DADDU "5 word \<times> 5 word \<times> 5 word"
  | DSUB "5 word \<times> 5 word \<times> 5 word"
  | DSUBU "5 word \<times> 5 word \<times> 5 word"
  | MOVN "5 word \<times> 5 word \<times> 5 word"
  | MOVZ "5 word \<times> 5 word \<times> 5 word"
  | NOR "5 word \<times> 5 word \<times> 5 word"
  | OR "5 word \<times> 5 word \<times> 5 word"
  | SLT "5 word \<times> 5 word \<times> 5 word"
  | SLTU "5 word \<times> 5 word \<times> 5 word"
  | SUB "5 word \<times> 5 word \<times> 5 word"
  | SUBU "5 word \<times> 5 word \<times> 5 word"
  | XOR "5 word \<times> 5 word \<times> 5 word"

datatype ArithI =
    ADDI "5 word \<times> 5 word \<times> 16 word"
  | ADDIU "5 word \<times> 5 word \<times> 16 word"
  | ANDI "5 word \<times> 5 word \<times> 16 word"
  | DADDI "5 word \<times> 5 word \<times> 16 word"
  | DADDIU "5 word \<times> 5 word \<times> 16 word"
  | LUI "5 word \<times> 16 word"
  | ORI "5 word \<times> 5 word \<times> 16 word"
  | SLTI "5 word \<times> 5 word \<times> 16 word"
  | SLTIU "5 word \<times> 5 word \<times> 16 word"
  | XORI "5 word \<times> 5 word \<times> 16 word"

datatype CGet =
    CGetBase "5 word \<times> 5 word"
  | CGetCause "5 word"
  | CGetLen "5 word \<times> 5 word"
  | CGetOffset "5 word \<times> 5 word"
  | CGetPCC "5 word"
  | CGetPCCSetOffset "5 word \<times> 5 word"
  | CGetPerm "5 word \<times> 5 word"
  | CGetSealed "5 word \<times> 5 word"
  | CGetTag "5 word \<times> 5 word"
  | CGetType "5 word \<times> 5 word"
  | CToPtr "5 word \<times> 5 word \<times> 5 word"

datatype CSet =
    CAndPerm "5 word \<times> 5 word \<times> 5 word"
  | CClearTag "5 word \<times> 5 word"
  | CFromPtr "5 word \<times> 5 word \<times> 5 word"
  | CIncOffset "5 word \<times> 5 word \<times> 5 word"
  | CIncOffsetImmediate "5 word \<times> 5 word \<times> 11 word"
  | CSetBounds "5 word \<times> 5 word \<times> 5 word"
  | CSetBoundsExact "5 word \<times> 5 word \<times> 5 word"
  | CSetBoundsImmediate "5 word \<times> 5 word \<times> 11 word"
  | CSetCause "5 word"
  | CSetOffset "5 word \<times> 5 word \<times> 5 word"

datatype CCheck = CCheckPerm "5 word \<times> 5 word" | CCheckType "5 word \<times> 5 word"

datatype CHERICOP2 =
    CBTS "5 word \<times> 16 word"
  | CBTU "5 word \<times> 16 word"
  | CCall "5 word \<times> 5 word \<times> 11 word"
  | CCallFast "5 word \<times> 5 word"
  | CCheck CCheck
  | CClearHi "16 word"
  | CClearLo "16 word"
  | CEQ "5 word \<times> 5 word \<times> 5 word"
  | CEXEQ "5 word \<times> 5 word \<times> 5 word"
  | CGet CGet
  | CJALR "5 word \<times> 5 word"
  | CJR "5 word"
  | CLE "5 word \<times> 5 word \<times> 5 word"
  | CLEU "5 word \<times> 5 word \<times> 5 word"
  | CLLC "5 word \<times> 5 word"
  | CLLx "5 word \<times> 5 word \<times> 3 word"
  | CLT "5 word \<times> 5 word \<times> 5 word"
  | CLTU "5 word \<times> 5 word \<times> 5 word"
  | CMOVN "5 word \<times> 5 word \<times> 5 word"
  | CMOVZ "5 word \<times> 5 word \<times> 5 word"
  | CMove "5 word \<times> 5 word"
  | CNE "5 word \<times> 5 word \<times> 5 word"
  | CNEXEQ "5 word \<times> 5 word \<times> 5 word"
  | CReturn
  | CSCC "5 word \<times> 5 word \<times> 5 word"
  | CSCx "5 word \<times> 5 word \<times> 5 word \<times> 2 word"
  | CSeal "5 word \<times> 5 word \<times> 5 word"
  | CSet CSet
  | CSub "5 word \<times> 5 word \<times> 5 word"
  | CUnseal "5 word \<times> 5 word \<times> 5 word"
  | ClearHi "16 word"
  | ClearLo "16 word"
  | DumpCapReg
  | UnknownCapInstruction

datatype COP2 = CHERICOP2 CHERICOP2

datatype CHERISWC2 = CStore "5 word \<times> 5 word \<times> 5 word \<times> 8 word \<times> 2 word"

datatype SWC2 = CHERISWC2 CHERISWC2

datatype CHERILWC2 =
    CLoad "5 word \<times> 5 word \<times> 5 word \<times> 8 word \<times> 1 word \<times> 2 word"

datatype LWC2 = CHERILWC2 CHERILWC2

datatype CHERILDC2 = CLC "5 word \<times> 5 word \<times> 5 word \<times> 11 word"

datatype LDC2 = CHERILDC2 CHERILDC2

datatype CHERISDC2 = CSC "5 word \<times> 5 word \<times> 5 word \<times> 11 word"

datatype SDC2 = CHERISDC2 CHERISDC2

datatype instruction =
    ArithI ArithI
  | ArithR ArithR
  | BREAK
  | Branch Branch
  | CACHE "5 word \<times> 5 word \<times> 16 word"
  | COP1 unit
  | COP2 COP2
  | CP CP
  | ERET
  | LDC2 LDC2
  | LWC2 LWC2
  | Load Load
  | MultDiv MultDiv
  | RDHWR "5 word \<times> 5 word"
  | ReservedInstruction
  | SDC2 SDC2
  | SWC2 SWC2
  | SYNC "5 word"
  | SYSCALL
  | Shift Shift
  | Store Store
  | TLBP
  | TLBR
  | TLBWI
  | TLBWR
  | Trap Trap
  | Unpredictable
  | WAIT

datatype exception = NoException | UNPREDICTABLE string

record state =
  BranchDelayPCC :: "(64 word \<times> Capability) option"
  BranchToPCC :: "(64 word \<times> Capability) option"
  CCallBranch :: bool
  CCallBranchDelay :: bool
  UNPREDICTABLE_HI :: "unit \<Rightarrow> unit"
  UNPREDICTABLE_LO :: "unit \<Rightarrow> unit"
  UNPREDICTABLE_TLB :: "unit \<Rightarrow> unit"
  all_BranchDelayPCC :: "8 word \<Rightarrow> ((64 word \<times> Capability) option)"
  all_BranchToPCC :: "8 word \<Rightarrow> ((64 word \<times> Capability) option)"
  all_CCallBranch :: "8 word \<Rightarrow> bool"
  all_CCallBranchDelay :: "8 word \<Rightarrow> bool"
  all_TLB_assoc :: "8 word \<Rightarrow> (4 word \<Rightarrow> (TLBEntry option))"
  all_TLB_direct :: "8 word \<Rightarrow> (8 word \<Rightarrow> (TLBEntry option))"
  all_capcause :: "8 word \<Rightarrow> CapCause"
  all_capr :: "8 word \<Rightarrow> (5 word \<Rightarrow> Capability)"
  all_gpr :: "8 word \<Rightarrow> (5 word \<Rightarrow> 64 word)"
  all_pcc :: "8 word \<Rightarrow> Capability"
  all_state :: "8 word \<Rightarrow> procState"
  c_TLB_assoc :: "4 word \<Rightarrow> (TLBEntry option)"
  c_TLB_direct :: "8 word \<Rightarrow> (TLBEntry option)"
  c_capr :: "5 word \<Rightarrow> Capability"
  c_gpr :: "5 word \<Rightarrow> 64 word"
  c_pcc :: Capability
  c_state :: procState
  capcause :: CapCause
  csv_stats_header_done :: bool
  currentInst :: "32 word option"
  "done" :: bool
  exception :: exception
  instCnt :: nat
  log :: "nat \<Rightarrow> string"
  mem :: "35 word \<Rightarrow> DataType"
  print :: "string \<Rightarrow> unit"
  procID :: "8 word"
  totalCore :: nat
  trace_level :: nat
  unknown_counters :: "string \<Rightarrow> nat"
  watchOOBCap :: bool
  watchPaddr :: "40 word option"
  watcher :: string

fun nat_to_AccessType :: "nat \<Rightarrow> AccessType" where
  "nat_to_AccessType x =
   (if x = 0 then CHERI_Monadic.LOAD else if x = 1 then CHERI_Monadic.STORE
    else HOL.undefined)"

fun nat_to_ExceptionType :: "nat \<Rightarrow> ExceptionType" where
  "nat_to_ExceptionType x =
   (if x = 0 then CHERI_Monadic.Int
    else if x = 1 then CHERI_Monadic.Mod
    else if x = 2 then CHERI_Monadic.TLBL
    else if x = 3 then CHERI_Monadic.TLBS
    else if x = 4 then CHERI_Monadic.AdEL
    else if x = 5 then CHERI_Monadic.AdES
    else if x = 6 then CHERI_Monadic.Sys
    else if x = 7 then CHERI_Monadic.Bp
    else if x = 8 then CHERI_Monadic.ResI
    else if x = 9 then CHERI_Monadic.CpU
    else if x = 10 then CHERI_Monadic.Ov
    else if x = 11 then CHERI_Monadic.Tr
    else if x = 12 then CHERI_Monadic.CTLBL
    else if x = 13 then CHERI_Monadic.CTLBS
    else if x = 14 then CHERI_Monadic.C2E
    else if x = 15 then CHERI_Monadic.MCheck
    else if x = 16 then CHERI_Monadic.XTLBRefillL
    else if x = 17 then CHERI_Monadic.XTLBRefillS
    else HOL.undefined)"

fun nat_to_CapExceptionType :: "nat \<Rightarrow> CapExceptionType" where
  "nat_to_CapExceptionType x =
   (if x = 0 then CHERI_Monadic.capExcNone
    else if x = 1 then CHERI_Monadic.capExcLength
    else if x = 2 then CHERI_Monadic.capExcTag
    else if x = 3 then CHERI_Monadic.capExcSeal
    else if x = 4 then CHERI_Monadic.capExcType
    else if x = 5 then CHERI_Monadic.capExcCall
    else if x = 6 then CHERI_Monadic.capExcRet
    else if x = 7 then CHERI_Monadic.capExcUnderflowTSS
    else if x = 8 then CHERI_Monadic.capExcUser
    else if x = 9 then CHERI_Monadic.capExcTLBNoStore
    else if x = 10 then CHERI_Monadic.capExcInexact
    else if x = 11 then CHERI_Monadic.capExcGlobal
    else if x = 12 then CHERI_Monadic.capExcPermExe
    else if x = 13 then CHERI_Monadic.capExcPermLoad
    else if x = 14 then CHERI_Monadic.capExcPermStore
    else if x = 15 then CHERI_Monadic.capExcPermLoadCap
    else if x = 16 then CHERI_Monadic.capExcPermStoreCap
    else if x = 17 then CHERI_Monadic.capExcPermStoreLocalCap
    else if x = 18 then CHERI_Monadic.capExcPermSeal
    else if x = 19 then CHERI_Monadic.capExcAccessSysReg
    else if x = 20 then CHERI_Monadic.capExcPermCCall
    else HOL.undefined)"

fun nat_to_RegSet :: "nat \<Rightarrow> RegSet" where
  "nat_to_RegSet x =
   (if x = 0 then CHERI_Monadic.Lo_rs
    else if x = 1 then CHERI_Monadic.Hi_rs
    else if x = 2 then CHERI_Monadic.CLo_rs
    else if x = 3 then CHERI_Monadic.CHi_rs
    else HOL.undefined)"

fun nat_to_CmpType :: "nat \<Rightarrow> CmpType" where
  "nat_to_CmpType x =
   (if x = 0 then CHERI_Monadic.EQ
    else if x = 1 then CHERI_Monadic.NE
    else if x = 2 then CHERI_Monadic.LT
    else if x = 3 then CHERI_Monadic.LE
    else if x = 4 then CHERI_Monadic.LTU
    else if x = 5 then CHERI_Monadic.LEU
    else if x = 6 then CHERI_Monadic.EXEQ
    else if x = 7 then CHERI_Monadic.NEXEQ
    else HOL.undefined)"

fun AccessType_to_nat :: "AccessType \<Rightarrow> nat" where
  "AccessType_to_nat x =
   (case x of
       CHERI_Monadic.LOAD => 0 | CHERI_Monadic.STORE => 1)"

fun ExceptionType_to_nat :: "ExceptionType \<Rightarrow> nat" where
  "ExceptionType_to_nat x =
   (case x of
       CHERI_Monadic.Int => 0
     | CHERI_Monadic.Mod => 1
     | CHERI_Monadic.TLBL => 2
     | CHERI_Monadic.TLBS => 3
     | CHERI_Monadic.AdEL => 4
     | CHERI_Monadic.AdES => 5
     | CHERI_Monadic.Sys => 6
     | CHERI_Monadic.Bp => 7
     | CHERI_Monadic.ResI => 8
     | CHERI_Monadic.CpU => 9
     | CHERI_Monadic.Ov => 10
     | CHERI_Monadic.Tr => 11
     | CHERI_Monadic.CTLBL => 12
     | CHERI_Monadic.CTLBS => 13
     | CHERI_Monadic.C2E => 14
     | CHERI_Monadic.MCheck => 15
     | CHERI_Monadic.XTLBRefillL => 16
     | CHERI_Monadic.XTLBRefillS => 17)"

fun CapExceptionType_to_nat :: "CapExceptionType \<Rightarrow> nat" where
  "CapExceptionType_to_nat x =
   (case x of
       CHERI_Monadic.capExcNone => 0
     | CHERI_Monadic.capExcLength => 1
     | CHERI_Monadic.capExcTag => 2
     | CHERI_Monadic.capExcSeal => 3
     | CHERI_Monadic.capExcType => 4
     | CHERI_Monadic.capExcCall => 5
     | CHERI_Monadic.capExcRet => 6
     | CHERI_Monadic.capExcUnderflowTSS => 7
     | CHERI_Monadic.capExcUser => 8
     | CHERI_Monadic.capExcTLBNoStore => 9
     | CHERI_Monadic.capExcInexact => 10
     | CHERI_Monadic.capExcGlobal => 11
     | CHERI_Monadic.capExcPermExe => 12
     | CHERI_Monadic.capExcPermLoad => 13
     | CHERI_Monadic.capExcPermStore => 14
     | CHERI_Monadic.capExcPermLoadCap => 15
     | CHERI_Monadic.capExcPermStoreCap => 16
     | CHERI_Monadic.capExcPermStoreLocalCap => 17
     | CHERI_Monadic.capExcPermSeal => 18
     | CHERI_Monadic.capExcAccessSysReg => 19
     | CHERI_Monadic.capExcPermCCall => 20)"

fun RegSet_to_nat :: "RegSet \<Rightarrow> nat" where
  "RegSet_to_nat x =
   (case x of
       CHERI_Monadic.Lo_rs => 0
     | CHERI_Monadic.Hi_rs => 1
     | CHERI_Monadic.CLo_rs => 2
     | CHERI_Monadic.CHi_rs => 3)"

fun CmpType_to_nat :: "CmpType \<Rightarrow> nat" where
  "CmpType_to_nat x =
   (case x of
       CHERI_Monadic.EQ => 0
     | CHERI_Monadic.NE => 1
     | CHERI_Monadic.LT => 2
     | CHERI_Monadic.LE => 3
     | CHERI_Monadic.LTU => 4
     | CHERI_Monadic.LEU => 5
     | CHERI_Monadic.EXEQ => 6
     | CHERI_Monadic.NEXEQ => 7)"

fun AccessType_to_string :: "AccessType \<Rightarrow> string" where
  "AccessType_to_string x =
   (case x of
       CHERI_Monadic.LOAD => ''LOAD'' | CHERI_Monadic.STORE => ''STORE'')"

fun ExceptionType_to_string :: "ExceptionType \<Rightarrow> string" where
  "ExceptionType_to_string x =
   (case x of
       CHERI_Monadic.Int => ''Int''
     | CHERI_Monadic.Mod => ''Mod''
     | CHERI_Monadic.TLBL => ''TLBL''
     | CHERI_Monadic.TLBS => ''TLBS''
     | CHERI_Monadic.AdEL => ''AdEL''
     | CHERI_Monadic.AdES => ''AdES''
     | CHERI_Monadic.Sys => ''Sys''
     | CHERI_Monadic.Bp => ''Bp''
     | CHERI_Monadic.ResI => ''ResI''
     | CHERI_Monadic.CpU => ''CpU''
     | CHERI_Monadic.Ov => ''Ov''
     | CHERI_Monadic.Tr => ''Tr''
     | CHERI_Monadic.CTLBL => ''CTLBL''
     | CHERI_Monadic.CTLBS => ''CTLBS''
     | CHERI_Monadic.C2E => ''C2E''
     | CHERI_Monadic.MCheck => ''MCheck''
     | CHERI_Monadic.XTLBRefillL => ''XTLBRefillL''
     | CHERI_Monadic.XTLBRefillS => ''XTLBRefillS'')"

fun CapExceptionType_to_string :: "CapExceptionType \<Rightarrow> string" where
  "CapExceptionType_to_string x =
   (case x of
       CHERI_Monadic.capExcNone => ''capExcNone''
     | CHERI_Monadic.capExcLength => ''capExcLength''
     | CHERI_Monadic.capExcTag => ''capExcTag''
     | CHERI_Monadic.capExcSeal => ''capExcSeal''
     | CHERI_Monadic.capExcType => ''capExcType''
     | CHERI_Monadic.capExcCall => ''capExcCall''
     | CHERI_Monadic.capExcRet => ''capExcRet''
     | CHERI_Monadic.capExcUnderflowTSS => ''capExcUnderflowTSS''
     | CHERI_Monadic.capExcUser => ''capExcUser''
     | CHERI_Monadic.capExcTLBNoStore => ''capExcTLBNoStore''
     | CHERI_Monadic.capExcInexact => ''capExcInexact''
     | CHERI_Monadic.capExcGlobal => ''capExcGlobal''
     | CHERI_Monadic.capExcPermExe => ''capExcPermExe''
     | CHERI_Monadic.capExcPermLoad => ''capExcPermLoad''
     | CHERI_Monadic.capExcPermStore => ''capExcPermStore''
     | CHERI_Monadic.capExcPermLoadCap => ''capExcPermLoadCap''
     | CHERI_Monadic.capExcPermStoreCap => ''capExcPermStoreCap''
     | CHERI_Monadic.capExcPermStoreLocalCap => ''capExcPermStoreLocalCap''
     | CHERI_Monadic.capExcPermSeal => ''capExcPermSeal''
     | CHERI_Monadic.capExcAccessSysReg => ''capExcAccessSysReg''
     | CHERI_Monadic.capExcPermCCall => ''capExcPermCCall'')"

fun RegSet_to_string :: "RegSet \<Rightarrow> string" where
  "RegSet_to_string x =
   (case x of
       CHERI_Monadic.Lo_rs => ''Lo_rs''
     | CHERI_Monadic.Hi_rs => ''Hi_rs''
     | CHERI_Monadic.CLo_rs => ''CLo_rs''
     | CHERI_Monadic.CHi_rs => ''CHi_rs'')"

fun CmpType_to_string :: "CmpType \<Rightarrow> string" where
  "CmpType_to_string x =
   (case x of
       CHERI_Monadic.EQ => ''EQ''
     | CHERI_Monadic.NE => ''NE''
     | CHERI_Monadic.LT => ''LT''
     | CHERI_Monadic.LE => ''LE''
     | CHERI_Monadic.LTU => ''LTU''
     | CHERI_Monadic.LEU => ''LEU''
     | CHERI_Monadic.EXEQ => ''EXEQ''
     | CHERI_Monadic.NEXEQ => ''NEXEQ'')"

fun string_to_AccessType :: "string \<Rightarrow> AccessType" where
  "string_to_AccessType x =
   (if x = ''LOAD'' then CHERI_Monadic.LOAD else if x = ''STORE'' then CHERI_Monadic.STORE
    else HOL.undefined)"

fun string_to_ExceptionType :: "string \<Rightarrow> ExceptionType" where
  "string_to_ExceptionType x =
   (if x = ''Int'' then CHERI_Monadic.Int
    else if x = ''Mod'' then CHERI_Monadic.Mod
    else if x = ''TLBL'' then CHERI_Monadic.TLBL
    else if x = ''TLBS'' then CHERI_Monadic.TLBS
    else if x = ''AdEL'' then CHERI_Monadic.AdEL
    else if x = ''AdES'' then CHERI_Monadic.AdES
    else if x = ''Sys'' then CHERI_Monadic.Sys
    else if x = ''Bp'' then CHERI_Monadic.Bp
    else if x = ''ResI'' then CHERI_Monadic.ResI
    else if x = ''CpU'' then CHERI_Monadic.CpU
    else if x = ''Ov'' then CHERI_Monadic.Ov
    else if x = ''Tr'' then CHERI_Monadic.Tr
    else if x = ''CTLBL'' then CHERI_Monadic.CTLBL
    else if x = ''CTLBS'' then CHERI_Monadic.CTLBS
    else if x = ''C2E'' then CHERI_Monadic.C2E
    else if x = ''MCheck'' then CHERI_Monadic.MCheck
    else if x = ''XTLBRefillL'' then CHERI_Monadic.XTLBRefillL
    else if x = ''XTLBRefillS'' then CHERI_Monadic.XTLBRefillS
    else HOL.undefined)"

fun string_to_CapExceptionType :: "string \<Rightarrow> CapExceptionType" where
  "string_to_CapExceptionType x =
   (if x = ''capExcNone'' then CHERI_Monadic.capExcNone
    else if x = ''capExcLength'' then CHERI_Monadic.capExcLength
    else if x = ''capExcTag'' then CHERI_Monadic.capExcTag
    else if x = ''capExcSeal'' then CHERI_Monadic.capExcSeal
    else if x = ''capExcType'' then CHERI_Monadic.capExcType
    else if x = ''capExcCall'' then CHERI_Monadic.capExcCall
    else if x = ''capExcRet'' then CHERI_Monadic.capExcRet
    else if x = ''capExcUnderflowTSS'' then CHERI_Monadic.capExcUnderflowTSS
    else if x = ''capExcUser'' then CHERI_Monadic.capExcUser
    else if x = ''capExcTLBNoStore'' then CHERI_Monadic.capExcTLBNoStore
    else if x = ''capExcInexact'' then CHERI_Monadic.capExcInexact
    else if x = ''capExcGlobal'' then CHERI_Monadic.capExcGlobal
    else if x = ''capExcPermExe'' then CHERI_Monadic.capExcPermExe
    else if x = ''capExcPermLoad'' then CHERI_Monadic.capExcPermLoad
    else if x = ''capExcPermStore'' then CHERI_Monadic.capExcPermStore
    else if x = ''capExcPermLoadCap'' then CHERI_Monadic.capExcPermLoadCap
    else if x = ''capExcPermStoreCap'' then CHERI_Monadic.capExcPermStoreCap
    else if x = ''capExcPermStoreLocalCap'' then CHERI_Monadic.capExcPermStoreLocalCap
    else if x = ''capExcPermSeal'' then CHERI_Monadic.capExcPermSeal
    else if x = ''capExcAccessSysReg'' then CHERI_Monadic.capExcAccessSysReg
    else if x = ''capExcPermCCall'' then CHERI_Monadic.capExcPermCCall
    else HOL.undefined)"

fun string_to_RegSet :: "string \<Rightarrow> RegSet" where
  "string_to_RegSet x =
   (if x = ''Lo_rs'' then CHERI_Monadic.Lo_rs
    else if x = ''Hi_rs'' then CHERI_Monadic.Hi_rs
    else if x = ''CLo_rs'' then CHERI_Monadic.CLo_rs
    else if x = ''CHi_rs'' then CHERI_Monadic.CHi_rs
    else HOL.undefined)"

fun string_to_CmpType :: "string \<Rightarrow> CmpType" where
  "string_to_CmpType x =
   (if x = ''EQ'' then CHERI_Monadic.EQ
    else if x = ''NE'' then CHERI_Monadic.NE
    else if x = ''LT'' then CHERI_Monadic.LT
    else if x = ''LE'' then CHERI_Monadic.LE
    else if x = ''LTU'' then CHERI_Monadic.LTU
    else if x = ''LEU'' then CHERI_Monadic.LEU
    else if x = ''EXEQ'' then CHERI_Monadic.EXEQ
    else if x = ''NEXEQ'' then CHERI_Monadic.NEXEQ
    else HOL.undefined)"

fun boolify'3 :: "3 word \<Rightarrow> (bool \<times> bool \<times> bool)" where
  "boolify'3 w =
   (case to_bl w of
     [b0,b1,b2] \<Rightarrow>
     (b0,b1,b2))"

fun boolify'26 :: "26 word \<Rightarrow>
  (bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool)" where
  "boolify'26 w =
   (case to_bl w of
     [b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25] \<Rightarrow>
     (b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25))"

fun boolify'32 :: "32 word \<Rightarrow>
  (bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times>
   bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool)" where
  "boolify'32 w =
   (case to_bl w of
     [b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25,
      b26,b27,b28,b29,b30,b31] \<Rightarrow>
     (b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25,
      b26,b27,b28,b29,b30,b31))"

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("raise'exception",
   close
     (var("e",@{typ exception}),
      mb(mr(close(var("s",qTy),call("state.exception",@{typ exception},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ exception}),
            mb(mb(mu(eq(var("v",@{typ exception}),
                        Term.Const(@{const_name "NoException"},@{typ exception})),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mw(close
                              (var("s",qTy),
                               rupd
                                 ("state.exception",tp[var("s",qTy),var("e",@{typ exception})],
                                  @{theory}))),mu(lu,qTy)))),
               close(var_a HOLogic.unitT,mu(lx(@{typ 'a}),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'EntryLo",
   close
     (var_w("x",64),
      record
        ("EntryLo",
         [ex(var_w("x",64),ln 5,ln 3,(Word_Lib.mk_wordT 3)),bop(Bit,var_w("x",64),ln 2),
          bop(Bit,var_w("x",64),ln 0),bop(Bit,var_w("x",64),ln 62),
          ex(var_w("x",64),ln 33,ln 6,(Word_Lib.mk_wordT 28)),bop(Bit,var_w("x",64),ln 63),
          bop(Bit,var_w("x",64),ln 1),ex(var_w("x",64),ln 61,ln 34,(Word_Lib.mk_wordT 28))],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'EntryLo",
   close
     (var("x",@{typ EntryLo}),
      cc[mop(Cast w1,call("EntryLo.S",HOLogic.boolT,var("x",@{typ EntryLo}),@{theory})),
         mop(Cast w1,call("EntryLo.L",HOLogic.boolT,var("x",@{typ EntryLo}),@{theory})),
         call("EntryLo.entrylo'rst",(Word_Lib.mk_wordT 28),var("x",@{typ EntryLo}),@{theory}),
         call("EntryLo.PFN",(Word_Lib.mk_wordT 28),var("x",@{typ EntryLo}),@{theory}),
         call("EntryLo.C",(Word_Lib.mk_wordT 3),var("x",@{typ EntryLo}),@{theory}),
         mop(Cast w1,call("EntryLo.D",HOLogic.boolT,var("x",@{typ EntryLo}),@{theory})),
         mop(Cast w1,call("EntryLo.V",HOLogic.boolT,var("x",@{typ EntryLo}),@{theory})),
         mop(Cast w1,call("EntryLo.G",HOLogic.boolT,var("x",@{typ EntryLo}),@{theory}))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'EntryLo",
   close
     (tp[var_a w64,var("x",@{typ EntryLo})],
      call("reg'EntryLo",w64,var("x",@{typ EntryLo}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'EntryLo",
   close
     (tp[var_a @{typ EntryLo},var_w("x",64)],
      call("rec'EntryLo",@{typ EntryLo},var_w("x",64),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'Index",
   close
     (var_w("x",32),
      record
        ("Index",
         [ex(var_w("x",32),ln 8,ln 0,(Word_Lib.mk_wordT 9)),bop(Bit,var_w("x",32),ln 31),
          ex(var_w("x",32),ln 30,ln 9,(Word_Lib.mk_wordT 22))],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'Index",
   close
     (var("x",@{typ Index}),
      cc[mop(Cast w1,call("Index.P",HOLogic.boolT,var("x",@{typ Index}),@{theory})),
         call("Index.index'rst",(Word_Lib.mk_wordT 22),var("x",@{typ Index}),@{theory}),
         call("Index.Index",(Word_Lib.mk_wordT 9),var("x",@{typ Index}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'Index",
   close(tp[var_a w32,var("x",@{typ Index})],call("reg'Index",w32,var("x",@{typ Index}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'Index",
   close
     (tp[var_a @{typ Index},var_w("x",32)],call("rec'Index",@{typ Index},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'Random",
   close
     (var_w("x",32),
      record
        ("Random",
         [ex(var_w("x",32),ln 7,ln 0,w8),ex(var_w("x",32),ln 31,ln 8,(Word_Lib.mk_wordT 24))],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'Random",
   close
     (var("x",@{typ Random}),
      cc[call("Random.random'rst",(Word_Lib.mk_wordT 24),var("x",@{typ Random}),@{theory}),
         call("Random.Random",w8,var("x",@{typ Random}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'Random",
   close
     (tp[var_a w32,var("x",@{typ Random})],call("reg'Random",w32,var("x",@{typ Random}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'Random",
   close
     (tp[var_a @{typ Random},var_w("x",32)],call("rec'Random",@{typ Random},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'Wired",
   close
     (var_w("x",32),
      record
        ("Wired",
         [ex(var_w("x",32),ln 7,ln 0,w8),ex(var_w("x",32),ln 31,ln 8,(Word_Lib.mk_wordT 24))],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'Wired",
   close
     (var("x",@{typ Wired}),
      cc[call("Wired.wired'rst",(Word_Lib.mk_wordT 24),var("x",@{typ Wired}),@{theory}),
         call("Wired.Wired",w8,var("x",@{typ Wired}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'Wired",
   close(tp[var_a w32,var("x",@{typ Wired})],call("reg'Wired",w32,var("x",@{typ Wired}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'Wired",
   close
     (tp[var_a @{typ Wired},var_w("x",32)],call("rec'Wired",@{typ Wired},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'PageMask",
   close
     (var_w("x",32),
      record
        ("PageMask",
         [ex(var_w("x",32),ln 24,ln 13,(Word_Lib.mk_wordT 12)),
          cc[ex(var_w("x",32),ln 12,ln 0,(Word_Lib.mk_wordT 13)),
             ex(var_w("x",32),ln 31,ln 25,(Word_Lib.mk_wordT 7))]],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'PageMask",
   close
     (var("x",@{typ PageMask}),
      let'
        (var_w("pagemask'rst",20),
         call("PageMask.pagemask'rst",(Word_Lib.mk_wordT 20),var("x",@{typ PageMask}),@{theory}),
         cc[ex(var_w("pagemask'rst",20),ln 6,ln 0,(Word_Lib.mk_wordT 7)),
            call("PageMask.Mask",(Word_Lib.mk_wordT 12),var("x",@{typ PageMask}),@{theory}),
            ex(var_w("pagemask'rst",20),ln 19,ln 7,(Word_Lib.mk_wordT 13))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'PageMask",
   close
     (tp[var_a w32,var("x",@{typ PageMask})],
      call("reg'PageMask",w32,var("x",@{typ PageMask}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'PageMask",
   close
     (tp[var_a @{typ PageMask},var_w("x",32)],
      call("rec'PageMask",@{typ PageMask},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'EntryHi",
   close
     (var_w("x",64),
      record
        ("EntryHi",
         [ex(var_w("x",64),ln 7,ln 0,w8),ex(var_w("x",64),ln 63,ln 62,(Word_Lib.mk_wordT 2)),
          ex(var_w("x",64),ln 39,ln 13,(Word_Lib.mk_wordT 27)),
          cc[ex(var_w("x",64),ln 12,ln 8,(Word_Lib.mk_wordT 5)),
             ex(var_w("x",64),ln 61,ln 40,(Word_Lib.mk_wordT 22))]],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'EntryHi",
   close
     (var("x",@{typ EntryHi}),
      let'
        (var_w("entryhi'rst",27),
         call("EntryHi.entryhi'rst",(Word_Lib.mk_wordT 27),var("x",@{typ EntryHi}),@{theory}),
         cc[call("EntryHi.R",(Word_Lib.mk_wordT 2),var("x",@{typ EntryHi}),@{theory}),
            ex(var_w("entryhi'rst",27),ln 21,ln 0,(Word_Lib.mk_wordT 22)),
            call("EntryHi.VPN2",(Word_Lib.mk_wordT 27),var("x",@{typ EntryHi}),@{theory}),
            ex(var_w("entryhi'rst",27),ln 26,ln 22,(Word_Lib.mk_wordT 5)),
            call("EntryHi.ASID",w8,var("x",@{typ EntryHi}),@{theory})])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'EntryHi",
   close
     (tp[var_a w64,var("x",@{typ EntryHi})],
      call("reg'EntryHi",w64,var("x",@{typ EntryHi}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'EntryHi",
   close
     (tp[var_a @{typ EntryHi},var_w("x",64)],
      call("rec'EntryHi",@{typ EntryHi},var_w("x",64),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'StatusRegister",
   close
     (var_w("x",32),
      record
        ("StatusRegister",
         [bop(Bit,var_w("x",32),ln 22),bop(Bit,var_w("x",32),ln 28),bop(Bit,var_w("x",32),ln 29),
          bop(Bit,var_w("x",32),ln 30),bop(Bit,var_w("x",32),ln 31),bop(Bit,var_w("x",32),ln 2),
          bop(Bit,var_w("x",32),ln 1),bop(Bit,var_w("x",32),ln 26),bop(Bit,var_w("x",32),ln 0),
          ex(var_w("x",32),ln 15,ln 8,w8),ex(var_w("x",32),ln 4,ln 3,(Word_Lib.mk_wordT 2)),
          bop(Bit,var_w("x",32),ln 7),bop(Bit,var_w("x",32),ln 25),bop(Bit,var_w("x",32),ln 6),
          bop(Bit,var_w("x",32),ln 5),
          cc[ex(var_w("x",32),ln 21,ln 16,(Word_Lib.mk_wordT 6)),
             ex(var_w("x",32),ln 24,ln 23,(Word_Lib.mk_wordT 2)),ex(var_w("x",32),ln 27,ln 27,w1)]],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'StatusRegister",
   close
     (var("x",@{typ StatusRegister}),
      let'
        (var_w("statusregister'rst",9),
         call
           ("StatusRegister.statusregister'rst",(Word_Lib.mk_wordT 9),
            var("x",@{typ StatusRegister}),@{theory}),
         cc[mop(Cast w1,
                call("StatusRegister.CU3",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            mop(Cast w1,
                call("StatusRegister.CU2",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            mop(Cast w1,
                call("StatusRegister.CU1",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            mop(Cast w1,
                call("StatusRegister.CU0",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            ex(var_w("statusregister'rst",9),ln 0,ln 0,w1),
            mop(Cast w1,
                call("StatusRegister.FR",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            mop(Cast w1,
                call("StatusRegister.RE",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            ex(var_w("statusregister'rst",9),ln 2,ln 1,(Word_Lib.mk_wordT 2)),
            mop(Cast w1,
                call("StatusRegister.BEV",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            ex(var_w("statusregister'rst",9),ln 8,ln 3,(Word_Lib.mk_wordT 6)),
            call("StatusRegister.IM",w8,var("x",@{typ StatusRegister}),@{theory}),
            mop(Cast w1,
                call("StatusRegister.KX",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            mop(Cast w1,
                call("StatusRegister.SX",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            mop(Cast w1,
                call("StatusRegister.UX",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            call
              ("StatusRegister.KSU",(Word_Lib.mk_wordT 2),var("x",@{typ StatusRegister}),@{theory}),
            mop(Cast w1,
                call("StatusRegister.ERL",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            mop(Cast w1,
                call("StatusRegister.EXL",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory})),
            mop(Cast w1,
                call("StatusRegister.IE",HOLogic.boolT,var("x",@{typ StatusRegister}),@{theory}))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'StatusRegister",
   close
     (tp[var_a w32,var("x",@{typ StatusRegister})],
      call("reg'StatusRegister",w32,var("x",@{typ StatusRegister}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'StatusRegister",
   close
     (tp[var_a @{typ StatusRegister},var_w("x",32)],
      call("rec'StatusRegister",@{typ StatusRegister},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'ConfigRegister",
   close
     (var_w("x",32),
      record
        ("ConfigRegister",
         [ex(var_w("x",32),ln 12,ln 10,(Word_Lib.mk_wordT 3)),
          ex(var_w("x",32),ln 14,ln 13,(Word_Lib.mk_wordT 2)),bop(Bit,var_w("x",32),ln 15),
          ex(var_w("x",32),ln 2,ln 0,(Word_Lib.mk_wordT 3)),bop(Bit,var_w("x",32),ln 31),
          ex(var_w("x",32),ln 9,ln 7,(Word_Lib.mk_wordT 3)),
          cc[ex(var_w("x",32),ln 6,ln 3,w4),ex(var_w("x",32),ln 30,ln 16,(Word_Lib.mk_wordT 15))]],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'ConfigRegister",
   close
     (var("x",@{typ ConfigRegister}),
      let'
        (var_w("configregister'rst",19),
         call
           ("ConfigRegister.configregister'rst",(Word_Lib.mk_wordT 19),
            var("x",@{typ ConfigRegister}),@{theory}),
         cc[mop(Cast w1,
                call("ConfigRegister.M",HOLogic.boolT,var("x",@{typ ConfigRegister}),@{theory})),
            ex(var_w("configregister'rst",19),ln 14,ln 0,(Word_Lib.mk_wordT 15)),
            mop(Cast w1,
                call("ConfigRegister.BE",HOLogic.boolT,var("x",@{typ ConfigRegister}),@{theory})),
            call("ConfigRegister.AT",(Word_Lib.mk_wordT 2),var("x",@{typ ConfigRegister}),@{theory}),
            call("ConfigRegister.AR",(Word_Lib.mk_wordT 3),var("x",@{typ ConfigRegister}),@{theory}),
            call("ConfigRegister.MT",(Word_Lib.mk_wordT 3),var("x",@{typ ConfigRegister}),@{theory}),
            ex(var_w("configregister'rst",19),ln 18,ln 15,w4),
            call("ConfigRegister.K0",(Word_Lib.mk_wordT 3),var("x",@{typ ConfigRegister}),@{theory})])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'ConfigRegister",
   close
     (tp[var_a w32,var("x",@{typ ConfigRegister})],
      call("reg'ConfigRegister",w32,var("x",@{typ ConfigRegister}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'ConfigRegister",
   close
     (tp[var_a @{typ ConfigRegister},var_w("x",32)],
      call("rec'ConfigRegister",@{typ ConfigRegister},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'ConfigRegister1",
   close
     (var_w("x",32),
      record
        ("ConfigRegister1",
         [bop(Bit,var_w("x",32),ln 6),bop(Bit,var_w("x",32),ln 2),
          ex(var_w("x",32),ln 9,ln 7,(Word_Lib.mk_wordT 3)),
          ex(var_w("x",32),ln 12,ln 10,(Word_Lib.mk_wordT 3)),
          ex(var_w("x",32),ln 15,ln 13,(Word_Lib.mk_wordT 3)),bop(Bit,var_w("x",32),ln 1),
          bop(Bit,var_w("x",32),ln 0),ex(var_w("x",32),ln 18,ln 16,(Word_Lib.mk_wordT 3)),
          ex(var_w("x",32),ln 21,ln 19,(Word_Lib.mk_wordT 3)),
          ex(var_w("x",32),ln 24,ln 22,(Word_Lib.mk_wordT 3)),bop(Bit,var_w("x",32),ln 31),
          bop(Bit,var_w("x",32),ln 5),ex(var_w("x",32),ln 30,ln 25,(Word_Lib.mk_wordT 6)),
          bop(Bit,var_w("x",32),ln 4),bop(Bit,var_w("x",32),ln 3)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'ConfigRegister1",
   close
     (var("x",@{typ ConfigRegister1}),
      cc[mop(Cast w1,
             call("ConfigRegister1.M",HOLogic.boolT,var("x",@{typ ConfigRegister1}),@{theory})),
         call
           ("ConfigRegister1.MMUSize",(Word_Lib.mk_wordT 6),var("x",@{typ ConfigRegister1}),
            @{theory}),
         call("ConfigRegister1.IS",(Word_Lib.mk_wordT 3),var("x",@{typ ConfigRegister1}),@{theory}),
         call("ConfigRegister1.IL",(Word_Lib.mk_wordT 3),var("x",@{typ ConfigRegister1}),@{theory}),
         call("ConfigRegister1.IA",(Word_Lib.mk_wordT 3),var("x",@{typ ConfigRegister1}),@{theory}),
         call("ConfigRegister1.DS",(Word_Lib.mk_wordT 3),var("x",@{typ ConfigRegister1}),@{theory}),
         call("ConfigRegister1.DL",(Word_Lib.mk_wordT 3),var("x",@{typ ConfigRegister1}),@{theory}),
         call("ConfigRegister1.DA",(Word_Lib.mk_wordT 3),var("x",@{typ ConfigRegister1}),@{theory}),
         mop(Cast w1,
             call("ConfigRegister1.C2",HOLogic.boolT,var("x",@{typ ConfigRegister1}),@{theory})),
         mop(Cast w1,
             call("ConfigRegister1.MD",HOLogic.boolT,var("x",@{typ ConfigRegister1}),@{theory})),
         mop(Cast w1,
             call("ConfigRegister1.PCR",HOLogic.boolT,var("x",@{typ ConfigRegister1}),@{theory})),
         mop(Cast w1,
             call("ConfigRegister1.WR",HOLogic.boolT,var("x",@{typ ConfigRegister1}),@{theory})),
         mop(Cast w1,
             call("ConfigRegister1.CA",HOLogic.boolT,var("x",@{typ ConfigRegister1}),@{theory})),
         mop(Cast w1,
             call("ConfigRegister1.EP",HOLogic.boolT,var("x",@{typ ConfigRegister1}),@{theory})),
         mop(Cast w1,
             call("ConfigRegister1.FP",HOLogic.boolT,var("x",@{typ ConfigRegister1}),@{theory}))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'ConfigRegister1",
   close
     (tp[var_a w32,var("x",@{typ ConfigRegister1})],
      call("reg'ConfigRegister1",w32,var("x",@{typ ConfigRegister1}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'ConfigRegister1",
   close
     (tp[var_a @{typ ConfigRegister1},var_w("x",32)],
      call("rec'ConfigRegister1",@{typ ConfigRegister1},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'ConfigRegister2",
   close
     (var_w("x",32),
      record
        ("ConfigRegister2",
         [bop(Bit,var_w("x",32),ln 31),ex(var_w("x",32),ln 3,ln 0,w4),
          ex(var_w("x",32),ln 7,ln 4,w4),ex(var_w("x",32),ln 11,ln 8,w4),
          ex(var_w("x",32),ln 15,ln 12,w4),ex(var_w("x",32),ln 19,ln 16,w4),
          ex(var_w("x",32),ln 23,ln 20,w4),ex(var_w("x",32),ln 27,ln 24,w4),
          ex(var_w("x",32),ln 30,ln 28,(Word_Lib.mk_wordT 3))],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'ConfigRegister2",
   close
     (var("x",@{typ ConfigRegister2}),
      cc[mop(Cast w1,
             call("ConfigRegister2.M",HOLogic.boolT,var("x",@{typ ConfigRegister2}),@{theory})),
         call("ConfigRegister2.TU",(Word_Lib.mk_wordT 3),var("x",@{typ ConfigRegister2}),@{theory}),
         call("ConfigRegister2.TS",w4,var("x",@{typ ConfigRegister2}),@{theory}),
         call("ConfigRegister2.TL",w4,var("x",@{typ ConfigRegister2}),@{theory}),
         call("ConfigRegister2.TA",w4,var("x",@{typ ConfigRegister2}),@{theory}),
         call("ConfigRegister2.SU",w4,var("x",@{typ ConfigRegister2}),@{theory}),
         call("ConfigRegister2.SS",w4,var("x",@{typ ConfigRegister2}),@{theory}),
         call("ConfigRegister2.SL",w4,var("x",@{typ ConfigRegister2}),@{theory}),
         call("ConfigRegister2.SA",w4,var("x",@{typ ConfigRegister2}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'ConfigRegister2",
   close
     (tp[var_a w32,var("x",@{typ ConfigRegister2})],
      call("reg'ConfigRegister2",w32,var("x",@{typ ConfigRegister2}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'ConfigRegister2",
   close
     (tp[var_a @{typ ConfigRegister2},var_w("x",32)],
      call("rec'ConfigRegister2",@{typ ConfigRegister2},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'ConfigRegister3",
   close
     (var_w("x",32),
      record
        ("ConfigRegister3",
         [bop(Bit,var_w("x",32),ln 10),bop(Bit,var_w("x",32),ln 7),bop(Bit,var_w("x",32),ln 31),
          bop(Bit,var_w("x",32),ln 2),bop(Bit,var_w("x",32),ln 1),bop(Bit,var_w("x",32),ln 4),
          bop(Bit,var_w("x",32),ln 0),bop(Bit,var_w("x",32),ln 13),bop(Bit,var_w("x",32),ln 6),
          bop(Bit,var_w("x",32),ln 5),
          cc[ex(var_w("x",32),ln 3,ln 3,w1),ex(var_w("x",32),ln 9,ln 8,(Word_Lib.mk_wordT 2)),
             ex(var_w("x",32),ln 12,ln 11,(Word_Lib.mk_wordT 2)),
             ex(var_w("x",32),ln 30,ln 14,(Word_Lib.mk_wordT 17))]],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'ConfigRegister3",
   close
     (var("x",@{typ ConfigRegister3}),
      let'
        (var_w("configregister3'rst",22),
         call
           ("ConfigRegister3.configregister3'rst",(Word_Lib.mk_wordT 22),
            var("x",@{typ ConfigRegister3}),@{theory}),
         cc[mop(Cast w1,
                call("ConfigRegister3.M",HOLogic.boolT,var("x",@{typ ConfigRegister3}),@{theory})),
            ex(var_w("configregister3'rst",22),ln 16,ln 0,(Word_Lib.mk_wordT 17)),
            mop(Cast w1,
                call("ConfigRegister3.ULRI",HOLogic.boolT,var("x",@{typ ConfigRegister3}),@{theory})),
            ex(var_w("configregister3'rst",22),ln 18,ln 17,(Word_Lib.mk_wordT 2)),
            mop(Cast w1,
                call("ConfigRegister3.DSPP",HOLogic.boolT,var("x",@{typ ConfigRegister3}),@{theory})),
            ex(var_w("configregister3'rst",22),ln 20,ln 19,(Word_Lib.mk_wordT 2)),
            mop(Cast w1,
                call("ConfigRegister3.LPA",HOLogic.boolT,var("x",@{typ ConfigRegister3}),@{theory})),
            mop(Cast w1,
                call("ConfigRegister3.VEIC",HOLogic.boolT,var("x",@{typ ConfigRegister3}),@{theory})),
            mop(Cast w1,
                call("ConfigRegister3.VInt",HOLogic.boolT,var("x",@{typ ConfigRegister3}),@{theory})),
            mop(Cast w1,
                call("ConfigRegister3.SP",HOLogic.boolT,var("x",@{typ ConfigRegister3}),@{theory})),
            ex(var_w("configregister3'rst",22),ln 21,ln 21,w1),
            mop(Cast w1,
                call("ConfigRegister3.MT",HOLogic.boolT,var("x",@{typ ConfigRegister3}),@{theory})),
            mop(Cast w1,
                call("ConfigRegister3.SM",HOLogic.boolT,var("x",@{typ ConfigRegister3}),@{theory})),
            mop(Cast w1,
                call("ConfigRegister3.TL",HOLogic.boolT,var("x",@{typ ConfigRegister3}),@{theory}))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'ConfigRegister3",
   close
     (tp[var_a w32,var("x",@{typ ConfigRegister3})],
      call("reg'ConfigRegister3",w32,var("x",@{typ ConfigRegister3}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'ConfigRegister3",
   close
     (tp[var_a @{typ ConfigRegister3},var_w("x",32)],
      call("rec'ConfigRegister3",@{typ ConfigRegister3},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'ConfigRegister6",
   close
     (var_w("x",32),
      record
        ("ConfigRegister6",
         [bop(Bit,var_w("x",32),ln 2),ex(var_w("x",32),ln 31,ln 16,w16),
          cc[ex(var_w("x",32),ln 1,ln 0,(Word_Lib.mk_wordT 2)),
             ex(var_w("x",32),ln 15,ln 3,(Word_Lib.mk_wordT 13))]],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'ConfigRegister6",
   close
     (var("x",@{typ ConfigRegister6}),
      let'
        (var_w("configregister6'rst",15),
         call
           ("ConfigRegister6.configregister6'rst",(Word_Lib.mk_wordT 15),
            var("x",@{typ ConfigRegister6}),@{theory}),
         cc[call("ConfigRegister6.TLBSize",w16,var("x",@{typ ConfigRegister6}),@{theory}),
            ex(var_w("configregister6'rst",15),ln 12,ln 0,(Word_Lib.mk_wordT 13)),
            mop(Cast w1,
                call("ConfigRegister6.LTLB",HOLogic.boolT,var("x",@{typ ConfigRegister6}),@{theory})),
            ex(var_w("configregister6'rst",15),ln 14,ln 13,(Word_Lib.mk_wordT 2))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'ConfigRegister6",
   close
     (tp[var_a w32,var("x",@{typ ConfigRegister6})],
      call("reg'ConfigRegister6",w32,var("x",@{typ ConfigRegister6}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'ConfigRegister6",
   close
     (tp[var_a @{typ ConfigRegister6},var_w("x",32)],
      call("rec'ConfigRegister6",@{typ ConfigRegister6},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'CauseRegister",
   close
     (var_w("x",32),
      record
        ("CauseRegister",
         [bop(Bit,var_w("x",32),ln 31),ex(var_w("x",32),ln 29,ln 28,(Word_Lib.mk_wordT 2)),
          ex(var_w("x",32),ln 6,ln 2,(Word_Lib.mk_wordT 5)),ex(var_w("x",32),ln 15,ln 8,w8),
          bop(Bit,var_w("x",32),ln 30),
          cc[ex(var_w("x",32),ln 1,ln 0,(Word_Lib.mk_wordT 2)),ex(var_w("x",32),ln 7,ln 7,w1),
             ex(var_w("x",32),ln 27,ln 16,(Word_Lib.mk_wordT 12))]],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'CauseRegister",
   close
     (var("x",@{typ CauseRegister}),
      let'
        (var_w("causeregister'rst",15),
         call
           ("CauseRegister.causeregister'rst",(Word_Lib.mk_wordT 15),var("x",@{typ CauseRegister}),
            @{theory}),
         cc[mop(Cast w1,
                call("CauseRegister.BD",HOLogic.boolT,var("x",@{typ CauseRegister}),@{theory})),
            mop(Cast w1,
                call("CauseRegister.TI",HOLogic.boolT,var("x",@{typ CauseRegister}),@{theory})),
            call("CauseRegister.CE",(Word_Lib.mk_wordT 2),var("x",@{typ CauseRegister}),@{theory}),
            ex(var_w("causeregister'rst",15),ln 11,ln 0,(Word_Lib.mk_wordT 12)),
            call("CauseRegister.IP",w8,var("x",@{typ CauseRegister}),@{theory}),
            ex(var_w("causeregister'rst",15),ln 12,ln 12,w1),
            call
              ("CauseRegister.ExcCode",(Word_Lib.mk_wordT 5),var("x",@{typ CauseRegister}),@{theory}),
            ex(var_w("causeregister'rst",15),ln 14,ln 13,(Word_Lib.mk_wordT 2))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'CauseRegister",
   close
     (tp[var_a w32,var("x",@{typ CauseRegister})],
      call("reg'CauseRegister",w32,var("x",@{typ CauseRegister}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'CauseRegister",
   close
     (tp[var_a @{typ CauseRegister},var_w("x",32)],
      call("rec'CauseRegister",@{typ CauseRegister},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'Context",
   close
     (var_w("x",64),
      record
        ("Context",
         [ex(var_w("x",64),ln 22,ln 4,(Word_Lib.mk_wordT 19)),
          ex(var_w("x",64),ln 63,ln 23,(Word_Lib.mk_wordT 41)),ex(var_w("x",64),ln 3,ln 0,w4)],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'Context",
   close
     (var("x",@{typ Context}),
      cc[call("Context.PTEBase",(Word_Lib.mk_wordT 41),var("x",@{typ Context}),@{theory}),
         call("Context.BadVPN2",(Word_Lib.mk_wordT 19),var("x",@{typ Context}),@{theory}),
         call("Context.context'rst",w4,var("x",@{typ Context}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'Context",
   close
     (tp[var_a w64,var("x",@{typ Context})],
      call("reg'Context",w64,var("x",@{typ Context}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'Context",
   close
     (tp[var_a @{typ Context},var_w("x",64)],
      call("rec'Context",@{typ Context},var_w("x",64),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'XContext",
   close
     (var_w("x",64),
      record
        ("XContext",
         [ex(var_w("x",64),ln 30,ln 4,(Word_Lib.mk_wordT 27)),
          ex(var_w("x",64),ln 63,ln 33,(Word_Lib.mk_wordT 31)),
          ex(var_w("x",64),ln 32,ln 31,(Word_Lib.mk_wordT 2)),ex(var_w("x",64),ln 3,ln 0,w4)],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'XContext",
   close
     (var("x",@{typ XContext}),
      cc[call("XContext.PTEBase",(Word_Lib.mk_wordT 31),var("x",@{typ XContext}),@{theory}),
         call("XContext.R",(Word_Lib.mk_wordT 2),var("x",@{typ XContext}),@{theory}),
         call("XContext.BadVPN2",(Word_Lib.mk_wordT 27),var("x",@{typ XContext}),@{theory}),
         call("XContext.xcontext'rst",w4,var("x",@{typ XContext}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'XContext",
   close
     (tp[var_a w64,var("x",@{typ XContext})],
      call("reg'XContext",w64,var("x",@{typ XContext}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'XContext",
   close
     (tp[var_a @{typ XContext},var_w("x",64)],
      call("rec'XContext",@{typ XContext},var_w("x",64),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'HWREna",
   close
     (var_w("x",32),
      record
        ("HWREna",
         [bop(Bit,var_w("x",32),ln 2),bop(Bit,var_w("x",32),ln 3),bop(Bit,var_w("x",32),ln 0),
          bop(Bit,var_w("x",32),ln 28),bop(Bit,var_w("x",32),ln 26),bop(Bit,var_w("x",32),ln 27),
          bop(Bit,var_w("x",32),ln 29),
          cc[ex(var_w("x",32),ln 1,ln 1,w1),ex(var_w("x",32),ln 25,ln 4,(Word_Lib.mk_wordT 22)),
             ex(var_w("x",32),ln 31,ln 30,(Word_Lib.mk_wordT 2))]],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'HWREna",
   close
     (var("x",@{typ HWREna}),
      let'
        (var_w("hwrena'rst",25),
         call("HWREna.hwrena'rst",(Word_Lib.mk_wordT 25),var("x",@{typ HWREna}),@{theory}),
         cc[ex(var_w("hwrena'rst",25),ln 1,ln 0,(Word_Lib.mk_wordT 2)),
            mop(Cast w1,call("HWREna.UL",HOLogic.boolT,var("x",@{typ HWREna}),@{theory})),
            mop(Cast w1,call("HWREna.DS",HOLogic.boolT,var("x",@{typ HWREna}),@{theory})),
            mop(Cast w1,call("HWREna.RS",HOLogic.boolT,var("x",@{typ HWREna}),@{theory})),
            mop(Cast w1,call("HWREna.KS",HOLogic.boolT,var("x",@{typ HWREna}),@{theory})),
            ex(var_w("hwrena'rst",25),ln 23,ln 2,(Word_Lib.mk_wordT 22)),
            mop(Cast w1,call("HWREna.CCRes",HOLogic.boolT,var("x",@{typ HWREna}),@{theory})),
            mop(Cast w1,call("HWREna.CC",HOLogic.boolT,var("x",@{typ HWREna}),@{theory})),
            ex(var_w("hwrena'rst",25),ln 24,ln 24,w1),
            mop(Cast w1,call("HWREna.CPUNum",HOLogic.boolT,var("x",@{typ HWREna}),@{theory}))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'HWREna",
   close
     (tp[var_a w32,var("x",@{typ HWREna})],call("reg'HWREna",w32,var("x",@{typ HWREna}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'HWREna",
   close
     (tp[var_a @{typ HWREna},var_w("x",32)],call("rec'HWREna",@{typ HWREna},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("BYTE",lw(0,3))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("HALFWORD",lw(1,3))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("WORD",lw(3,3))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("DOUBLEWORD",lw(7,3))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("println",
   close
     (var_s"s",
      mb(mr(close
              (var("s",qTy),
               call("state.print",@{typ "string \<Rightarrow> unit"},var("s",qTy),@{theory}))),
         close(var("v",@{typ "string \<Rightarrow> unit"}),mu(lu,qTy)))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("cpr",
   close
     (var_w("r",5),
      cc[ls"c0_",
         itb([(eq(var_w("r",5),lw(0,5)),ls"index"),(eq(var_w("r",5),lw(1,5)),ls"random"),
              (eq(var_w("r",5),lw(2,5)),ls"entrylo0"),(eq(var_w("r",5),lw(3,5)),ls"entrylo1"),
              (eq(var_w("r",5),lw(4,5)),ls"context"),(eq(var_w("r",5),lw(5,5)),ls"pagemask"),
              (eq(var_w("r",5),lw(6,5)),ls"wired"),(eq(var_w("r",5),lw(7,5)),ls"hwrena"),
              (eq(var_w("r",5),lw(8,5)),ls"badvaddr"),(eq(var_w("r",5),lw(9,5)),ls"count"),
              (eq(var_w("r",5),lw(10,5)),ls"entryhi"),(eq(var_w("r",5),lw(11,5)),ls"compare"),
              (eq(var_w("r",5),lw(12,5)),ls"status"),(eq(var_w("r",5),lw(13,5)),ls"cause"),
              (eq(var_w("r",5),lw(14,5)),ls"epc"),(eq(var_w("r",5),lw(15,5)),ls"prid"),
              (eq(var_w("r",5),lw(16,5)),ls"config"),(eq(var_w("r",5),lw(17,5)),ls"lladdr"),
              (eq(var_w("r",5),lw(18,5)),ls"watchlo"),(eq(var_w("r",5),lw(19,5)),ls"watchhi"),
              (eq(var_w("r",5),lw(20,5)),ls"xcontext"),(eq(var_w("r",5),lw(21,5)),ls"21"),
              (eq(var_w("r",5),lw(22,5)),ls"22"),(eq(var_w("r",5),lw(23,5)),ls"debug"),
              (eq(var_w("r",5),lw(24,5)),ls"depc"),(eq(var_w("r",5),lw(25,5)),ls"perfcnt"),
              (eq(var_w("r",5),lw(26,5)),ls"errctl"),(eq(var_w("r",5),lw(27,5)),ls"cacheerr"),
              (eq(var_w("r",5),lw(28,5)),ls"taglo"),(eq(var_w("r",5),lw(29,5)),ls"taghi"),
              (eq(var_w("r",5),lw(30,5)),ls"errorepc"),(eq(var_w("r",5),lw(31,5)),ls"kscratch")],
             lx(@{typ string}))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("hex",
   close
     (var("x",@{typ "'N::len word"}),
      let'
        (tp[var_i"q",var_i"r"],mop(QuotRem,tp[mop(Cast HOLogic.intT,mop(Size,ly(0,"N"))),li 4]),
         cc[ls"0x",
            mop(PadLeft,
                tp[lsc #"0",
                   mop(Cast HOLogic.natT,bop(Add,var_i"q",ite(eq(var_i"r",li 0),li 0,li 1))),
                   mop(ToLower,mop(Cast(@{typ string}),var("x",@{typ "'N::len word"})))])])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_sig_exception",
   close
     (var_w("ExceptionCode",5),
      cc[ls"MIPS exception ",call("hex",@{typ string},var_w("ExceptionCode",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_w_gpr",
   close
     (tp[var_w("r",5),var_w("data",64)],
      cc[ls"Reg ",mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("r",5))),ls" <- ",
         call("hex",@{typ string},var_w("data",64),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_w_hi",
   close(var_w("data",64),cc[ls"HI <- ",call("hex",@{typ string},var_w("data",64),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_w_lo",
   close(var_w("data",64),cc[ls"LO <- ",call("hex",@{typ string},var_w("data",64),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_w_c0",
   close
     (tp[var_w("r",5),var_w("data",64)],
      cc[call("cpr",@{typ string},var_w("r",5),@{theory}),ls" <- ",
         call("hex",@{typ string},var_w("data",64),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_w_mem",
   close
     (tp[var_w("addr",37),var_w("mask",64),var_w("data",64)],
      cc[ls"MEM[",call("hex",@{typ string},cc[var_w("addr",37),lw(0,3)],@{theory}),ls"] <- (data: ",
         call("hex",@{typ string},var_w("data",64),@{theory}),ls", mask: ",
         call("hex",@{typ string},var_w("mask",64),@{theory}),ls")"]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_r_mem",
   close
     (tp[var_w("addr",37),var_w("data",64)],
      cc[ls"data <- MEM[",call("hex",@{typ string},cc[var_w("addr",37),lw(0,3)],@{theory}),ls"]: ",
         call("hex",@{typ string},var_w("data",64),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("clear_watcher",lu)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("clear_logs",lu)
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("gpr",
   close
     (var_w("n",5),
      mb(mr(close
              (var("s",qTy),
               call("state.c_gpr",@{typ "5 word \<Rightarrow> 64 word"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "5 word \<Rightarrow> 64 word"}),
            mu(apply(var("v",@{typ "5 word \<Rightarrow> 64 word"}),var_w("n",5)),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'gpr",
   close
     (tp[var_w("value",64),var_w("n",5)],
      mb(mr(close
              (var("s",qTy),
               call("state.c_gpr",@{typ "5 word \<Rightarrow> 64 word"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "5 word \<Rightarrow> 64 word"}),
            mb(mu(fupd
                    (var("v",@{typ "5 word \<Rightarrow> 64 word"}),var_w("n",5),var_w("value",64)),
                  qTy),
               close
                 (var("v",@{typ "5 word \<Rightarrow> 64 word"}),
                  mw(close
                       (var("s",qTy),
                        rupd
                          ("state.c_gpr",
                           tp[var("s",qTy),var("v",@{typ "5 word \<Rightarrow> 64 word"})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("GPR",
   close
     (var_w("n",5),
      ite(eq(var_w("n",5),lw(0,5)),mu(lw(0,64),qTy),
          call("gpr",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("n",5),@{theory}))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'GPR",
   close
     (tp[var_w("value",64),var_w("n",5)],
      ite(mop(Not,eq(var_w("n",5),lw(0,5))),
          mb(call
               ("write'gpr",@{typ "state \<Rightarrow> (unit \<times> state)"},
                tp[var_w("value",64),var_w("n",5)],@{theory}),close(var_a HOLogic.unitT,mu(lu,qTy))),
          mu(lu,qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("PC",
   mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ procState}),
         mu(call("procState.c_PC",w64,var("v",@{typ procState}),@{theory}),qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'PC",
   close
     (var_w("value",64),
      mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ procState}),
            mb(mb(mu(tp[var("v",@{typ procState}),var_w("value",64)],qTy),
                  close
                    (var("v",@{typ "procState \<times> 64 word"}),
                     mu(rupd
                          ("procState.c_PC",var("v",@{typ "procState \<times> 64 word"}),@{theory}),
                        qTy))),
               close
                 (var("v",@{typ procState}),
                  mw(close
                       (var("s",qTy),
                        rupd("state.c_state",tp[var("s",qTy),var("v",@{typ procState})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("hi",
   mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ procState}),
         mu(call("procState.c_hi",@{typ "64 word option"},var("v",@{typ procState}),@{theory}),qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'hi",
   close
     (var("value",@{typ "64 word option"}),
      mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ procState}),
            mb(mb(mu(tp[var("v",@{typ procState}),var("value",@{typ "64 word option"})],qTy),
                  close
                    (var("v",@{typ "procState \<times> 64 word option"}),
                     mu(rupd
                          ("procState.c_hi",var("v",@{typ "procState \<times> 64 word option"}),
                           @{theory}),qTy))),
               close
                 (var("v",@{typ procState}),
                  mw(close
                       (var("s",qTy),
                        rupd("state.c_state",tp[var("s",qTy),var("v",@{typ procState})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("lo",
   mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ procState}),
         mu(call("procState.c_lo",@{typ "64 word option"},var("v",@{typ procState}),@{theory}),qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'lo",
   close
     (var("value",@{typ "64 word option"}),
      mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ procState}),
            mb(mb(mu(tp[var("v",@{typ procState}),var("value",@{typ "64 word option"})],qTy),
                  close
                    (var("v",@{typ "procState \<times> 64 word option"}),
                     mu(rupd
                          ("procState.c_lo",var("v",@{typ "procState \<times> 64 word option"}),
                           @{theory}),qTy))),
               close
                 (var("v",@{typ procState}),
                  mw(close
                       (var("s",qTy),
                        rupd("state.c_state",tp[var("s",qTy),var("v",@{typ procState})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CP0",
   mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ procState}),
         mu(call("procState.c_CP0",@{typ CP0},var("v",@{typ procState}),@{theory}),qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'CP0",
   close
     (var("value",@{typ CP0}),
      mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ procState}),
            mb(mb(mu(tp[var("v",@{typ procState}),var("value",@{typ CP0})],qTy),
                  close
                    (var("v",@{typ "procState \<times> CP0"}),
                     mu(rupd("procState.c_CP0",var("v",@{typ "procState \<times> CP0"}),@{theory}),
                        qTy))),
               close
                 (var("v",@{typ procState}),
                  mw(close
                       (var("s",qTy),
                        rupd("state.c_state",tp[var("s",qTy),var("v",@{typ procState})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("BranchDelay",
   mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ procState}),
         mu(call
              ("procState.c_BranchDelay",@{typ "64 word option"},var("v",@{typ procState}),@{theory}),
            qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'BranchDelay",
   close
     (var("value",@{typ "64 word option"}),
      mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ procState}),
            mb(mb(mu(tp[var("v",@{typ procState}),var("value",@{typ "64 word option"})],qTy),
                  close
                    (var("v",@{typ "procState \<times> 64 word option"}),
                     mu(rupd
                          ("procState.c_BranchDelay",
                           var("v",@{typ "procState \<times> 64 word option"}),@{theory}),qTy))),
               close
                 (var("v",@{typ procState}),
                  mw(close
                       (var("s",qTy),
                        rupd("state.c_state",tp[var("s",qTy),var("v",@{typ procState})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("BranchTo",
   mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ procState}),
         mu(call("procState.c_BranchTo",@{typ "64 word option"},var("v",@{typ procState}),@{theory}),
            qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'BranchTo",
   close
     (var("value",@{typ "64 word option"}),
      mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ procState}),
            mb(mb(mu(tp[var("v",@{typ procState}),var("value",@{typ "64 word option"})],qTy),
                  close
                    (var("v",@{typ "procState \<times> 64 word option"}),
                     mu(rupd
                          ("procState.c_BranchTo",
                           var("v",@{typ "procState \<times> 64 word option"}),@{theory}),qTy))),
               close
                 (var("v",@{typ procState}),
                  mw(close
                       (var("s",qTy),
                        rupd("state.c_state",tp[var("s",qTy),var("v",@{typ procState})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LLbit",
   mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ procState}),
         mu(call("procState.c_LLbit",@{typ "bool option"},var("v",@{typ procState}),@{theory}),qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'LLbit",
   close
     (var("value",@{typ "bool option"}),
      mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ procState}),
            mb(mb(mu(tp[var("v",@{typ procState}),var("value",@{typ "bool option"})],qTy),
                  close
                    (var("v",@{typ "procState \<times> bool option"}),
                     mu(rupd
                          ("procState.c_LLbit",var("v",@{typ "procState \<times> bool option"}),
                           @{theory}),qTy))),
               close
                 (var("v",@{typ procState}),
                  mw(close
                       (var("s",qTy),
                        rupd("state.c_state",tp[var("s",qTy),var("v",@{typ procState})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("exceptionSignalled",
   mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ procState}),
         mu(call("procState.c_exceptionSignalled",HOLogic.boolT,var("v",@{typ procState}),@{theory}),
            qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'exceptionSignalled",
   close
     (var_b"value",
      mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ procState}),
            mb(mb(mu(tp[var("v",@{typ procState}),var_b"value"],qTy),
                  close
                    (var("v",@{typ "procState \<times> bool"}),
                     mu(rupd
                          ("procState.c_exceptionSignalled",
                           var("v",@{typ "procState \<times> bool"}),@{theory}),qTy))),
               close
                 (var("v",@{typ procState}),
                  mw(close
                       (var("s",qTy),
                        rupd("state.c_state",tp[var("s",qTy),var("v",@{typ procState})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("UserMode",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                  close
                    (var("v",@{typ StatusRegister}),
                     mu(call
                          ("StatusRegister.KSU",(Word_Lib.mk_wordT 2),
                           var("v",@{typ StatusRegister}),@{theory}),qTy))),
               close(var_w("v",2),mu(eq(var_w("v",2),lw(2,2)),qTy))),
            close
              (var_b"b",
               ite(var_b"b",
                   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                      close
                        (var("v",@{typ CP0}),
                         mb(mb(mb(mu(call
                                       ("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),
                                        @{theory}),qTy),
                                  close
                                    (var("v",@{typ StatusRegister}),
                                     mu(call
                                          ("StatusRegister.EXL",HOLogic.boolT,
                                           var("v",@{typ StatusRegister}),@{theory}),qTy))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",mu(lt,qTy),
                                      mb(const
                                           ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                            @{theory}),
                                         close
                                           (var("v",@{typ CP0}),
                                            mb(mu(call
                                                    ("CP0.Status",@{typ StatusRegister},
                                                     var("v",@{typ CP0}),@{theory}),qTy),
                                               close
                                                 (var("v",@{typ StatusRegister}),
                                                  mu(call
                                                       ("StatusRegister.ERL",HOLogic.boolT,
                                                        var("v",@{typ StatusRegister}),@{theory}),
                                                     qTy)))))))),
                            close(var_b"v",mu(mop(Not,var_b"v"),qTy))))),mu(lf,qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SupervisorMode",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                  close
                    (var("v",@{typ StatusRegister}),
                     mu(call
                          ("StatusRegister.KSU",(Word_Lib.mk_wordT 2),
                           var("v",@{typ StatusRegister}),@{theory}),qTy))),
               close(var_w("v",2),mu(eq(var_w("v",2),lw(1,2)),qTy))),
            close
              (var_b"b",
               ite(var_b"b",
                   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                      close
                        (var("v",@{typ CP0}),
                         mb(mb(mb(mu(call
                                       ("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),
                                        @{theory}),qTy),
                                  close
                                    (var("v",@{typ StatusRegister}),
                                     mu(call
                                          ("StatusRegister.EXL",HOLogic.boolT,
                                           var("v",@{typ StatusRegister}),@{theory}),qTy))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",mu(lt,qTy),
                                      mb(const
                                           ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                            @{theory}),
                                         close
                                           (var("v",@{typ CP0}),
                                            mb(mu(call
                                                    ("CP0.Status",@{typ StatusRegister},
                                                     var("v",@{typ CP0}),@{theory}),qTy),
                                               close
                                                 (var("v",@{typ StatusRegister}),
                                                  mu(call
                                                       ("StatusRegister.ERL",HOLogic.boolT,
                                                        var("v",@{typ StatusRegister}),@{theory}),
                                                     qTy)))))))),
                            close(var_b"v",mu(mop(Not,var_b"v"),qTy))))),mu(lf,qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("KernelMode",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                  close
                    (var("v",@{typ StatusRegister}),
                     mu(call
                          ("StatusRegister.KSU",(Word_Lib.mk_wordT 2),
                           var("v",@{typ StatusRegister}),@{theory}),qTy))),
               close(var_w("v",2),mu(eq(var_w("v",2),lw(0,2)),qTy))),
            close
              (var_b"b",
               ite(var_b"b",mu(lt,qTy),
                   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                      close
                        (var("v",@{typ CP0}),
                         mb(mb(mu(call
                                    ("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),
                                     @{theory}),qTy),
                               close
                                 (var("v",@{typ StatusRegister}),
                                  mu(call
                                       ("StatusRegister.EXL",HOLogic.boolT,
                                        var("v",@{typ StatusRegister}),@{theory}),qTy))),
                            close
                              (var_b"b",
                               ite(var_b"b",mu(lt,qTy),
                                   mb(const
                                        ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                         @{theory}),
                                      close
                                        (var("v",@{typ CP0}),
                                         mb(mu(call
                                                 ("CP0.Status",@{typ StatusRegister},
                                                  var("v",@{typ CP0}),@{theory}),qTy),
                                            close
                                              (var("v",@{typ StatusRegister}),
                                               mu(call
                                                    ("StatusRegister.ERL",HOLogic.boolT,
                                                     var("v",@{typ StatusRegister}),@{theory}),qTy))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("BigEndianMem",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mu(call("CP0.Config",@{typ ConfigRegister},var("v",@{typ CP0}),@{theory}),qTy),
            close
              (var("v",@{typ ConfigRegister}),
               mu(call("ConfigRegister.BE",HOLogic.boolT,var("v",@{typ ConfigRegister}),@{theory}),
                  qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ReverseEndian",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                  close
                    (var("v",@{typ StatusRegister}),
                     mu(call
                          ("StatusRegister.RE",HOLogic.boolT,var("v",@{typ StatusRegister}),
                           @{theory}),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const("UserMode",@{typ "state \<Rightarrow> (bool \<times> state)"},@{theory}),
                      mu(lf,qTy)))),close(var_b"v",mu(mop(Cast w1,var_b"v"),qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("BigEndianCPU",
   mb(const("BigEndianMem",@{typ "state \<Rightarrow> (bool \<times> state)"},@{theory}),
      close
        (var_b"v",
         mb(mu(mop(Cast w1,var_b"v"),qTy),
            close
              (var_w("v",1),
               mb(const
                    ("ReverseEndian",@{typ "state \<Rightarrow> (1 word \<times> state)"},@{theory}),
                  close(var_w("v0",1),mu(bop(BXor,var_w("v",1),var_w("v0",1)),qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("NotWordValue",
   close
     (var_w("value",64),
      let'
        (var_w("top",33),ex(var_w("value",64),ln 63,ln 31,(Word_Lib.mk_wordT 33)),
         bop(And,mop(Not,eq(var_w("top",33),lw(0,33))),
             mop(Not,eq(var_w("top",33),lw(8589934591,33)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CheckBranch",
   mb(const("BranchDelay",@{typ "state \<Rightarrow> ((64 word option) \<times> state)"},@{theory}),
      close
        (var("v",@{typ "64 word option"}),
         mb(mu(mop(IsSome,var("v",@{typ "64 word option"})),qTy),
            close
              (var_b"b",
               ite(var_b"b",
                   call
                     ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      call
                        ("exception.UNPREDICTABLE",@{typ exception},ls"Not permitted in delay slot",
                         @{theory}),@{theory}),mu(lu,qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("dumpRegs",close(var_a HOLogic.unitT,lu))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("coreStats",
   mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
      close
        (var("v",@{typ procState}),
         mu(call("procState.c_CoreStats",@{typ CoreStats},var("v",@{typ procState}),@{theory}),qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'coreStats",
   close
     (var("value",@{typ CoreStats}),
      mb(mr(close(var("s",qTy),call("state.c_state",@{typ procState},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ procState}),
            mb(mb(mu(tp[var("v",@{typ procState}),var("value",@{typ CoreStats})],qTy),
                  close
                    (var("v",@{typ "procState \<times> CoreStats"}),
                     mu(rupd
                          ("procState.c_CoreStats",var("v",@{typ "procState \<times> CoreStats"}),
                           @{theory}),qTy))),
               close
                 (var("v",@{typ procState}),
                  mw(close
                       (var("s",qTy),
                        rupd("state.c_state",tp[var("s",qTy),var("v",@{typ procState})],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("initCoreStats",
   mb(const("coreStats",@{typ "state \<Rightarrow> (CoreStats \<times> state)"},@{theory}),
      close
        (var("v",@{typ CoreStats}),
         mb(call
              ("write'coreStats",@{typ "state \<Rightarrow> (unit \<times> state)"},
               rupd("CoreStats.branch_taken",tp[var("v",@{typ CoreStats}),ln 0],@{theory}),@{theory}),
            close
              (var_a HOLogic.unitT,
               mb(const
                    ("coreStats",@{typ "state \<Rightarrow> (CoreStats \<times> state)"},@{theory}),
                  close
                    (var("x",@{typ CoreStats}),
                     call
                       ("write'coreStats",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        rupd
                          ("CoreStats.branch_not_taken",tp[var("x",@{typ CoreStats}),ln 0],@{theory}),
                        @{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("printCoreStats",
   mb(const("coreStats",@{typ "state \<Rightarrow> (CoreStats \<times> state)"},@{theory}),
      close
        (var("v",@{typ CoreStats}),
         mb(mb(mb(mb(mb(mb(mb(mu(call
                                   ("CoreStats.branch_taken",HOLogic.natT,var("v",@{typ CoreStats}),
                                    @{theory}),qTy),
                              close(var_n"v",mu(mop(Cast(@{typ string}),var_n"v"),qTy))),
                           close(var_s"v",mu(tp[ln 9,var_s"v"],qTy))),
                        close
                          (var("v",@{typ "nat \<times> string"}),
                           mu(tp[lsc #" ",var("v",@{typ "nat \<times> string"})],qTy))),
                     close
                       (var("v",@{typ "char \<times> nat \<times> string"}),
                        mu(mop(PadLeft,var("v",@{typ "char \<times> nat \<times> string"})),qTy))),
                  close
                    (var_s"v",
                     mb(const
                          ("coreStats",@{typ "state \<Rightarrow> (CoreStats \<times> state)"},
                           @{theory}),
                        close
                          (var("v0",@{typ CoreStats}),
                           mb(mb(mb(mb(mb(mb(mb(mb(mu(call
                                                        ("CoreStats.branch_not_taken",HOLogic.natT,
                                                         var("v0",@{typ CoreStats}),@{theory}),qTy),
                                                   close
                                                     (var_n"v",
                                                      mu(mop(Cast(@{typ string}),var_n"v"),qTy))),
                                                close(var_s"v",mu(tp[ln 9,var_s"v"],qTy))),
                                             close
                                               (var("v",@{typ "nat \<times> string"}),
                                                mu(tp[lsc #" ",var("v",@{typ "nat \<times> string"})],
                                                   qTy))),
                                          close
                                            (var("v",@{typ "char \<times> nat \<times> string"}),
                                             mu(mop(PadLeft,
                                                    var("v",
                                                        @{typ "char \<times> nat \<times> string"})),
                                                qTy))),close(var_s"v",mu(cc[ls" = ",var_s"v"],qTy))),
                                    close
                                      (var_s"v",
                                       mu(cc[mop(PadRight,tp[lsc #" ",ln 16,ls"branch_not_taken"]),
                                             var_s"v"],qTy))),
                                 close(var_s"v",mu(cc[ls"\n",var_s"v"],qTy))),
                              close(var_s"v0",mu(cc[var_s"v",var_s"v0"],qTy))))))),
               close(var_s"v",mu(cc[ls" = ",var_s"v"],qTy))),
            close(var_s"v",mu(cc[mop(PadRight,tp[lsc #" ",ln 16,ls"branch_taken"]),var_s"v"],qTy))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("csvHeaderCoreStats",ls"branch_taken,branch_not_taken")
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("csvCoreStats",
   mb(const("coreStats",@{typ "state \<Rightarrow> (CoreStats \<times> state)"},@{theory}),
      close
        (var("v",@{typ CoreStats}),
         mb(mb(mu(call("CoreStats.branch_taken",HOLogic.natT,var("v",@{typ CoreStats}),@{theory}),
                  qTy),close(var_n"v",mu(mop(Cast(@{typ string}),var_n"v"),qTy))),
            close
              (var_s"v",
               mb(const
                    ("coreStats",@{typ "state \<Rightarrow> (CoreStats \<times> state)"},@{theory}),
                  close
                    (var("v0",@{typ CoreStats}),
                     mb(mb(mb(mu(call
                                   ("CoreStats.branch_not_taken",HOLogic.natT,
                                    var("v0",@{typ CoreStats}),@{theory}),qTy),
                              close(var_n"v",mu(mop(Cast(@{typ string}),var_n"v"),qTy))),
                           close(var_s"v",mu(cc[ls",",var_s"v"],qTy))),
                        close(var_s"v0",mu(cc[var_s"v",var_s"v0"],qTy))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("next_unknown",
   close
     (var_s"s",
      mb(mr(close
              (var("s",qTy),
               call
                 ("state.unknown_counters",@{typ "string \<Rightarrow> nat"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "string \<Rightarrow> nat"}),
            mb(mu(apply(var("v",@{typ "string \<Rightarrow> nat"}),var_s"s"),qTy),
               close
                 (var_n"n",
                  mb(mr(close
                          (var("s",qTy),
                           call
                             ("state.unknown_counters",@{typ "string \<Rightarrow> nat"},
                              var("s",qTy),@{theory}))),
                     close
                       (var("v",@{typ "string \<Rightarrow> nat"}),
                        mb(mb(mu(fupd
                                   (var("v",@{typ "string \<Rightarrow> nat"}),var_s"s",
                                    bop(Add,var_n"n",ln 1)),qTy),
                              close
                                (var("v",@{typ "string \<Rightarrow> nat"}),
                                 mw(close
                                      (var("s",qTy),
                                       rupd
                                         ("state.unknown_counters",
                                          tp[var("s",qTy),var("v",@{typ "string \<Rightarrow> nat"})],
                                          @{theory}))))),
                           close(var_a HOLogic.unitT,mu(tp[var_n"n",var_s"s"],qTy)))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("CAPBYTEWIDTH",ln 32)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("UPERMS",ln 16)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("OTYPEWIDTH",ln 24)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'UPerms",
   close
     (var_w("x",32),
      record
        ("UPerms",
         [ex(var_w("x",32),ln 31,ln 4,(Word_Lib.mk_wordT 28)),ex(var_w("x",32),ln 3,ln 0,w4)],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'UPerms",
   close
     (var("x",@{typ UPerms}),
      cc[call("UPerms.Reserved",(Word_Lib.mk_wordT 28),var("x",@{typ UPerms}),@{theory}),
         call("UPerms.soft",w4,var("x",@{typ UPerms}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'UPerms",
   close
     (tp[var_a w32,var("x",@{typ UPerms})],call("reg'UPerms",w32,var("x",@{typ UPerms}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'UPerms",
   close
     (tp[var_a @{typ UPerms},var_w("x",32)],call("rec'UPerms",@{typ UPerms},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'Perms",
   close
     (var_w("x",32),
      record
        ("Perms",
         [bop(Bit,var_w("x",32),ln 10),bop(Bit,var_w("x",32),ln 0),bop(Bit,var_w("x",32),ln 8),
          bop(Bit,var_w("x",32),ln 1),bop(Bit,var_w("x",32),ln 2),bop(Bit,var_w("x",32),ln 4),
          bop(Bit,var_w("x",32),ln 7),bop(Bit,var_w("x",32),ln 3),bop(Bit,var_w("x",32),ln 5),
          bop(Bit,var_w("x",32),ln 6),
          cc[ex(var_w("x",32),ln 31,ln 11,(Word_Lib.mk_wordT 21)),ex(var_w("x",32),ln 9,ln 9,w1)]],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'Perms",
   close
     (var("x",@{typ Perms}),
      let'
        (var_w("Reserved",22),
         call("Perms.Reserved",(Word_Lib.mk_wordT 22),var("x",@{typ Perms}),@{theory}),
         cc[ex(var_w("Reserved",22),ln 21,ln 1,(Word_Lib.mk_wordT 21)),
            mop(Cast w1,
                call("Perms.Access_System_Registers",HOLogic.boolT,var("x",@{typ Perms}),@{theory})),
            ex(var_w("Reserved",22),ln 0,ln 0,w1),
            mop(Cast w1,call("Perms.Permit_CCall",HOLogic.boolT,var("x",@{typ Perms}),@{theory})),
            mop(Cast w1,call("Perms.Permit_Seal",HOLogic.boolT,var("x",@{typ Perms}),@{theory})),
            mop(Cast w1,
                call
                  ("Perms.Permit_Store_Local_Capability",HOLogic.boolT,var("x",@{typ Perms}),
                   @{theory})),
            mop(Cast w1,
                call("Perms.Permit_Store_Capability",HOLogic.boolT,var("x",@{typ Perms}),@{theory})),
            mop(Cast w1,
                call("Perms.Permit_Load_Capability",HOLogic.boolT,var("x",@{typ Perms}),@{theory})),
            mop(Cast w1,call("Perms.Permit_Store",HOLogic.boolT,var("x",@{typ Perms}),@{theory})),
            mop(Cast w1,call("Perms.Permit_Load",HOLogic.boolT,var("x",@{typ Perms}),@{theory})),
            mop(Cast w1,call("Perms.Permit_Execute",HOLogic.boolT,var("x",@{typ Perms}),@{theory})),
            mop(Cast w1,call("Perms.Global",HOLogic.boolT,var("x",@{typ Perms}),@{theory}))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'Perms",
   close(tp[var_a w32,var("x",@{typ Perms})],call("reg'Perms",w32,var("x",@{typ Perms}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'Perms",
   close
     (tp[var_a @{typ Perms},var_w("x",32)],call("rec'Perms",@{typ Perms},var_w("x",32),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'Capability",
   close
     (var_w("x",257),
      record
        ("Capability",
         [ex(var_w("x",257),ln 191,ln 128,w64),ex(var_w("x",257),ln 127,ln 64,w64),
          ex(var_w("x",257),ln 255,ln 192,w64),
          ex(var_w("x",257),ln 55,ln 32,(Word_Lib.mk_wordT 24)),
          ex(var_w("x",257),ln 15,ln 1,(Word_Lib.mk_wordT 15)),ex(var_w("x",257),ln 63,ln 56,w8),
          bop(Bit,var_w("x",257),ln 0),bop(Bit,var_w("x",257),ln 256),
          ex(var_w("x",257),ln 31,ln 16,w16)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'Capability",
   close
     (var("x",@{typ Capability}),
      cc[mop(Cast w1,call("Capability.tag",HOLogic.boolT,var("x",@{typ Capability}),@{theory})),
         call("Capability.length",w64,var("x",@{typ Capability}),@{theory}),
         call("Capability.base",w64,var("x",@{typ Capability}),@{theory}),
         call("Capability.cursor",w64,var("x",@{typ Capability}),@{theory}),
         call("Capability.reserved",w8,var("x",@{typ Capability}),@{theory}),
         call("Capability.otype",(Word_Lib.mk_wordT 24),var("x",@{typ Capability}),@{theory}),
         call("Capability.uperms",w16,var("x",@{typ Capability}),@{theory}),
         call("Capability.perms",(Word_Lib.mk_wordT 15),var("x",@{typ Capability}),@{theory}),
         mop(Cast w1,call("Capability.sealed",HOLogic.boolT,var("x",@{typ Capability}),@{theory}))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'Capability",
   close
     (tp[var_a (Word_Lib.mk_wordT 257),var("x",@{typ Capability})],
      call("reg'Capability",(Word_Lib.mk_wordT 257),var("x",@{typ Capability}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'Capability",
   close
     (tp[var_a @{typ Capability},var_w("x",257)],
      call("rec'Capability",@{typ Capability},var_w("x",257),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("defaultCap",
   rupd
     ("Capability.reserved",
      tp[rupd
           ("Capability.perms",
            tp[rupd
                 ("Capability.uperms",
                  tp[rupd
                       ("Capability.otype",
                        tp[rupd
                             ("Capability.length",
                              tp[rupd
                                   ("Capability.base",
                                    tp[rupd
                                         ("Capability.cursor",
                                          tp[rupd
                                               ("Capability.sealed",
                                                tp[rupd
                                                     ("Capability.tag",tp[lx @{typ Capability},lt],
                                                      @{theory}),lf],@{theory}),lw(0,64)],@{theory}),
                                       lw(0,64)],@{theory}),mop(BNot,lw(0,64))],@{theory}),lw(0,24)],
                        @{theory}),mop(BNot,lw(0,16))],@{theory}),mop(BNot,lw(0,15))],@{theory}),
         lw(0,8)],@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("nullCap",
   rupd
     ("Capability.reserved",
      tp[rupd
           ("Capability.perms",
            tp[rupd
                 ("Capability.uperms",
                  tp[rupd
                       ("Capability.otype",
                        tp[rupd
                             ("Capability.length",
                              tp[rupd
                                   ("Capability.base",
                                    tp[rupd
                                         ("Capability.cursor",
                                          tp[rupd
                                               ("Capability.sealed",
                                                tp[rupd
                                                     ("Capability.tag",tp[lx @{typ Capability},lf],
                                                      @{theory}),lf],@{theory}),lw(0,64)],@{theory}),
                                       lw(0,64)],@{theory}),mop(BNot,lw(0,64))],@{theory}),lw(0,24)],
                        @{theory}),lw(0,16)],@{theory}),lw(0,15)],@{theory}),lw(0,8)],@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("canRepOffset",close(tp[var("cap",@{typ Capability}),var_w("newOffset",64)],lt))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("canRepSeal",close(tp[var("cap",@{typ Capability}),var_b"newSeal"],lt))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("canRepBounds",close(tp[var("cap",@{typ Capability}),var_w("newLength",64)],lt))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("getTag",
   close
     (var("cap",@{typ Capability}),
      call("Capability.tag",HOLogic.boolT,var("cap",@{typ Capability}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("getType",
   close
     (var("cap",@{typ Capability}),
      call("Capability.otype",(Word_Lib.mk_wordT 24),var("cap",@{typ Capability}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("getPerms",
   close
     (var("cap",@{typ Capability}),
      call
        ("rec'Perms",@{typ Perms},
         mop(Cast w32,
             call("Capability.perms",(Word_Lib.mk_wordT 15),var("cap",@{typ Capability}),@{theory})),
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("getUPerms",
   close
     (var("cap",@{typ Capability}),
      call
        ("rec'UPerms",@{typ UPerms},
         mop(Cast w32,call("Capability.uperms",w16,var("cap",@{typ Capability}),@{theory})),
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("getSealed",
   close
     (var("cap",@{typ Capability}),
      call("Capability.sealed",HOLogic.boolT,var("cap",@{typ Capability}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("getOffset",
   close
     (var("cap",@{typ Capability}),
      bop(Sub,call("Capability.cursor",w64,var("cap",@{typ Capability}),@{theory}),
          call("Capability.base",w64,var("cap",@{typ Capability}),@{theory}))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("getBase",
   close
     (var("cap",@{typ Capability}),
      call("Capability.base",w64,var("cap",@{typ Capability}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("getLength",
   close
     (var("cap",@{typ Capability}),
      call("Capability.length",w64,var("cap",@{typ Capability}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("getBaseAndLength",
   close
     (var("cap",@{typ Capability}),
      tp[call("Capability.base",w64,var("cap",@{typ Capability}),@{theory}),
         call("Capability.length",w64,var("cap",@{typ Capability}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("setTag",
   close
     (tp[var("cap",@{typ Capability}),var_b"tag"],
      rupd("Capability.tag",tp[var("cap",@{typ Capability}),var_b"tag"],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("setType",
   close
     (tp[var("cap",@{typ Capability}),var_w("otype",24)],
      rupd("Capability.otype",tp[var("cap",@{typ Capability}),var_w("otype",24)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("setPerms",
   close
     (tp[var("cap",@{typ Capability}),var("perms",@{typ Perms})],
      rupd
        ("Capability.perms",
         tp[var("cap",@{typ Capability}),
            ex(call("reg'Perms",w32,var("perms",@{typ Perms}),@{theory}),ln 14,ln 0,
               (Word_Lib.mk_wordT 15))],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("setUPerms",
   close
     (tp[var("cap",@{typ Capability}),var("uperms",@{typ UPerms})],
      rupd
        ("Capability.uperms",
         tp[var("cap",@{typ Capability}),
            ex(call("reg'UPerms",w32,var("uperms",@{typ UPerms}),@{theory}),ln 15,ln 0,w16)],
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("setSealed",
   close
     (tp[var("cap",@{typ Capability}),var_b"sealed"],
      rupd("Capability.sealed",tp[var("cap",@{typ Capability}),var_b"sealed"],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("setOffset",
   close
     (tp[var("cap",@{typ Capability}),var_w("offset",64)],
      rupd
        ("Capability.cursor",
         tp[var("cap",@{typ Capability}),
            bop(Add,var_w("offset",64),
                call("Capability.base",w64,var("cap",@{typ Capability}),@{theory}))],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("setBounds",
   close
     (tp[var("cap",@{typ Capability}),var_w("length",64)],
      rupd
        ("Capability.length",
         tp[rupd
              ("Capability.base",
               tp[var("cap",@{typ Capability}),
                  call("Capability.cursor",w64,var("cap",@{typ Capability}),@{theory})],@{theory}),
            var_w("length",64)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_cap_write",
   close
     (var("cap",@{typ Capability}),
      cc[ls"t:",
         ite(call("getTag",HOLogic.boolT,var("cap",@{typ Capability}),@{theory}),ls"1",ls"0"),
         ls" s:",
         ite(call("getSealed",HOLogic.boolT,var("cap",@{typ Capability}),@{theory}),ls"1",ls"0"),
         ls" perms:",
         call
           ("hex",@{typ string},
            cc[call("Capability.uperms",w16,var("cap",@{typ Capability}),@{theory}),
               call
                 ("Capability.perms",(Word_Lib.mk_wordT 15),var("cap",@{typ Capability}),@{theory})],
            @{theory}),ls" type:",
         call
           ("hex",@{typ string},
            call("getType",(Word_Lib.mk_wordT 24),var("cap",@{typ Capability}),@{theory}),@{theory}),
         ls" offset:",
         call
           ("hex",@{typ string},call("getOffset",w64,var("cap",@{typ Capability}),@{theory}),
            @{theory}),ls" base:",
         call
           ("hex",@{typ string},call("getBase",w64,var("cap",@{typ Capability}),@{theory}),@{theory}),
         ls" length:",
         call
           ("hex",@{typ string},call("getLength",w64,var("cap",@{typ Capability}),@{theory}),
            @{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_cpp_write",
   close
     (var("cap",@{typ Capability}),
      cc[ls"PCC <- ",call("log_cap_write",@{typ string},var("cap",@{typ Capability}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_creg_write",
   close
     (tp[var_w("r",5),var("cap",@{typ Capability})],
      cc[ls"CapReg ",mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("r",5))),ls" <- ",
         call("log_cap_write",@{typ string},var("cap",@{typ Capability}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_store_cap",
   close
     (tp[var_w("pAddr",40),var("cap",@{typ Capability})],
      cc[ls"MEM[",call("hex",@{typ string},var_w("pAddr",40),@{theory}),ls"] <- ",
         call("log_cap_write",@{typ string},var("cap",@{typ Capability}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("log_load_cap",
   close
     (tp[var_w("pAddr",40),var("cap",@{typ Capability})],
      cc[call("log_cap_write",@{typ string},var("cap",@{typ Capability}),@{theory}),ls" <- MEM[",
         call("hex",@{typ string},var_w("pAddr",40),@{theory}),ls"]"]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("isCapAligned",
   close(var_w("addr",64),eq(ex(var_w("addr",64),ln 4,ln 0,(Word_Lib.mk_wordT 5)),lw(0,5))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("capToBits",
   close
     (var("cap",@{typ Capability}),
      bop(BXor,
          ex(call("reg'Capability",(Word_Lib.mk_wordT 257),var("cap",@{typ Capability}),@{theory}),
             ln 255,ln 0,(Word_Lib.mk_wordT 256)),
          ex(call
               ("reg'Capability",(Word_Lib.mk_wordT 257),
                const("nullCap",@{typ Capability},@{theory}),@{theory}),ln 255,ln 0,
             (Word_Lib.mk_wordT 256)))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("bitsToCap",
   close
     (var_w("raw",256),
      call
        ("rec'Capability",@{typ Capability},
         cc[lw(0,1),
            bop(BXor,var_w("raw",256),
                ex(call
                     ("reg'Capability",(Word_Lib.mk_wordT 257),
                      const("nullCap",@{typ Capability},@{theory}),@{theory}),ln 255,ln 0,
                   (Word_Lib.mk_wordT 256)))],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("readDwordFromRaw",
   close
     (tp[var_w("dwordAddr",37),var_w("raw",256)],
      cs(ex(var_w("dwordAddr",37),ln 1,ln 0,(Word_Lib.mk_wordT 2)),
         [(var_w("v",2),
           itb([(eq(var_w("v",2),lw(0,2)),ex(var_w("raw",256),ln 63,ln 0,w64)),
                (eq(var_w("v",2),lw(1,2)),ex(var_w("raw",256),ln 127,ln 64,w64)),
                (eq(var_w("v",2),lw(2,2)),ex(var_w("raw",256),ln 191,ln 128,w64)),
                (eq(var_w("v",2),lw(3,2)),ex(var_w("raw",256),ln 255,ln 192,w64))],lx w64))],
         @{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("updateDwordInRaw",
   close
     (tp[var_w("dwordAddr",37),var_w("data",64),var_w("mask",64),var_w("old_blob",256)],
      cs(ex(var_w("dwordAddr",37),ln 1,ln 0,(Word_Lib.mk_wordT 2)),
         [(var_w("v",2),
           itb([(eq(var_w("v",2),lw(0,2)),
                 cc[ex(var_w("old_blob",256),ln 255,ln 64,(Word_Lib.mk_wordT 192)),
                    bop(BOr,
                        bop(BAnd,ex(var_w("old_blob",256),ln 63,ln 0,w64),mop(BNot,var_w("mask",64))),
                        bop(BAnd,var_w("data",64),var_w("mask",64)))]),
                (eq(var_w("v",2),lw(1,2)),
                 cc[ex(var_w("old_blob",256),ln 255,ln 128,(Word_Lib.mk_wordT 128)),
                    bop(BOr,
                        bop(BAnd,ex(var_w("old_blob",256),ln 127,ln 64,w64),
                            mop(BNot,var_w("mask",64))),bop(BAnd,var_w("data",64),var_w("mask",64))),
                    ex(var_w("old_blob",256),ln 63,ln 0,w64)]),
                (eq(var_w("v",2),lw(2,2)),
                 cc[ex(var_w("old_blob",256),ln 255,ln 192,w64),
                    bop(BOr,
                        bop(BAnd,ex(var_w("old_blob",256),ln 191,ln 128,w64),
                            mop(BNot,var_w("mask",64))),bop(BAnd,var_w("data",64),var_w("mask",64))),
                    ex(var_w("old_blob",256),ln 127,ln 0,(Word_Lib.mk_wordT 128))]),
                (eq(var_w("v",2),lw(3,2)),
                 cc[bop(BOr,
                        bop(BAnd,ex(var_w("old_blob",256),ln 255,ln 192,w64),
                            mop(BNot,var_w("mask",64))),bop(BAnd,var_w("data",64),var_w("mask",64))),
                    ex(var_w("old_blob",256),ln 191,ln 0,(Word_Lib.mk_wordT 192))])],
               lx (Word_Lib.mk_wordT 256)))],@{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("rec'CapCause",
   close
     (var_w("x",16),
      record("CapCause",[ex(var_w("x",16),ln 15,ln 8,w8),ex(var_w("x",16),ln 7,ln 0,w8)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg'CapCause",
   close
     (var("x",@{typ CapCause}),
      cc[call("CapCause.ExcCode",w8,var("x",@{typ CapCause}),@{theory}),
         call("CapCause.RegNum",w8,var("x",@{typ CapCause}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'rec'CapCause",
   close
     (tp[var_a w16,var("x",@{typ CapCause})],
      call("reg'CapCause",w16,var("x",@{typ CapCause}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'reg'CapCause",
   close
     (tp[var_a @{typ CapCause},var_w("x",16)],
      call("rec'CapCause",@{typ CapCause},var_w("x",16),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("switchCoreCAP",
   close
     (var_w("i",8),
      mb(mr(close
              (var("s",qTy),
               call
                 ("state.all_BranchDelayPCC",
                  @{typ "8 word \<Rightarrow> ((64 word \<times> Capability) option)"},var("s",qTy),
                  @{theory}))),
         close
           (var("v",@{typ "8 word \<Rightarrow> ((64 word \<times> Capability) option)"}),
            mb(mb(mb(mr(close(var("s",qTy),call("state.procID",w8,var("s",qTy),@{theory}))),
                     close
                       (var_w("v0",8),
                        mb(mr(close
                                (var("s",qTy),
                                 call
                                   ("state.BranchDelayPCC",
                                    @{typ "(64 word \<times> Capability) option"},var("s",qTy),
                                    @{theory}))),
                           close
                             (var("v1",@{typ "(64 word \<times> Capability) option"}),
                              mu(fupd
                                   (var("v",
                                        @{typ
                                        "8 word \<Rightarrow> ((64 word \<times> Capability) option)"}),
                                    var_w("v0",8),
                                    var("v1",@{typ "(64 word \<times> Capability) option"})),qTy))))),
                  close
                    (var("v",@{typ "8 word \<Rightarrow> ((64 word \<times> Capability) option)"}),
                     mw(close
                          (var("s",qTy),
                           rupd
                             ("state.all_BranchDelayPCC",
                              tp[var("s",qTy),
                                 var("v",
                                     @{typ
                                     "8 word \<Rightarrow> ((64 word \<times> Capability) option)"})],
                              @{theory}))))),
               close
                 (var_a HOLogic.unitT,
                  mb(mr(close
                          (var("s",qTy),
                           call
                             ("state.all_BranchToPCC",
                              @{typ "8 word \<Rightarrow> ((64 word \<times> Capability) option)"},
                              var("s",qTy),@{theory}))),
                     close
                       (var("v",@{typ "8 word \<Rightarrow> ((64 word \<times> Capability) option)"}),
                        mb(mb(mb(mr(close
                                      (var("s",qTy),call("state.procID",w8,var("s",qTy),@{theory}))),
                                 close
                                   (var_w("v0",8),
                                    mb(mr(close
                                            (var("s",qTy),
                                             call
                                               ("state.BranchToPCC",
                                                @{typ "(64 word \<times> Capability) option"},
                                                var("s",qTy),@{theory}))),
                                       close
                                         (var("v1",@{typ "(64 word \<times> Capability) option"}),
                                          mu(fupd
                                               (var("v",
                                                    @{typ
                                                    "8 word \<Rightarrow>
                                                     ((64 word \<times> Capability) option)"}),
                                                var_w("v0",8),
                                                var("v1",
                                                    @{typ "(64 word \<times> Capability) option"})),
                                             qTy))))),
                              close
                                (var("v",
                                     @{typ
                                     "8 word \<Rightarrow> ((64 word \<times> Capability) option)"}),
                                 mw(close
                                      (var("s",qTy),
                                       rupd
                                         ("state.all_BranchToPCC",
                                          tp[var("s",qTy),
                                             var("v",
                                                 @{typ
                                                 "8 word \<Rightarrow>
                                                  ((64 word \<times> Capability) option)"})],
                                          @{theory}))))),
                           close
                             (var_a HOLogic.unitT,
                              mb(mr(close
                                      (var("s",qTy),
                                       call
                                         ("state.all_CCallBranchDelay",
                                          @{typ "8 word \<Rightarrow> bool"},var("s",qTy),@{theory}))),
                                 close
                                   (var("v",@{typ "8 word \<Rightarrow> bool"}),
                                    mb(mb(mb(mr(close
                                                  (var("s",qTy),
                                                   call("state.procID",w8,var("s",qTy),@{theory}))),
                                             close
                                               (var_w("v0",8),
                                                mb(mr(close
                                                        (var("s",qTy),
                                                         call
                                                           ("state.CCallBranchDelay",HOLogic.boolT,
                                                            var("s",qTy),@{theory}))),
                                                   close
                                                     (var_b"v1",
                                                      mu(fupd
                                                           (var("v",
                                                                @{typ "8 word \<Rightarrow> bool"}),
                                                            var_w("v0",8),var_b"v1"),qTy))))),
                                          close
                                            (var("v",@{typ "8 word \<Rightarrow> bool"}),
                                             mw(close
                                                  (var("s",qTy),
                                                   rupd
                                                     ("state.all_CCallBranchDelay",
                                                      tp[var("s",qTy),
                                                         var("v",@{typ "8 word \<Rightarrow> bool"})],
                                                      @{theory}))))),
                                       close
                                         (var_a HOLogic.unitT,
                                          mb(mr(close
                                                  (var("s",qTy),
                                                   call
                                                     ("state.all_CCallBranch",
                                                      @{typ "8 word \<Rightarrow> bool"},
                                                      var("s",qTy),@{theory}))),
                                             close
                                               (var("v",@{typ "8 word \<Rightarrow> bool"}),
                                                mb(mb(mb(mr(close
                                                              (var("s",qTy),
                                                               call
                                                                 ("state.procID",w8,var("s",qTy),
                                                                  @{theory}))),
                                                         close
                                                           (var_w("v0",8),
                                                            mb(mr(close
                                                                    (var("s",qTy),
                                                                     call
                                                                       ("state.CCallBranch",
                                                                        HOLogic.boolT,var("s",qTy),
                                                                        @{theory}))),
                                                               close
                                                                 (var_b"v1",
                                                                  mu(fupd
                                                                       (var("v",
                                                                            @{typ
                                                                            "8 word \<Rightarrow>
                                                                             bool"}),var_w("v0",8),
                                                                        var_b"v1"),qTy))))),
                                                      close
                                                        (var("v",@{typ "8 word \<Rightarrow> bool"}),
                                                         mw(close
                                                              (var("s",qTy),
                                                               rupd
                                                                 ("state.all_CCallBranch",
                                                                  tp[var("s",qTy),
                                                                     var("v",
                                                                         @{typ
                                                                         "8 word \<Rightarrow> bool"})],
                                                                  @{theory}))))),
                                                   close
                                                     (var_a HOLogic.unitT,
                                                      mb(mr(close
                                                              (var("s",qTy),
                                                               call
                                                                 ("state.all_capcause",
                                                                  @{typ
                                                                  "8 word \<Rightarrow> CapCause"},
                                                                  var("s",qTy),@{theory}))),
                                                         close
                                                           (var("v",
                                                                @{typ
                                                                "8 word \<Rightarrow> CapCause"}),
                                                            mb(mb(mb(mr(close
                                                                          (var("s",qTy),
                                                                           call
                                                                             ("state.procID",w8,
                                                                              var("s",qTy),@{theory}))),
                                                                     close
                                                                       (var_w("v0",8),
                                                                        mb(mr(close
                                                                                (var("s",qTy),
                                                                                 call
                                                                                   ("state.capcause",
                                                                                    @{typ CapCause},
                                                                                    var("s",qTy),
                                                                                    @{theory}))),
                                                                           close
                                                                             (var("v1",
                                                                                  @{typ CapCause}),
                                                                              mu(fupd
                                                                                   (var("v",
                                                                                        @{typ
                                                                                        "8 word \<Rightarrow>
                                                                                         CapCause"}),
                                                                                    var_w("v0",8),
                                                                                    var("v1",
                                                                                        @{typ CapCause})),
                                                                                 qTy))))),
                                                                  close
                                                                    (var("v",
                                                                         @{typ
                                                                         "8 word \<Rightarrow>
                                                                          CapCause"}),
                                                                     mw(close
                                                                          (var("s",qTy),
                                                                           rupd
                                                                             ("state.all_capcause",
                                                                              tp[var("s",qTy),
                                                                                 var("v",
                                                                                     @{typ
                                                                                     "8 word \<Rightarrow>
                                                                                      CapCause"})],
                                                                              @{theory}))))),
                                                               close
                                                                 (var_a HOLogic.unitT,
                                                                  mb(mr(close
                                                                          (var("s",qTy),
                                                                           call
                                                                             ("state.all_pcc",
                                                                              @{typ
                                                                              "8 word \<Rightarrow>
                                                                               Capability"},
                                                                              var("s",qTy),@{theory}))),
                                                                     close
                                                                       (var("v",
                                                                            @{typ
                                                                            "8 word \<Rightarrow>
                                                                             Capability"}),
                                                                        mb(mb(mb(mr(close
                                                                                      (var("s",qTy),
                                                                                       call
                                                                                         ("state.procID",
                                                                                          w8,
                                                                                          var("s",
                                                                                              qTy),
                                                                                          @{theory}))),
                                                                                 close
                                                                                   (var_w("v0",8),
                                                                                    mb(mr(close
                                                                                            (var("s",
                                                                                                 qTy),
                                                                                             call
                                                                                               ("state.c_pcc",
                                                                                                @{typ Capability},
                                                                                                var("s",
                                                                                                    qTy),
                                                                                                @{theory}))),
                                                                                       close
                                                                                         (var("v1",
                                                                                              @{typ Capability}),
                                                                                          mu(fupd
                                                                                               (var("v",
                                                                                                    @{typ
                                                                                                    "8 word \<Rightarrow>
                                                                                                     Capability"}),
                                                                                                var_w("v0",8),
                                                                                                var("v1",
                                                                                                    @{typ Capability})),
                                                                                             qTy))))),
                                                                              close
                                                                                (var("v",
                                                                                     @{typ
                                                                                     "8 word \<Rightarrow>
                                                                                      Capability"}),
                                                                                 mw(close
                                                                                      (var("s",qTy),
                                                                                       rupd
                                                                                         ("state.all_pcc",
                                                                                          tp[var("s",
                                                                                                 qTy),
                                                                                             var("v",
                                                                                                 @{typ
                                                                                                 "8 word \<Rightarrow>
                                                                                                  Capability"})],
                                                                                          @{theory}))))),
                                                                           close
                                                                             (var_a HOLogic.unitT,
                                                                              mb(mr(close
                                                                                      (var("s",qTy),
                                                                                       call
                                                                                         ("state.all_capr",
                                                                                          @{typ
                                                                                          "8 word \<Rightarrow>
                                                                                           (5 word \<Rightarrow>
                                                                                            Capability)"},
                                                                                          var("s",
                                                                                              qTy),
                                                                                          @{theory}))),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ
                                                                                        "8 word \<Rightarrow>
                                                                                         (5 word \<Rightarrow>
                                                                                          Capability)"}),
                                                                                    mb(mb(mb(mr(close
                                                                                                  (var("s",
                                                                                                       qTy),
                                                                                                   call
                                                                                                     ("state.procID",
                                                                                                      w8,
                                                                                                      var("s",
                                                                                                          qTy),
                                                                                                      @{theory}))),
                                                                                             close
                                                                                               (var_w("v0",8),
                                                                                                mb(mr(close
                                                                                                        (var("s",
                                                                                                             qTy),
                                                                                                         call
                                                                                                           ("state.c_capr",
                                                                                                            @{typ
                                                                                                            "5 word \<Rightarrow>
                                                                                                             Capability"},
                                                                                                            var("s",
                                                                                                                qTy),
                                                                                                            @{theory}))),
                                                                                                   close
                                                                                                     (var("v1",
                                                                                                          @{typ
                                                                                                          "5 word \<Rightarrow>
                                                                                                           Capability"}),
                                                                                                      mu(fupd
                                                                                                           (var("v",
                                                                                                                @{typ
                                                                                                                "8 word \<Rightarrow>
                                                                                                                 (5 word \<Rightarrow>
                                                                                                                  Capability)"}),
                                                                                                            var_w("v0",8),
                                                                                                            var("v1",
                                                                                                                @{typ
                                                                                                                "5 word \<Rightarrow>
                                                                                                                 Capability"})),
                                                                                                         qTy))))),
                                                                                          close
                                                                                            (var("v",
                                                                                                 @{typ
                                                                                                 "8 word \<Rightarrow>
                                                                                                  (5 word \<Rightarrow>
                                                                                                   Capability)"}),
                                                                                             mw(close
                                                                                                  (var("s",
                                                                                                       qTy),
                                                                                                   rupd
                                                                                                     ("state.all_capr",
                                                                                                      tp[var("s",
                                                                                                             qTy),
                                                                                                         var("v",
                                                                                                             @{typ
                                                                                                             "8 word \<Rightarrow>
                                                                                                              (5 word \<Rightarrow>
                                                                                                               Capability)"})],
                                                                                                      @{theory}))))),
                                                                                       close
                                                                                         (var_a
                                                                                            HOLogic.unitT,
                                                                                          mb(mr(close
                                                                                                  (var("s",
                                                                                                       qTy),
                                                                                                   call
                                                                                                     ("state.all_BranchDelayPCC",
                                                                                                      @{typ
                                                                                                      "8 word \<Rightarrow>
                                                                                                       ((64 word \<times>
                                                                                                          Capability)
                                                                                                           option)"},
                                                                                                      var("s",
                                                                                                          qTy),
                                                                                                      @{theory}))),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ
                                                                                                    "8 word \<Rightarrow>
                                                                                                     ((64 word \<times>
                                                                                                        Capability)
                                                                                                         option)"}),
                                                                                                mb(mb(mu(apply
                                                                                                           (var("v",
                                                                                                                @{typ
                                                                                                                "8 word \<Rightarrow>
                                                                                                                 ((64 word \<times>
                                                                                                                    Capability)
                                                                                                                     option)"}),
                                                                                                            var_w("i",8)),
                                                                                                         qTy),
                                                                                                      close
                                                                                                        (var("v",
                                                                                                             @{typ
                                                                                                             "(64 word \<times>
                                                                                                                Capability)
                                                                                                                 option"}),
                                                                                                         mw(close
                                                                                                              (var("s",
                                                                                                                   qTy),
                                                                                                               rupd
                                                                                                                 ("state.BranchDelayPCC",
                                                                                                                  tp[var("s",
                                                                                                                         qTy),
                                                                                                                     var("v",
                                                                                                                         @{typ
                                                                                                                         "(64 word \<times>
                                                                                                                            Capability)
                                                                                                                             option"})],
                                                                                                                  @{theory}))))),
                                                                                                   close
                                                                                                     (var_a
                                                                                                        HOLogic.unitT,
                                                                                                      mb(mr(close
                                                                                                              (var("s",
                                                                                                                   qTy),
                                                                                                               call
                                                                                                                 ("state.all_BranchToPCC",
                                                                                                                  @{typ
                                                                                                                  "8 word \<Rightarrow>
                                                                                                                   ((64 word \<times>
                                                                                                                      Capability)
                                                                                                                       option)"},
                                                                                                                  var("s",
                                                                                                                      qTy),
                                                                                                                  @{theory}))),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ
                                                                                                                "8 word \<Rightarrow>
                                                                                                                 ((64 word \<times>
                                                                                                                    Capability)
                                                                                                                     option)"}),
                                                                                                            mb(mb(mu(apply
                                                                                                                       (var("v",
                                                                                                                            @{typ
                                                                                                                            "8 word \<Rightarrow>
                                                                                                                             ((64 word \<times>
                                                                                                                                Capability)
                                                                                                                                 option)"}),
                                                                                                                        var_w("i",8)),
                                                                                                                     qTy),
                                                                                                                  close
                                                                                                                    (var("v",
                                                                                                                         @{typ
                                                                                                                         "(64 word \<times>
                                                                                                                            Capability)
                                                                                                                             option"}),
                                                                                                                     mw(close
                                                                                                                          (var("s",
                                                                                                                               qTy),
                                                                                                                           rupd
                                                                                                                             ("state.BranchToPCC",
                                                                                                                              tp[var("s",
                                                                                                                                     qTy),
                                                                                                                                 var("v",
                                                                                                                                     @{typ
                                                                                                                                     "(64 word \<times>
                                                                                                                                        Capability)
                                                                                                                                         option"})],
                                                                                                                              @{theory}))))),
                                                                                                               close
                                                                                                                 (var_a
                                                                                                                    HOLogic.unitT,
                                                                                                                  mb(mr(close
                                                                                                                          (var("s",
                                                                                                                               qTy),
                                                                                                                           call
                                                                                                                             ("state.all_CCallBranchDelay",
                                                                                                                              @{typ
                                                                                                                              "8 word \<Rightarrow>
                                                                                                                               bool"},
                                                                                                                              var("s",
                                                                                                                                  qTy),
                                                                                                                              @{theory}))),
                                                                                                                     close
                                                                                                                       (var("v",
                                                                                                                            @{typ
                                                                                                                            "8 word \<Rightarrow>
                                                                                                                             bool"}),
                                                                                                                        mb(mb(mu(apply
                                                                                                                                   (var("v",
                                                                                                                                        @{typ
                                                                                                                                        "8 word \<Rightarrow>
                                                                                                                                         bool"}),
                                                                                                                                    var_w("i",8)),
                                                                                                                                 qTy),
                                                                                                                              close
                                                                                                                                (var_b"v",
                                                                                                                                 mw(close
                                                                                                                                      (var("s",
                                                                                                                                           qTy),
                                                                                                                                       rupd
                                                                                                                                         ("state.CCallBranchDelay",
                                                                                                                                          tp[var("s",
                                                                                                                                                 qTy),
                                                                                                                                             var_b"v"],
                                                                                                                                          @{theory}))))),
                                                                                                                           close
                                                                                                                             (var_a
                                                                                                                                HOLogic.unitT,
                                                                                                                              mb(mr(close
                                                                                                                                      (var("s",
                                                                                                                                           qTy),
                                                                                                                                       call
                                                                                                                                         ("state.all_CCallBranch",
                                                                                                                                          @{typ
                                                                                                                                          "8 word \<Rightarrow>
                                                                                                                                           bool"},
                                                                                                                                          var("s",
                                                                                                                                              qTy),
                                                                                                                                          @{theory}))),
                                                                                                                                 close
                                                                                                                                   (var("v",
                                                                                                                                        @{typ
                                                                                                                                        "8 word \<Rightarrow>
                                                                                                                                         bool"}),
                                                                                                                                    mb(mb(mu(apply
                                                                                                                                               (var("v",
                                                                                                                                                    @{typ
                                                                                                                                                    "8 word \<Rightarrow>
                                                                                                                                                     bool"}),
                                                                                                                                                var_w("i",8)),
                                                                                                                                             qTy),
                                                                                                                                          close
                                                                                                                                            (var_b"v",
                                                                                                                                             mw(close
                                                                                                                                                  (var("s",
                                                                                                                                                       qTy),
                                                                                                                                                   rupd
                                                                                                                                                     ("state.CCallBranch",
                                                                                                                                                      tp[var("s",
                                                                                                                                                             qTy),
                                                                                                                                                         var_b"v"],
                                                                                                                                                      @{theory}))))),
                                                                                                                                       close
                                                                                                                                         (var_a
                                                                                                                                            HOLogic.unitT,
                                                                                                                                          mb(mr(close
                                                                                                                                                  (var("s",
                                                                                                                                                       qTy),
                                                                                                                                                   call
                                                                                                                                                     ("state.all_capcause",
                                                                                                                                                      @{typ
                                                                                                                                                      "8 word \<Rightarrow>
                                                                                                                                                       CapCause"},
                                                                                                                                                      var("s",
                                                                                                                                                          qTy),
                                                                                                                                                      @{theory}))),
                                                                                                                                             close
                                                                                                                                               (var("v",
                                                                                                                                                    @{typ
                                                                                                                                                    "8 word \<Rightarrow>
                                                                                                                                                     CapCause"}),
                                                                                                                                                mb(mb(mu(apply
                                                                                                                                                           (var("v",
                                                                                                                                                                @{typ
                                                                                                                                                                "8 word \<Rightarrow>
                                                                                                                                                                 CapCause"}),
                                                                                                                                                            var_w("i",8)),
                                                                                                                                                         qTy),
                                                                                                                                                      close
                                                                                                                                                        (var("v",
                                                                                                                                                             @{typ CapCause}),
                                                                                                                                                         mw(close
                                                                                                                                                              (var("s",
                                                                                                                                                                   qTy),
                                                                                                                                                               rupd
                                                                                                                                                                 ("state.capcause",
                                                                                                                                                                  tp[var("s",
                                                                                                                                                                         qTy),
                                                                                                                                                                     var("v",
                                                                                                                                                                         @{typ CapCause})],
                                                                                                                                                                  @{theory}))))),
                                                                                                                                                   close
                                                                                                                                                     (var_a
                                                                                                                                                        HOLogic.unitT,
                                                                                                                                                      mb(mr(close
                                                                                                                                                              (var("s",
                                                                                                                                                                   qTy),
                                                                                                                                                               call
                                                                                                                                                                 ("state.all_pcc",
                                                                                                                                                                  @{typ
                                                                                                                                                                  "8 word \<Rightarrow>
                                                                                                                                                                   Capability"},
                                                                                                                                                                  var("s",
                                                                                                                                                                      qTy),
                                                                                                                                                                  @{theory}))),
                                                                                                                                                         close
                                                                                                                                                           (var("v",
                                                                                                                                                                @{typ
                                                                                                                                                                "8 word \<Rightarrow>
                                                                                                                                                                 Capability"}),
                                                                                                                                                            mb(mb(mu(apply
                                                                                                                                                                       (var("v",
                                                                                                                                                                            @{typ
                                                                                                                                                                            "8 word \<Rightarrow>
                                                                                                                                                                             Capability"}),
                                                                                                                                                                        var_w("i",8)),
                                                                                                                                                                     qTy),
                                                                                                                                                                  close
                                                                                                                                                                    (var("v",
                                                                                                                                                                         @{typ Capability}),
                                                                                                                                                                     mw(close
                                                                                                                                                                          (var("s",
                                                                                                                                                                               qTy),
                                                                                                                                                                           rupd
                                                                                                                                                                             ("state.c_pcc",
                                                                                                                                                                              tp[var("s",
                                                                                                                                                                                     qTy),
                                                                                                                                                                                 var("v",
                                                                                                                                                                                     @{typ Capability})],
                                                                                                                                                                              @{theory}))))),
                                                                                                                                                               close
                                                                                                                                                                 (var_a
                                                                                                                                                                    HOLogic.unitT,
                                                                                                                                                                  mb(mr(close
                                                                                                                                                                          (var("s",
                                                                                                                                                                               qTy),
                                                                                                                                                                           call
                                                                                                                                                                             ("state.all_capr",
                                                                                                                                                                              @{typ
                                                                                                                                                                              "8 word \<Rightarrow>
                                                                                                                                                                               (5 word \<Rightarrow>
                                                                                                                                                                                Capability)"},
                                                                                                                                                                              var("s",
                                                                                                                                                                                  qTy),
                                                                                                                                                                              @{theory}))),
                                                                                                                                                                     close
                                                                                                                                                                       (var("v",
                                                                                                                                                                            @{typ
                                                                                                                                                                            "8 word \<Rightarrow>
                                                                                                                                                                             (5 word \<Rightarrow>
                                                                                                                                                                              Capability)"}),
                                                                                                                                                                        mb(mu(apply
                                                                                                                                                                                (var("v",
                                                                                                                                                                                     @{typ
                                                                                                                                                                                     "8 word \<Rightarrow>
                                                                                                                                                                                      (5 word \<Rightarrow>
                                                                                                                                                                                       Capability)"}),
                                                                                                                                                                                 var_w("i",8)),
                                                                                                                                                                              qTy),
                                                                                                                                                                           close
                                                                                                                                                                             (var("v",
                                                                                                                                                                                  @{typ
                                                                                                                                                                                  "5 word \<Rightarrow>
                                                                                                                                                                                   Capability"}),
                                                                                                                                                                              mw(close
                                                                                                                                                                                   (var("s",
                                                                                                                                                                                        qTy),
                                                                                                                                                                                    rupd
                                                                                                                                                                                      ("state.c_capr",
                                                                                                                                                                                       tp[var("s",
                                                                                                                                                                                              qTy),
                                                                                                                                                                                          var("v",
                                                                                                                                                                                              @{typ
                                                                                                                                                                                              "5 word \<Rightarrow>
                                                                                                                                                                                               Capability"})],
                                                                                                                                                                                       @{theory})))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("dumpCRegs",close(var_a HOLogic.unitT,lu))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("PCC",mr(close(var("s",qTy),call("state.c_pcc",@{typ Capability},var("s",qTy),@{theory}))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'PCC",
   close
     (var("value",@{typ Capability}),
      mb(mw(close
              (var("s",qTy),
               rupd("state.c_pcc",tp[var("s",qTy),var("value",@{typ Capability})],@{theory}))),
         close(var_a HOLogic.unitT,mu(lu,qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CAPR",
   close
     (var_w("n",5),
      mb(mr(close
              (var("s",qTy),
               call("state.c_capr",@{typ "5 word \<Rightarrow> Capability"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "5 word \<Rightarrow> Capability"}),
            mu(apply(var("v",@{typ "5 word \<Rightarrow> Capability"}),var_w("n",5)),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'CAPR",
   close
     (tp[var("value",@{typ Capability}),var_w("n",5)],
      mb(mr(close
              (var("s",qTy),
               call("state.c_capr",@{typ "5 word \<Rightarrow> Capability"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "5 word \<Rightarrow> Capability"}),
            mb(mb(mu(fupd
                       (var("v",@{typ "5 word \<Rightarrow> Capability"}),var_w("n",5),
                        var("value",@{typ Capability})),qTy),
                  close
                    (var("v",@{typ "5 word \<Rightarrow> Capability"}),
                     mw(close
                          (var("s",qTy),
                           rupd
                             ("state.c_capr",
                              tp[var("s",qTy),var("v",@{typ "5 word \<Rightarrow> Capability"})],
                              @{theory}))))),close(var_a HOLogic.unitT,mu(lu,qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("RCC",call("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(24,5),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'RCC",
   close
     (var("value",@{typ Capability}),
      call
        ("write'CAPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var("value",@{typ Capability}),lw(24,5)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("IDC",call("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(26,5),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'IDC",
   close
     (var("value",@{typ Capability}),
      call
        ("write'CAPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var("value",@{typ Capability}),lw(26,5)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("KR1C",call("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(27,5),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'KR1C",
   close
     (var("value",@{typ Capability}),
      call
        ("write'CAPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var("value",@{typ Capability}),lw(27,5)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("KR2C",call("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(28,5),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'KR2C",
   close
     (var("value",@{typ Capability}),
      call
        ("write'CAPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var("value",@{typ Capability}),lw(28,5)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("KCC",call("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(29,5),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'KCC",
   close
     (var("value",@{typ Capability}),
      call
        ("write'CAPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var("value",@{typ Capability}),lw(29,5)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("KDC",call("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(30,5),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'KDC",
   close
     (var("value",@{typ Capability}),
      call
        ("write'CAPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var("value",@{typ Capability}),lw(30,5)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("EPCC",call("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(31,5),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("write'EPCC",
   close
     (var("value",@{typ Capability}),
      call
        ("write'CAPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var("value",@{typ Capability}),lw(31,5)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("allow_system_reg_access",
   close
     (tp[var("p",@{typ Perms}),var_w("r",5)],
      ite(bop(And,bop(Uge,var_w("r",5),lw(27,5)),
              mop(Not,
                  call
                    ("Perms.Access_System_Registers",HOLogic.boolT,var("p",@{typ Perms}),@{theory}))),
          mu(lf,qTy),
          mb(mr(close
                  (var("s",qTy),call("state.CCallBranchDelay",HOLogic.boolT,var("s",qTy),@{theory}))),
             close
               (var_b"v",
                mb(mu(bop(And,eq(var_w("r",5),lw(26,5)),var_b"v"),qTy),
                   close(var_b"b",mu(mop(Not,var_b"b"),qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("ExceptionCode",
   close
     (var("e",@{typ ExceptionType}),
      cs(var("e",@{typ ExceptionType}),
         [(lc("Int","ExceptionType",@{theory}),lw(0,5)),
          (lc("Mod","ExceptionType",@{theory}),lw(1,5)),
          (lc("TLBL","ExceptionType",@{theory}),lw(2,5)),
          (lc("TLBS","ExceptionType",@{theory}),lw(3,5)),
          (lc("AdEL","ExceptionType",@{theory}),lw(4,5)),
          (lc("AdES","ExceptionType",@{theory}),lw(5,5)),
          (lc("Sys","ExceptionType",@{theory}),lw(8,5)),
          (lc("Bp","ExceptionType",@{theory}),lw(9,5)),
          (lc("ResI","ExceptionType",@{theory}),lw(10,5)),
          (lc("CpU","ExceptionType",@{theory}),lw(11,5)),
          (lc("Ov","ExceptionType",@{theory}),lw(12,5)),
          (lc("Tr","ExceptionType",@{theory}),lw(13,5)),
          (lc("CTLBL","ExceptionType",@{theory}),lw(16,5)),
          (lc("CTLBS","ExceptionType",@{theory}),lw(17,5)),
          (lc("C2E","ExceptionType",@{theory}),lw(18,5)),
          (lc("MCheck","ExceptionType",@{theory}),lw(24,5)),
          (lc("XTLBRefillL","ExceptionType",@{theory}),lw(2,5)),
          (lc("XTLBRefillS","ExceptionType",@{theory}),lw(3,5))],@{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("capExcCode",
   close
     (var("e",@{typ CapExceptionType}),
      cs(var("e",@{typ CapExceptionType}),
         [(lc("capExcNone","CapExceptionType",@{theory}),lw(0,8)),
          (lc("capExcLength","CapExceptionType",@{theory}),lw(1,8)),
          (lc("capExcTag","CapExceptionType",@{theory}),lw(2,8)),
          (lc("capExcSeal","CapExceptionType",@{theory}),lw(3,8)),
          (lc("capExcType","CapExceptionType",@{theory}),lw(4,8)),
          (lc("capExcCall","CapExceptionType",@{theory}),lw(5,8)),
          (lc("capExcRet","CapExceptionType",@{theory}),lw(6,8)),
          (lc("capExcUnderflowTSS","CapExceptionType",@{theory}),lw(7,8)),
          (lc("capExcUser","CapExceptionType",@{theory}),lw(8,8)),
          (lc("capExcTLBNoStore","CapExceptionType",@{theory}),lw(9,8)),
          (lc("capExcInexact","CapExceptionType",@{theory}),lw(10,8)),
          (lc("capExcGlobal","CapExceptionType",@{theory}),lw(16,8)),
          (lc("capExcPermExe","CapExceptionType",@{theory}),lw(17,8)),
          (lc("capExcPermLoad","CapExceptionType",@{theory}),lw(18,8)),
          (lc("capExcPermStore","CapExceptionType",@{theory}),lw(19,8)),
          (lc("capExcPermLoadCap","CapExceptionType",@{theory}),lw(20,8)),
          (lc("capExcPermStoreCap","CapExceptionType",@{theory}),lw(21,8)),
          (lc("capExcPermStoreLocalCap","CapExceptionType",@{theory}),lw(22,8)),
          (lc("capExcPermSeal","CapExceptionType",@{theory}),lw(23,8)),
          (lc("capExcAccessSysReg","CapExceptionType",@{theory}),lw(24,8)),
          (lc("capExcPermCCall","CapExceptionType",@{theory}),lw(25,8))],@{context})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SignalException",
   close
     (var("ExceptionType",@{typ ExceptionType}),
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),
                           qTy),
                        close
                          (var("v",@{typ StatusRegister}),
                           mu(call
                                ("StatusRegister.EXL",HOLogic.boolT,var("v",@{typ StatusRegister}),
                                 @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mb(const
                              ("BranchDelay",
                               @{typ "state \<Rightarrow> ((64 word option) \<times> state)"},
                               @{theory}),
                            close
                              (var("v",@{typ "64 word option"}),
                               mb(mb(mu(mop(IsSome,var("v",@{typ "64 word option"})),qTy),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",mu(lt,qTy),
                                            mb(mr(close
                                                    (var("s",qTy),
                                                     call
                                                       ("state.BranchDelayPCC",
                                                        @{typ
                                                        "(64 word \<times> Capability) option"},
                                                        var("s",qTy),@{theory}))),
                                               close
                                                 (var("v",
                                                      @{typ "(64 word \<times> Capability) option"}),
                                                  mu(mop(IsSome,
                                                         var("v",
                                                             @{typ
                                                             "(64 word \<times> Capability) option"})),
                                                     qTy)))))),
                                  close
                                    (var_b"b",
                                     ite(var_b"b",
                                         mb(const
                                              ("CP0",
                                               @{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                               @{theory}),
                                            close
                                              (var("v",@{typ CP0}),
                                               mb(mb(const
                                                       ("PC",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (64 word \<times> state)"},@{theory}),
                                                     close
                                                       (var_w("v0",64),
                                                        mb(mb(mb(mu(bop(Sub,var_w("v0",64),lw(4,64)),
                                                                    qTy),
                                                                 close
                                                                   (var_w("v0",64),
                                                                    mu(tp[var("v",@{typ CP0}),
                                                                          var_w("v0",64)],qTy))),
                                                              close
                                                                (var("v",
                                                                     @{typ "CP0 \<times> 64 word"}),
                                                                 mu(rupd
                                                                      ("CP0.EPC",
                                                                       var("v",
                                                                           @{typ
                                                                           "CP0 \<times> 64 word"}),
                                                                       @{theory}),qTy))),
                                                           close
                                                             (var("v",@{typ CP0}),
                                                              call
                                                                ("write'CP0",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 var("v",@{typ CP0}),@{theory}))))),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mb(const
                                                          ("CP0",
                                                           @{typ
                                                           "state \<Rightarrow> (CP0 \<times> state)"},
                                                           @{theory}),
                                                        close
                                                          (var("x",@{typ CP0}),
                                                           call
                                                             ("write'CP0",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              rupd
                                                                ("CP0.Cause",
                                                                 tp[var("x",@{typ CP0}),
                                                                    rupd
                                                                      ("CauseRegister.BD",
                                                                       tp[call
                                                                            ("CP0.Cause",
                                                                             @{typ CauseRegister},
                                                                             var("x",@{typ CP0}),
                                                                             @{theory}),lt],
                                                                       @{theory})],@{theory}),
                                                              @{theory}))))))),
                                         mb(const
                                              ("CP0",
                                               @{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                               @{theory}),
                                            close
                                              (var("v",@{typ CP0}),
                                               mb(mb(const
                                                       ("PC",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (64 word \<times> state)"},@{theory}),
                                                     close
                                                       (var_w("v0",64),
                                                        mb(mb(mu(tp[var("v",@{typ CP0}),
                                                                    var_w("v0",64)],qTy),
                                                              close
                                                                (var("v",
                                                                     @{typ "CP0 \<times> 64 word"}),
                                                                 mu(rupd
                                                                      ("CP0.EPC",
                                                                       var("v",
                                                                           @{typ
                                                                           "CP0 \<times> 64 word"}),
                                                                       @{theory}),qTy))),
                                                           close
                                                             (var("v",@{typ CP0}),
                                                              call
                                                                ("write'CP0",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 var("v",@{typ CP0}),@{theory}))))),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mb(const
                                                          ("CP0",
                                                           @{typ
                                                           "state \<Rightarrow> (CP0 \<times> state)"},
                                                           @{theory}),
                                                        close
                                                          (var("x",@{typ CP0}),
                                                           call
                                                             ("write'CP0",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              rupd
                                                                ("CP0.Cause",
                                                                 tp[var("x",@{typ CP0}),
                                                                    rupd
                                                                      ("CauseRegister.BD",
                                                                       tp[call
                                                                            ("CP0.Cause",
                                                                             @{typ CauseRegister},
                                                                             var("x",@{typ CP0}),
                                                                             @{theory}),lf],
                                                                       @{theory})],@{theory}),
                                                              @{theory})))))))))))),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(ite(bop(Or,
                             eq(var("ExceptionType",@{typ ExceptionType}),
                                lc("XTLBRefillL","ExceptionType",@{theory})),
                             eq(var("ExceptionType",@{typ ExceptionType}),
                                lc("XTLBRefillS","ExceptionType",@{theory}))),
                         mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                            close
                              (var("v",@{typ CP0}),
                               mb(mb(mu(call
                                          ("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),
                                           @{theory}),qTy),
                                     close
                                       (var("v",@{typ StatusRegister}),
                                        mu(call
                                             ("StatusRegister.EXL",HOLogic.boolT,
                                              var("v",@{typ StatusRegister}),@{theory}),qTy))),
                                  close(var_b"v",mu(mop(Not,var_b"v"),qTy))))),mu(lf,qTy)),
                     close
                       (var_b"v",
                        mb(ite(var_b"v",mu(lw(128,30),qTy),
                               mb(ite(eq(var("ExceptionType",@{typ ExceptionType}),
                                         lc("C2E","ExceptionType",@{theory})),
                                      mb(mr(close
                                              (var("s",qTy),
                                               call
                                                 ("state.capcause",@{typ CapCause},var("s",qTy),
                                                  @{theory}))),
                                         close
                                           (var("v",@{typ CapCause}),
                                            mb(mb(mu(call
                                                       ("CapCause.ExcCode",w8,
                                                        var("v",@{typ CapCause}),@{theory}),qTy),
                                                  close
                                                    (var_w("v",8),mu(eq(var_w("v",8),lw(5,8)),qTy))),
                                               close
                                                 (var_b"b",
                                                  ite(var_b"b",mu(lt,qTy),
                                                      mb(mr(close
                                                              (var("s",qTy),
                                                               call
                                                                 ("state.capcause",@{typ CapCause},
                                                                  var("s",qTy),@{theory}))),
                                                         close
                                                           (var("v",@{typ CapCause}),
                                                            mb(mu(call
                                                                    ("CapCause.ExcCode",w8,
                                                                     var("v",@{typ CapCause}),
                                                                     @{theory}),qTy),
                                                               close
                                                                 (var_w("v",8),
                                                                  mu(eq(var_w("v",8),lw(6,8)),qTy)))))))))),
                                      mu(lf,qTy)),
                                  close(var_b"b",mu(ite(var_b"b",lw(640,30),lw(384,30)),qTy)))),
                           close
                             (var_w("vectorOffset",30),
                              mb(mr(close
                                      (var("s",qTy),
                                       call
                                         ("state.currentInst",@{typ "32 word option"},var("s",qTy),
                                          @{theory}))),
                                 close
                                   (var("v",@{typ "32 word option"}),
                                    mb(mb(mu(mop(IsSome,var("v",@{typ "32 word option"})),qTy),
                                          close
                                            (var_b"b",
                                             ite(var_b"b",
                                                 mb(const
                                                      ("CP0",
                                                       @{typ
                                                       "state \<Rightarrow> (CP0 \<times> state)"},
                                                       @{theory}),
                                                    close
                                                      (var("x",@{typ CP0}),
                                                       mb(mr(close
                                                               (var("s",qTy),
                                                                call
                                                                  ("state.currentInst",
                                                                   @{typ "32 word option"},
                                                                   var("s",qTy),@{theory}))),
                                                          close
                                                            (var("v",@{typ "32 word option"}),
                                                             mb(mb(mb(mu(mop(ValOf,
                                                                             var("v",
                                                                                 @{typ
                                                                                 "32 word option"})),
                                                                         qTy),
                                                                      close
                                                                        (var_w("v",32),
                                                                         mu(tp[var("x",@{typ CP0}),
                                                                               var_w("v",32)],qTy))),
                                                                   close
                                                                     (var("v",
                                                                          @{typ
                                                                          "CP0 \<times> 32 word"}),
                                                                      mu(rupd
                                                                           ("CP0.EInstr",
                                                                            var("v",
                                                                                @{typ
                                                                                "CP0 \<times>
                                                                                 32 word"}),
                                                                            @{theory}),qTy))),
                                                                close
                                                                  (var("v",@{typ CP0}),
                                                                   call
                                                                     ("write'CP0",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (unit \<times> state)"},
                                                                      var("v",@{typ CP0}),@{theory}))))))),
                                                 mu(lu,qTy)))),
                                       close
                                         (var_a HOLogic.unitT,
                                          mb(const
                                               ("CP0",
                                                @{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                                @{theory}),
                                             close
                                               (var("v",@{typ CP0}),
                                                mb(call
                                                     ("write'CP0",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      rupd
                                                        ("CP0.Cause",
                                                         tp[var("v",@{typ CP0}),
                                                            rupd
                                                              ("CauseRegister.ExcCode",
                                                               tp[call
                                                                    ("CP0.Cause",
                                                                     @{typ CauseRegister},
                                                                     var("v",@{typ CP0}),@{theory}),
                                                                  call
                                                                    ("ExceptionCode",
                                                                     (Word_Lib.mk_wordT 5),
                                                                     var("ExceptionType",
                                                                         @{typ ExceptionType}),
                                                                     @{theory})],@{theory})],
                                                         @{theory}),@{theory}),
                                                   close
                                                     (var_a HOLogic.unitT,
                                                      mb(const
                                                           ("CP0",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (CP0 \<times> state)"},@{theory}),
                                                         close
                                                           (var("v",@{typ CP0}),
                                                            mb(mb(mb(mu(call
                                                                          ("CP0.Status",
                                                                           @{typ StatusRegister},
                                                                           var("v",@{typ CP0}),
                                                                           @{theory}),qTy),
                                                                     close
                                                                       (var("v",
                                                                            @{typ StatusRegister}),
                                                                        mu(call
                                                                             ("StatusRegister.BEV",
                                                                              HOLogic.boolT,
                                                                              var("v",
                                                                                  @{typ StatusRegister}),
                                                                              @{theory}),qTy))),
                                                                  close
                                                                    (var_b"b",
                                                                     mu(ite(var_b"b",
                                                                            lw(18446744072631616000,
                                                                               64),
                                                                            lw(18446744071562067968,
                                                                               64)),qTy))),
                                                               close
                                                                 (var_w("vectorBase",64),
                                                                  mb(call
                                                                       ("write'BranchDelay",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        lo w64,@{theory}),
                                                                     close
                                                                       (var_a HOLogic.unitT,
                                                                        mb(call
                                                                             ("write'BranchTo",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (unit \<times> state)"},
                                                                              lo w64,@{theory}),
                                                                           close
                                                                             (var_a HOLogic.unitT,
                                                                              mb(mw(close
                                                                                      (var("s",qTy),
                                                                                       rupd
                                                                                         ("state.BranchDelayPCC",
                                                                                          tp[var("s",
                                                                                                 qTy),
                                                                                             lo(@{typ
                                                                                                "64 word \<times>
                                                                                                 Capability"})],
                                                                                          @{theory}))),
                                                                                 close
                                                                                   (var_a
                                                                                      HOLogic.unitT,
                                                                                    mb(mw(close
                                                                                            (var("s",
                                                                                                 qTy),
                                                                                             rupd
                                                                                               ("state.BranchToPCC",
                                                                                                tp[var("s",
                                                                                                       qTy),
                                                                                                   lo(@{typ
                                                                                                      "64 word \<times>
                                                                                                       Capability"})],
                                                                                                @{theory}))),
                                                                                       close
                                                                                         (var_a
                                                                                            HOLogic.unitT,
                                                                                          mb(call
                                                                                               ("write'exceptionSignalled",
                                                                                                @{typ
                                                                                                "state \<Rightarrow>
                                                                                                 (unit \<times>
                                                                                                  state)"},
                                                                                                lt,
                                                                                                @{theory}),
                                                                                             close
                                                                                               (var_a
                                                                                                  HOLogic.unitT,
                                                                                                mb(const
                                                                                                     ("PCC",
                                                                                                      @{typ
                                                                                                      "state \<Rightarrow>
                                                                                                       (Capability \<times>
                                                                                                        state)"},
                                                                                                      @{theory}),
                                                                                                   close
                                                                                                     (var("v",
                                                                                                          @{typ Capability}),
                                                                                                      mn(var("v",
                                                                                                             @{typ Capability}),
                                                                                                         mb(md(const
                                                                                                                 ("PCC",
                                                                                                                  @{typ
                                                                                                                  "state \<Rightarrow>
                                                                                                                   (Capability \<times>
                                                                                                                    state)"},
                                                                                                                  @{theory}),
                                                                                                               @{typ Capability}),
                                                                                                            close
                                                                                                              (var("v",
                                                                                                                   @{typ Capability}),
                                                                                                               mb(mb(mb(mb(mb(md(const
                                                                                                                                   ("PC",
                                                                                                                                    @{typ
                                                                                                                                    "state \<Rightarrow>
                                                                                                                                     (64 word \<times>
                                                                                                                                      state)"},
                                                                                                                                    @{theory}),
                                                                                                                                 @{typ Capability}),
                                                                                                                              close
                                                                                                                                (var_w("v0",64),
                                                                                                                                 mu(tp[var("v",
                                                                                                                                           @{typ Capability}),
                                                                                                                                       var_w("v0",64)],
                                                                                                                                    @{typ
                                                                                                                                    "Capability \<times>
                                                                                                                                     state"}))),
                                                                                                                           close
                                                                                                                             (var("v",
                                                                                                                                  @{typ
                                                                                                                                  "Capability \<times>
                                                                                                                                   64 word"}),
                                                                                                                              mu(call
                                                                                                                                   ("canRepOffset",
                                                                                                                                    HOLogic.boolT,
                                                                                                                                    var("v",
                                                                                                                                        @{typ
                                                                                                                                        "Capability \<times>
                                                                                                                                         64 word"}),
                                                                                                                                    @{theory}),
                                                                                                                                 @{typ
                                                                                                                                 "Capability \<times>
                                                                                                                                  state"}))),
                                                                                                                        close
                                                                                                                          (var_b"v",
                                                                                                                           mu(mop(Not,
                                                                                                                                  var_b"v"),
                                                                                                                              @{typ
                                                                                                                              "Capability \<times>
                                                                                                                               state"}))),
                                                                                                                     close
                                                                                                                       (var_b"b",
                                                                                                                        ite(var_b"b",
                                                                                                                            mb(md(const
                                                                                                                                    ("PCC",
                                                                                                                                     @{typ
                                                                                                                                     "state \<Rightarrow>
                                                                                                                                      (Capability \<times>
                                                                                                                                       state)"},
                                                                                                                                     @{theory}),
                                                                                                                                  @{typ Capability}),
                                                                                                                               close
                                                                                                                                 (var("v",
                                                                                                                                      @{typ Capability}),
                                                                                                                                  mb(mb(mb(mb(mu(call
                                                                                                                                                   ("getBase",
                                                                                                                                                    w64,
                                                                                                                                                    var("v",
                                                                                                                                                        @{typ Capability}),
                                                                                                                                                    @{theory}),
                                                                                                                                                 @{typ
                                                                                                                                                 "Capability \<times>
                                                                                                                                                  state"}),
                                                                                                                                              close
                                                                                                                                                (var_w("v",64),
                                                                                                                                                 mb(md(const
                                                                                                                                                         ("PC",
                                                                                                                                                          @{typ
                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                           (64 word \<times>
                                                                                                                                                            state)"},
                                                                                                                                                          @{theory}),
                                                                                                                                                       @{typ Capability}),
                                                                                                                                                    close
                                                                                                                                                      (var_w("v0",64),
                                                                                                                                                       mu(bop(Add,
                                                                                                                                                              var_w("v",64),
                                                                                                                                                              var_w("v0",64)),
                                                                                                                                                          @{typ
                                                                                                                                                          "Capability \<times>
                                                                                                                                                           state"}))))),
                                                                                                                                           close
                                                                                                                                             (var_w("v",64),
                                                                                                                                              mu(tp[const
                                                                                                                                                      ("nullCap",
                                                                                                                                                       @{typ Capability},
                                                                                                                                                       @{theory}),
                                                                                                                                                    var_w("v",64)],
                                                                                                                                                 @{typ
                                                                                                                                                 "Capability \<times>
                                                                                                                                                  state"}))),
                                                                                                                                        close
                                                                                                                                          (var("v",
                                                                                                                                               @{typ
                                                                                                                                               "Capability \<times>
                                                                                                                                                64 word"}),
                                                                                                                                           mu(call
                                                                                                                                                ("setOffset",
                                                                                                                                                 @{typ Capability},
                                                                                                                                                 var("v",
                                                                                                                                                     @{typ
                                                                                                                                                     "Capability \<times>
                                                                                                                                                      64 word"}),
                                                                                                                                                 @{theory}),
                                                                                                                                              @{typ
                                                                                                                                              "Capability \<times>
                                                                                                                                               state"}))),
                                                                                                                                     close
                                                                                                                                       (var("v",
                                                                                                                                            @{typ Capability}),
                                                                                                                                        mw(close
                                                                                                                                             (var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "Capability \<times>
                                                                                                                                                   state"}),
                                                                                                                                              tp[var("v",
                                                                                                                                                     @{typ Capability}),
                                                                                                                                                 mop(Snd,
                                                                                                                                                     var("s",
                                                                                                                                                         @{typ
                                                                                                                                                         "Capability \<times>
                                                                                                                                                          state"}))])))))),
                                                                                                                            mb(mr(close
                                                                                                                                    (var("s",
                                                                                                                                         @{typ
                                                                                                                                         "Capability \<times>
                                                                                                                                          state"}),
                                                                                                                                     mop(Fst,
                                                                                                                                         var("s",
                                                                                                                                             @{typ
                                                                                                                                             "Capability \<times>
                                                                                                                                              state"})))),
                                                                                                                               close
                                                                                                                                 (var("v",
                                                                                                                                      @{typ Capability}),
                                                                                                                                  mb(mb(mb(md(const
                                                                                                                                                ("PC",
                                                                                                                                                 @{typ
                                                                                                                                                 "state \<Rightarrow>
                                                                                                                                                  (64 word \<times>
                                                                                                                                                   state)"},
                                                                                                                                                 @{theory}),
                                                                                                                                              @{typ Capability}),
                                                                                                                                           close
                                                                                                                                             (var_w("v0",64),
                                                                                                                                              mu(tp[var("v",
                                                                                                                                                        @{typ Capability}),
                                                                                                                                                    var_w("v0",64)],
                                                                                                                                                 @{typ
                                                                                                                                                 "Capability \<times>
                                                                                                                                                  state"}))),
                                                                                                                                        close
                                                                                                                                          (var("v",
                                                                                                                                               @{typ
                                                                                                                                               "Capability \<times>
                                                                                                                                                64 word"}),
                                                                                                                                           mu(call
                                                                                                                                                ("setOffset",
                                                                                                                                                 @{typ Capability},
                                                                                                                                                 var("v",
                                                                                                                                                     @{typ
                                                                                                                                                     "Capability \<times>
                                                                                                                                                      64 word"}),
                                                                                                                                                 @{theory}),
                                                                                                                                              @{typ
                                                                                                                                              "Capability \<times>
                                                                                                                                               state"}))),
                                                                                                                                     close
                                                                                                                                       (var("v",
                                                                                                                                            @{typ Capability}),
                                                                                                                                        mw(close
                                                                                                                                             (var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "Capability \<times>
                                                                                                                                                   state"}),
                                                                                                                                              tp[var("v",
                                                                                                                                                     @{typ Capability}),
                                                                                                                                                 mop(Snd,
                                                                                                                                                     var("s",
                                                                                                                                                         @{typ
                                                                                                                                                         "Capability \<times>
                                                                                                                                                          state"}))]))))))))),
                                                                                                                  close
                                                                                                                    (var_a
                                                                                                                       HOLogic.unitT,
                                                                                                                     mb(md(const
                                                                                                                             ("CP0",
                                                                                                                              @{typ
                                                                                                                              "state \<Rightarrow>
                                                                                                                               (CP0 \<times>
                                                                                                                                state)"},
                                                                                                                              @{theory}),
                                                                                                                           @{typ Capability}),
                                                                                                                        close
                                                                                                                          (var("v",
                                                                                                                               @{typ CP0}),
                                                                                                                           mb(mb(mb(mb(mu(call
                                                                                                                                            ("CP0.Status",
                                                                                                                                             @{typ StatusRegister},
                                                                                                                                             var("v",
                                                                                                                                                 @{typ CP0}),
                                                                                                                                             @{theory}),
                                                                                                                                          @{typ
                                                                                                                                          "Capability \<times>
                                                                                                                                           state"}),
                                                                                                                                       close
                                                                                                                                         (var("v",
                                                                                                                                              @{typ StatusRegister}),
                                                                                                                                          mu(call
                                                                                                                                               ("StatusRegister.EXL",
                                                                                                                                                HOLogic.boolT,
                                                                                                                                                var("v",
                                                                                                                                                    @{typ StatusRegister}),
                                                                                                                                                @{theory}),
                                                                                                                                             @{typ
                                                                                                                                             "Capability \<times>
                                                                                                                                              state"}))),
                                                                                                                                    close
                                                                                                                                      (var_b"v",
                                                                                                                                       mu(mop(Not,
                                                                                                                                              var_b"v"),
                                                                                                                                          @{typ
                                                                                                                                          "Capability \<times>
                                                                                                                                           state"}))),
                                                                                                                                 close
                                                                                                                                   (var_b"b",
                                                                                                                                    ite(var_b"b",
                                                                                                                                        mb(mr(close
                                                                                                                                                (var("s",
                                                                                                                                                     @{typ
                                                                                                                                                     "Capability \<times>
                                                                                                                                                      state"}),
                                                                                                                                                 mop(Fst,
                                                                                                                                                     var("s",
                                                                                                                                                         @{typ
                                                                                                                                                         "Capability \<times>
                                                                                                                                                          state"})))),
                                                                                                                                           close
                                                                                                                                             (var("v",
                                                                                                                                                  @{typ Capability}),
                                                                                                                                              md(call
                                                                                                                                                   ("write'EPCC",
                                                                                                                                                    @{typ
                                                                                                                                                    "state \<Rightarrow>
                                                                                                                                                     (unit \<times>
                                                                                                                                                      state)"},
                                                                                                                                                    var("v",
                                                                                                                                                        @{typ Capability}),
                                                                                                                                                    @{theory}),
                                                                                                                                                 @{typ Capability}))),
                                                                                                                                        mu(lu,
                                                                                                                                           @{typ
                                                                                                                                           "Capability \<times>
                                                                                                                                            state"})))),
                                                                                                                              close
                                                                                                                                (var_a
                                                                                                                                   HOLogic.unitT,
                                                                                                                                 mb(md(const
                                                                                                                                         ("KCC",
                                                                                                                                          @{typ
                                                                                                                                          "state \<Rightarrow>
                                                                                                                                           (Capability \<times>
                                                                                                                                            state)"},
                                                                                                                                          @{theory}),
                                                                                                                                       @{typ Capability}),
                                                                                                                                    close
                                                                                                                                      (var("v",
                                                                                                                                           @{typ Capability}),
                                                                                                                                       mb(md(call
                                                                                                                                               ("write'PCC",
                                                                                                                                                @{typ
                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                 (unit \<times>
                                                                                                                                                  state)"},
                                                                                                                                                var("v",
                                                                                                                                                    @{typ Capability}),
                                                                                                                                                @{theory}),
                                                                                                                                             @{typ Capability}),
                                                                                                                                          close
                                                                                                                                            (var_a
                                                                                                                                               HOLogic.unitT,
                                                                                                                                             mb(md(const
                                                                                                                                                     ("PCC",
                                                                                                                                                      @{typ
                                                                                                                                                      "state \<Rightarrow>
                                                                                                                                                       (Capability \<times>
                                                                                                                                                        state)"},
                                                                                                                                                      @{theory}),
                                                                                                                                                   @{typ Capability}),
                                                                                                                                                close
                                                                                                                                                  (var("v",
                                                                                                                                                       @{typ Capability}),
                                                                                                                                                   mb(mb(mb(mu(call
                                                                                                                                                                 ("getBase",
                                                                                                                                                                  w64,
                                                                                                                                                                  var("v",
                                                                                                                                                                      @{typ Capability}),
                                                                                                                                                                  @{theory}),
                                                                                                                                                               @{typ
                                                                                                                                                               "Capability \<times>
                                                                                                                                                                state"}),
                                                                                                                                                            close
                                                                                                                                                              (var_w("v",64),
                                                                                                                                                               mu(bop(Sub,
                                                                                                                                                                      cc[ex(var_w("vectorBase",64),
                                                                                                                                                                            ln
                                                                                                                                                                             63,
                                                                                                                                                                            ln
                                                                                                                                                                             30,
                                                                                                                                                                            (Word_Lib.mk_wordT 34)),
                                                                                                                                                                         bop(Add,
                                                                                                                                                                             ex(var_w("vectorBase",64),
                                                                                                                                                                                ln
                                                                                                                                                                                 29,
                                                                                                                                                                                ln
                                                                                                                                                                                 0,
                                                                                                                                                                                (Word_Lib.mk_wordT 30)),
                                                                                                                                                                             var_w("vectorOffset",30))],
                                                                                                                                                                      var_w("v",64)),
                                                                                                                                                                  @{typ
                                                                                                                                                                  "Capability \<times>
                                                                                                                                                                   state"}))),
                                                                                                                                                         close
                                                                                                                                                           (var_w("v",64),
                                                                                                                                                            md(call
                                                                                                                                                                 ("write'PC",
                                                                                                                                                                  @{typ
                                                                                                                                                                  "state \<Rightarrow>
                                                                                                                                                                   (unit \<times>
                                                                                                                                                                    state)"},
                                                                                                                                                                  var_w("v",64),
                                                                                                                                                                  @{theory}),
                                                                                                                                                               @{typ Capability}))),
                                                                                                                                                      close
                                                                                                                                                        (var_a
                                                                                                                                                           HOLogic.unitT,
                                                                                                                                                         mb(md(const
                                                                                                                                                                 ("CP0",
                                                                                                                                                                  @{typ
                                                                                                                                                                  "state \<Rightarrow>
                                                                                                                                                                   (CP0 \<times>
                                                                                                                                                                    state)"},
                                                                                                                                                                  @{theory}),
                                                                                                                                                               @{typ Capability}),
                                                                                                                                                            close
                                                                                                                                                              (var("v",
                                                                                                                                                                   @{typ CP0}),
                                                                                                                                                               mb(md(call
                                                                                                                                                                       ("write'CP0",
                                                                                                                                                                        @{typ
                                                                                                                                                                        "state \<Rightarrow>
                                                                                                                                                                         (unit \<times>
                                                                                                                                                                          state)"},
                                                                                                                                                                        rupd
                                                                                                                                                                          ("CP0.Status",
                                                                                                                                                                           tp[var("v",
                                                                                                                                                                                  @{typ CP0}),
                                                                                                                                                                              rupd
                                                                                                                                                                                ("StatusRegister.EXL",
                                                                                                                                                                                 tp[call
                                                                                                                                                                                      ("CP0.Status",
                                                                                                                                                                                       @{typ StatusRegister},
                                                                                                                                                                                       var("v",
                                                                                                                                                                                           @{typ CP0}),
                                                                                                                                                                                       @{theory}),
                                                                                                                                                                                    lt],
                                                                                                                                                                                 @{theory})],
                                                                                                                                                                           @{theory}),
                                                                                                                                                                        @{theory}),
                                                                                                                                                                     @{typ Capability}),
                                                                                                                                                                  close
                                                                                                                                                                    (var_a
                                                                                                                                                                       HOLogic.unitT,
                                                                                                                                                                     mu(lu,
                                                                                                                                                                        @{typ
                                                                                                                                                                        "Capability \<times>
                                                                                                                                                                         state"}))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SignalCP1UnusableException",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(call
              ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
               rupd
                 ("CP0.Cause",
                  tp[var("v",@{typ CP0}),
                     rupd
                       ("CauseRegister.CE",
                        tp[call("CP0.Cause",@{typ CauseRegister},var("v",@{typ CP0}),@{theory}),
                           lw(1,2)],@{theory})],@{theory}),@{theory}),
            close
              (var_a HOLogic.unitT,
               call
                 ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                  lc("CpU","ExceptionType",@{theory}),@{theory}))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SignalCP2UnusableException",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(call
              ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
               rupd
                 ("CP0.Cause",
                  tp[var("v",@{typ CP0}),
                     rupd
                       ("CauseRegister.CE",
                        tp[call("CP0.Cause",@{typ CauseRegister},var("v",@{typ CP0}),@{theory}),
                           lw(2,2)],@{theory})],@{theory}),@{theory}),
            close
              (var_a HOLogic.unitT,
               call
                 ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                  lc("CpU","ExceptionType",@{theory}),@{theory}))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SignalCapException_internal",
   close
     (tp[var("capException",@{typ CapExceptionType}),var_w("regNum",8)],
      mb(mr(close(var("s",qTy),call("state.capcause",@{typ CapCause},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ CapCause}),
            mb(mb(mb(mu(tp[var("v",@{typ CapCause}),
                           call
                             ("capExcCode",w8,var("capException",@{typ CapExceptionType}),@{theory})],
                        qTy),
                     close
                       (var("v",@{typ "CapCause \<times> 8 word"}),
                        mu(rupd
                             ("CapCause.ExcCode",var("v",@{typ "CapCause \<times> 8 word"}),
                              @{theory}),qTy))),
                  close
                    (var("v",@{typ CapCause}),
                     mw(close
                          (var("s",qTy),
                           rupd
                             ("state.capcause",tp[var("s",qTy),var("v",@{typ CapCause})],@{theory}))))),
               close
                 (var_a HOLogic.unitT,
                  mb(mr(close
                          (var("s",qTy),
                           call("state.capcause",@{typ CapCause},var("s",qTy),@{theory}))),
                     close
                       (var("v",@{typ CapCause}),
                        mb(mb(mb(mu(tp[var("v",@{typ CapCause}),var_w("regNum",8)],qTy),
                                 close
                                   (var("v",@{typ "CapCause \<times> 8 word"}),
                                    mu(rupd
                                         ("CapCause.RegNum",
                                          var("v",@{typ "CapCause \<times> 8 word"}),@{theory}),qTy))),
                              close
                                (var("v",@{typ CapCause}),
                                 mw(close
                                      (var("s",qTy),
                                       rupd
                                         ("state.capcause",
                                          tp[var("s",qTy),var("v",@{typ CapCause})],@{theory}))))),
                           close
                             (var_a HOLogic.unitT,
                              call
                                ("SignalException",
                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                 lc("C2E","ExceptionType",@{theory}),@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SignalCapException",
   close
     (tp[var("capException",@{typ CapExceptionType}),var_w("regNum",5)],
      call
        ("SignalCapException_internal",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var("capException",@{typ CapExceptionType}),mop(Cast w8,var_w("regNum",5))],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SignalCapException_noReg",
   close
     (var("capException",@{typ CapExceptionType}),
      call
        ("SignalCapException_internal",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var("capException",@{typ CapExceptionType}),lw(255,8)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ERET",
   mb(const("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
      close
        (var_a HOLogic.unitT,
         mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
            close
              (var("v",@{typ CP0}),
               mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),
                           qTy),
                        close
                          (var("v",@{typ StatusRegister}),
                           mu(call
                                ("StatusRegister.CU0",HOLogic.boolT,var("v",@{typ StatusRegister}),
                                 @{theory}),qTy))),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            const
                              ("KernelMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                               @{theory})))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                            close
                              (var("v",@{typ CP0}),
                               mb(mb(mb(mu(call
                                             ("CP0.Status",@{typ StatusRegister},
                                              var("v",@{typ CP0}),@{theory}),qTy),
                                        close
                                          (var("v",@{typ StatusRegister}),
                                           mu(call
                                                ("StatusRegister.ERL",HOLogic.boolT,
                                                 var("v",@{typ StatusRegister}),@{theory}),qTy))),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            mb(const
                                                 ("CP0",
                                                  @{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                                  @{theory}),
                                               close
                                                 (var("v",@{typ CP0}),
                                                  mb(mb(mb(mu(call
                                                                ("CP0.ErrorEPC",w64,
                                                                 var("v",@{typ CP0}),@{theory}),qTy),
                                                           close
                                                             (var_w("v",64),
                                                              mu(bop(Sub,var_w("v",64),lw(4,64)),qTy))),
                                                        close
                                                          (var_w("v",64),
                                                           call
                                                             ("write'PC",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              var_w("v",64),@{theory}))),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mb(const
                                                             ("CP0",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (CP0 \<times> state)"},@{theory}),
                                                           close
                                                             (var("x",@{typ CP0}),
                                                              call
                                                                ("write'CP0",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 rupd
                                                                   ("CP0.Status",
                                                                    tp[var("x",@{typ CP0}),
                                                                       rupd
                                                                         ("StatusRegister.ERL",
                                                                          tp[call
                                                                               ("CP0.Status",
                                                                                @{typ StatusRegister},
                                                                                var("x",@{typ CP0}),
                                                                                @{theory}),lf],
                                                                          @{theory})],@{theory}),
                                                                 @{theory}))))))),
                                            mb(const
                                                 ("CP0",
                                                  @{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                                  @{theory}),
                                               close
                                                 (var("v",@{typ CP0}),
                                                  mb(mb(mb(mu(call
                                                                ("CP0.EPC",w64,var("v",@{typ CP0}),
                                                                 @{theory}),qTy),
                                                           close
                                                             (var_w("v",64),
                                                              mu(bop(Sub,var_w("v",64),lw(4,64)),qTy))),
                                                        close
                                                          (var_w("v",64),
                                                           call
                                                             ("write'PC",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              var_w("v",64),@{theory}))),
                                                     close
                                                       (var_a HOLogic.unitT,
                                                        mb(const
                                                             ("CP0",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (CP0 \<times> state)"},@{theory}),
                                                           close
                                                             (var("x",@{typ CP0}),
                                                              call
                                                                ("write'CP0",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 rupd
                                                                   ("CP0.Status",
                                                                    tp[var("x",@{typ CP0}),
                                                                       rupd
                                                                         ("StatusRegister.EXL",
                                                                          tp[call
                                                                               ("CP0.Status",
                                                                                @{typ StatusRegister},
                                                                                var("x",@{typ CP0}),
                                                                                @{theory}),lf],
                                                                          @{theory})],@{theory}),
                                                                 @{theory})))))))))),
                                  close
                                    (var_a HOLogic.unitT,
                                     mb(call
                                          ("write'LLbit",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           mop(Some,lf),@{theory}),
                                        close
                                          (var_a HOLogic.unitT,
                                           mb(const
                                                ("EPCC",
                                                 @{typ
                                                 "state \<Rightarrow> (Capability \<times> state)"},
                                                 @{theory}),
                                              close
                                                (var("v",@{typ Capability}),
                                                 call
                                                   ("write'PCC",
                                                    @{typ
                                                    "state \<Rightarrow> (unit \<times> state)"},
                                                    var("v",@{typ Capability}),@{theory}))))))))),
                         call
                           ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            lc("CpU","ExceptionType",@{theory}),@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("TLBAssocEntries",ln 16)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("TLBDirectEntries",ln 256)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("TLBEntries",
   bop(Add,const("TLBAssocEntries",HOLogic.natT,@{theory}),
       const("TLBDirectEntries",HOLogic.natT,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TLB_direct",
   close
     (var_w("i",8),
      mb(mr(close
              (var("s",qTy),
               call
                 ("state.c_TLB_direct",@{typ "8 word \<Rightarrow> (TLBEntry option)"},var("s",qTy),
                  @{theory}))),
         close
           (var("v",@{typ "8 word \<Rightarrow> (TLBEntry option)"}),
            mu(apply(var("v",@{typ "8 word \<Rightarrow> (TLBEntry option)"}),var_w("i",8)),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'TLB_direct",
   close
     (tp[var("value",@{typ "TLBEntry option"}),var_w("i",8)],
      mb(mr(close
              (var("s",qTy),
               call
                 ("state.c_TLB_direct",@{typ "8 word \<Rightarrow> (TLBEntry option)"},var("s",qTy),
                  @{theory}))),
         close
           (var("v",@{typ "8 word \<Rightarrow> (TLBEntry option)"}),
            mb(mu(fupd
                    (var("v",@{typ "8 word \<Rightarrow> (TLBEntry option)"}),var_w("i",8),
                     var("value",@{typ "TLBEntry option"})),qTy),
               close
                 (var("v",@{typ "8 word \<Rightarrow> (TLBEntry option)"}),
                  mw(close
                       (var("s",qTy),
                        rupd
                          ("state.c_TLB_direct",
                           tp[var("s",qTy),var("v",@{typ "8 word \<Rightarrow> (TLBEntry option)"})],
                           @{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("TLB_assoc",
   close
     (var_w("i",4),
      mb(mr(close
              (var("s",qTy),
               call
                 ("state.c_TLB_assoc",@{typ "4 word \<Rightarrow> (TLBEntry option)"},var("s",qTy),
                  @{theory}))),
         close
           (var("v",@{typ "4 word \<Rightarrow> (TLBEntry option)"}),
            mu(apply(var("v",@{typ "4 word \<Rightarrow> (TLBEntry option)"}),var_w("i",4)),qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'TLB_assoc",
   close
     (tp[var("value",@{typ "TLBEntry option"}),var_w("i",4)],
      mb(mr(close
              (var("s",qTy),
               call
                 ("state.c_TLB_assoc",@{typ "4 word \<Rightarrow> (TLBEntry option)"},var("s",qTy),
                  @{theory}))),
         close
           (var("v",@{typ "4 word \<Rightarrow> (TLBEntry option)"}),
            mb(mu(fupd
                    (var("v",@{typ "4 word \<Rightarrow> (TLBEntry option)"}),var_w("i",4),
                     var("value",@{typ "TLBEntry option"})),qTy),
               close
                 (var("v",@{typ "4 word \<Rightarrow> (TLBEntry option)"}),
                  mw(close
                       (var("s",qTy),
                        rupd
                          ("state.c_TLB_assoc",
                           tp[var("s",qTy),var("v",@{typ "4 word \<Rightarrow> (TLBEntry option)"})],
                           @{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("switchCoreTLB",
   close
     (var_w("i",8),
      mb(mr(close
              (var("s",qTy),
               call
                 ("state.all_TLB_direct",
                  @{typ "8 word \<Rightarrow> (8 word \<Rightarrow> (TLBEntry option))"},
                  var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "8 word \<Rightarrow> (8 word \<Rightarrow> (TLBEntry option))"}),
            mb(mb(mb(mr(close(var("s",qTy),call("state.procID",w8,var("s",qTy),@{theory}))),
                     close
                       (var_w("v0",8),
                        mb(mr(close
                                (var("s",qTy),
                                 call
                                   ("state.c_TLB_direct",
                                    @{typ "8 word \<Rightarrow> (TLBEntry option)"},var("s",qTy),
                                    @{theory}))),
                           close
                             (var("v1",@{typ "8 word \<Rightarrow> (TLBEntry option)"}),
                              mu(fupd
                                   (var("v",
                                        @{typ
                                        "8 word \<Rightarrow>
                                         (8 word \<Rightarrow> (TLBEntry option))"}),var_w("v0",8),
                                    var("v1",@{typ "8 word \<Rightarrow> (TLBEntry option)"})),qTy))))),
                  close
                    (var("v",@{typ "8 word \<Rightarrow> (8 word \<Rightarrow> (TLBEntry option))"}),
                     mw(close
                          (var("s",qTy),
                           rupd
                             ("state.all_TLB_direct",
                              tp[var("s",qTy),
                                 var("v",
                                     @{typ
                                     "8 word \<Rightarrow> (8 word \<Rightarrow> (TLBEntry option))"})],
                              @{theory}))))),
               close
                 (var_a HOLogic.unitT,
                  mb(mr(close
                          (var("s",qTy),
                           call
                             ("state.all_TLB_assoc",
                              @{typ "8 word \<Rightarrow> (4 word \<Rightarrow> (TLBEntry option))"},
                              var("s",qTy),@{theory}))),
                     close
                       (var("v",
                            @{typ "8 word \<Rightarrow> (4 word \<Rightarrow> (TLBEntry option))"}),
                        mb(mb(mb(mr(close
                                      (var("s",qTy),call("state.procID",w8,var("s",qTy),@{theory}))),
                                 close
                                   (var_w("v0",8),
                                    mb(mr(close
                                            (var("s",qTy),
                                             call
                                               ("state.c_TLB_assoc",
                                                @{typ "4 word \<Rightarrow> (TLBEntry option)"},
                                                var("s",qTy),@{theory}))),
                                       close
                                         (var("v1",@{typ "4 word \<Rightarrow> (TLBEntry option)"}),
                                          mu(fupd
                                               (var("v",
                                                    @{typ
                                                    "8 word \<Rightarrow>
                                                     (4 word \<Rightarrow> (TLBEntry option))"}),
                                                var_w("v0",8),
                                                var("v1",
                                                    @{typ "4 word \<Rightarrow> (TLBEntry option)"})),
                                             qTy))))),
                              close
                                (var("v",
                                     @{typ
                                     "8 word \<Rightarrow> (4 word \<Rightarrow> (TLBEntry option))"}),
                                 mw(close
                                      (var("s",qTy),
                                       rupd
                                         ("state.all_TLB_assoc",
                                          tp[var("s",qTy),
                                             var("v",
                                                 @{typ
                                                 "8 word \<Rightarrow>
                                                  (4 word \<Rightarrow> (TLBEntry option))"})],
                                          @{theory}))))),
                           close
                             (var_a HOLogic.unitT,
                              mb(mr(close
                                      (var("s",qTy),
                                       call
                                         ("state.all_TLB_direct",
                                          @{typ
                                          "8 word \<Rightarrow>
                                           (8 word \<Rightarrow> (TLBEntry option))"},var("s",qTy),
                                          @{theory}))),
                                 close
                                   (var("v",
                                        @{typ
                                        "8 word \<Rightarrow>
                                         (8 word \<Rightarrow> (TLBEntry option))"}),
                                    mb(mb(mu(apply
                                               (var("v",
                                                    @{typ
                                                    "8 word \<Rightarrow>
                                                     (8 word \<Rightarrow> (TLBEntry option))"}),
                                                var_w("i",8)),qTy),
                                          close
                                            (var("v",@{typ "8 word \<Rightarrow> (TLBEntry option)"}),
                                             mw(close
                                                  (var("s",qTy),
                                                   rupd
                                                     ("state.c_TLB_direct",
                                                      tp[var("s",qTy),
                                                         var("v",
                                                             @{typ
                                                             "8 word \<Rightarrow> (TLBEntry option)"})],
                                                      @{theory}))))),
                                       close
                                         (var_a HOLogic.unitT,
                                          mb(mr(close
                                                  (var("s",qTy),
                                                   call
                                                     ("state.all_TLB_assoc",
                                                      @{typ
                                                      "8 word \<Rightarrow>
                                                       (4 word \<Rightarrow> (TLBEntry option))"},
                                                      var("s",qTy),@{theory}))),
                                             close
                                               (var("v",
                                                    @{typ
                                                    "8 word \<Rightarrow>
                                                     (4 word \<Rightarrow> (TLBEntry option))"}),
                                                mb(mu(apply
                                                        (var("v",
                                                             @{typ
                                                             "8 word \<Rightarrow>
                                                              (4 word \<Rightarrow>
                                                               (TLBEntry option))"}),var_w("i",8)),
                                                      qTy),
                                                   close
                                                     (var("v",
                                                          @{typ
                                                          "4 word \<Rightarrow> (TLBEntry option)"}),
                                                      mw(close
                                                           (var("s",qTy),
                                                            rupd
                                                              ("state.c_TLB_assoc",
                                                               tp[var("s",qTy),
                                                                  var("v",
                                                                      @{typ
                                                                      "4 word \<Rightarrow>
                                                                       (TLBEntry option)"})],
                                                               @{theory})))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("LookupTLB",
   close
     (tp[var_w("r",2),var_w("vpn2",27)],
      mn(lnl(@{typ "9 word \<times> TLBEntry"}),
         mb(md(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               @{typ "(9 word \<times> TLBEntry) list"}),
            close
              (var("v",@{typ CP0}),
               mb(mb(mb(mu(call("CP0.Config6",@{typ ConfigRegister6},var("v",@{typ CP0}),@{theory}),
                           @{typ "((9 word \<times> TLBEntry) list) \<times> state"}),
                        close
                          (var("v",@{typ ConfigRegister6}),
                           mu(call
                                ("ConfigRegister6.LTLB",HOLogic.boolT,
                                 var("v",@{typ ConfigRegister6}),@{theory}),
                              @{typ "((9 word \<times> TLBEntry) list) \<times> state"}))),
                     close
                       (var_b"b",
                        ite(var_b"b",
                            let'
                              (var_w("b",8),ex(var_w("vpn2",27),ln 7,ln 0,w8),
                               mb(md(call
                                       ("TLB_direct",
                                        @{typ
                                        "state \<Rightarrow> ((TLBEntry option) \<times> state)"},
                                        var_w("b",8),@{theory}),
                                     @{typ "(9 word \<times> TLBEntry) list"}),
                                  close
                                    (var("x",@{typ "TLBEntry option"}),
                                     cs(var("x",@{typ "TLBEntry option"}),
                                        [(mop(Some,var("e",@{typ TLBEntry})),
                                          mb(ite(eq(call
                                                      ("TLBEntry.R",(Word_Lib.mk_wordT 2),
                                                       var("e",@{typ TLBEntry}),@{theory}),
                                                    var_w("r",2)),
                                                 ite(call
                                                       ("TLBEntry.G",HOLogic.boolT,
                                                        var("e",@{typ TLBEntry}),@{theory}),
                                                     mu(lt,
                                                        @{typ
                                                        "((9 word \<times> TLBEntry) list) \<times>
                                                         state"}),
                                                     mb(md(const
                                                             ("CP0",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (CP0 \<times> state)"},@{theory}),
                                                           @{typ "(9 word \<times> TLBEntry) list"}),
                                                        close
                                                          (var("v",@{typ CP0}),
                                                           mb(mb(mu(call
                                                                      ("CP0.EntryHi",@{typ EntryHi},
                                                                       var("v",@{typ CP0}),@{theory}),
                                                                    @{typ
                                                                    "((9 word \<times> TLBEntry)
                                                                         list) \<times> state"}),
                                                                 close
                                                                   (var("v",@{typ EntryHi}),
                                                                    mu(call
                                                                         ("EntryHi.ASID",w8,
                                                                          var("v",@{typ EntryHi}),
                                                                          @{theory}),
                                                                       @{typ
                                                                       "((9 word \<times> TLBEntry)
                                                                            list) \<times> state"}))),
                                                              close
                                                                (var_w("v",8),
                                                                 mu(eq(call
                                                                         ("TLBEntry.ASID",w8,
                                                                          var("e",@{typ TLBEntry}),
                                                                          @{theory}),var_w("v",8)),
                                                                    @{typ
                                                                    "((9 word \<times> TLBEntry)
                                                                         list) \<times> state"})))))),
                                                 mu(lf,
                                                    @{typ
                                                    "((9 word \<times> TLBEntry) list) \<times>
                                                     state"})),
                                             close
                                               (var_b"v",
                                                mb(mu(bop(And,var_b"v",
                                                          let'
                                                            (var_w("nmask",27),
                                                             mop(BNot,
                                                                 mop(Cast (Word_Lib.mk_wordT 27),
                                                                     call
                                                                       ("TLBEntry.Mask",
                                                                        (Word_Lib.mk_wordT 12),
                                                                        var("e",@{typ TLBEntry}),
                                                                        @{theory}))),
                                                             eq(bop(BAnd,
                                                                    call
                                                                      ("TLBEntry.VPN2",
                                                                       (Word_Lib.mk_wordT 27),
                                                                       var("e",@{typ TLBEntry}),
                                                                       @{theory}),var_w("nmask",27)),
                                                                bop(BAnd,var_w("vpn2",27),
                                                                    var_w("nmask",27))))),
                                                      @{typ
                                                      "((9 word \<times> TLBEntry) list) \<times>
                                                       state"}),
                                                   close
                                                     (var_b"b0",
                                                      ite(var_b"b0",
                                                          mw(close
                                                               (var("s",
                                                                    @{typ
                                                                    "((9 word \<times> TLBEntry)
                                                                         list) \<times> state"}),
                                                                tp[ll[tp[ite(bop(Le,
                                                                                 const
                                                                                   ("TLBAssocEntries",
                                                                                    HOLogic.natT,
                                                                                    @{theory}),
                                                                                 mop(Cast
                                                                                       HOLogic.natT,
                                                                                     var_w("b",8))),
                                                                             mop(Cast
                                                                                   (Word_Lib.mk_wordT 9),
                                                                                 var_w("b",8)),
                                                                             bop(Add,
                                                                                 mop(Cast
                                                                                       (Word_Lib.mk_wordT 9),
                                                                                     const
                                                                                       ("TLBDirectEntries",
                                                                                        HOLogic.natT,
                                                                                        @{theory})),
                                                                                 mop(Cast
                                                                                       (Word_Lib.mk_wordT 9),
                                                                                     var_w("b",8)))),
                                                                         var("e",@{typ TLBEntry})]],
                                                                   mop(Snd,
                                                                       var("s",
                                                                           @{typ
                                                                           "((9 word \<times>
                                                                               TLBEntry)
                                                                                list) \<times> state"}))])),
                                                          mu(lu,
                                                             @{typ
                                                             "((9 word \<times> TLBEntry) list) \<times>
                                                              state"}))))))),
                                         (var_a(@{typ "TLBEntry option"}),
                                          mu(lu,
                                             @{typ
                                             "((9 word \<times> TLBEntry) list) \<times> state"}))],
                                        @{context})))),
                            mu(lu,@{typ "((9 word \<times> TLBEntry) list) \<times> state"})))),
                  close
                    (var_u"_0",
                     mb(forloop
                          (tp[ln 0,bop(Sub,const("TLBAssocEntries",HOLogic.natT,@{theory}),ln 1),
                              close
                                (var_n"i",
                                 mb(md(call
                                         ("TLB_assoc",
                                          @{typ
                                          "state \<Rightarrow> ((TLBEntry option) \<times> state)"},
                                          mop(Cast w4,var_n"i"),@{theory}),
                                       @{typ "(9 word \<times> TLBEntry) list"}),
                                    close
                                      (var("x",@{typ "TLBEntry option"}),
                                       cs(var("x",@{typ "TLBEntry option"}),
                                          [(mop(Some,var("e",@{typ TLBEntry})),
                                            mb(ite(eq(call
                                                        ("TLBEntry.R",(Word_Lib.mk_wordT 2),
                                                         var("e",@{typ TLBEntry}),@{theory}),
                                                      var_w("r",2)),
                                                   ite(call
                                                         ("TLBEntry.G",HOLogic.boolT,
                                                          var("e",@{typ TLBEntry}),@{theory}),
                                                       mu(lt,
                                                          @{typ
                                                          "((9 word \<times> TLBEntry) list) \<times>
                                                           state"}),
                                                       mb(md(const
                                                               ("CP0",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (CP0 \<times> state)"},@{theory}),
                                                             @{typ
                                                             "(9 word \<times> TLBEntry) list"}),
                                                          close
                                                            (var("v",@{typ CP0}),
                                                             mb(mb(mu(call
                                                                        ("CP0.EntryHi",
                                                                         @{typ EntryHi},
                                                                         var("v",@{typ CP0}),
                                                                         @{theory}),
                                                                      @{typ
                                                                      "((9 word \<times> TLBEntry)
                                                                           list) \<times> state"}),
                                                                   close
                                                                     (var("v",@{typ EntryHi}),
                                                                      mu(call
                                                                           ("EntryHi.ASID",w8,
                                                                            var("v",@{typ EntryHi}),
                                                                            @{theory}),
                                                                         @{typ
                                                                         "((9 word \<times> TLBEntry)
                                                                              list) \<times> state"}))),
                                                                close
                                                                  (var_w("v",8),
                                                                   mu(eq(call
                                                                           ("TLBEntry.ASID",w8,
                                                                            var("e",@{typ TLBEntry}),
                                                                            @{theory}),var_w("v",8)),
                                                                      @{typ
                                                                      "((9 word \<times> TLBEntry)
                                                                           list) \<times> state"})))))),
                                                   mu(lf,
                                                      @{typ
                                                      "((9 word \<times> TLBEntry) list) \<times>
                                                       state"})),
                                               close
                                                 (var_b"v",
                                                  mb(mu(bop(And,var_b"v",
                                                            let'
                                                              (var_w("nmask",27),
                                                               mop(BNot,
                                                                   mop(Cast (Word_Lib.mk_wordT 27),
                                                                       call
                                                                         ("TLBEntry.Mask",
                                                                          (Word_Lib.mk_wordT 12),
                                                                          var("e",@{typ TLBEntry}),
                                                                          @{theory}))),
                                                               eq(bop(BAnd,
                                                                      call
                                                                        ("TLBEntry.VPN2",
                                                                         (Word_Lib.mk_wordT 27),
                                                                         var("e",@{typ TLBEntry}),
                                                                         @{theory}),
                                                                      var_w("nmask",27)),
                                                                  bop(BAnd,var_w("vpn2",27),
                                                                      var_w("nmask",27))))),
                                                        @{typ
                                                        "((9 word \<times> TLBEntry) list) \<times>
                                                         state"}),
                                                     close
                                                       (var_b"b",
                                                        ite(var_b"b",
                                                            mb(mr(close
                                                                    (var("s",
                                                                         @{typ
                                                                         "((9 word \<times> TLBEntry)
                                                                              list) \<times> state"}),
                                                                     mop(Fst,
                                                                         var("s",
                                                                             @{typ
                                                                             "((9 word \<times>
                                                                                 TLBEntry)
                                                                                  list) \<times>
                                                                              state"})))),
                                                               close
                                                                 (var("v",
                                                                      @{typ
                                                                      "(9 word \<times> TLBEntry)
                                                                          list"}),
                                                                  mb(mb(mu(tp[tp[mop(Cast
                                                                                       (Word_Lib.mk_wordT 9),
                                                                                     var_n"i"),
                                                                                 var("e",
                                                                                     @{typ TLBEntry})],
                                                                              var("v",
                                                                                  @{typ
                                                                                  "(9 word \<times>
                                                                                     TLBEntry)
                                                                                      list"})],
                                                                           @{typ
                                                                           "((9 word \<times>
                                                                               TLBEntry)
                                                                                list) \<times> state"}),
                                                                        close
                                                                          (var("v",
                                                                               @{typ
                                                                               "(9 word \<times>
                                                                                 TLBEntry) \<times>
                                                                                (9 word \<times>
                                                                                  TLBEntry)
                                                                                   list"}),
                                                                           mu(llc([],
                                                                                  var("v",
                                                                                      @{typ
                                                                                      "(9 word \<times>
                                                                                        TLBEntry) \<times>
                                                                                       (9 word \<times>
                                                                                         TLBEntry)
                                                                                          list"})),
                                                                              @{typ
                                                                              "((9 word \<times>
                                                                                  TLBEntry)
                                                                                   list) \<times>
                                                                               state"}))),
                                                                     close
                                                                       (var("v",
                                                                            @{typ
                                                                            "(9 word \<times>
                                                                               TLBEntry)
                                                                                list"}),
                                                                        mw(close
                                                                             (var("s",
                                                                                  @{typ
                                                                                  "((9 word \<times>
                                                                                      TLBEntry)
                                                                                       list) \<times>
                                                                                   state"}),
                                                                              tp[var("v",
                                                                                     @{typ
                                                                                     "(9 word \<times>
                                                                                        TLBEntry)
                                                                                         list"}),
                                                                                 mop(Snd,
                                                                                     var("s",
                                                                                         @{typ
                                                                                         "((9 word \<times>
                                                                                             TLBEntry)
                                                                                              list) \<times>
                                                                                          state"}))])))))),
                                                            mu(lu,
                                                               @{typ
                                                               "((9 word \<times> TLBEntry) list) \<times>
                                                                state"}))))))),
                                           (var_a(@{typ "TLBEntry option"}),
                                            mu(lu,
                                               @{typ
                                               "((9 word \<times> TLBEntry) list) \<times> state"}))],
                                          @{context}))))]),
                        close
                          (var_a HOLogic.unitT,
                           mr(close
                                (var("s",@{typ "((9 word \<times> TLBEntry) list) \<times> state"}),
                                 mop(Fst,
                                     var("s",
                                         @{typ "((9 word \<times> TLBEntry) list) \<times> state"})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SignalTLBException_internal",
   close
     (tp[var_w("asid",8),var_w("vAddr",64)],
      let'
        (var_w("r",2),ex(var_w("vAddr",64),ln 63,ln 62,(Word_Lib.mk_wordT 2)),
         let'
           (var_w("vpn2",27),ex(var_w("vAddr",64),ln 39,ln 13,(Word_Lib.mk_wordT 27)),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(call
                       ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        rupd("CP0.BadVAddr",tp[var("v",@{typ CP0}),var_w("vAddr",64)],@{theory}),
                        @{theory}),
                     close
                       (var_a HOLogic.unitT,
                        mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                           close
                             (var("v",@{typ CP0}),
                              mb(call
                                   ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    rupd
                                      ("CP0.EntryHi",
                                       tp[var("v",@{typ CP0}),
                                          rupd
                                            ("EntryHi.R",
                                             tp[call
                                                  ("CP0.EntryHi",@{typ EntryHi},var("v",@{typ CP0}),
                                                   @{theory}),var_w("r",2)],@{theory})],@{theory}),
                                    @{theory}),
                                 close
                                   (var_a HOLogic.unitT,
                                    mb(const
                                         ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                          @{theory}),
                                       close
                                         (var("v",@{typ CP0}),
                                          mb(call
                                               ("write'CP0",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                rupd
                                                  ("CP0.EntryHi",
                                                   tp[var("v",@{typ CP0}),
                                                      rupd
                                                        ("EntryHi.VPN2",
                                                         tp[call
                                                              ("CP0.EntryHi",@{typ EntryHi},
                                                               var("v",@{typ CP0}),@{theory}),
                                                            var_w("vpn2",27)],@{theory})],@{theory}),
                                                @{theory}),
                                             close
                                               (var_a HOLogic.unitT,
                                                mb(const
                                                     ("CP0",
                                                      @{typ
                                                      "state \<Rightarrow> (CP0 \<times> state)"},
                                                      @{theory}),
                                                   close
                                                     (var("v",@{typ CP0}),
                                                      mb(call
                                                           ("write'CP0",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            rupd
                                                              ("CP0.EntryHi",
                                                               tp[var("v",@{typ CP0}),
                                                                  rupd
                                                                    ("EntryHi.ASID",
                                                                     tp[call
                                                                          ("CP0.EntryHi",
                                                                           @{typ EntryHi},
                                                                           var("v",@{typ CP0}),
                                                                           @{theory}),
                                                                        var_w("asid",8)],@{theory})],
                                                               @{theory}),@{theory}),
                                                         close
                                                           (var_a HOLogic.unitT,
                                                            mb(const
                                                                 ("CP0",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (CP0 \<times> state)"},@{theory}),
                                                               close
                                                                 (var("v",@{typ CP0}),
                                                                  mb(call
                                                                       ("write'CP0",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        rupd
                                                                          ("CP0.XContext",
                                                                           tp[var("v",@{typ CP0}),
                                                                              rupd
                                                                                ("XContext.R",
                                                                                 tp[call
                                                                                      ("CP0.XContext",
                                                                                       @{typ XContext},
                                                                                       var("v",
                                                                                           @{typ CP0}),
                                                                                       @{theory}),
                                                                                    var_w("r",2)],
                                                                                 @{theory})],
                                                                           @{theory}),@{theory}),
                                                                     close
                                                                       (var_a HOLogic.unitT,
                                                                        mb(const
                                                                             ("CP0",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (CP0 \<times> state)"},
                                                                              @{theory}),
                                                                           close
                                                                             (var("v",@{typ CP0}),
                                                                              mb(call
                                                                                   ("write'CP0",
                                                                                    @{typ
                                                                                    "state \<Rightarrow>
                                                                                     (unit \<times>
                                                                                      state)"},
                                                                                    rupd
                                                                                      ("CP0.XContext",
                                                                                       tp[var("v",
                                                                                              @{typ CP0}),
                                                                                          rupd
                                                                                            ("XContext.BadVPN2",
                                                                                             tp[call
                                                                                                  ("CP0.XContext",
                                                                                                   @{typ XContext},
                                                                                                   var("v",
                                                                                                       @{typ CP0}),
                                                                                                   @{theory}),
                                                                                                var_w("vpn2",27)],
                                                                                             @{theory})],
                                                                                       @{theory}),
                                                                                    @{theory}),
                                                                                 close
                                                                                   (var_a
                                                                                      HOLogic.unitT,
                                                                                    mb(const
                                                                                         ("CP0",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (CP0 \<times>
                                                                                            state)"},
                                                                                          @{theory}),
                                                                                       close
                                                                                         (var("x",
                                                                                              @{typ CP0}),
                                                                                          call
                                                                                            ("write'CP0",
                                                                                             @{typ
                                                                                             "state \<Rightarrow>
                                                                                              (unit \<times>
                                                                                               state)"},
                                                                                             rupd
                                                                                               ("CP0.Context",
                                                                                                tp[var("x",
                                                                                                       @{typ CP0}),
                                                                                                   rupd
                                                                                                     ("Context.BadVPN2",
                                                                                                      tp[call
                                                                                                           ("CP0.Context",
                                                                                                            @{typ Context},
                                                                                                            var("x",
                                                                                                                @{typ CP0}),
                                                                                                            @{theory}),
                                                                                                         ex(var_w("vAddr",64),
                                                                                                            ln
                                                                                                             31,
                                                                                                            ln
                                                                                                             13,
                                                                                                            (Word_Lib.mk_wordT 19))],
                                                                                                      @{theory})],
                                                                                                @{theory}),
                                                                                             @{theory})))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SignalTLBException",
   close
     (tp[var("e",@{typ ExceptionType}),var_w("asid",8),var_w("vAddr",64)],
      mb(call
           ("SignalTLBException_internal",@{typ "state \<Rightarrow> (unit \<times> state)"},
            tp[var_w("asid",8),var_w("vAddr",64)],@{theory}),
         close
           (var_a HOLogic.unitT,
            mb(call
                 ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                  var("e",@{typ ExceptionType}),@{theory}),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("next_unknown",
                        @{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                        ls"tlb-translation",@{theory}),
                     close
                       (var("v",@{typ "nat \<times> string"}),
                        mu(apply
                             (lx(@{typ
                                 "(nat \<times> string) \<Rightarrow> (40 word \<times> 3 word)"}),
                              var("v",@{typ "nat \<times> string"})),qTy)))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CheckSegment",
   close
     (var_w("vAddr",64),
      mb(const("UserMode",@{typ "state \<Rightarrow> (bool \<times> state)"},@{theory}),
         close
           (var_b"b",
            ite(var_b"b",
                mu(tp[lo(@{typ "40 word \<times> 3 word"}),
                      bop(Ult,var_w("vAddr",64),lw(1099511627776,64))],qTy),
                mb(const
                     ("SupervisorMode",@{typ "state \<Rightarrow> (bool \<times> state)"},@{theory}),
                   close
                     (var_b"b",
                      itb([(var_b"b",
                            mu(tp[lo(@{typ "40 word \<times> 3 word"}),
                                  bop(Or,bop(Ult,var_w("vAddr",64),lw(1099511627776,64)),
                                      bop(Or,
                                          bop(And,
                                              bop(Ule,lw(4611686018427387904,64),var_w("vAddr",64)),
                                              bop(Ult,var_w("vAddr",64),lw(4611687117939015680,64))),
                                          bop(And,
                                              bop(Ule,lw(18446744072635809792,64),var_w("vAddr",64)),
                                              bop(Ult,var_w("vAddr",64),lw(18446744073172680704,64)))))],
                               qTy)),
                           (bop(Ult,var_w("vAddr",64),lw(13835058055282163712,64)),
                            mu(itb([(bop(Ult,var_w("vAddr",64),lw(4611686018427387904,64)),
                                     tp[lo(@{typ "40 word \<times> 3 word"}),
                                        bop(Ult,var_w("vAddr",64),lw(1099511627776,64))]),
                                    (bop(Ule,lw(9223372036854775808,64),var_w("vAddr",64)),
                                     tp[mop(Some,
                                            tp[ex(var_w("vAddr",64),ln 39,ln 0,
                                                  (Word_Lib.mk_wordT 40)),
                                               ex(var_w("vAddr",64),ln 61,ln 59,
                                                  (Word_Lib.mk_wordT 3))]),
                                        eq(ex(var_w("vAddr",64),ln 58,ln 40,(Word_Lib.mk_wordT 19)),
                                           lw(0,19))])],
                                   tp[lo(@{typ "40 word \<times> 3 word"}),
                                      bop(Ult,var_w("vAddr",64),lw(4611687117939015680,64))]),qTy)),
                           (bop(Ult,var_w("vAddr",64),lw(18446744072098938880,64)),
                            ite(bop(Ule,lw(18446744071562067968,64),var_w("vAddr",64)),
                                mb(const
                                     ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                      @{theory}),
                                   close
                                     (var("v",@{typ CP0}),
                                      mb(mb(mb(mb(mu(call
                                                       ("CP0.Config",@{typ ConfigRegister},
                                                        var("v",@{typ CP0}),@{theory}),qTy),
                                                  close
                                                    (var("v",@{typ ConfigRegister}),
                                                     mu(call
                                                          ("ConfigRegister.K0",
                                                           (Word_Lib.mk_wordT 3),
                                                           var("v",@{typ ConfigRegister}),@{theory}),
                                                        qTy))),
                                               close
                                                 (var_w("v",3),
                                                  mu(tp[bop(Sub,
                                                            ex(var_w("vAddr",64),ln 39,ln 0,
                                                               (Word_Lib.mk_wordT 40)),
                                                            lw(1097364144128,40)),var_w("v",3)],qTy))),
                                            close
                                              (var("v",@{typ "40 word \<times> 3 word"}),
                                               mu(mop(Some,var("v",@{typ "40 word \<times> 3 word"})),
                                                  qTy))),
                                         close
                                           (var("v",@{typ "(40 word \<times> 3 word) option"}),
                                            mu(tp[var("v",@{typ "(40 word \<times> 3 word) option"}),
                                                  lt],qTy))))),
                                mu(tp[lo(@{typ "40 word \<times> 3 word"}),
                                      bop(Ult,var_w("vAddr",64),lw(13835059152646307840,64))],qTy)))],
                          mu(ite(bop(Ult,var_w("vAddr",64),lw(18446744072635809792,64)),
                                 tp[mop(Some,
                                        tp[bop(Sub,
                                               ex(var_w("vAddr",64),ln 39,ln 0,
                                                  (Word_Lib.mk_wordT 40)),lw(1097901015040,40)),
                                           lw(2,3)]),lt],
                                 tp[lo(@{typ "40 word \<times> 3 word"}),
                                    bop(Ule,lw(18446744072635809792,64),var_w("vAddr",64))]),qTy)))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("checkMask",
   close
     (var_w("mask",12),
      itb([(eq(var_w("mask",12),lw(0,12)),mop(Some,ln 12)),
           (eq(var_w("mask",12),lw(3,12)),mop(Some,ln 14)),
           (eq(var_w("mask",12),lw(15,12)),mop(Some,ln 16)),
           (eq(var_w("mask",12),lw(63,12)),mop(Some,ln 18)),
           (eq(var_w("mask",12),lw(255,12)),mop(Some,ln 20)),
           (eq(var_w("mask",12),lw(1023,12)),mop(Some,ln 22)),
           (eq(var_w("mask",12),lw(4095,12)),mop(Some,ln 24))],lo HOLogic.natT)))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("check_cca",
   close
     (var_w("cca",3),
      ite(bop(In,var_w("cca",3),sl[lw(0,3),lw(1,3),lw(7,3)]),
          call
            ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
             call
               ("exception.UNPREDICTABLE",@{typ exception},
                cc[ls"CCA ",mop(Cast(@{typ string}),var_w("cca",3)),ls" Reserved"],@{theory}),
             @{theory}),mu(lu,qTy))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("AddressTranslation",
   close
     (tp[var_w("vAddr",64),var("AccessType",@{typ AccessType})],
      mb(call
           ("CheckSegment",
            @{typ
            "state \<Rightarrow> ((((40 word \<times> 3 word) option) \<times> bool) \<times> state)"},
            var_w("vAddr",64),@{theory}),
         close
           (var("x",@{typ "((40 word \<times> 3 word) option) \<times> bool"}),
            cs(var("x",@{typ "((40 word \<times> 3 word) option) \<times> bool"}),
               [(tp[var("unmapped",@{typ "(40 word \<times> 3 word) option"}),var_b"valid"],
                 ite(var_b"valid",
                     cs(var("unmapped",@{typ "(40 word \<times> 3 word) option"}),
                        [(mop(Some,tp[var_w("pAddr",40),var_w("cca",3)]),
                          mb(call
                               ("check_cca",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                var_w("cca",3),@{theory}),
                             close
                               (var_a HOLogic.unitT,
                                mu(tp[var_w("pAddr",40),var_w("cca",3),lf,lf],qTy)))),
                         (lo(@{typ "40 word \<times> 3 word"}),
                          mb(call
                               ("LookupTLB",
                                @{typ
                                "state \<Rightarrow>
                                 (((9 word \<times> TLBEntry) list) \<times> state)"},
                                tp[ex(var_w("vAddr",64),ln 63,ln 62,(Word_Lib.mk_wordT 2)),
                                   ex(var_w("vAddr",64),ln 39,ln 13,(Word_Lib.mk_wordT 27))],
                                @{theory}),
                             close
                               (var("x",@{typ "(9 word \<times> TLBEntry) list"}),
                                cs(var("x",@{typ "(9 word \<times> TLBEntry) list"}),
                                   [(lnl(@{typ "9 word \<times> TLBEntry"}),
                                     mb(const
                                          ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                           @{theory}),
                                        close
                                          (var("v",@{typ CP0}),
                                           mb(mb(mb(mb(mb(mu(call
                                                               ("CP0.EntryHi",@{typ EntryHi},
                                                                var("v",@{typ CP0}),@{theory}),qTy),
                                                          close
                                                            (var("v",@{typ EntryHi}),
                                                             mu(call
                                                                  ("EntryHi.ASID",w8,
                                                                   var("v",@{typ EntryHi}),@{theory}),
                                                                qTy))),
                                                       close
                                                         (var_w("v",8),
                                                          mu(tp[var_w("v",8),var_w("vAddr",64)],qTy))),
                                                    close
                                                      (var("v",@{typ "8 word \<times> 64 word"}),
                                                       mu(tp[ite(eq(var("AccessType",
                                                                        @{typ AccessType}),
                                                                    lc("LOAD","AccessType",@{theory})),
                                                                 lc("XTLBRefillL","ExceptionType",
                                                                    @{theory}),
                                                                 lc("XTLBRefillS","ExceptionType",
                                                                    @{theory})),
                                                             var("v",
                                                                 @{typ "8 word \<times> 64 word"})],
                                                          qTy))),
                                                 close
                                                   (var("v",
                                                        @{typ
                                                        "ExceptionType \<times>
                                                         8 word \<times> 64 word"}),
                                                    call
                                                      ("SignalTLBException",
                                                       @{typ
                                                       "state \<Rightarrow>
                                                        ((40 word \<times> 3 word) \<times> state)"},
                                                       var("v",
                                                           @{typ
                                                           "ExceptionType \<times>
                                                            8 word \<times> 64 word"}),@{theory}))),
                                              close
                                                (var_a(@{typ "40 word \<times> 3 word"}),
                                                 mb(call
                                                      ("next_unknown",
                                                       @{typ
                                                       "state \<Rightarrow>
                                                        ((nat \<times> string) \<times> state)"},
                                                       ls"tlb-translation",@{theory}),
                                                    close
                                                      (var("v",@{typ "nat \<times> string"}),
                                                       mu(apply
                                                            (lx(@{typ
                                                                "(nat \<times> string) \<Rightarrow>
                                                                 (40 word \<times>
                                                                  3 word \<times> bool \<times> bool)"}),
                                                             var("v",@{typ "nat \<times> string"})),
                                                          qTy)))))))),
                                    (ll[tp[var_a (Word_Lib.mk_wordT 9),var("e",@{typ TLBEntry})]],
                                     cs(call
                                          ("checkMask",@{typ "nat option"},
                                           call
                                             ("TLBEntry.Mask",(Word_Lib.mk_wordT 12),
                                              var("e",@{typ TLBEntry}),@{theory}),@{theory}),
                                        [(mop(Some,var_n"EvenOddBit"),
                                          let'
                                            (tp[var_b"S",var_b"L",var_w("PFN",28),var_w("C",3),
                                                var_b"D",var_b"V"],
                                             ite(bop(Bit,var_w("vAddr",64),var_n"EvenOddBit"),
                                                 tp[call
                                                      ("TLBEntry.S1",HOLogic.boolT,
                                                       var("e",@{typ TLBEntry}),@{theory}),
                                                    call
                                                      ("TLBEntry.L1",HOLogic.boolT,
                                                       var("e",@{typ TLBEntry}),@{theory}),
                                                    call
                                                      ("TLBEntry.PFN1",(Word_Lib.mk_wordT 28),
                                                       var("e",@{typ TLBEntry}),@{theory}),
                                                    call
                                                      ("TLBEntry.C1",(Word_Lib.mk_wordT 3),
                                                       var("e",@{typ TLBEntry}),@{theory}),
                                                    call
                                                      ("TLBEntry.D1",HOLogic.boolT,
                                                       var("e",@{typ TLBEntry}),@{theory}),
                                                    call
                                                      ("TLBEntry.V1",HOLogic.boolT,
                                                       var("e",@{typ TLBEntry}),@{theory})],
                                                 tp[call
                                                      ("TLBEntry.S0",HOLogic.boolT,
                                                       var("e",@{typ TLBEntry}),@{theory}),
                                                    call
                                                      ("TLBEntry.L0",HOLogic.boolT,
                                                       var("e",@{typ TLBEntry}),@{theory}),
                                                    call
                                                      ("TLBEntry.PFN0",(Word_Lib.mk_wordT 28),
                                                       var("e",@{typ TLBEntry}),@{theory}),
                                                    call
                                                      ("TLBEntry.C0",(Word_Lib.mk_wordT 3),
                                                       var("e",@{typ TLBEntry}),@{theory}),
                                                    call
                                                      ("TLBEntry.D0",HOLogic.boolT,
                                                       var("e",@{typ TLBEntry}),@{theory}),
                                                    call
                                                      ("TLBEntry.V0",HOLogic.boolT,
                                                       var("e",@{typ TLBEntry}),@{theory})]),
                                             ite(var_b"V",
                                                 ite(bop(And,mop(Not,var_b"D"),
                                                         eq(var("AccessType",@{typ AccessType}),
                                                            lc("STORE","AccessType",@{theory}))),
                                                     mb(call
                                                          ("SignalTLBException",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            ((40 word \<times> 3 word) \<times>
                                                             state)"},
                                                           tp[lc("Mod","ExceptionType",@{theory}),
                                                              call
                                                                ("TLBEntry.ASID",w8,
                                                                 var("e",@{typ TLBEntry}),@{theory}),
                                                              var_w("vAddr",64)],@{theory}),
                                                        close
                                                          (var_a(@{typ "40 word \<times> 3 word"}),
                                                           mb(call
                                                                ("next_unknown",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  ((nat \<times> string) \<times>
                                                                   state)"},ls"tlb-translation",
                                                                 @{theory}),
                                                              close
                                                                (var("v",
                                                                     @{typ "nat \<times> string"}),
                                                                 mu(apply
                                                                      (lx(@{typ
                                                                          "(nat \<times> string) \<Rightarrow>
                                                                           (40 word \<times>
                                                                            3 word \<times>
                                                                            bool \<times> bool)"}),
                                                                       var("v",
                                                                           @{typ
                                                                           "nat \<times> string"})),
                                                                    qTy))))),
                                                     mb(call
                                                          ("check_cca",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (unit \<times> state)"},var_w("C",3),
                                                           @{theory}),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mu(tp[bop(BOr,
                                                                     bop(Lsl,
                                                                         mop(Cast
                                                                               (Word_Lib.mk_wordT 40),
                                                                             bop(BAnd,
                                                                                 var_w("PFN",28),
                                                                                 cc[lw(65535,16),
                                                                                    mop(BNot,
                                                                                        call
                                                                                          ("TLBEntry.Mask",
                                                                                           (Word_Lib.mk_wordT 12),
                                                                                           var("e",
                                                                                               @{typ TLBEntry}),
                                                                                           @{theory}))])),
                                                                         ln 12),
                                                                     mop(Cast (Word_Lib.mk_wordT 40),
                                                                         bop(BAnd,var_w("vAddr",64),
                                                                             mop(Cast w64,
                                                                                 cc[call
                                                                                      ("TLBEntry.Mask",
                                                                                       (Word_Lib.mk_wordT 12),
                                                                                       var("e",
                                                                                           @{typ TLBEntry}),
                                                                                       @{theory}),
                                                                                    lw(4095,12)])))),
                                                                 var_w("C",3),var_b"S",var_b"L"],qTy)))),
                                                 mb(call
                                                      ("SignalTLBException",
                                                       @{typ
                                                       "state \<Rightarrow>
                                                        ((40 word \<times> 3 word) \<times> state)"},
                                                       tp[ite(eq(var("AccessType",@{typ AccessType}),
                                                                 lc("LOAD","AccessType",@{theory})),
                                                              lc("TLBL","ExceptionType",@{theory}),
                                                              lc("TLBS","ExceptionType",@{theory})),
                                                          call
                                                            ("TLBEntry.ASID",w8,
                                                             var("e",@{typ TLBEntry}),@{theory}),
                                                          var_w("vAddr",64)],@{theory}),
                                                    close
                                                      (var_a(@{typ "40 word \<times> 3 word"}),
                                                       mb(call
                                                            ("next_unknown",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              ((nat \<times> string) \<times> state)"},
                                                             ls"tlb-translation",@{theory}),
                                                          close
                                                            (var("v",@{typ "nat \<times> string"}),
                                                             mu(apply
                                                                  (lx(@{typ
                                                                      "(nat \<times> string) \<Rightarrow>
                                                                       (40 word \<times>
                                                                        3 word \<times>
                                                                        bool \<times> bool)"}),
                                                                   var("v",
                                                                       @{typ "nat \<times> string"})),
                                                                qTy)))))))),
                                         (var_a(@{typ "nat option"}),
                                          call
                                            ("raise'exception",
                                             @{typ
                                             "state \<Rightarrow>
                                              ((40 word \<times> 3 word \<times> bool \<times> bool) \<times>
                                               state)"},
                                             call
                                               ("exception.UNPREDICTABLE",@{typ exception},
                                                ls"TLB: bad mask",@{theory}),@{theory}))],@{context})),
                                    (var_a(@{typ "(9 word \<times> TLBEntry) list"}),
                                     call
                                       ("raise'exception",
                                        @{typ
                                        "state \<Rightarrow>
                                         ((40 word \<times> 3 word \<times> bool \<times> bool) \<times>
                                          state)"},
                                        call
                                          ("exception.UNPREDICTABLE",@{typ exception},
                                           ls"TLB: multiple matches",@{theory}),@{theory}))],
                                   @{context}))))],@{context}),
                     mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                        close
                          (var("v",@{typ CP0}),
                           mb(mb(const
                                   ("PCC",@{typ "state \<Rightarrow> (Capability \<times> state)"},
                                    @{theory}),
                                 close
                                   (var("v0",@{typ Capability}),
                                    mb(mb(mb(mb(mu(call
                                                     ("getBase",w64,var("v0",@{typ Capability}),
                                                      @{theory}),qTy),
                                                close
                                                  (var_w("v",64),
                                                   mu(bop(Add,var_w("v",64),var_w("vAddr",64)),qTy))),
                                             close
                                               (var_w("v0",64),
                                                mu(tp[var("v",@{typ CP0}),var_w("v0",64)],qTy))),
                                          close
                                            (var("v",@{typ "CP0 \<times> 64 word"}),
                                             mu(rupd
                                                  ("CP0.BadVAddr",
                                                   var("v",@{typ "CP0 \<times> 64 word"}),@{theory}),
                                                qTy))),
                                       close
                                         (var("v",@{typ CP0}),
                                          call
                                            ("write'CP0",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             var("v",@{typ CP0}),@{theory}))))),
                              close
                                (var_a HOLogic.unitT,
                                 mb(call
                                      ("SignalException",
                                       @{typ "state \<Rightarrow> (unit \<times> state)"},
                                       ite(eq(var("AccessType",@{typ AccessType}),
                                              lc("LOAD","AccessType",@{theory})),
                                           lc("AdEL","ExceptionType",@{theory}),
                                           lc("AdES","ExceptionType",@{theory})),@{theory}),
                                    close
                                      (var_a HOLogic.unitT,
                                       mb(call
                                            ("next_unknown",
                                             @{typ
                                             "state \<Rightarrow>
                                              ((nat \<times> string) \<times> state)"},
                                             ls"tlb-translation",@{theory}),
                                          close
                                            (var("v",@{typ "nat \<times> string"}),
                                             mu(apply
                                                  (lx(@{typ
                                                      "(nat \<times> string) \<Rightarrow>
                                                       (40 word \<times>
                                                        3 word \<times> bool \<times> bool)"}),
                                                   var("v",@{typ "nat \<times> string"})),qTy)))))))))))],
               @{context})))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("tlbTryTranslation",
   close
     (var_w("vAddr",64),
      mn(lo (Word_Lib.mk_wordT 40),
         mb(md(call
                 ("CheckSegment",
                  @{typ
                  "state \<Rightarrow>
                   ((((40 word \<times> 3 word) option) \<times> bool) \<times> state)"},
                  var_w("vAddr",64),@{theory}),@{typ "40 word option"}),
            close
              (var("x",@{typ "((40 word \<times> 3 word) option) \<times> bool"}),
               cs(var("x",@{typ "((40 word \<times> 3 word) option) \<times> bool"}),
                  [(tp[var("unmapped",@{typ "(40 word \<times> 3 word) option"}),var_b"valid"],
                    mb(ite(var_b"valid",
                           cs(var("unmapped",@{typ "(40 word \<times> 3 word) option"}),
                              [(mop(Some,tp[var_w("pAddr",40),var_w("cca",3)]),
                                mw(close
                                     (var("s",@{typ "(40 word option) \<times> state"}),
                                      tp[mop(Some,var_w("pAddr",40)),
                                         mop(Snd,var("s",@{typ "(40 word option) \<times> state"}))]))),
                               (lo(@{typ "40 word \<times> 3 word"}),
                                mb(md(call
                                        ("LookupTLB",
                                         @{typ
                                         "state \<Rightarrow>
                                          (((9 word \<times> TLBEntry) list) \<times> state)"},
                                         tp[ex(var_w("vAddr",64),ln 63,ln 62,(Word_Lib.mk_wordT 2)),
                                            ex(var_w("vAddr",64),ln 39,ln 13,(Word_Lib.mk_wordT 27))],
                                         @{theory}),@{typ "40 word option"}),
                                   close
                                     (var("x",@{typ "(9 word \<times> TLBEntry) list"}),
                                      cs(var("x",@{typ "(9 word \<times> TLBEntry) list"}),
                                         [(ll[tp[var_a (Word_Lib.mk_wordT 9),
                                                 var("e",@{typ TLBEntry})]],
                                           cs(call
                                                ("checkMask",@{typ "nat option"},
                                                 call
                                                   ("TLBEntry.Mask",(Word_Lib.mk_wordT 12),
                                                    var("e",@{typ TLBEntry}),@{theory}),@{theory}),
                                              [(mop(Some,var_n"EvenOddBit"),
                                                let'
                                                  (tp[var_a HOLogic.boolT,var_a HOLogic.boolT,
                                                      var_w("PFN",28),var_a (Word_Lib.mk_wordT 3),
                                                      var_a HOLogic.boolT,var_b"V"],
                                                   ite(bop(Bit,var_w("vAddr",64),var_n"EvenOddBit"),
                                                       tp[call
                                                            ("TLBEntry.S1",HOLogic.boolT,
                                                             var("e",@{typ TLBEntry}),@{theory}),
                                                          call
                                                            ("TLBEntry.L1",HOLogic.boolT,
                                                             var("e",@{typ TLBEntry}),@{theory}),
                                                          call
                                                            ("TLBEntry.PFN1",(Word_Lib.mk_wordT 28),
                                                             var("e",@{typ TLBEntry}),@{theory}),
                                                          call
                                                            ("TLBEntry.C1",(Word_Lib.mk_wordT 3),
                                                             var("e",@{typ TLBEntry}),@{theory}),
                                                          call
                                                            ("TLBEntry.D1",HOLogic.boolT,
                                                             var("e",@{typ TLBEntry}),@{theory}),
                                                          call
                                                            ("TLBEntry.V1",HOLogic.boolT,
                                                             var("e",@{typ TLBEntry}),@{theory})],
                                                       tp[call
                                                            ("TLBEntry.S0",HOLogic.boolT,
                                                             var("e",@{typ TLBEntry}),@{theory}),
                                                          call
                                                            ("TLBEntry.L0",HOLogic.boolT,
                                                             var("e",@{typ TLBEntry}),@{theory}),
                                                          call
                                                            ("TLBEntry.PFN0",(Word_Lib.mk_wordT 28),
                                                             var("e",@{typ TLBEntry}),@{theory}),
                                                          call
                                                            ("TLBEntry.C0",(Word_Lib.mk_wordT 3),
                                                             var("e",@{typ TLBEntry}),@{theory}),
                                                          call
                                                            ("TLBEntry.D0",HOLogic.boolT,
                                                             var("e",@{typ TLBEntry}),@{theory}),
                                                          call
                                                            ("TLBEntry.V0",HOLogic.boolT,
                                                             var("e",@{typ TLBEntry}),@{theory})]),
                                                   ite(var_b"V",
                                                       mw(close
                                                            (var("s",
                                                                 @{typ
                                                                 "(40 word option) \<times> state"}),
                                                             tp[mop(Some,
                                                                    bop(BOr,
                                                                        bop(Lsl,
                                                                            mop(Cast
                                                                                  (Word_Lib.mk_wordT 40),
                                                                                bop(BAnd,
                                                                                    var_w("PFN",28),
                                                                                    cc[lw(65535,16),
                                                                                       mop(BNot,
                                                                                           call
                                                                                             ("TLBEntry.Mask",
                                                                                              (Word_Lib.mk_wordT 12),
                                                                                              var("e",
                                                                                                  @{typ TLBEntry}),
                                                                                              @{theory}))])),
                                                                            ln 12),
                                                                        mop(Cast
                                                                              (Word_Lib.mk_wordT 40),
                                                                            bop(BAnd,
                                                                                var_w("vAddr",64),
                                                                                mop(Cast w64,
                                                                                    cc[call
                                                                                         ("TLBEntry.Mask",
                                                                                          (Word_Lib.mk_wordT 12),
                                                                                          var("e",
                                                                                              @{typ TLBEntry}),
                                                                                          @{theory}),
                                                                                       lw(4095,12)]))))),
                                                                mop(Snd,
                                                                    var("s",
                                                                        @{typ
                                                                        "(40 word option) \<times>
                                                                         state"}))])),
                                                       mu(lu,
                                                          @{typ "(40 word option) \<times> state"})))),
                                               (var_a(@{typ "nat option"}),
                                                md(call
                                                     ("raise'exception",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      call
                                                        ("exception.UNPREDICTABLE",@{typ exception},
                                                         ls"TLB: bad mask",@{theory}),@{theory}),
                                                   @{typ "40 word option"}))],@{context})),
                                          (var_a(@{typ "(9 word \<times> TLBEntry) list"}),
                                           mu(lu,@{typ "(40 word option) \<times> state"}))],
                                         @{context}))))],@{context}),
                           mu(lu,@{typ "(40 word option) \<times> state"})),
                       close
                         (var_a HOLogic.unitT,
                          mr(close
                               (var("s",@{typ "(40 word option) \<times> state"}),
                                mop(Fst,var("s",@{typ "(40 word option) \<times> state"})))))))],
                  @{context}))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CP0TLBEntry",
   close
     (var_a HOLogic.unitT,
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mu(call("CP0.EntryHi",@{typ EntryHi},var("v",@{typ CP0}),@{theory}),qTy),
               close
                 (var("eHi",@{typ EntryHi}),
                  mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                     close
                       (var("v",@{typ CP0}),
                        mb(mu(call("CP0.EntryLo1",@{typ EntryLo},var("v",@{typ CP0}),@{theory}),qTy),
                           close
                             (var("eLo1",@{typ EntryLo}),
                              mb(const
                                   ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                    @{theory}),
                                 close
                                   (var("v",@{typ CP0}),
                                    mb(mu(call
                                            ("CP0.EntryLo0",@{typ EntryLo},var("v",@{typ CP0}),
                                             @{theory}),qTy),
                                       close
                                         (var("eLo0",@{typ EntryLo}),
                                          mn(lx @{typ TLBEntry},
                                             mb(mr(close
                                                     (var("s",@{typ "TLBEntry \<times> state"}),
                                                      mop(Fst,
                                                          var("s",@{typ "TLBEntry \<times> state"})))),
                                                close
                                                  (var("v",@{typ TLBEntry}),
                                                   mb(mb(mb(mb(md(const
                                                                    ("CP0",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (CP0 \<times> state)"},
                                                                     @{theory}),@{typ TLBEntry}),
                                                               close
                                                                 (var("v0",@{typ CP0}),
                                                                  mb(mb(mu(call
                                                                             ("CP0.PageMask",
                                                                              @{typ PageMask},
                                                                              var("v0",@{typ CP0}),
                                                                              @{theory}),
                                                                           @{typ
                                                                           "TLBEntry \<times> state"}),
                                                                        close
                                                                          (var("v",@{typ PageMask}),
                                                                           mu(call
                                                                                ("PageMask.Mask",
                                                                                 (Word_Lib.mk_wordT 12),
                                                                                 var("v",
                                                                                     @{typ PageMask}),
                                                                                 @{theory}),
                                                                              @{typ
                                                                              "TLBEntry \<times>
                                                                               state"}))),
                                                                     close
                                                                       (var_w("v0",12),
                                                                        mu(tp[var("v",
                                                                                  @{typ TLBEntry}),
                                                                              var_w("v0",12)],
                                                                           @{typ
                                                                           "TLBEntry \<times> state"}))))),
                                                            close
                                                              (var("v",
                                                                   @{typ
                                                                   "TLBEntry \<times> 12 word"}),
                                                               mu(rupd
                                                                    ("TLBEntry.Mask",
                                                                     var("v",
                                                                         @{typ
                                                                         "TLBEntry \<times> 12 word"}),
                                                                     @{theory}),
                                                                  @{typ "TLBEntry \<times> state"}))),
                                                         close
                                                           (var("v",@{typ TLBEntry}),
                                                            mw(close
                                                                 (var("s",
                                                                      @{typ
                                                                      "TLBEntry \<times> state"}),
                                                                  tp[var("v",@{typ TLBEntry}),
                                                                     mop(Snd,
                                                                         var("s",
                                                                             @{typ
                                                                             "TLBEntry \<times>
                                                                              state"}))])))),
                                                      close
                                                        (var_a HOLogic.unitT,
                                                         mb(mr(close
                                                                 (var("s",
                                                                      @{typ
                                                                      "TLBEntry \<times> state"}),
                                                                  mop(Fst,
                                                                      var("s",
                                                                          @{typ
                                                                          "TLBEntry \<times> state"})))),
                                                            close
                                                              (var("v",@{typ TLBEntry}),
                                                               mb(mb(mb(mu(tp[var("v",
                                                                                  @{typ TLBEntry}),
                                                                              call
                                                                                ("EntryHi.R",
                                                                                 (Word_Lib.mk_wordT 2),
                                                                                 var("eHi",
                                                                                     @{typ EntryHi}),
                                                                                 @{theory})],
                                                                           @{typ
                                                                           "TLBEntry \<times> state"}),
                                                                        close
                                                                          (var("v",
                                                                               @{typ
                                                                               "TLBEntry \<times>
                                                                                2 word"}),
                                                                           mu(rupd
                                                                                ("TLBEntry.R",
                                                                                 var("v",
                                                                                     @{typ
                                                                                     "TLBEntry \<times>
                                                                                      2 word"}),
                                                                                 @{theory}),
                                                                              @{typ
                                                                              "TLBEntry \<times>
                                                                               state"}))),
                                                                     close
                                                                       (var("v",@{typ TLBEntry}),
                                                                        mw(close
                                                                             (var("s",
                                                                                  @{typ
                                                                                  "TLBEntry \<times>
                                                                                   state"}),
                                                                              tp[var("v",
                                                                                     @{typ TLBEntry}),
                                                                                 mop(Snd,
                                                                                     var("s",
                                                                                         @{typ
                                                                                         "TLBEntry \<times>
                                                                                          state"}))])))),
                                                                  close
                                                                    (var_a HOLogic.unitT,
                                                                     mb(mr(close
                                                                             (var("s",
                                                                                  @{typ
                                                                                  "TLBEntry \<times>
                                                                                   state"}),
                                                                              mop(Fst,
                                                                                  var("s",
                                                                                      @{typ
                                                                                      "TLBEntry \<times>
                                                                                       state"})))),
                                                                        close
                                                                          (var("v",@{typ TLBEntry}),
                                                                           mb(mb(mb(mu(tp[var("v",
                                                                                              @{typ TLBEntry}),
                                                                                          call
                                                                                            ("EntryHi.VPN2",
                                                                                             (Word_Lib.mk_wordT 27),
                                                                                             var("eHi",
                                                                                                 @{typ EntryHi}),
                                                                                             @{theory})],
                                                                                       @{typ
                                                                                       "TLBEntry \<times>
                                                                                        state"}),
                                                                                    close
                                                                                      (var("v",
                                                                                           @{typ
                                                                                           "TLBEntry \<times>
                                                                                            27 word"}),
                                                                                       mu(rupd
                                                                                            ("TLBEntry.VPN2",
                                                                                             var("v",
                                                                                                 @{typ
                                                                                                 "TLBEntry \<times>
                                                                                                  27 word"}),
                                                                                             @{theory}),
                                                                                          @{typ
                                                                                          "TLBEntry \<times>
                                                                                           state"}))),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ TLBEntry}),
                                                                                    mw(close
                                                                                         (var("s",
                                                                                              @{typ
                                                                                              "TLBEntry \<times>
                                                                                               state"}),
                                                                                          tp[var("v",
                                                                                                 @{typ TLBEntry}),
                                                                                             mop(Snd,
                                                                                                 var("s",
                                                                                                     @{typ
                                                                                                     "TLBEntry \<times>
                                                                                                      state"}))])))),
                                                                              close
                                                                                (var_a HOLogic.unitT,
                                                                                 mb(mr(close
                                                                                         (var("s",
                                                                                              @{typ
                                                                                              "TLBEntry \<times>
                                                                                               state"}),
                                                                                          mop(Fst,
                                                                                              var("s",
                                                                                                  @{typ
                                                                                                  "TLBEntry \<times>
                                                                                                   state"})))),
                                                                                    close
                                                                                      (var("v",
                                                                                           @{typ TLBEntry}),
                                                                                       mb(mb(mb(mu(tp[var("v",
                                                                                                          @{typ TLBEntry}),
                                                                                                      call
                                                                                                        ("EntryHi.ASID",
                                                                                                         w8,
                                                                                                         var("eHi",
                                                                                                             @{typ EntryHi}),
                                                                                                         @{theory})],
                                                                                                   @{typ
                                                                                                   "TLBEntry \<times>
                                                                                                    state"}),
                                                                                                close
                                                                                                  (var("v",
                                                                                                       @{typ
                                                                                                       "TLBEntry \<times>
                                                                                                        8 word"}),
                                                                                                   mu(rupd
                                                                                                        ("TLBEntry.ASID",
                                                                                                         var("v",
                                                                                                             @{typ
                                                                                                             "TLBEntry \<times>
                                                                                                              8 word"}),
                                                                                                         @{theory}),
                                                                                                      @{typ
                                                                                                      "TLBEntry \<times>
                                                                                                       state"}))),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ TLBEntry}),
                                                                                                mw(close
                                                                                                     (var("s",
                                                                                                          @{typ
                                                                                                          "TLBEntry \<times>
                                                                                                           state"}),
                                                                                                      tp[var("v",
                                                                                                             @{typ TLBEntry}),
                                                                                                         mop(Snd,
                                                                                                             var("s",
                                                                                                                 @{typ
                                                                                                                 "TLBEntry \<times>
                                                                                                                  state"}))])))),
                                                                                          close
                                                                                            (var_a
                                                                                               HOLogic.unitT,
                                                                                             mb(mr(close
                                                                                                     (var("s",
                                                                                                          @{typ
                                                                                                          "TLBEntry \<times>
                                                                                                           state"}),
                                                                                                      mop(Fst,
                                                                                                          var("s",
                                                                                                              @{typ
                                                                                                              "TLBEntry \<times>
                                                                                                               state"})))),
                                                                                                close
                                                                                                  (var("v",
                                                                                                       @{typ TLBEntry}),
                                                                                                   mb(mb(mb(mu(tp[var("v",
                                                                                                                      @{typ TLBEntry}),
                                                                                                                  call
                                                                                                                    ("EntryLo.S",
                                                                                                                     HOLogic.boolT,
                                                                                                                     var("eLo1",
                                                                                                                         @{typ EntryLo}),
                                                                                                                     @{theory})],
                                                                                                               @{typ
                                                                                                               "TLBEntry \<times>
                                                                                                                state"}),
                                                                                                            close
                                                                                                              (var("v",
                                                                                                                   @{typ
                                                                                                                   "TLBEntry \<times>
                                                                                                                    bool"}),
                                                                                                               mu(rupd
                                                                                                                    ("TLBEntry.S1",
                                                                                                                     var("v",
                                                                                                                         @{typ
                                                                                                                         "TLBEntry \<times>
                                                                                                                          bool"}),
                                                                                                                     @{theory}),
                                                                                                                  @{typ
                                                                                                                  "TLBEntry \<times>
                                                                                                                   state"}))),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ TLBEntry}),
                                                                                                            mw(close
                                                                                                                 (var("s",
                                                                                                                      @{typ
                                                                                                                      "TLBEntry \<times>
                                                                                                                       state"}),
                                                                                                                  tp[var("v",
                                                                                                                         @{typ TLBEntry}),
                                                                                                                     mop(Snd,
                                                                                                                         var("s",
                                                                                                                             @{typ
                                                                                                                             "TLBEntry \<times>
                                                                                                                              state"}))])))),
                                                                                                      close
                                                                                                        (var_a
                                                                                                           HOLogic.unitT,
                                                                                                         mb(mr(close
                                                                                                                 (var("s",
                                                                                                                      @{typ
                                                                                                                      "TLBEntry \<times>
                                                                                                                       state"}),
                                                                                                                  mop(Fst,
                                                                                                                      var("s",
                                                                                                                          @{typ
                                                                                                                          "TLBEntry \<times>
                                                                                                                           state"})))),
                                                                                                            close
                                                                                                              (var("v",
                                                                                                                   @{typ TLBEntry}),
                                                                                                               mb(mb(mb(mu(tp[var("v",
                                                                                                                                  @{typ TLBEntry}),
                                                                                                                              call
                                                                                                                                ("EntryLo.L",
                                                                                                                                 HOLogic.boolT,
                                                                                                                                 var("eLo1",
                                                                                                                                     @{typ EntryLo}),
                                                                                                                                 @{theory})],
                                                                                                                           @{typ
                                                                                                                           "TLBEntry \<times>
                                                                                                                            state"}),
                                                                                                                        close
                                                                                                                          (var("v",
                                                                                                                               @{typ
                                                                                                                               "TLBEntry \<times>
                                                                                                                                bool"}),
                                                                                                                           mu(rupd
                                                                                                                                ("TLBEntry.L1",
                                                                                                                                 var("v",
                                                                                                                                     @{typ
                                                                                                                                     "TLBEntry \<times>
                                                                                                                                      bool"}),
                                                                                                                                 @{theory}),
                                                                                                                              @{typ
                                                                                                                              "TLBEntry \<times>
                                                                                                                               state"}))),
                                                                                                                     close
                                                                                                                       (var("v",
                                                                                                                            @{typ TLBEntry}),
                                                                                                                        mw(close
                                                                                                                             (var("s",
                                                                                                                                  @{typ
                                                                                                                                  "TLBEntry \<times>
                                                                                                                                   state"}),
                                                                                                                              tp[var("v",
                                                                                                                                     @{typ TLBEntry}),
                                                                                                                                 mop(Snd,
                                                                                                                                     var("s",
                                                                                                                                         @{typ
                                                                                                                                         "TLBEntry \<times>
                                                                                                                                          state"}))])))),
                                                                                                                  close
                                                                                                                    (var_a
                                                                                                                       HOLogic.unitT,
                                                                                                                     mb(mr(close
                                                                                                                             (var("s",
                                                                                                                                  @{typ
                                                                                                                                  "TLBEntry \<times>
                                                                                                                                   state"}),
                                                                                                                              mop(Fst,
                                                                                                                                  var("s",
                                                                                                                                      @{typ
                                                                                                                                      "TLBEntry \<times>
                                                                                                                                       state"})))),
                                                                                                                        close
                                                                                                                          (var("v",
                                                                                                                               @{typ TLBEntry}),
                                                                                                                           mb(mb(mb(mu(tp[var("v",
                                                                                                                                              @{typ TLBEntry}),
                                                                                                                                          call
                                                                                                                                            ("EntryLo.PFN",
                                                                                                                                             (Word_Lib.mk_wordT 28),
                                                                                                                                             var("eLo1",
                                                                                                                                                 @{typ EntryLo}),
                                                                                                                                             @{theory})],
                                                                                                                                       @{typ
                                                                                                                                       "TLBEntry \<times>
                                                                                                                                        state"}),
                                                                                                                                    close
                                                                                                                                      (var("v",
                                                                                                                                           @{typ
                                                                                                                                           "TLBEntry \<times>
                                                                                                                                            28 word"}),
                                                                                                                                       mu(rupd
                                                                                                                                            ("TLBEntry.PFN1",
                                                                                                                                             var("v",
                                                                                                                                                 @{typ
                                                                                                                                                 "TLBEntry \<times>
                                                                                                                                                  28 word"}),
                                                                                                                                             @{theory}),
                                                                                                                                          @{typ
                                                                                                                                          "TLBEntry \<times>
                                                                                                                                           state"}))),
                                                                                                                                 close
                                                                                                                                   (var("v",
                                                                                                                                        @{typ TLBEntry}),
                                                                                                                                    mw(close
                                                                                                                                         (var("s",
                                                                                                                                              @{typ
                                                                                                                                              "TLBEntry \<times>
                                                                                                                                               state"}),
                                                                                                                                          tp[var("v",
                                                                                                                                                 @{typ TLBEntry}),
                                                                                                                                             mop(Snd,
                                                                                                                                                 var("s",
                                                                                                                                                     @{typ
                                                                                                                                                     "TLBEntry \<times>
                                                                                                                                                      state"}))])))),
                                                                                                                              close
                                                                                                                                (var_a
                                                                                                                                   HOLogic.unitT,
                                                                                                                                 mb(mr(close
                                                                                                                                         (var("s",
                                                                                                                                              @{typ
                                                                                                                                              "TLBEntry \<times>
                                                                                                                                               state"}),
                                                                                                                                          mop(Fst,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "TLBEntry \<times>
                                                                                                                                                   state"})))),
                                                                                                                                    close
                                                                                                                                      (var("v",
                                                                                                                                           @{typ TLBEntry}),
                                                                                                                                       mb(mb(mb(mu(tp[var("v",
                                                                                                                                                          @{typ TLBEntry}),
                                                                                                                                                      call
                                                                                                                                                        ("EntryLo.C",
                                                                                                                                                         (Word_Lib.mk_wordT 3),
                                                                                                                                                         var("eLo1",
                                                                                                                                                             @{typ EntryLo}),
                                                                                                                                                         @{theory})],
                                                                                                                                                   @{typ
                                                                                                                                                   "TLBEntry \<times>
                                                                                                                                                    state"}),
                                                                                                                                                close
                                                                                                                                                  (var("v",
                                                                                                                                                       @{typ
                                                                                                                                                       "TLBEntry \<times>
                                                                                                                                                        3 word"}),
                                                                                                                                                   mu(rupd
                                                                                                                                                        ("TLBEntry.C1",
                                                                                                                                                         var("v",
                                                                                                                                                             @{typ
                                                                                                                                                             "TLBEntry \<times>
                                                                                                                                                              3 word"}),
                                                                                                                                                         @{theory}),
                                                                                                                                                      @{typ
                                                                                                                                                      "TLBEntry \<times>
                                                                                                                                                       state"}))),
                                                                                                                                             close
                                                                                                                                               (var("v",
                                                                                                                                                    @{typ TLBEntry}),
                                                                                                                                                mw(close
                                                                                                                                                     (var("s",
                                                                                                                                                          @{typ
                                                                                                                                                          "TLBEntry \<times>
                                                                                                                                                           state"}),
                                                                                                                                                      tp[var("v",
                                                                                                                                                             @{typ TLBEntry}),
                                                                                                                                                         mop(Snd,
                                                                                                                                                             var("s",
                                                                                                                                                                 @{typ
                                                                                                                                                                 "TLBEntry \<times>
                                                                                                                                                                  state"}))])))),
                                                                                                                                          close
                                                                                                                                            (var_a
                                                                                                                                               HOLogic.unitT,
                                                                                                                                             mb(mr(close
                                                                                                                                                     (var("s",
                                                                                                                                                          @{typ
                                                                                                                                                          "TLBEntry \<times>
                                                                                                                                                           state"}),
                                                                                                                                                      mop(Fst,
                                                                                                                                                          var("s",
                                                                                                                                                              @{typ
                                                                                                                                                              "TLBEntry \<times>
                                                                                                                                                               state"})))),
                                                                                                                                                close
                                                                                                                                                  (var("v",
                                                                                                                                                       @{typ TLBEntry}),
                                                                                                                                                   mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                      @{typ TLBEntry}),
                                                                                                                                                                  call
                                                                                                                                                                    ("EntryLo.D",
                                                                                                                                                                     HOLogic.boolT,
                                                                                                                                                                     var("eLo1",
                                                                                                                                                                         @{typ EntryLo}),
                                                                                                                                                                     @{theory})],
                                                                                                                                                               @{typ
                                                                                                                                                               "TLBEntry \<times>
                                                                                                                                                                state"}),
                                                                                                                                                            close
                                                                                                                                                              (var("v",
                                                                                                                                                                   @{typ
                                                                                                                                                                   "TLBEntry \<times>
                                                                                                                                                                    bool"}),
                                                                                                                                                               mu(rupd
                                                                                                                                                                    ("TLBEntry.D1",
                                                                                                                                                                     var("v",
                                                                                                                                                                         @{typ
                                                                                                                                                                         "TLBEntry \<times>
                                                                                                                                                                          bool"}),
                                                                                                                                                                     @{theory}),
                                                                                                                                                                  @{typ
                                                                                                                                                                  "TLBEntry \<times>
                                                                                                                                                                   state"}))),
                                                                                                                                                         close
                                                                                                                                                           (var("v",
                                                                                                                                                                @{typ TLBEntry}),
                                                                                                                                                            mw(close
                                                                                                                                                                 (var("s",
                                                                                                                                                                      @{typ
                                                                                                                                                                      "TLBEntry \<times>
                                                                                                                                                                       state"}),
                                                                                                                                                                  tp[var("v",
                                                                                                                                                                         @{typ TLBEntry}),
                                                                                                                                                                     mop(Snd,
                                                                                                                                                                         var("s",
                                                                                                                                                                             @{typ
                                                                                                                                                                             "TLBEntry \<times>
                                                                                                                                                                              state"}))])))),
                                                                                                                                                      close
                                                                                                                                                        (var_a
                                                                                                                                                           HOLogic.unitT,
                                                                                                                                                         mb(mr(close
                                                                                                                                                                 (var("s",
                                                                                                                                                                      @{typ
                                                                                                                                                                      "TLBEntry \<times>
                                                                                                                                                                       state"}),
                                                                                                                                                                  mop(Fst,
                                                                                                                                                                      var("s",
                                                                                                                                                                          @{typ
                                                                                                                                                                          "TLBEntry \<times>
                                                                                                                                                                           state"})))),
                                                                                                                                                            close
                                                                                                                                                              (var("v",
                                                                                                                                                                   @{typ TLBEntry}),
                                                                                                                                                               mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                  @{typ TLBEntry}),
                                                                                                                                                                              call
                                                                                                                                                                                ("EntryLo.V",
                                                                                                                                                                                 HOLogic.boolT,
                                                                                                                                                                                 var("eLo1",
                                                                                                                                                                                     @{typ EntryLo}),
                                                                                                                                                                                 @{theory})],
                                                                                                                                                                           @{typ
                                                                                                                                                                           "TLBEntry \<times>
                                                                                                                                                                            state"}),
                                                                                                                                                                        close
                                                                                                                                                                          (var("v",
                                                                                                                                                                               @{typ
                                                                                                                                                                               "TLBEntry \<times>
                                                                                                                                                                                bool"}),
                                                                                                                                                                           mu(rupd
                                                                                                                                                                                ("TLBEntry.V1",
                                                                                                                                                                                 var("v",
                                                                                                                                                                                     @{typ
                                                                                                                                                                                     "TLBEntry \<times>
                                                                                                                                                                                      bool"}),
                                                                                                                                                                                 @{theory}),
                                                                                                                                                                              @{typ
                                                                                                                                                                              "TLBEntry \<times>
                                                                                                                                                                               state"}))),
                                                                                                                                                                     close
                                                                                                                                                                       (var("v",
                                                                                                                                                                            @{typ TLBEntry}),
                                                                                                                                                                        mw(close
                                                                                                                                                                             (var("s",
                                                                                                                                                                                  @{typ
                                                                                                                                                                                  "TLBEntry \<times>
                                                                                                                                                                                   state"}),
                                                                                                                                                                              tp[var("v",
                                                                                                                                                                                     @{typ TLBEntry}),
                                                                                                                                                                                 mop(Snd,
                                                                                                                                                                                     var("s",
                                                                                                                                                                                         @{typ
                                                                                                                                                                                         "TLBEntry \<times>
                                                                                                                                                                                          state"}))])))),
                                                                                                                                                                  close
                                                                                                                                                                    (var_a
                                                                                                                                                                       HOLogic.unitT,
                                                                                                                                                                     mb(mr(close
                                                                                                                                                                             (var("s",
                                                                                                                                                                                  @{typ
                                                                                                                                                                                  "TLBEntry \<times>
                                                                                                                                                                                   state"}),
                                                                                                                                                                              mop(Fst,
                                                                                                                                                                                  var("s",
                                                                                                                                                                                      @{typ
                                                                                                                                                                                      "TLBEntry \<times>
                                                                                                                                                                                       state"})))),
                                                                                                                                                                        close
                                                                                                                                                                          (var("v",
                                                                                                                                                                               @{typ TLBEntry}),
                                                                                                                                                                           mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                              @{typ TLBEntry}),
                                                                                                                                                                                          bop(And,
                                                                                                                                                                                              call
                                                                                                                                                                                                ("EntryLo.G",
                                                                                                                                                                                                 HOLogic.boolT,
                                                                                                                                                                                                 var("eLo1",
                                                                                                                                                                                                     @{typ EntryLo}),
                                                                                                                                                                                                 @{theory}),
                                                                                                                                                                                              call
                                                                                                                                                                                                ("EntryLo.G",
                                                                                                                                                                                                 HOLogic.boolT,
                                                                                                                                                                                                 var("eLo0",
                                                                                                                                                                                                     @{typ EntryLo}),
                                                                                                                                                                                                 @{theory}))],
                                                                                                                                                                                       @{typ
                                                                                                                                                                                       "TLBEntry \<times>
                                                                                                                                                                                        state"}),
                                                                                                                                                                                    close
                                                                                                                                                                                      (var("v",
                                                                                                                                                                                           @{typ
                                                                                                                                                                                           "TLBEntry \<times>
                                                                                                                                                                                            bool"}),
                                                                                                                                                                                       mu(rupd
                                                                                                                                                                                            ("TLBEntry.G",
                                                                                                                                                                                             var("v",
                                                                                                                                                                                                 @{typ
                                                                                                                                                                                                 "TLBEntry \<times>
                                                                                                                                                                                                  bool"}),
                                                                                                                                                                                             @{theory}),
                                                                                                                                                                                          @{typ
                                                                                                                                                                                          "TLBEntry \<times>
                                                                                                                                                                                           state"}))),
                                                                                                                                                                                 close
                                                                                                                                                                                   (var("v",
                                                                                                                                                                                        @{typ TLBEntry}),
                                                                                                                                                                                    mw(close
                                                                                                                                                                                         (var("s",
                                                                                                                                                                                              @{typ
                                                                                                                                                                                              "TLBEntry \<times>
                                                                                                                                                                                               state"}),
                                                                                                                                                                                          tp[var("v",
                                                                                                                                                                                                 @{typ TLBEntry}),
                                                                                                                                                                                             mop(Snd,
                                                                                                                                                                                                 var("s",
                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                     "TLBEntry \<times>
                                                                                                                                                                                                      state"}))])))),
                                                                                                                                                                              close
                                                                                                                                                                                (var_a
                                                                                                                                                                                   HOLogic.unitT,
                                                                                                                                                                                 mb(mr(close
                                                                                                                                                                                         (var("s",
                                                                                                                                                                                              @{typ
                                                                                                                                                                                              "TLBEntry \<times>
                                                                                                                                                                                               state"}),
                                                                                                                                                                                          mop(Fst,
                                                                                                                                                                                              var("s",
                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                  "TLBEntry \<times>
                                                                                                                                                                                                   state"})))),
                                                                                                                                                                                    close
                                                                                                                                                                                      (var("v",
                                                                                                                                                                                           @{typ TLBEntry}),
                                                                                                                                                                                       mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                                          @{typ TLBEntry}),
                                                                                                                                                                                                      call
                                                                                                                                                                                                        ("EntryLo.S",
                                                                                                                                                                                                         HOLogic.boolT,
                                                                                                                                                                                                         var("eLo0",
                                                                                                                                                                                                             @{typ EntryLo}),
                                                                                                                                                                                                         @{theory})],
                                                                                                                                                                                                   @{typ
                                                                                                                                                                                                   "TLBEntry \<times>
                                                                                                                                                                                                    state"}),
                                                                                                                                                                                                close
                                                                                                                                                                                                  (var("v",
                                                                                                                                                                                                       @{typ
                                                                                                                                                                                                       "TLBEntry \<times>
                                                                                                                                                                                                        bool"}),
                                                                                                                                                                                                   mu(rupd
                                                                                                                                                                                                        ("TLBEntry.S0",
                                                                                                                                                                                                         var("v",
                                                                                                                                                                                                             @{typ
                                                                                                                                                                                                             "TLBEntry \<times>
                                                                                                                                                                                                              bool"}),
                                                                                                                                                                                                         @{theory}),
                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                      "TLBEntry \<times>
                                                                                                                                                                                                       state"}))),
                                                                                                                                                                                             close
                                                                                                                                                                                               (var("v",
                                                                                                                                                                                                    @{typ TLBEntry}),
                                                                                                                                                                                                mw(close
                                                                                                                                                                                                     (var("s",
                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                          "TLBEntry \<times>
                                                                                                                                                                                                           state"}),
                                                                                                                                                                                                      tp[var("v",
                                                                                                                                                                                                             @{typ TLBEntry}),
                                                                                                                                                                                                         mop(Snd,
                                                                                                                                                                                                             var("s",
                                                                                                                                                                                                                 @{typ
                                                                                                                                                                                                                 "TLBEntry \<times>
                                                                                                                                                                                                                  state"}))])))),
                                                                                                                                                                                          close
                                                                                                                                                                                            (var_a
                                                                                                                                                                                               HOLogic.unitT,
                                                                                                                                                                                             mb(mr(close
                                                                                                                                                                                                     (var("s",
                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                          "TLBEntry \<times>
                                                                                                                                                                                                           state"}),
                                                                                                                                                                                                      mop(Fst,
                                                                                                                                                                                                          var("s",
                                                                                                                                                                                                              @{typ
                                                                                                                                                                                                              "TLBEntry \<times>
                                                                                                                                                                                                               state"})))),
                                                                                                                                                                                                close
                                                                                                                                                                                                  (var("v",
                                                                                                                                                                                                       @{typ TLBEntry}),
                                                                                                                                                                                                   mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                                                      @{typ TLBEntry}),
                                                                                                                                                                                                                  call
                                                                                                                                                                                                                    ("EntryLo.L",
                                                                                                                                                                                                                     HOLogic.boolT,
                                                                                                                                                                                                                     var("eLo0",
                                                                                                                                                                                                                         @{typ EntryLo}),
                                                                                                                                                                                                                     @{theory})],
                                                                                                                                                                                                               @{typ
                                                                                                                                                                                                               "TLBEntry \<times>
                                                                                                                                                                                                                state"}),
                                                                                                                                                                                                            close
                                                                                                                                                                                                              (var("v",
                                                                                                                                                                                                                   @{typ
                                                                                                                                                                                                                   "TLBEntry \<times>
                                                                                                                                                                                                                    bool"}),
                                                                                                                                                                                                               mu(rupd
                                                                                                                                                                                                                    ("TLBEntry.L0",
                                                                                                                                                                                                                     var("v",
                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                         "TLBEntry \<times>
                                                                                                                                                                                                                          bool"}),
                                                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                  "TLBEntry \<times>
                                                                                                                                                                                                                   state"}))),
                                                                                                                                                                                                         close
                                                                                                                                                                                                           (var("v",
                                                                                                                                                                                                                @{typ TLBEntry}),
                                                                                                                                                                                                            mw(close
                                                                                                                                                                                                                 (var("s",
                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                      "TLBEntry \<times>
                                                                                                                                                                                                                       state"}),
                                                                                                                                                                                                                  tp[var("v",
                                                                                                                                                                                                                         @{typ TLBEntry}),
                                                                                                                                                                                                                     mop(Snd,
                                                                                                                                                                                                                         var("s",
                                                                                                                                                                                                                             @{typ
                                                                                                                                                                                                                             "TLBEntry \<times>
                                                                                                                                                                                                                              state"}))])))),
                                                                                                                                                                                                      close
                                                                                                                                                                                                        (var_a
                                                                                                                                                                                                           HOLogic.unitT,
                                                                                                                                                                                                         mb(mr(close
                                                                                                                                                                                                                 (var("s",
                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                      "TLBEntry \<times>
                                                                                                                                                                                                                       state"}),
                                                                                                                                                                                                                  mop(Fst,
                                                                                                                                                                                                                      var("s",
                                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                                          "TLBEntry \<times>
                                                                                                                                                                                                                           state"})))),
                                                                                                                                                                                                            close
                                                                                                                                                                                                              (var("v",
                                                                                                                                                                                                                   @{typ TLBEntry}),
                                                                                                                                                                                                               mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                                                                  @{typ TLBEntry}),
                                                                                                                                                                                                                              call
                                                                                                                                                                                                                                ("EntryLo.PFN",
                                                                                                                                                                                                                                 (Word_Lib.mk_wordT 28),
                                                                                                                                                                                                                                 var("eLo0",
                                                                                                                                                                                                                                     @{typ EntryLo}),
                                                                                                                                                                                                                                 @{theory})],
                                                                                                                                                                                                                           @{typ
                                                                                                                                                                                                                           "TLBEntry \<times>
                                                                                                                                                                                                                            state"}),
                                                                                                                                                                                                                        close
                                                                                                                                                                                                                          (var("v",
                                                                                                                                                                                                                               @{typ
                                                                                                                                                                                                                               "TLBEntry \<times>
                                                                                                                                                                                                                                28 word"}),
                                                                                                                                                                                                                           mu(rupd
                                                                                                                                                                                                                                ("TLBEntry.PFN0",
                                                                                                                                                                                                                                 var("v",
                                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                                     "TLBEntry \<times>
                                                                                                                                                                                                                                      28 word"}),
                                                                                                                                                                                                                                 @{theory}),
                                                                                                                                                                                                                              @{typ
                                                                                                                                                                                                                              "TLBEntry \<times>
                                                                                                                                                                                                                               state"}))),
                                                                                                                                                                                                                     close
                                                                                                                                                                                                                       (var("v",
                                                                                                                                                                                                                            @{typ TLBEntry}),
                                                                                                                                                                                                                        mw(close
                                                                                                                                                                                                                             (var("s",
                                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                                  "TLBEntry \<times>
                                                                                                                                                                                                                                   state"}),
                                                                                                                                                                                                                              tp[var("v",
                                                                                                                                                                                                                                     @{typ TLBEntry}),
                                                                                                                                                                                                                                 mop(Snd,
                                                                                                                                                                                                                                     var("s",
                                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                                         "TLBEntry \<times>
                                                                                                                                                                                                                                          state"}))])))),
                                                                                                                                                                                                                  close
                                                                                                                                                                                                                    (var_a
                                                                                                                                                                                                                       HOLogic.unitT,
                                                                                                                                                                                                                     mb(mr(close
                                                                                                                                                                                                                             (var("s",
                                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                                  "TLBEntry \<times>
                                                                                                                                                                                                                                   state"}),
                                                                                                                                                                                                                              mop(Fst,
                                                                                                                                                                                                                                  var("s",
                                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                                      "TLBEntry \<times>
                                                                                                                                                                                                                                       state"})))),
                                                                                                                                                                                                                        close
                                                                                                                                                                                                                          (var("v",
                                                                                                                                                                                                                               @{typ TLBEntry}),
                                                                                                                                                                                                                           mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                                                                              @{typ TLBEntry}),
                                                                                                                                                                                                                                          call
                                                                                                                                                                                                                                            ("EntryLo.C",
                                                                                                                                                                                                                                             (Word_Lib.mk_wordT 3),
                                                                                                                                                                                                                                             var("eLo0",
                                                                                                                                                                                                                                                 @{typ EntryLo}),
                                                                                                                                                                                                                                             @{theory})],
                                                                                                                                                                                                                                       @{typ
                                                                                                                                                                                                                                       "TLBEntry \<times>
                                                                                                                                                                                                                                        state"}),
                                                                                                                                                                                                                                    close
                                                                                                                                                                                                                                      (var("v",
                                                                                                                                                                                                                                           @{typ
                                                                                                                                                                                                                                           "TLBEntry \<times>
                                                                                                                                                                                                                                            3 word"}),
                                                                                                                                                                                                                                       mu(rupd
                                                                                                                                                                                                                                            ("TLBEntry.C0",
                                                                                                                                                                                                                                             var("v",
                                                                                                                                                                                                                                                 @{typ
                                                                                                                                                                                                                                                 "TLBEntry \<times>
                                                                                                                                                                                                                                                  3 word"}),
                                                                                                                                                                                                                                             @{theory}),
                                                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                                                          "TLBEntry \<times>
                                                                                                                                                                                                                                           state"}))),
                                                                                                                                                                                                                                 close
                                                                                                                                                                                                                                   (var("v",
                                                                                                                                                                                                                                        @{typ TLBEntry}),
                                                                                                                                                                                                                                    mw(close
                                                                                                                                                                                                                                         (var("s",
                                                                                                                                                                                                                                              @{typ
                                                                                                                                                                                                                                              "TLBEntry \<times>
                                                                                                                                                                                                                                               state"}),
                                                                                                                                                                                                                                          tp[var("v",
                                                                                                                                                                                                                                                 @{typ TLBEntry}),
                                                                                                                                                                                                                                             mop(Snd,
                                                                                                                                                                                                                                                 var("s",
                                                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                                                     "TLBEntry \<times>
                                                                                                                                                                                                                                                      state"}))])))),
                                                                                                                                                                                                                              close
                                                                                                                                                                                                                                (var_a
                                                                                                                                                                                                                                   HOLogic.unitT,
                                                                                                                                                                                                                                 mb(mr(close
                                                                                                                                                                                                                                         (var("s",
                                                                                                                                                                                                                                              @{typ
                                                                                                                                                                                                                                              "TLBEntry \<times>
                                                                                                                                                                                                                                               state"}),
                                                                                                                                                                                                                                          mop(Fst,
                                                                                                                                                                                                                                              var("s",
                                                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                                                  "TLBEntry \<times>
                                                                                                                                                                                                                                                   state"})))),
                                                                                                                                                                                                                                    close
                                                                                                                                                                                                                                      (var("v",
                                                                                                                                                                                                                                           @{typ TLBEntry}),
                                                                                                                                                                                                                                       mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                                                                                          @{typ TLBEntry}),
                                                                                                                                                                                                                                                      call
                                                                                                                                                                                                                                                        ("EntryLo.D",
                                                                                                                                                                                                                                                         HOLogic.boolT,
                                                                                                                                                                                                                                                         var("eLo0",
                                                                                                                                                                                                                                                             @{typ EntryLo}),
                                                                                                                                                                                                                                                         @{theory})],
                                                                                                                                                                                                                                                   @{typ
                                                                                                                                                                                                                                                   "TLBEntry \<times>
                                                                                                                                                                                                                                                    state"}),
                                                                                                                                                                                                                                                close
                                                                                                                                                                                                                                                  (var("v",
                                                                                                                                                                                                                                                       @{typ
                                                                                                                                                                                                                                                       "TLBEntry \<times>
                                                                                                                                                                                                                                                        bool"}),
                                                                                                                                                                                                                                                   mu(rupd
                                                                                                                                                                                                                                                        ("TLBEntry.D0",
                                                                                                                                                                                                                                                         var("v",
                                                                                                                                                                                                                                                             @{typ
                                                                                                                                                                                                                                                             "TLBEntry \<times>
                                                                                                                                                                                                                                                              bool"}),
                                                                                                                                                                                                                                                         @{theory}),
                                                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                                                      "TLBEntry \<times>
                                                                                                                                                                                                                                                       state"}))),
                                                                                                                                                                                                                                             close
                                                                                                                                                                                                                                               (var("v",
                                                                                                                                                                                                                                                    @{typ TLBEntry}),
                                                                                                                                                                                                                                                mw(close
                                                                                                                                                                                                                                                     (var("s",
                                                                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                                                                          "TLBEntry \<times>
                                                                                                                                                                                                                                                           state"}),
                                                                                                                                                                                                                                                      tp[var("v",
                                                                                                                                                                                                                                                             @{typ TLBEntry}),
                                                                                                                                                                                                                                                         mop(Snd,
                                                                                                                                                                                                                                                             var("s",
                                                                                                                                                                                                                                                                 @{typ
                                                                                                                                                                                                                                                                 "TLBEntry \<times>
                                                                                                                                                                                                                                                                  state"}))])))),
                                                                                                                                                                                                                                          close
                                                                                                                                                                                                                                            (var_a
                                                                                                                                                                                                                                               HOLogic.unitT,
                                                                                                                                                                                                                                             mb(mr(close
                                                                                                                                                                                                                                                     (var("s",
                                                                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                                                                          "TLBEntry \<times>
                                                                                                                                                                                                                                                           state"}),
                                                                                                                                                                                                                                                      mop(Fst,
                                                                                                                                                                                                                                                          var("s",
                                                                                                                                                                                                                                                              @{typ
                                                                                                                                                                                                                                                              "TLBEntry \<times>
                                                                                                                                                                                                                                                               state"})))),
                                                                                                                                                                                                                                                close
                                                                                                                                                                                                                                                  (var("v",
                                                                                                                                                                                                                                                       @{typ TLBEntry}),
                                                                                                                                                                                                                                                   mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                                                                                                      @{typ TLBEntry}),
                                                                                                                                                                                                                                                                  call
                                                                                                                                                                                                                                                                    ("EntryLo.V",
                                                                                                                                                                                                                                                                     HOLogic.boolT,
                                                                                                                                                                                                                                                                     var("eLo0",
                                                                                                                                                                                                                                                                         @{typ EntryLo}),
                                                                                                                                                                                                                                                                     @{theory})],
                                                                                                                                                                                                                                                               @{typ
                                                                                                                                                                                                                                                               "TLBEntry \<times>
                                                                                                                                                                                                                                                                state"}),
                                                                                                                                                                                                                                                            close
                                                                                                                                                                                                                                                              (var("v",
                                                                                                                                                                                                                                                                   @{typ
                                                                                                                                                                                                                                                                   "TLBEntry \<times>
                                                                                                                                                                                                                                                                    bool"}),
                                                                                                                                                                                                                                                               mu(rupd
                                                                                                                                                                                                                                                                    ("TLBEntry.V0",
                                                                                                                                                                                                                                                                     var("v",
                                                                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                                                                         "TLBEntry \<times>
                                                                                                                                                                                                                                                                          bool"}),
                                                                                                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                                                                  "TLBEntry \<times>
                                                                                                                                                                                                                                                                   state"}))),
                                                                                                                                                                                                                                                         close
                                                                                                                                                                                                                                                           (var("v",
                                                                                                                                                                                                                                                                @{typ TLBEntry}),
                                                                                                                                                                                                                                                            mw(close
                                                                                                                                                                                                                                                                 (var("s",
                                                                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                                                                      "TLBEntry \<times>
                                                                                                                                                                                                                                                                       state"}),
                                                                                                                                                                                                                                                                  tp[var("v",
                                                                                                                                                                                                                                                                         @{typ TLBEntry}),
                                                                                                                                                                                                                                                                     mop(Snd,
                                                                                                                                                                                                                                                                         var("s",
                                                                                                                                                                                                                                                                             @{typ
                                                                                                                                                                                                                                                                             "TLBEntry \<times>
                                                                                                                                                                                                                                                                              state"}))])))),
                                                                                                                                                                                                                                                      close
                                                                                                                                                                                                                                                        (var_a
                                                                                                                                                                                                                                                           HOLogic.unitT,
                                                                                                                                                                                                                                                         mr(close
                                                                                                                                                                                                                                                              (var("s",
                                                                                                                                                                                                                                                                   @{typ
                                                                                                                                                                                                                                                                   "TLBEntry \<times>
                                                                                                                                                                                                                                                                    state"}),
                                                                                                                                                                                                                                                               mop(Fst,
                                                                                                                                                                                                                                                                   var("s",
                                                                                                                                                                                                                                                                       @{typ
                                                                                                                                                                                                                                                                       "TLBEntry \<times>
                                                                                                                                                                                                                                                                        state"})))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SignalTLBCapException",
   close
     (tp[var("capException",@{typ CapExceptionType}),var_w("asid",8),var_w("vAddr",64)],
      mb(call
           ("SignalTLBException_internal",@{typ "state \<Rightarrow> (unit \<times> state)"},
            tp[var_w("asid",8),var_w("vAddr",64)],@{theory}),
         close
           (var_a HOLogic.unitT,
            mb(call
                 ("SignalCapException_noReg",@{typ "state \<Rightarrow> (unit \<times> state)"},
                  var("capException",@{typ CapExceptionType}),@{theory}),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("next_unknown",
                        @{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                        ls"tlb-cap-exception",@{theory}),
                     close(var("v",@{typ "nat \<times> string"}),mu(lu,qTy)))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TLBP",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU0",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const
                           ("KernelMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                            @{theory}),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),mu(lf,qTy)))),
            close
              (var_b"b",
               ite(var_b"b",
                   call
                     ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      lc("CpU","ExceptionType",@{theory}),@{theory}),
                   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                      close
                        (var("v",@{typ CP0}),
                         mb(mb(mb(mb(mu(call
                                          ("CP0.EntryHi",@{typ EntryHi},var("v",@{typ CP0}),
                                           @{theory}),qTy),
                                     close
                                       (var("v",@{typ EntryHi}),
                                        mu(call
                                             ("EntryHi.R",(Word_Lib.mk_wordT 2),
                                              var("v",@{typ EntryHi}),@{theory}),qTy))),
                                  close
                                    (var_w("v",2),
                                     mb(const
                                          ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                           @{theory}),
                                        close
                                          (var("v0",@{typ CP0}),
                                           mb(mb(mu(call
                                                      ("CP0.EntryHi",@{typ EntryHi},
                                                       var("v0",@{typ CP0}),@{theory}),qTy),
                                                 close
                                                   (var("v",@{typ EntryHi}),
                                                    mu(call
                                                         ("EntryHi.VPN2",(Word_Lib.mk_wordT 27),
                                                          var("v",@{typ EntryHi}),@{theory}),qTy))),
                                              close
                                                (var_w("v0",27),
                                                 mu(tp[var_w("v",2),var_w("v0",27)],qTy))))))),
                               close
                                 (var("v",@{typ "2 word \<times> 27 word"}),
                                  call
                                    ("LookupTLB",
                                     @{typ
                                     "state \<Rightarrow>
                                      (((9 word \<times> TLBEntry) list) \<times> state)"},
                                     var("v",@{typ "2 word \<times> 27 word"}),@{theory}))),
                            close
                              (var("x",@{typ "(9 word \<times> TLBEntry) list"}),
                               cs(var("x",@{typ "(9 word \<times> TLBEntry) list"}),
                                  [(lnl(@{typ "9 word \<times> TLBEntry"}),
                                    mb(const
                                         ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                          @{theory}),
                                       close
                                         (var("v",@{typ CP0}),
                                          mb(call
                                               ("write'CP0",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                rupd
                                                  ("CP0.Index",
                                                   tp[var("v",@{typ CP0}),
                                                      rupd
                                                        ("Index.P",
                                                         tp[call
                                                              ("CP0.Index",@{typ Index},
                                                               var("v",@{typ CP0}),@{theory}),lt],
                                                         @{theory})],@{theory}),@{theory}),
                                             close
                                               (var_a HOLogic.unitT,
                                                mb(const
                                                     ("CP0",
                                                      @{typ
                                                      "state \<Rightarrow> (CP0 \<times> state)"},
                                                      @{theory}),
                                                   close
                                                     (var("x",@{typ CP0}),
                                                      mb(call
                                                           ("next_unknown",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             ((nat \<times> string) \<times> state)"},
                                                            ls"tlb-index",@{theory}),
                                                         close
                                                           (var("v",@{typ "nat \<times> string"}),
                                                            mb(mb(mb(mb(mb(mu(apply
                                                                                (lx(@{typ
                                                                                    "(nat \<times>
                                                                                      string) \<Rightarrow>
                                                                                     9 word"}),
                                                                                 var("v",
                                                                                     @{typ
                                                                                     "nat \<times>
                                                                                      string"})),qTy),
                                                                           close
                                                                             (var_w("v",9),
                                                                              mu(tp[call
                                                                                      ("CP0.Index",
                                                                                       @{typ Index},
                                                                                       var("x",
                                                                                           @{typ CP0}),
                                                                                       @{theory}),
                                                                                    var_w("v",9)],
                                                                                 qTy))),
                                                                        close
                                                                          (var("v",
                                                                               @{typ
                                                                               "Index \<times>
                                                                                9 word"}),
                                                                           mu(rupd
                                                                                ("Index.Index",
                                                                                 var("v",
                                                                                     @{typ
                                                                                     "Index \<times>
                                                                                      9 word"}),
                                                                                 @{theory}),qTy))),
                                                                     close
                                                                       (var("v",@{typ Index}),
                                                                        mu(tp[var("x",@{typ CP0}),
                                                                              var("v",@{typ Index})],
                                                                           qTy))),
                                                                  close
                                                                    (var("v",
                                                                         @{typ "CP0 \<times> Index"}),
                                                                     mu(rupd
                                                                          ("CP0.Index",
                                                                           var("v",
                                                                               @{typ
                                                                               "CP0 \<times> Index"}),
                                                                           @{theory}),qTy))),
                                                               close
                                                                 (var("v",@{typ CP0}),
                                                                  call
                                                                    ("write'CP0",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     var("v",@{typ CP0}),@{theory})))))))))))),
                                   (ll[tp[var_w("i",9),var_a @{typ TLBEntry}]],
                                    mb(const
                                         ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                          @{theory}),
                                       close
                                         (var("v",@{typ CP0}),
                                          mb(call
                                               ("write'CP0",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                rupd
                                                  ("CP0.Index",
                                                   tp[var("v",@{typ CP0}),
                                                      rupd
                                                        ("Index.P",
                                                         tp[call
                                                              ("CP0.Index",@{typ Index},
                                                               var("v",@{typ CP0}),@{theory}),lf],
                                                         @{theory})],@{theory}),@{theory}),
                                             close
                                               (var_a HOLogic.unitT,
                                                mb(const
                                                     ("CP0",
                                                      @{typ
                                                      "state \<Rightarrow> (CP0 \<times> state)"},
                                                      @{theory}),
                                                   close
                                                     (var("x",@{typ CP0}),
                                                      call
                                                        ("write'CP0",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         rupd
                                                           ("CP0.Index",
                                                            tp[var("x",@{typ CP0}),
                                                               rupd
                                                                 ("Index.Index",
                                                                  tp[call
                                                                       ("CP0.Index",@{typ Index},
                                                                        var("x",@{typ CP0}),
                                                                        @{theory}),var_w("i",9)],
                                                                  @{theory})],@{theory}),@{theory})))))))),
                                   (var_a(@{typ "(9 word \<times> TLBEntry) list"}),
                                    call
                                      ("raise'exception",
                                       @{typ "state \<Rightarrow> (unit \<times> state)"},
                                       call
                                         ("exception.UNPREDICTABLE",@{typ exception},
                                          ls"TLB: multiple matches",@{theory}),@{theory}))],
                                  @{context})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TLBR",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU0",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const
                           ("KernelMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                            @{theory}),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),mu(lf,qTy)))),
            close
              (var_b"b",
               ite(var_b"b",
                   call
                     ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      lc("CpU","ExceptionType",@{theory}),@{theory}),
                   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                      close
                        (var("v",@{typ CP0}),
                         mb(mb(mu(call("CP0.Index",@{typ Index},var("v",@{typ CP0}),@{theory}),qTy),
                               close
                                 (var("v",@{typ Index}),
                                  mu(call
                                       ("Index.Index",(Word_Lib.mk_wordT 9),var("v",@{typ Index}),
                                        @{theory}),qTy))),
                            close
                              (var_w("i",9),
                               mb(ite(bop(Ge,mop(Cast HOLogic.natT,var_w("i",9)),
                                          const("TLBAssocEntries",HOLogic.natT,@{theory})),
                                      call
                                        ("TLB_direct",
                                         @{typ
                                         "state \<Rightarrow> ((TLBEntry option) \<times> state)"},
                                         ex(var_w("i",9),ln 7,ln 0,w8),@{theory}),
                                      call
                                        ("TLB_assoc",
                                         @{typ
                                         "state \<Rightarrow> ((TLBEntry option) \<times> state)"},
                                         mop(Cast w4,var_w("i",9)),@{theory})),
                                  close
                                    (var("x",@{typ "TLBEntry option"}),
                                     cs(var("x",@{typ "TLBEntry option"}),
                                        [(mop(Some,var("e",@{typ TLBEntry})),
                                          mb(const
                                               ("CP0",
                                                @{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                                @{theory}),
                                             close
                                               (var("v",@{typ CP0}),
                                                mb(call
                                                     ("write'CP0",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      rupd
                                                        ("CP0.PageMask",
                                                         tp[var("v",@{typ CP0}),
                                                            rupd
                                                              ("PageMask.Mask",
                                                               tp[call
                                                                    ("CP0.PageMask",@{typ PageMask},
                                                                     var("v",@{typ CP0}),@{theory}),
                                                                  call
                                                                    ("TLBEntry.Mask",
                                                                     (Word_Lib.mk_wordT 12),
                                                                     var("e",@{typ TLBEntry}),
                                                                     @{theory})],@{theory})],
                                                         @{theory}),@{theory}),
                                                   close
                                                     (var_a HOLogic.unitT,
                                                      mb(const
                                                           ("CP0",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (CP0 \<times> state)"},@{theory}),
                                                         close
                                                           (var("v",@{typ CP0}),
                                                            mb(call
                                                                 ("write'CP0",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  rupd
                                                                    ("CP0.EntryHi",
                                                                     tp[var("v",@{typ CP0}),
                                                                        rupd
                                                                          ("EntryHi.R",
                                                                           tp[call
                                                                                ("CP0.EntryHi",
                                                                                 @{typ EntryHi},
                                                                                 var("v",@{typ CP0}),
                                                                                 @{theory}),
                                                                              call
                                                                                ("TLBEntry.R",
                                                                                 (Word_Lib.mk_wordT 2),
                                                                                 var("e",
                                                                                     @{typ TLBEntry}),
                                                                                 @{theory})],
                                                                           @{theory})],@{theory}),
                                                                  @{theory}),
                                                               close
                                                                 (var_a HOLogic.unitT,
                                                                  mb(const
                                                                       ("CP0",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (CP0 \<times> state)"},
                                                                        @{theory}),
                                                                     close
                                                                       (var("v",@{typ CP0}),
                                                                        mb(call
                                                                             ("write'CP0",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (unit \<times> state)"},
                                                                              rupd
                                                                                ("CP0.EntryHi",
                                                                                 tp[var("v",
                                                                                        @{typ CP0}),
                                                                                    rupd
                                                                                      ("EntryHi.VPN2",
                                                                                       tp[call
                                                                                            ("CP0.EntryHi",
                                                                                             @{typ EntryHi},
                                                                                             var("v",
                                                                                                 @{typ CP0}),
                                                                                             @{theory}),
                                                                                          call
                                                                                            ("TLBEntry.VPN2",
                                                                                             (Word_Lib.mk_wordT 27),
                                                                                             var("e",
                                                                                                 @{typ TLBEntry}),
                                                                                             @{theory})],
                                                                                       @{theory})],
                                                                                 @{theory}),
                                                                              @{theory}),
                                                                           close
                                                                             (var_a HOLogic.unitT,
                                                                              mb(const
                                                                                   ("CP0",
                                                                                    @{typ
                                                                                    "state \<Rightarrow>
                                                                                     (CP0 \<times>
                                                                                      state)"},
                                                                                    @{theory}),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ CP0}),
                                                                                    mb(call
                                                                                         ("write'CP0",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (unit \<times>
                                                                                            state)"},
                                                                                          rupd
                                                                                            ("CP0.EntryHi",
                                                                                             tp[var("v",
                                                                                                    @{typ CP0}),
                                                                                                rupd
                                                                                                  ("EntryHi.ASID",
                                                                                                   tp[call
                                                                                                        ("CP0.EntryHi",
                                                                                                         @{typ EntryHi},
                                                                                                         var("v",
                                                                                                             @{typ CP0}),
                                                                                                         @{theory}),
                                                                                                      call
                                                                                                        ("TLBEntry.ASID",
                                                                                                         w8,
                                                                                                         var("e",
                                                                                                             @{typ TLBEntry}),
                                                                                                         @{theory})],
                                                                                                   @{theory})],
                                                                                             @{theory}),
                                                                                          @{theory}),
                                                                                       close
                                                                                         (var_a
                                                                                            HOLogic.unitT,
                                                                                          mb(const
                                                                                               ("CP0",
                                                                                                @{typ
                                                                                                "state \<Rightarrow>
                                                                                                 (CP0 \<times>
                                                                                                  state)"},
                                                                                                @{theory}),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ CP0}),
                                                                                                mb(call
                                                                                                     ("write'CP0",
                                                                                                      @{typ
                                                                                                      "state \<Rightarrow>
                                                                                                       (unit \<times>
                                                                                                        state)"},
                                                                                                      rupd
                                                                                                        ("CP0.EntryLo1",
                                                                                                         tp[var("v",
                                                                                                                @{typ CP0}),
                                                                                                            rupd
                                                                                                              ("EntryLo.PFN",
                                                                                                               tp[call
                                                                                                                    ("CP0.EntryLo1",
                                                                                                                     @{typ EntryLo},
                                                                                                                     var("v",
                                                                                                                         @{typ CP0}),
                                                                                                                     @{theory}),
                                                                                                                  call
                                                                                                                    ("TLBEntry.PFN1",
                                                                                                                     (Word_Lib.mk_wordT 28),
                                                                                                                     var("e",
                                                                                                                         @{typ TLBEntry}),
                                                                                                                     @{theory})],
                                                                                                               @{theory})],
                                                                                                         @{theory}),
                                                                                                      @{theory}),
                                                                                                   close
                                                                                                     (var_a
                                                                                                        HOLogic.unitT,
                                                                                                      mb(const
                                                                                                           ("CP0",
                                                                                                            @{typ
                                                                                                            "state \<Rightarrow>
                                                                                                             (CP0 \<times>
                                                                                                              state)"},
                                                                                                            @{theory}),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ CP0}),
                                                                                                            mb(call
                                                                                                                 ("write'CP0",
                                                                                                                  @{typ
                                                                                                                  "state \<Rightarrow>
                                                                                                                   (unit \<times>
                                                                                                                    state)"},
                                                                                                                  rupd
                                                                                                                    ("CP0.EntryLo1",
                                                                                                                     tp[var("v",
                                                                                                                            @{typ CP0}),
                                                                                                                        rupd
                                                                                                                          ("EntryLo.C",
                                                                                                                           tp[call
                                                                                                                                ("CP0.EntryLo1",
                                                                                                                                 @{typ EntryLo},
                                                                                                                                 var("v",
                                                                                                                                     @{typ CP0}),
                                                                                                                                 @{theory}),
                                                                                                                              call
                                                                                                                                ("TLBEntry.C1",
                                                                                                                                 (Word_Lib.mk_wordT 3),
                                                                                                                                 var("e",
                                                                                                                                     @{typ TLBEntry}),
                                                                                                                                 @{theory})],
                                                                                                                           @{theory})],
                                                                                                                     @{theory}),
                                                                                                                  @{theory}),
                                                                                                               close
                                                                                                                 (var_a
                                                                                                                    HOLogic.unitT,
                                                                                                                  mb(const
                                                                                                                       ("CP0",
                                                                                                                        @{typ
                                                                                                                        "state \<Rightarrow>
                                                                                                                         (CP0 \<times>
                                                                                                                          state)"},
                                                                                                                        @{theory}),
                                                                                                                     close
                                                                                                                       (var("v",
                                                                                                                            @{typ CP0}),
                                                                                                                        mb(call
                                                                                                                             ("write'CP0",
                                                                                                                              @{typ
                                                                                                                              "state \<Rightarrow>
                                                                                                                               (unit \<times>
                                                                                                                                state)"},
                                                                                                                              rupd
                                                                                                                                ("CP0.EntryLo1",
                                                                                                                                 tp[var("v",
                                                                                                                                        @{typ CP0}),
                                                                                                                                    rupd
                                                                                                                                      ("EntryLo.D",
                                                                                                                                       tp[call
                                                                                                                                            ("CP0.EntryLo1",
                                                                                                                                             @{typ EntryLo},
                                                                                                                                             var("v",
                                                                                                                                                 @{typ CP0}),
                                                                                                                                             @{theory}),
                                                                                                                                          call
                                                                                                                                            ("TLBEntry.D1",
                                                                                                                                             HOLogic.boolT,
                                                                                                                                             var("e",
                                                                                                                                                 @{typ TLBEntry}),
                                                                                                                                             @{theory})],
                                                                                                                                       @{theory})],
                                                                                                                                 @{theory}),
                                                                                                                              @{theory}),
                                                                                                                           close
                                                                                                                             (var_a
                                                                                                                                HOLogic.unitT,
                                                                                                                              mb(const
                                                                                                                                   ("CP0",
                                                                                                                                    @{typ
                                                                                                                                    "state \<Rightarrow>
                                                                                                                                     (CP0 \<times>
                                                                                                                                      state)"},
                                                                                                                                    @{theory}),
                                                                                                                                 close
                                                                                                                                   (var("v",
                                                                                                                                        @{typ CP0}),
                                                                                                                                    mb(call
                                                                                                                                         ("write'CP0",
                                                                                                                                          @{typ
                                                                                                                                          "state \<Rightarrow>
                                                                                                                                           (unit \<times>
                                                                                                                                            state)"},
                                                                                                                                          rupd
                                                                                                                                            ("CP0.EntryLo1",
                                                                                                                                             tp[var("v",
                                                                                                                                                    @{typ CP0}),
                                                                                                                                                rupd
                                                                                                                                                  ("EntryLo.V",
                                                                                                                                                   tp[call
                                                                                                                                                        ("CP0.EntryLo1",
                                                                                                                                                         @{typ EntryLo},
                                                                                                                                                         var("v",
                                                                                                                                                             @{typ CP0}),
                                                                                                                                                         @{theory}),
                                                                                                                                                      call
                                                                                                                                                        ("TLBEntry.V1",
                                                                                                                                                         HOLogic.boolT,
                                                                                                                                                         var("e",
                                                                                                                                                             @{typ TLBEntry}),
                                                                                                                                                         @{theory})],
                                                                                                                                                   @{theory})],
                                                                                                                                             @{theory}),
                                                                                                                                          @{theory}),
                                                                                                                                       close
                                                                                                                                         (var_a
                                                                                                                                            HOLogic.unitT,
                                                                                                                                          mb(const
                                                                                                                                               ("CP0",
                                                                                                                                                @{typ
                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                 (CP0 \<times>
                                                                                                                                                  state)"},
                                                                                                                                                @{theory}),
                                                                                                                                             close
                                                                                                                                               (var("v",
                                                                                                                                                    @{typ CP0}),
                                                                                                                                                mb(call
                                                                                                                                                     ("write'CP0",
                                                                                                                                                      @{typ
                                                                                                                                                      "state \<Rightarrow>
                                                                                                                                                       (unit \<times>
                                                                                                                                                        state)"},
                                                                                                                                                      rupd
                                                                                                                                                        ("CP0.EntryLo1",
                                                                                                                                                         tp[var("v",
                                                                                                                                                                @{typ CP0}),
                                                                                                                                                            rupd
                                                                                                                                                              ("EntryLo.G",
                                                                                                                                                               tp[call
                                                                                                                                                                    ("CP0.EntryLo1",
                                                                                                                                                                     @{typ EntryLo},
                                                                                                                                                                     var("v",
                                                                                                                                                                         @{typ CP0}),
                                                                                                                                                                     @{theory}),
                                                                                                                                                                  call
                                                                                                                                                                    ("TLBEntry.G",
                                                                                                                                                                     HOLogic.boolT,
                                                                                                                                                                     var("e",
                                                                                                                                                                         @{typ TLBEntry}),
                                                                                                                                                                     @{theory})],
                                                                                                                                                               @{theory})],
                                                                                                                                                         @{theory}),
                                                                                                                                                      @{theory}),
                                                                                                                                                   close
                                                                                                                                                     (var_a
                                                                                                                                                        HOLogic.unitT,
                                                                                                                                                      mb(const
                                                                                                                                                           ("CP0",
                                                                                                                                                            @{typ
                                                                                                                                                            "state \<Rightarrow>
                                                                                                                                                             (CP0 \<times>
                                                                                                                                                              state)"},
                                                                                                                                                            @{theory}),
                                                                                                                                                         close
                                                                                                                                                           (var("v",
                                                                                                                                                                @{typ CP0}),
                                                                                                                                                            mb(call
                                                                                                                                                                 ("write'CP0",
                                                                                                                                                                  @{typ
                                                                                                                                                                  "state \<Rightarrow>
                                                                                                                                                                   (unit \<times>
                                                                                                                                                                    state)"},
                                                                                                                                                                  rupd
                                                                                                                                                                    ("CP0.EntryLo0",
                                                                                                                                                                     tp[var("v",
                                                                                                                                                                            @{typ CP0}),
                                                                                                                                                                        rupd
                                                                                                                                                                          ("EntryLo.PFN",
                                                                                                                                                                           tp[call
                                                                                                                                                                                ("CP0.EntryLo0",
                                                                                                                                                                                 @{typ EntryLo},
                                                                                                                                                                                 var("v",
                                                                                                                                                                                     @{typ CP0}),
                                                                                                                                                                                 @{theory}),
                                                                                                                                                                              call
                                                                                                                                                                                ("TLBEntry.PFN0",
                                                                                                                                                                                 (Word_Lib.mk_wordT 28),
                                                                                                                                                                                 var("e",
                                                                                                                                                                                     @{typ TLBEntry}),
                                                                                                                                                                                 @{theory})],
                                                                                                                                                                           @{theory})],
                                                                                                                                                                     @{theory}),
                                                                                                                                                                  @{theory}),
                                                                                                                                                               close
                                                                                                                                                                 (var_a
                                                                                                                                                                    HOLogic.unitT,
                                                                                                                                                                  mb(const
                                                                                                                                                                       ("CP0",
                                                                                                                                                                        @{typ
                                                                                                                                                                        "state \<Rightarrow>
                                                                                                                                                                         (CP0 \<times>
                                                                                                                                                                          state)"},
                                                                                                                                                                        @{theory}),
                                                                                                                                                                     close
                                                                                                                                                                       (var("v",
                                                                                                                                                                            @{typ CP0}),
                                                                                                                                                                        mb(call
                                                                                                                                                                             ("write'CP0",
                                                                                                                                                                              @{typ
                                                                                                                                                                              "state \<Rightarrow>
                                                                                                                                                                               (unit \<times>
                                                                                                                                                                                state)"},
                                                                                                                                                                              rupd
                                                                                                                                                                                ("CP0.EntryLo0",
                                                                                                                                                                                 tp[var("v",
                                                                                                                                                                                        @{typ CP0}),
                                                                                                                                                                                    rupd
                                                                                                                                                                                      ("EntryLo.C",
                                                                                                                                                                                       tp[call
                                                                                                                                                                                            ("CP0.EntryLo0",
                                                                                                                                                                                             @{typ EntryLo},
                                                                                                                                                                                             var("v",
                                                                                                                                                                                                 @{typ CP0}),
                                                                                                                                                                                             @{theory}),
                                                                                                                                                                                          call
                                                                                                                                                                                            ("TLBEntry.C0",
                                                                                                                                                                                             (Word_Lib.mk_wordT 3),
                                                                                                                                                                                             var("e",
                                                                                                                                                                                                 @{typ TLBEntry}),
                                                                                                                                                                                             @{theory})],
                                                                                                                                                                                       @{theory})],
                                                                                                                                                                                 @{theory}),
                                                                                                                                                                              @{theory}),
                                                                                                                                                                           close
                                                                                                                                                                             (var_a
                                                                                                                                                                                HOLogic.unitT,
                                                                                                                                                                              mb(const
                                                                                                                                                                                   ("CP0",
                                                                                                                                                                                    @{typ
                                                                                                                                                                                    "state \<Rightarrow>
                                                                                                                                                                                     (CP0 \<times>
                                                                                                                                                                                      state)"},
                                                                                                                                                                                    @{theory}),
                                                                                                                                                                                 close
                                                                                                                                                                                   (var("v",
                                                                                                                                                                                        @{typ CP0}),
                                                                                                                                                                                    mb(call
                                                                                                                                                                                         ("write'CP0",
                                                                                                                                                                                          @{typ
                                                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                                                           (unit \<times>
                                                                                                                                                                                            state)"},
                                                                                                                                                                                          rupd
                                                                                                                                                                                            ("CP0.EntryLo0",
                                                                                                                                                                                             tp[var("v",
                                                                                                                                                                                                    @{typ CP0}),
                                                                                                                                                                                                rupd
                                                                                                                                                                                                  ("EntryLo.D",
                                                                                                                                                                                                   tp[call
                                                                                                                                                                                                        ("CP0.EntryLo0",
                                                                                                                                                                                                         @{typ EntryLo},
                                                                                                                                                                                                         var("v",
                                                                                                                                                                                                             @{typ CP0}),
                                                                                                                                                                                                         @{theory}),
                                                                                                                                                                                                      call
                                                                                                                                                                                                        ("TLBEntry.D0",
                                                                                                                                                                                                         HOLogic.boolT,
                                                                                                                                                                                                         var("e",
                                                                                                                                                                                                             @{typ TLBEntry}),
                                                                                                                                                                                                         @{theory})],
                                                                                                                                                                                                   @{theory})],
                                                                                                                                                                                             @{theory}),
                                                                                                                                                                                          @{theory}),
                                                                                                                                                                                       close
                                                                                                                                                                                         (var_a
                                                                                                                                                                                            HOLogic.unitT,
                                                                                                                                                                                          mb(const
                                                                                                                                                                                               ("CP0",
                                                                                                                                                                                                @{typ
                                                                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                                                                 (CP0 \<times>
                                                                                                                                                                                                  state)"},
                                                                                                                                                                                                @{theory}),
                                                                                                                                                                                             close
                                                                                                                                                                                               (var("v",
                                                                                                                                                                                                    @{typ CP0}),
                                                                                                                                                                                                mb(call
                                                                                                                                                                                                     ("write'CP0",
                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                      "state \<Rightarrow>
                                                                                                                                                                                                       (unit \<times>
                                                                                                                                                                                                        state)"},
                                                                                                                                                                                                      rupd
                                                                                                                                                                                                        ("CP0.EntryLo0",
                                                                                                                                                                                                         tp[var("v",
                                                                                                                                                                                                                @{typ CP0}),
                                                                                                                                                                                                            rupd
                                                                                                                                                                                                              ("EntryLo.V",
                                                                                                                                                                                                               tp[call
                                                                                                                                                                                                                    ("CP0.EntryLo0",
                                                                                                                                                                                                                     @{typ EntryLo},
                                                                                                                                                                                                                     var("v",
                                                                                                                                                                                                                         @{typ CP0}),
                                                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                                                  call
                                                                                                                                                                                                                    ("TLBEntry.V0",
                                                                                                                                                                                                                     HOLogic.boolT,
                                                                                                                                                                                                                     var("e",
                                                                                                                                                                                                                         @{typ TLBEntry}),
                                                                                                                                                                                                                     @{theory})],
                                                                                                                                                                                                               @{theory})],
                                                                                                                                                                                                         @{theory}),
                                                                                                                                                                                                      @{theory}),
                                                                                                                                                                                                   close
                                                                                                                                                                                                     (var_a
                                                                                                                                                                                                        HOLogic.unitT,
                                                                                                                                                                                                      mb(const
                                                                                                                                                                                                           ("CP0",
                                                                                                                                                                                                            @{typ
                                                                                                                                                                                                            "state \<Rightarrow>
                                                                                                                                                                                                             (CP0 \<times>
                                                                                                                                                                                                              state)"},
                                                                                                                                                                                                            @{theory}),
                                                                                                                                                                                                         close
                                                                                                                                                                                                           (var("x",
                                                                                                                                                                                                                @{typ CP0}),
                                                                                                                                                                                                            call
                                                                                                                                                                                                              ("write'CP0",
                                                                                                                                                                                                               @{typ
                                                                                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                                                                                (unit \<times>
                                                                                                                                                                                                                 state)"},
                                                                                                                                                                                                               rupd
                                                                                                                                                                                                                 ("CP0.EntryLo0",
                                                                                                                                                                                                                  tp[var("x",
                                                                                                                                                                                                                         @{typ CP0}),
                                                                                                                                                                                                                     rupd
                                                                                                                                                                                                                       ("EntryLo.G",
                                                                                                                                                                                                                        tp[call
                                                                                                                                                                                                                             ("CP0.EntryLo0",
                                                                                                                                                                                                                              @{typ EntryLo},
                                                                                                                                                                                                                              var("x",
                                                                                                                                                                                                                                  @{typ CP0}),
                                                                                                                                                                                                                              @{theory}),
                                                                                                                                                                                                                           call
                                                                                                                                                                                                                             ("TLBEntry.G",
                                                                                                                                                                                                                              HOLogic.boolT,
                                                                                                                                                                                                                              var("e",
                                                                                                                                                                                                                                  @{typ TLBEntry}),
                                                                                                                                                                                                                              @{theory})],
                                                                                                                                                                                                                        @{theory})],
                                                                                                                                                                                                                  @{theory}),
                                                                                                                                                                                                               @{theory})))))))))))))))))))))))))))))))))))))))))))))))))))))))),
                                         (var_a(@{typ "TLBEntry option"}),
                                          call
                                            ("raise'exception",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             call
                                               ("exception.UNPREDICTABLE",@{typ exception},
                                                ls"TLB: reading from invalid entry",@{theory}),
                                             @{theory}))],@{context})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TLBWI",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU0",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const
                           ("KernelMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                            @{theory}),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),mu(lf,qTy)))),
            close
              (var_b"b",
               ite(var_b"b",
                   call
                     ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      lc("CpU","ExceptionType",@{theory}),@{theory}),
                   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                      close
                        (var("v",@{typ CP0}),
                         mb(mb(mb(mb(mb(mu(call
                                             ("CP0.PageMask",@{typ PageMask},var("v",@{typ CP0}),
                                              @{theory}),qTy),
                                        close
                                          (var("v",@{typ PageMask}),
                                           mu(call
                                                ("PageMask.Mask",(Word_Lib.mk_wordT 12),
                                                 var("v",@{typ PageMask}),@{theory}),qTy))),
                                     close
                                       (var_w("v",12),
                                        mu(call
                                             ("checkMask",@{typ "nat option"},var_w("v",12),
                                              @{theory}),qTy))),
                                  close
                                    (var("v",@{typ "nat option"}),
                                     mu(mop(IsSome,var("v",@{typ "nat option"})),qTy))),
                               close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                            close
                              (var_b"b",
                               ite(var_b"b",
                                   mb(mr(close
                                           (var("s",qTy),
                                            call
                                              ("state.UNPREDICTABLE_TLB",
                                               @{typ "unit \<Rightarrow> unit"},var("s",qTy),
                                               @{theory}))),
                                      close
                                        (var("v",@{typ "unit \<Rightarrow> unit"}),
                                         mb(mu(lu,qTy),
                                            close
                                              (var_a HOLogic.unitT,
                                               call
                                                 ("SignalException",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  lc("MCheck","ExceptionType",@{theory}),@{theory}))))),
                                   mb(const
                                        ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                         @{theory}),
                                      close
                                        (var("v",@{typ CP0}),
                                         mb(mb(mb(mb(mu(call
                                                          ("CP0.Index",@{typ Index},
                                                           var("v",@{typ CP0}),@{theory}),qTy),
                                                     close
                                                       (var("v",@{typ Index}),
                                                        mu(call
                                                             ("Index.Index",(Word_Lib.mk_wordT 9),
                                                              var("v",@{typ Index}),@{theory}),qTy))),
                                                  close
                                                    (var_w("v",9),
                                                     mu(mop(Cast HOLogic.natT,var_w("v",9)),qTy))),
                                               close
                                                 (var_n"v",
                                                  mu(bop(Lt,var_n"v",
                                                         const
                                                           ("TLBAssocEntries",HOLogic.natT,@{theory})),
                                                     qTy))),
                                            close
                                              (var_b"b",
                                               ite(var_b"b",
                                                   mb(const
                                                        ("CP0",
                                                         @{typ
                                                         "state \<Rightarrow> (CP0 \<times> state)"},
                                                         @{theory}),
                                                      close
                                                        (var("v",@{typ CP0}),
                                                         mb(mb(mb(mu(call
                                                                       ("CP0.Index",@{typ Index},
                                                                        var("v",@{typ CP0}),
                                                                        @{theory}),qTy),
                                                                  close
                                                                    (var("v",@{typ Index}),
                                                                     mu(call
                                                                          ("Index.Index",
                                                                           (Word_Lib.mk_wordT 9),
                                                                           var("v",@{typ Index}),
                                                                           @{theory}),qTy))),
                                                               close
                                                                 (var_w("v",9),
                                                                  mu(mop(Cast w4,var_w("v",9)),qTy))),
                                                            close
                                                              (var_w("i",4),
                                                               mb(call
                                                                    ("CP0TLBEntry",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (TLBEntry \<times> state)"},
                                                                     lu,@{theory}),
                                                                  close
                                                                    (var("v",@{typ TLBEntry}),
                                                                     mb(mb(mu(mop(Some,
                                                                                  var("v",
                                                                                      @{typ TLBEntry})),
                                                                              qTy),
                                                                           close
                                                                             (var("v",
                                                                                  @{typ
                                                                                  "TLBEntry option"}),
                                                                              mu(tp[var("v",
                                                                                        @{typ
                                                                                        "TLBEntry
                                                                                            option"}),
                                                                                    var_w("i",4)],
                                                                                 qTy))),
                                                                        close
                                                                          (var("v",
                                                                               @{typ
                                                                               "(TLBEntry option) \<times>
                                                                                4 word"}),
                                                                           call
                                                                             ("write'TLB_assoc",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (unit \<times> state)"},
                                                                              var("v",
                                                                                  @{typ
                                                                                  "(TLBEntry option) \<times>
                                                                                   4 word"}),
                                                                              @{theory}))))))))),
                                                   mb(const
                                                        ("CP0",
                                                         @{typ
                                                         "state \<Rightarrow> (CP0 \<times> state)"},
                                                         @{theory}),
                                                      close
                                                        (var("v",@{typ CP0}),
                                                         mb(mb(mb(mb(mu(call
                                                                          ("CP0.Index",@{typ Index},
                                                                           var("v",@{typ CP0}),
                                                                           @{theory}),qTy),
                                                                     close
                                                                       (var("v",@{typ Index}),
                                                                        mu(call
                                                                             ("Index.Index",
                                                                              (Word_Lib.mk_wordT 9),
                                                                              var("v",@{typ Index}),
                                                                              @{theory}),qTy))),
                                                                  close
                                                                    (var_w("v",9),
                                                                     mu(mop(Cast HOLogic.natT,
                                                                            var_w("v",9)),qTy))),
                                                               close
                                                                 (var_n"v",
                                                                  mu(bop(Lt,var_n"v",
                                                                         const
                                                                           ("TLBEntries",
                                                                            HOLogic.natT,@{theory})),
                                                                     qTy))),
                                                            close
                                                              (var_b"b",
                                                               ite(var_b"b",
                                                                   mb(const
                                                                        ("CP0",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (CP0 \<times> state)"},
                                                                         @{theory}),
                                                                      close
                                                                        (var("v",@{typ CP0}),
                                                                         mb(mb(mb(mu(call
                                                                                       ("CP0.EntryHi",
                                                                                        @{typ EntryHi},
                                                                                        var("v",
                                                                                            @{typ CP0}),
                                                                                        @{theory}),
                                                                                     qTy),
                                                                                  close
                                                                                    (var("v",
                                                                                         @{typ EntryHi}),
                                                                                     mu(call
                                                                                          ("EntryHi.VPN2",
                                                                                           (Word_Lib.mk_wordT 27),
                                                                                           var("v",
                                                                                               @{typ EntryHi}),
                                                                                           @{theory}),
                                                                                        qTy))),
                                                                               close
                                                                                 (var_w("v",27),
                                                                                  mu(ex(var_w("v",27),
                                                                                        ln 7,ln 0,w8),
                                                                                     qTy))),
                                                                            close
                                                                              (var_w("j",8),
                                                                               mb(call
                                                                                    ("CP0TLBEntry",
                                                                                     @{typ
                                                                                     "state \<Rightarrow>
                                                                                      (TLBEntry \<times>
                                                                                       state)"},lu,
                                                                                     @{theory}),
                                                                                  close
                                                                                    (var("v",
                                                                                         @{typ TLBEntry}),
                                                                                     mb(mb(mu(mop(Some,
                                                                                                  var("v",
                                                                                                      @{typ TLBEntry})),
                                                                                              qTy),
                                                                                           close
                                                                                             (var("v",
                                                                                                  @{typ
                                                                                                  "TLBEntry
                                                                                                      option"}),
                                                                                              mu(tp[var("v",
                                                                                                        @{typ
                                                                                                        "TLBEntry
                                                                                                            option"}),
                                                                                                    var_w("j",8)],
                                                                                                 qTy))),
                                                                                        close
                                                                                          (var("v",
                                                                                               @{typ
                                                                                               "(TLBEntry
                                                                                                    option) \<times>
                                                                                                8 word"}),
                                                                                           call
                                                                                             ("write'TLB_direct",
                                                                                              @{typ
                                                                                              "state \<Rightarrow>
                                                                                               (unit \<times>
                                                                                                state)"},
                                                                                              var("v",
                                                                                                  @{typ
                                                                                                  "(TLBEntry
                                                                                                       option) \<times>
                                                                                                   8 word"}),
                                                                                              @{theory}))))))))),
                                                                   mb(mr(close
                                                                           (var("s",qTy),
                                                                            call
                                                                              ("state.UNPREDICTABLE_TLB",
                                                                               @{typ
                                                                               "unit \<Rightarrow>
                                                                                unit"},var("s",qTy),
                                                                               @{theory}))),
                                                                      close
                                                                        (var("v",
                                                                             @{typ
                                                                             "unit \<Rightarrow>
                                                                              unit"}),
                                                                         mb(mu(lu,qTy),
                                                                            close
                                                                              (var_a HOLogic.unitT,
                                                                               call
                                                                                 ("SignalException",
                                                                                  @{typ
                                                                                  "state \<Rightarrow>
                                                                                   (unit \<times>
                                                                                    state)"},
                                                                                  lc("MCheck",
                                                                                     "ExceptionType",
                                                                                     @{theory}),
                                                                                  @{theory}))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TLBWR",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU0",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const
                           ("KernelMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                            @{theory}),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),mu(lf,qTy)))),
            close
              (var_b"b",
               ite(var_b"b",
                   call
                     ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      lc("CpU","ExceptionType",@{theory}),@{theory}),
                   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                      close
                        (var("v",@{typ CP0}),
                         mb(mb(mb(mb(mb(mu(call
                                             ("CP0.PageMask",@{typ PageMask},var("v",@{typ CP0}),
                                              @{theory}),qTy),
                                        close
                                          (var("v",@{typ PageMask}),
                                           mu(call
                                                ("PageMask.Mask",(Word_Lib.mk_wordT 12),
                                                 var("v",@{typ PageMask}),@{theory}),qTy))),
                                     close
                                       (var_w("v",12),
                                        mu(call
                                             ("checkMask",@{typ "nat option"},var_w("v",12),
                                              @{theory}),qTy))),
                                  close
                                    (var("v",@{typ "nat option"}),
                                     mu(mop(IsSome,var("v",@{typ "nat option"})),qTy))),
                               close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                            close
                              (var_b"b",
                               ite(var_b"b",
                                   mb(mr(close
                                           (var("s",qTy),
                                            call
                                              ("state.UNPREDICTABLE_TLB",
                                               @{typ "unit \<Rightarrow> unit"},var("s",qTy),
                                               @{theory}))),
                                      close
                                        (var("v",@{typ "unit \<Rightarrow> unit"}),
                                         mb(mu(lu,qTy),
                                            close
                                              (var_a HOLogic.unitT,
                                               call
                                                 ("SignalException",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  lc("MCheck","ExceptionType",@{theory}),@{theory}))))),
                                   mb(const
                                        ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                         @{theory}),
                                      close
                                        (var("v",@{typ CP0}),
                                         mb(mb(mu(call
                                                    ("CP0.Config6",@{typ ConfigRegister6},
                                                     var("v",@{typ CP0}),@{theory}),qTy),
                                               close
                                                 (var("v",@{typ ConfigRegister6}),
                                                  mu(call
                                                       ("ConfigRegister6.LTLB",HOLogic.boolT,
                                                        var("v",@{typ ConfigRegister6}),@{theory}),
                                                     qTy))),
                                            close
                                              (var_b"b",
                                               ite(var_b"b",
                                                   mb(const
                                                        ("CP0",
                                                         @{typ
                                                         "state \<Rightarrow> (CP0 \<times> state)"},
                                                         @{theory}),
                                                      close
                                                        (var("v",@{typ CP0}),
                                                         mb(mb(mb(mu(call
                                                                       ("CP0.EntryHi",
                                                                        @{typ EntryHi},
                                                                        var("v",@{typ CP0}),
                                                                        @{theory}),qTy),
                                                                  close
                                                                    (var("v",@{typ EntryHi}),
                                                                     mu(call
                                                                          ("EntryHi.VPN2",
                                                                           (Word_Lib.mk_wordT 27),
                                                                           var("v",@{typ EntryHi}),
                                                                           @{theory}),qTy))),
                                                               close
                                                                 (var_w("v",27),
                                                                  mu(ex(var_w("v",27),ln 7,ln 0,w8),
                                                                     qTy))),
                                                            close
                                                              (var_w("j",8),
                                                               mb(call
                                                                    ("TLB_direct",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      ((TLBEntry option) \<times>
                                                                       state)"},var_w("j",8),
                                                                     @{theory}),
                                                                  close
                                                                    (var("v",
                                                                         @{typ "TLBEntry option"}),
                                                                     mb(cs(var("v",
                                                                               @{typ
                                                                               "TLBEntry option"}),
                                                                           [(mop(Some,
                                                                                 var("old",
                                                                                     @{typ TLBEntry})),
                                                                             mb(const
                                                                                  ("CP0",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (CP0 \<times>
                                                                                     state)"},
                                                                                   @{theory}),
                                                                                close
                                                                                  (var("v",
                                                                                       @{typ CP0}),
                                                                                   mb(mb(mb(mu(call
                                                                                                 ("CP0.Random",
                                                                                                  @{typ Random},
                                                                                                  var("v",
                                                                                                      @{typ CP0}),
                                                                                                  @{theory}),
                                                                                               qTy),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ Random}),
                                                                                               mu(call
                                                                                                    ("Random.Random",
                                                                                                     w8,
                                                                                                     var("v",
                                                                                                         @{typ Random}),
                                                                                                     @{theory}),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var_w("v",8),
                                                                                            mu(mop(Cast
                                                                                                     w4,
                                                                                                   var_w("v",8)),
                                                                                               qTy))),
                                                                                      close
                                                                                        (var_w("x",4),
                                                                                         call
                                                                                           ("write'TLB_assoc",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (unit \<times>
                                                                                              state)"},
                                                                                            tp[mop(Some,
                                                                                                   var("old",
                                                                                                       @{typ TLBEntry})),
                                                                                               var_w("x",4)],
                                                                                            @{theory})))))),
                                                                            (var_a
                                                                               (@{typ
                                                                                "TLBEntry option"}),
                                                                             mu(lu,qTy))],@{context}),
                                                                        close
                                                                          (var_a HOLogic.unitT,
                                                                           mb(call
                                                                                ("CP0TLBEntry",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (TLBEntry \<times>
                                                                                   state)"},lu,
                                                                                 @{theory}),
                                                                              close
                                                                                (var("v",
                                                                                     @{typ TLBEntry}),
                                                                                 mb(mb(mu(mop(Some,
                                                                                              var("v",
                                                                                                  @{typ TLBEntry})),
                                                                                          qTy),
                                                                                       close
                                                                                         (var("v",
                                                                                              @{typ
                                                                                              "TLBEntry
                                                                                                  option"}),
                                                                                          mu(tp[var("v",
                                                                                                    @{typ
                                                                                                    "TLBEntry
                                                                                                        option"}),
                                                                                                var_w("j",8)],
                                                                                             qTy))),
                                                                                    close
                                                                                      (var("v",
                                                                                           @{typ
                                                                                           "(TLBEntry
                                                                                                option) \<times>
                                                                                            8 word"}),
                                                                                       call
                                                                                         ("write'TLB_direct",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (unit \<times>
                                                                                            state)"},
                                                                                          var("v",
                                                                                              @{typ
                                                                                              "(TLBEntry
                                                                                                   option) \<times>
                                                                                               8 word"}),
                                                                                          @{theory}))))))))))))),
                                                   mb(const
                                                        ("CP0",
                                                         @{typ
                                                         "state \<Rightarrow> (CP0 \<times> state)"},
                                                         @{theory}),
                                                      close
                                                        (var("v",@{typ CP0}),
                                                         mb(mb(mu(call
                                                                    ("CP0.Random",@{typ Random},
                                                                     var("v",@{typ CP0}),@{theory}),
                                                                  qTy),
                                                               close
                                                                 (var("v",@{typ Random}),
                                                                  mu(call
                                                                       ("Random.Random",w8,
                                                                        var("v",@{typ Random}),
                                                                        @{theory}),qTy))),
                                                            close
                                                              (var_w("j",8),
                                                               mb(call
                                                                    ("CP0TLBEntry",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (TLBEntry \<times> state)"},
                                                                     lu,@{theory}),
                                                                  close
                                                                    (var("v",@{typ TLBEntry}),
                                                                     mb(mb(mu(mop(Some,
                                                                                  var("v",
                                                                                      @{typ TLBEntry})),
                                                                              qTy),
                                                                           close
                                                                             (var("v",
                                                                                  @{typ
                                                                                  "TLBEntry option"}),
                                                                              mu(tp[var("v",
                                                                                        @{typ
                                                                                        "TLBEntry
                                                                                            option"}),
                                                                                    mop(Cast w4,
                                                                                        var_w("j",8))],
                                                                                 qTy))),
                                                                        close
                                                                          (var("v",
                                                                               @{typ
                                                                               "(TLBEntry option) \<times>
                                                                                4 word"}),
                                                                           call
                                                                             ("write'TLB_assoc",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (unit \<times> state)"},
                                                                              var("v",
                                                                                  @{typ
                                                                                  "(TLBEntry option) \<times>
                                                                                   4 word"}),
                                                                              @{theory})))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("reg_name",
   close
     (var_w("n",5),
      cc[ls"$",
         itb([(eq(var_w("n",5),lw(0,5)),ls"zero"),(eq(var_w("n",5),lw(1,5)),ls"at"),
              (eq(var_w("n",5),lw(2,5)),ls"v0"),(eq(var_w("n",5),lw(3,5)),ls"v1"),
              (eq(var_w("n",5),lw(4,5)),ls"a0"),(eq(var_w("n",5),lw(5,5)),ls"a1"),
              (eq(var_w("n",5),lw(6,5)),ls"a2"),(eq(var_w("n",5),lw(7,5)),ls"a3"),
              (eq(var_w("n",5),lw(8,5)),ls"t0"),(eq(var_w("n",5),lw(9,5)),ls"t1"),
              (eq(var_w("n",5),lw(10,5)),ls"t2"),(eq(var_w("n",5),lw(11,5)),ls"t3"),
              (eq(var_w("n",5),lw(12,5)),ls"t4"),(eq(var_w("n",5),lw(13,5)),ls"t5"),
              (eq(var_w("n",5),lw(14,5)),ls"t6"),(eq(var_w("n",5),lw(15,5)),ls"t7"),
              (eq(var_w("n",5),lw(16,5)),ls"s0"),(eq(var_w("n",5),lw(17,5)),ls"s1"),
              (eq(var_w("n",5),lw(18,5)),ls"s2"),(eq(var_w("n",5),lw(19,5)),ls"s3"),
              (eq(var_w("n",5),lw(20,5)),ls"s4"),(eq(var_w("n",5),lw(21,5)),ls"s5"),
              (eq(var_w("n",5),lw(22,5)),ls"s6"),(eq(var_w("n",5),lw(23,5)),ls"s7"),
              (eq(var_w("n",5),lw(24,5)),ls"t8"),(eq(var_w("n",5),lw(25,5)),ls"t9"),
              (eq(var_w("n",5),lw(26,5)),ls"k0"),(eq(var_w("n",5),lw(27,5)),ls"k1"),
              (eq(var_w("n",5),lw(28,5)),ls"gp"),(eq(var_w("n",5),lw(29,5)),ls"sp"),
              (eq(var_w("n",5),lw(30,5)),ls"fp"),(eq(var_w("n",5),lw(31,5)),ls"ra")],
             lx(@{typ string}))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("ihex",
   close
     (var("n",@{typ "'N::len word"}),
      cc[ite(bop(Ult,var("n",@{typ "'N::len word"}),ly(10,"N")),ls"",ls"0x"),
         mop(ToLower,mop(Cast(@{typ string}),var("n",@{typ "'N::len word"})))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op1i",
   close
     (tp[var_s"s",var("n",@{typ "'N::len word"})],
      cc[mop(PadRight,tp[lsc #" ",ln 12,cc[var_s"s",ls" "]]),
         call("ihex",@{typ string},var("n",@{typ "'N::len word"}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op1ai",
   close
     (tp[var_s"s",var("n",@{typ "'N::len word"})],
      cc[mop(PadRight,tp[lsc #" ",ln 12,cc[var_s"s",ls" "]]),
         call
           ("ihex",@{typ string},bop(Lsl,mop(Cast w32,var("n",@{typ "'N::len word"})),ln 2),
            @{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op1lai",
   close
     (tp[var_s"s",var("n",@{typ "'N::len word"})],
      cc[mop(PadRight,tp[lsc #" ",ln 12,cc[var_s"s",ls" "]]),
         call
           ("ihex",@{typ string},
            bop(Lsl,mop(Cast w32,bop(Add,var("n",@{typ "'N::len word"}),ly(1,"N"))),ln 2),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op1r",
   close
     (tp[var_s"s",var_w("n",5)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,cc[var_s"s",ls" "]]),
         call("reg_name",@{typ string},var_w("n",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op1ri",
   close
     (tp[var_s"s",var_w("r1",5),var("n",@{typ "'N::len word"})],
      cc[call("op1r",@{typ string},tp[var_s"s",var_w("r1",5)],@{theory}),ls", ",
         call("ihex",@{typ string},var("n",@{typ "'N::len word"}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op1rai",
   close
     (tp[var_s"s",var_w("r1",5),var("n",@{typ "'N::len word"})],
      cc[call("op1r",@{typ string},tp[var_s"s",var_w("r1",5)],@{theory}),ls", ",
         call
           ("ihex",@{typ string},bop(Lsl,mop(Cast w32,var("n",@{typ "'N::len word"})),ln 2),
            @{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op1rlai",
   close
     (tp[var_s"s",var_w("r1",5),var("n",@{typ "'N::len word"})],
      cc[call("op1r",@{typ string},tp[var_s"s",var_w("r1",5)],@{theory}),ls", ",
         call
           ("ihex",@{typ string},
            bop(Lsl,mop(Cast w32,bop(Add,var("n",@{typ "'N::len word"}),ly(1,"N"))),ln 2),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op2r",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5)],
      cc[call("op1r",@{typ string},tp[var_s"s",var_w("r1",5)],@{theory}),ls", ",
         call("reg_name",@{typ string},var_w("r2",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op2ri",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5),var("n",@{typ "'N::len word"})],
      cc[call("op2r",@{typ string},tp[var_s"s",var_w("r1",5),var_w("r2",5)],@{theory}),ls", ",
         call("ihex",@{typ string},var("n",@{typ "'N::len word"}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op2rai",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5),var("n",@{typ "'N::len word"})],
      cc[call("op2r",@{typ string},tp[var_s"s",var_w("r1",5),var_w("r2",5)],@{theory}),ls", ",
         call
           ("ihex",@{typ string},bop(Lsl,mop(Cast w32,var("n",@{typ "'N::len word"})),ln 2),
            @{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op2rlai",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5),var("n",@{typ "'N::len word"})],
      cc[call("op2r",@{typ string},tp[var_s"s",var_w("r1",5),var_w("r2",5)],@{theory}),ls", ",
         call
           ("ihex",@{typ string},
            bop(Lsl,mop(Cast w32,bop(Add,var("n",@{typ "'N::len word"}),ly(1,"N"))),ln 2),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op3r",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5),var_w("r3",5)],
      cc[call("op2r",@{typ string},tp[var_s"s",var_w("r1",5),var_w("r2",5)],@{theory}),ls", ",
         call("reg_name",@{typ string},var_w("r3",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op2roi",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5),var("n",@{typ "'N::len word"})],
      cc[call("op1r",@{typ string},tp[var_s"s",var_w("r1",5)],@{theory}),ls", ",
         call("cpr",@{typ string},var_w("r2",5),@{theory}),
         ite(eq(var("n",@{typ "'N::len word"}),ly(0,"N")),ls"",
             call("ihex",@{typ string},var("n",@{typ "'N::len word"}),@{theory}))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("opmem",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5),var("n",@{typ "'N::len word"})],
      cc[call
           ("op1ri",@{typ string},tp[var_s"s",var_w("r1",5),var("n",@{typ "'N::len word"})],
            @{theory}),ls"(",call("reg_name",@{typ string},var_w("r2",5),@{theory}),ls")"]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("fcc",
   close(var_w("n",3),cc[ls", $fcc",mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("n",3)))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op1fpr",
   close
     (tp[var_s"s",var_w("n",5)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,cc[var_s"s",ls" "]]),ls"$f",
         mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("n",5)))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op1fpri",
   close
     (tp[var_s"s",var_w("r1",5),var("n",@{typ "'N::len word"})],
      cc[call("op1fpr",@{typ string},tp[var_s"s",var_w("r1",5)],@{theory}),ls", ",
         call("ihex",@{typ string},var("n",@{typ "'N::len word"}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op2fpr",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5)],
      cc[call("op1fpr",@{typ string},tp[var_s"s",var_w("r1",5)],@{theory}),ls", ",ls"$f",
         mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("r2",5)))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op2rfpr",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5)],
      cc[call("op1r",@{typ string},tp[var_s"s",var_w("r1",5)],@{theory}),ls", ",ls"$f",
         mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("r2",5)))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op2rcfpr",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5)],
      cc[call("op1r",@{typ string},tp[var_s"s",var_w("r1",5)],@{theory}),ls", $",
         mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("r2",5)))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op2ccfpr",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5),var_w("n",3)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,cc[var_s"s",ls" "]]),
         ite(eq(var_w("n",3),lw(0,3)),ls"",
             cc[ls"$fcc",mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("n",3))),ls", "]),
         cc[ls"$f",mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("r1",5)))],ls", ",ls"$f",
         mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("r2",5)))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op3fpr",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5),var_w("r3",5)],
      cc[call("op2fpr",@{typ string},tp[var_s"s",var_w("r1",5),var_w("r2",5)],@{theory}),ls", ",
         ls"$f",mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("r3",5)))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op4fpr",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5),var_w("r3",5),var_w("r4",5)],
      cc[call
           ("op3fpr",@{typ string},tp[var_s"s",var_w("r1",5),var_w("r2",5),var_w("r3",5)],@{theory}),
         ls", ",ls"$f",mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("r4",5)))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("opfpmem",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5),var("n",@{typ "'N::len word"})],
      cc[call
           ("op1fpri",@{typ string},tp[var_s"s",var_w("r1",5),var("n",@{typ "'N::len word"})],
            @{theory}),ls"(",call("reg_name",@{typ string},var_w("r2",5),@{theory}),ls")"]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("opfpmem2",
   close
     (tp[var_s"s",var_w("r1",5),var_w("r2",5),var_w("r3",5)],
      cc[call("op1fpr",@{typ string},tp[var_s"s",var_w("r1",5)],@{theory}),ls", ",
         call("reg_name",@{typ string},var_w("r3",5),@{theory}),ls"(",
         call("reg_name",@{typ string},var_w("r2",5),@{theory}),ls")"]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("form1",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),var_w("imm5",5),var_w("function",6)],
      cc[lw(0,6),var_w("rs",5),var_w("rt",5),var_w("rd",5),var_w("imm5",5),var_w("function",6)]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("form2",
   close
     (tp[var_w("rs",5),var_w("function",5),var_w("imm",16)],
      cc[lw(1,6),var_w("rs",5),var_w("function",5),var_w("imm",16)]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("form3",
   close
     (tp[var_w("function",5),var_w("rt",5),var_w("rd",5),var_w("sel",3)],
      cc[lw(16,6),var_w("function",5),var_w("rt",5),var_w("rd",5),lw(0,8),var_w("sel",3)]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("form4",
   close
     (tp[var_w("function",6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],
      cc[var_w("function",6),var_w("rs",5),var_w("rt",5),var_w("imm",16)]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("form5",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),var_w("function",6)],
      cc[lw(28,6),var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),var_w("function",6)]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("form6",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("function",6)],
      cc[lw(31,6),lw(0,5),var_w("rt",5),var_w("rd",5),lw(0,5),var_w("function",6)]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("L1ISIZE",ln 32768)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("L1IWAYS",ln 2)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("L1DSIZE",ln 32768)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("L1DWAYS",ln 4)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("L1LINESIZE",ln 128)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("L2SIZE",ln 262144)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("L2WAYS",ln 4)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("L2LINESIZE",ln 128)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("isAligned",
   close
     (tp[var_w("vAddr",64),var_w("MemType",3)],
      eq(bop(BAnd,mop(Cast (Word_Lib.mk_wordT 3),var_w("vAddr",64)),var_w("MemType",3)),lw(0,3))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("AdjustEndian",
   close
     (tp[var_w("MemType",3),var_w("pAddr",40)],
      itb([(eq(var_w("MemType",3),lw(0,3)),
            mb(const("ReverseEndian",@{typ "state \<Rightarrow> (1 word \<times> state)"},@{theory}),
               close
                 (var_w("v",1),
                  mb(mb(mu(rep(var_w("v",1),ln 3,(Word_Lib.mk_wordT 3)),qTy),
                        close(var_w("v",3),mu(mop(Cast (Word_Lib.mk_wordT 40),var_w("v",3)),qTy))),
                     close(var_w("v",40),mu(bop(BXor,var_w("pAddr",40),var_w("v",40)),qTy)))))),
           (eq(var_w("MemType",3),lw(1,3)),
            mb(const("ReverseEndian",@{typ "state \<Rightarrow> (1 word \<times> state)"},@{theory}),
               close
                 (var_w("v",1),
                  mb(mb(mb(mu(rep(var_w("v",1),ln 2,(Word_Lib.mk_wordT 2)),qTy),
                           close(var_w("v",2),mu(cc[var_w("v",2),lw(0,1)],qTy))),
                        close(var_w("v",3),mu(mop(Cast (Word_Lib.mk_wordT 40),var_w("v",3)),qTy))),
                     close(var_w("v",40),mu(bop(BXor,var_w("pAddr",40),var_w("v",40)),qTy)))))),
           (eq(var_w("MemType",3),lw(3,3)),
            mb(const("ReverseEndian",@{typ "state \<Rightarrow> (1 word \<times> state)"},@{theory}),
               close
                 (var_w("v",1),
                  mb(mb(mu(cc[var_w("v",1),lw(0,2)],qTy),
                        close(var_w("v",3),mu(mop(Cast (Word_Lib.mk_wordT 40),var_w("v",3)),qTy))),
                     close(var_w("v",40),mu(bop(BXor,var_w("pAddr",40),var_w("v",40)),qTy)))))),
           (eq(var_w("MemType",3),lw(7,3)),mu(var_w("pAddr",40),qTy))],
          call
            ("raise'exception",@{typ "state \<Rightarrow> (40 word \<times> state)"},
             call("exception.UNPREDICTABLE",@{typ exception},ls"bad access length",@{theory}),
             @{theory}))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("InitMEM",
   mb(call
        ("next_unknown",@{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
         ls"mem-data",@{theory}),
      close
        (var("v",@{typ "nat \<times> string"}),
         mb(mb(mb(mu(apply
                       (lx(@{typ "(nat \<times> string) \<Rightarrow> 256 word"}),
                        var("v",@{typ "nat \<times> string"})),qTy),
                  close
                    (var_w("v",256),
                     mu(call("DataType.Raw",@{typ DataType},var_w("v",256),@{theory}),qTy))),
               close
                 (var("v",@{typ DataType}),
                  mu(mop(K1 (Word_Lib.mk_wordT 35),var("v",@{typ DataType})),qTy))),
            close
              (var("v",@{typ "35 word \<Rightarrow> DataType"}),
               mw(close
                    (var("s",qTy),
                     rupd
                       ("state.mem",
                        tp[var("s",qTy),var("v",@{typ "35 word \<Rightarrow> DataType"})],@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ReadData",
   close
     (var_w("dwordAddr",37),
      mb(mr(close
              (var("s",qTy),
               call("state.mem",@{typ "35 word \<Rightarrow> DataType"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "35 word \<Rightarrow> DataType"}),
            mb(mu(apply
                    (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                     ex(var_w("dwordAddr",37),ln 36,
                        bop(Sub,mop(Log,const("CAPBYTEWIDTH",HOLogic.natT,@{theory})),ln 3),
                        (Word_Lib.mk_wordT 35))),qTy),
               close
                 (var("x",@{typ DataType}),
                  mu(cs(var("x",@{typ DataType}),
                        [(call
                            ("DataType.Cap",@{typ DataType},var("cap",@{typ Capability}),@{theory}),
                          call
                            ("readDwordFromRaw",w64,
                             tp[var_w("dwordAddr",37),
                                call
                                  ("capToBits",(Word_Lib.mk_wordT 256),var("cap",@{typ Capability}),
                                   @{theory})],@{theory})),
                         (call("DataType.Raw",@{typ DataType},var_w("raw",256),@{theory}),
                          call
                            ("readDwordFromRaw",w64,tp[var_w("dwordAddr",37),var_w("raw",256)],
                             @{theory}))],@{context}),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("WriteData",
   close
     (tp[var_w("dwordAddr",37),var_w("data",64),var_w("mask",64)],
      mb(mr(close
              (var("s",qTy),
               call("state.mem",@{typ "35 word \<Rightarrow> DataType"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "35 word \<Rightarrow> DataType"}),
            mb(mb(mu(apply
                       (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                        ex(var_w("dwordAddr",37),ln 36,
                           bop(Sub,mop(Log,const("CAPBYTEWIDTH",HOLogic.natT,@{theory})),ln 3),
                           (Word_Lib.mk_wordT 35))),qTy),
                  close
                    (var("x",@{typ DataType}),
                     mu(cs(var("x",@{typ DataType}),
                           [(call
                               ("DataType.Cap",@{typ DataType},var("cap",@{typ Capability}),
                                @{theory}),
                             call
                               ("capToBits",(Word_Lib.mk_wordT 256),var("cap",@{typ Capability}),
                                @{theory})),
                            (call("DataType.Raw",@{typ DataType},var_w("raw",256),@{theory}),
                             var_w("raw",256))],@{context}),qTy))),
               close
                 (var_w("old_blob",256),
                  mb(mr(close
                          (var("s",qTy),
                           call
                             ("state.mem",@{typ "35 word \<Rightarrow> DataType"},var("s",qTy),
                              @{theory}))),
                     close
                       (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                        mb(mu(fupd
                                (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                                 ex(var_w("dwordAddr",37),ln 36,
                                    bop(Sub,mop(Log,const("CAPBYTEWIDTH",HOLogic.natT,@{theory})),
                                        ln 3),(Word_Lib.mk_wordT 35)),
                                 call
                                   ("DataType.Raw",@{typ DataType},
                                    call
                                      ("updateDwordInRaw",(Word_Lib.mk_wordT 256),
                                       tp[var_w("dwordAddr",37),var_w("data",64),var_w("mask",64),
                                          var_w("old_blob",256)],@{theory}),@{theory})),qTy),
                           close
                             (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                              mw(close
                                   (var("s",qTy),
                                    rupd
                                      ("state.mem",
                                       tp[var("s",qTy),
                                          var("v",@{typ "35 word \<Rightarrow> DataType"})],
                                       @{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ReadInst",
   close
     (var_w("a",40),
      mb(mr(close
              (var("s",qTy),
               call("state.mem",@{typ "35 word \<Rightarrow> DataType"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "35 word \<Rightarrow> DataType"}),
            mb(mb(mu(apply
                       (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                        ex(var_w("a",40),ln 39,
                           mop(Log,const("CAPBYTEWIDTH",HOLogic.natT,@{theory})),
                           (Word_Lib.mk_wordT 35))),qTy),
                  close
                    (var("x",@{typ DataType}),
                     mu(cs(var("x",@{typ DataType}),
                           [(call
                               ("DataType.Cap",@{typ DataType},var("cap",@{typ Capability}),
                                @{theory}),
                             call
                               ("readDwordFromRaw",w64,
                                tp[ex(var_w("a",40),ln 39,ln 3,(Word_Lib.mk_wordT 37)),
                                   call
                                     ("capToBits",(Word_Lib.mk_wordT 256),
                                      var("cap",@{typ Capability}),@{theory})],@{theory})),
                            (call("DataType.Raw",@{typ DataType},var_w("raw",256),@{theory}),
                             call
                               ("readDwordFromRaw",w64,
                                tp[ex(var_w("a",40),ln 39,ln 3,(Word_Lib.mk_wordT 37)),
                                   var_w("raw",256)],@{theory}))],@{context}),qTy))),
               close
                 (var_w("inst_pair",64),
                  mu(ite(bop(Bit,var_w("a",40),ln 2),ex(var_w("inst_pair",64),ln 31,ln 0,w32),
                         ex(var_w("inst_pair",64),ln 63,ln 32,w32)),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ReadCap",
   close
     (var_w("capAddr",35),
      mb(mr(close
              (var("s",qTy),
               call("state.mem",@{typ "35 word \<Rightarrow> DataType"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "35 word \<Rightarrow> DataType"}),
            mb(mu(apply(var("v",@{typ "35 word \<Rightarrow> DataType"}),var_w("capAddr",35)),qTy),
               close
                 (var("x",@{typ DataType}),
                  mu(cs(var("x",@{typ DataType}),
                        [(call
                            ("DataType.Cap",@{typ DataType},var("cap",@{typ Capability}),@{theory}),
                          var("cap",@{typ Capability})),
                         (call("DataType.Raw",@{typ DataType},var_w("raw",256),@{theory}),
                          call("bitsToCap",@{typ Capability},var_w("raw",256),@{theory}))],
                        @{context}),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("WriteCap",
   close
     (tp[var_w("capAddr",35),var("cap",@{typ Capability})],
      mb(mr(close
              (var("s",qTy),
               call("state.mem",@{typ "35 word \<Rightarrow> DataType"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "35 word \<Rightarrow> DataType"}),
            mb(mu(fupd
                    (var("v",@{typ "35 word \<Rightarrow> DataType"}),var_w("capAddr",35),
                     call("DataType.Cap",@{typ DataType},var("cap",@{typ Capability}),@{theory})),
                  qTy),
               close
                 (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                  mw(close
                       (var("s",qTy),
                        rupd
                          ("state.mem",
                           tp[var("s",qTy),var("v",@{typ "35 word \<Rightarrow> DataType"})],
                           @{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("WriteDWORD",
   close
     (tp[var_w("dwordAddr",37),var_w("data",64)],
      mb(mr(close
              (var("s",qTy),
               call("state.mem",@{typ "35 word \<Rightarrow> DataType"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "35 word \<Rightarrow> DataType"}),
            mb(mb(mu(apply
                       (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                        ex(var_w("dwordAddr",37),ln 36,
                           bop(Sub,mop(Log,const("CAPBYTEWIDTH",HOLogic.natT,@{theory})),ln 3),
                           (Word_Lib.mk_wordT 35))),qTy),
                  close
                    (var("x",@{typ DataType}),
                     mu(cs(var("x",@{typ DataType}),
                           [(call
                               ("DataType.Cap",@{typ DataType},var("cap",@{typ Capability}),
                                @{theory}),
                             mop(Cast (Word_Lib.mk_wordT 256),
                                 call
                                   ("reg'Capability",(Word_Lib.mk_wordT 257),
                                    var("cap",@{typ Capability}),@{theory}))),
                            (call("DataType.Raw",@{typ DataType},var_w("raw",256),@{theory}),
                             var_w("raw",256))],@{context}),qTy))),
               close
                 (var_w("old_blob",256),
                  mb(mr(close
                          (var("s",qTy),
                           call
                             ("state.mem",@{typ "35 word \<Rightarrow> DataType"},var("s",qTy),
                              @{theory}))),
                     close
                       (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                        mb(mu(fupd
                                (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                                 ex(var_w("dwordAddr",37),ln 36,
                                    bop(Sub,mop(Log,const("CAPBYTEWIDTH",HOLogic.natT,@{theory})),
                                        ln 3),(Word_Lib.mk_wordT 35)),
                                 call
                                   ("DataType.Raw",@{typ DataType},
                                    call
                                      ("updateDwordInRaw",(Word_Lib.mk_wordT 256),
                                       tp[var_w("dwordAddr",37),var_w("data",64),mop(BNot,lw(0,64)),
                                          var_w("old_blob",256)],@{theory}),@{theory})),qTy),
                           close
                             (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                              mw(close
                                   (var("s",qTy),
                                    rupd
                                      ("state.mem",
                                       tp[var("s",qTy),
                                          var("v",@{typ "35 word \<Rightarrow> DataType"})],
                                       @{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("Write256",
   close
     (tp[var_w("addr",35),var_w("data",256)],
      mb(mr(close
              (var("s",qTy),
               call("state.mem",@{typ "35 word \<Rightarrow> DataType"},var("s",qTy),@{theory}))),
         close
           (var("v",@{typ "35 word \<Rightarrow> DataType"}),
            mb(mu(fupd
                    (var("v",@{typ "35 word \<Rightarrow> DataType"}),var_w("addr",35),
                     call("DataType.Raw",@{typ DataType},var_w("data",256),@{theory})),qTy),
               close
                 (var("v",@{typ "35 word \<Rightarrow> DataType"}),
                  mw(close
                       (var("s",qTy),
                        rupd
                          ("state.mem",
                           tp[var("s",qTy),var("v",@{typ "35 word \<Rightarrow> DataType"})],
                           @{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("getVirtualAddress",
   close
     (var_w("addr",64),
      mb(call("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(0,5),@{theory}),
         close
           (var("v",@{typ Capability}),
            mb(mb(mu(call("getBase",w64,var("v",@{typ Capability}),@{theory}),qTy),
                  close(var_w("v",64),mu(bop(Add,var_w("addr",64),var_w("v",64)),qTy))),
               close
                 (var_w("v",64),
                  mb(call
                       ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(0,5),
                        @{theory}),
                     close
                       (var("v0",@{typ Capability}),
                        mb(mu(call("getOffset",w64,var("v0",@{typ Capability}),@{theory}),qTy),
                           close(var_w("v0",64),mu(bop(Add,var_w("v",64),var_w("v0",64)),qTy)))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LoadMemoryCap",
   close
     (tp[var_w("MemType",3),var_b"needAlign",var_w("vAddr",64),var_b"link"],
      ite(bop(And,var_b"needAlign",
              mop(Not,
                  call("isAligned",HOLogic.boolT,tp[var_w("vAddr",64),var_w("MemType",3)],@{theory}))),
          mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
             close
               (var("v",@{typ CP0}),
                mb(call
                     ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      rupd("CP0.BadVAddr",tp[var("v",@{typ CP0}),var_w("vAddr",64)],@{theory}),
                      @{theory}),
                   close
                     (var_a HOLogic.unitT,
                      mb(call
                           ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            lc("AdEL","ExceptionType",@{theory}),@{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(call
                                 ("next_unknown",
                                  @{typ
                                  "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                                  ls"mem-data",@{theory}),
                               close
                                 (var("v",@{typ "nat \<times> string"}),
                                  mu(apply
                                       (lx(@{typ "(nat \<times> string) \<Rightarrow> 64 word"}),
                                        var("v",@{typ "nat \<times> string"})),qTy))))))))),
          mb(call
               ("AdjustEndian",@{typ "state \<Rightarrow> (40 word \<times> state)"},
                tp[var_w("MemType",3),mop(Cast (Word_Lib.mk_wordT 40),var_w("vAddr",64))],@{theory}),
             close
               (var_w("pAddr",40),
                mb(ite(var_b"link",
                       mb(call
                            ("write'LLbit",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             mop(Some,lt),@{theory}),
                          close
                            (var_a HOLogic.unitT,
                             mb(const
                                  ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                                close
                                  (var("x",@{typ CP0}),
                                   call
                                     ("write'CP0",
                                      @{typ "state \<Rightarrow> (unit \<times> state)"},
                                      rupd
                                        ("CP0.LLAddr",
                                         tp[var("x",@{typ CP0}),mop(Cast w64,var_w("pAddr",40))],
                                         @{theory}),@{theory}))))),
                       call
                         ("write'LLbit",@{typ "state \<Rightarrow> (unit \<times> state)"},
                          lo HOLogic.boolT,@{theory})),
                   close
                     (var_a HOLogic.unitT,
                      call
                        ("ReadData",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                         ex(var_w("pAddr",40),ln 39,ln 3,(Word_Lib.mk_wordT 37)),@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LoadMemory",
   close
     (tp[var_w("MemType",3),var_w("AccessLength",3),var_b"needAlign",var_w("vAddr",64),var_b"link"],
      mb(call("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(0,5),@{theory}),
         close
           (var("capr0",@{typ Capability}),
            mb(call
                 ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(0,5),@{theory}),
               close
                 (var("v",@{typ Capability}),
                  mb(mu(call
                          ("getBaseAndLength",@{typ "64 word \<times> 64 word"},
                           var("v",@{typ Capability}),@{theory}),qTy),
                     close
                       (var("x",@{typ "64 word \<times> 64 word"}),
                        cs(var("x",@{typ "64 word \<times> 64 word"}),
                           [(tp[var_w("base",64),var_w("len",64)],
                             itb([(mop(Not,
                                       call
                                         ("getTag",HOLogic.boolT,var("capr0",@{typ Capability}),
                                          @{theory})),
                                   mb(call
                                        ("SignalCapException",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         tp[lc("capExcTag","CapExceptionType",@{theory}),lw(0,5)],
                                         @{theory}),
                                      close
                                        (var_a HOLogic.unitT,
                                         mb(call
                                              ("next_unknown",
                                               @{typ
                                               "state \<Rightarrow>
                                                ((nat \<times> string) \<times> state)"},
                                               ls"mem-data",@{theory}),
                                            close
                                              (var("v",@{typ "nat \<times> string"}),
                                               mu(apply
                                                    (lx(@{typ
                                                        "(nat \<times> string) \<Rightarrow> 64 word"}),
                                                     var("v",@{typ "nat \<times> string"})),qTy)))))),
                                  (call
                                     ("getSealed",HOLogic.boolT,var("capr0",@{typ Capability}),
                                      @{theory}),
                                   mb(call
                                        ("SignalCapException",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         tp[lc("capExcSeal","CapExceptionType",@{theory}),lw(0,5)],
                                         @{theory}),
                                      close
                                        (var_a HOLogic.unitT,
                                         mb(call
                                              ("next_unknown",
                                               @{typ
                                               "state \<Rightarrow>
                                                ((nat \<times> string) \<times> state)"},
                                               ls"mem-data",@{theory}),
                                            close
                                              (var("v",@{typ "nat \<times> string"}),
                                               mu(apply
                                                    (lx(@{typ
                                                        "(nat \<times> string) \<Rightarrow> 64 word"}),
                                                     var("v",@{typ "nat \<times> string"})),qTy)))))),
                                  (mop(Not,
                                       call
                                         ("Perms.Permit_Load",HOLogic.boolT,
                                          call
                                            ("getPerms",@{typ Perms},var("capr0",@{typ Capability}),
                                             @{theory}),@{theory})),
                                   mb(call
                                        ("SignalCapException",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         tp[lc("capExcPermLoad","CapExceptionType",@{theory}),
                                            lw(0,5)],@{theory}),
                                      close
                                        (var_a HOLogic.unitT,
                                         mb(call
                                              ("next_unknown",
                                               @{typ
                                               "state \<Rightarrow>
                                                ((nat \<times> string) \<times> state)"},
                                               ls"mem-data",@{theory}),
                                            close
                                              (var("v",@{typ "nat \<times> string"}),
                                               mu(apply
                                                    (lx(@{typ
                                                        "(nat \<times> string) \<Rightarrow> 64 word"}),
                                                     var("v",@{typ "nat \<times> string"})),qTy)))))),
                                  (bop(Ult,var_w("vAddr",64),
                                       call("getBase",w64,var("capr0",@{typ Capability}),@{theory})),
                                   mb(call
                                        ("SignalCapException",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         tp[lc("capExcLength","CapExceptionType",@{theory}),lw(0,5)],
                                         @{theory}),
                                      close
                                        (var_a HOLogic.unitT,
                                         mb(call
                                              ("next_unknown",
                                               @{typ
                                               "state \<Rightarrow>
                                                ((nat \<times> string) \<times> state)"},
                                               ls"mem-data",@{theory}),
                                            close
                                              (var("v",@{typ "nat \<times> string"}),
                                               mu(apply
                                                    (lx(@{typ
                                                        "(nat \<times> string) \<Rightarrow> 64 word"}),
                                                     var("v",@{typ "nat \<times> string"})),qTy)))))),
                                  (bop(Ugt,
                                       bop(Add,
                                           bop(Add,cc[lw(0,1),var_w("vAddr",64)],
                                               mop(Cast (Word_Lib.mk_wordT 65),
                                                   var_w("AccessLength",3))),lw(1,65)),
                                       bop(Add,cc[lw(0,1),var_w("base",64)],
                                           cc[lw(0,1),var_w("len",64)])),
                                   mb(call
                                        ("SignalCapException",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         tp[lc("capExcLength","CapExceptionType",@{theory}),lw(0,5)],
                                         @{theory}),
                                      close
                                        (var_a HOLogic.unitT,
                                         mb(call
                                              ("next_unknown",
                                               @{typ
                                               "state \<Rightarrow>
                                                ((nat \<times> string) \<times> state)"},
                                               ls"mem-data",@{theory}),
                                            close
                                              (var("v",@{typ "nat \<times> string"}),
                                               mu(apply
                                                    (lx(@{typ
                                                        "(nat \<times> string) \<Rightarrow> 64 word"}),
                                                     var("v",@{typ "nat \<times> string"})),qTy))))))],
                                 call
                                   ("LoadMemoryCap",
                                    @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                    tp[var_w("MemType",3),var_b"needAlign",var_w("vAddr",64),
                                       var_b"link"],@{theory})))],@{context})))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("LoadCap",
   close
     (tp[var_w("vAddr",64),var_b"link"],
      mb(ite(var_b"link",
             mb(call
                  ("write'LLbit",@{typ "state \<Rightarrow> (unit \<times> state)"},mop(Some,lt),
                   @{theory}),
                close
                  (var_a HOLogic.unitT,
                   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                      close
                        (var("x",@{typ CP0}),
                         call
                           ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            rupd("CP0.LLAddr",tp[var("x",@{typ CP0}),var_w("vAddr",64)],@{theory}),
                            @{theory}))))),
             call
               ("write'LLbit",@{typ "state \<Rightarrow> (unit \<times> state)"},lo HOLogic.boolT,
                @{theory})),
         close
           (var_a HOLogic.unitT,
            mb(call
                 ("ReadCap",@{typ "state \<Rightarrow> (Capability \<times> state)"},
                  ex(var_w("vAddr",64),ln 39,mop(Log,const("CAPBYTEWIDTH",HOLogic.natT,@{theory})),
                     (Word_Lib.mk_wordT 35)),@{theory}),
               close
                 (var("v",@{typ Capability}),
                  mn(var("v",@{typ Capability}),
                     mb(mu(lu,@{typ "Capability \<times> state"}),
                        close
                          (var_a HOLogic.unitT,
                           mr(close
                                (var("s",@{typ "Capability \<times> state"}),
                                 mop(Fst,var("s",@{typ "Capability \<times> state"})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("StoreMemoryCap",
   close
     (tp[var_w("MemType",3),var_w("AccessLength",3),var_w("MemElem",64),var_b"needAlign",
         var_w("vAddr",64),var_b"cond"],
      ite(bop(And,var_b"needAlign",
              mop(Not,
                  call("isAligned",HOLogic.boolT,tp[var_w("vAddr",64),var_w("MemType",3)],@{theory}))),
          mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
             close
               (var("v",@{typ CP0}),
                mb(call
                     ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      rupd("CP0.BadVAddr",tp[var("v",@{typ CP0}),var_w("vAddr",64)],@{theory}),
                      @{theory}),
                   close
                     (var_a HOLogic.unitT,
                      mb(call
                           ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            lc("AdES","ExceptionType",@{theory}),@{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(call
                                 ("next_unknown",
                                  @{typ
                                  "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                                  ls"sc-success",@{theory}),
                               close
                                 (var("v",@{typ "nat \<times> string"}),
                                  mu(apply
                                       (lx(@{typ "(nat \<times> string) \<Rightarrow> bool"}),
                                        var("v",@{typ "nat \<times> string"})),qTy))))))))),
          mb(call
               ("AdjustEndian",@{typ "state \<Rightarrow> (40 word \<times> state)"},
                tp[var_w("MemType",3),mop(Cast (Word_Lib.mk_wordT 40),var_w("vAddr",64))],@{theory}),
             close
               (var_w("pAddr",40),
                mb(ite(var_b"cond",
                       mb(const
                            ("LLbit",@{typ "state \<Rightarrow> ((bool option) \<times> state)"},
                             @{theory}),
                          close
                            (var("x",@{typ "bool option"}),
                             cs(var("x",@{typ "bool option"}),
                                [(lo HOLogic.boolT,
                                  call
                                    ("raise'exception",
                                     @{typ "state \<Rightarrow> (bool \<times> state)"},
                                     call
                                       ("exception.UNPREDICTABLE",@{typ exception},
                                        ls"conditional store: LLbit not set",@{theory}),@{theory})),
                                 (mop(Some,lf),mu(lf,qTy)),
                                 (mop(Some,lt),
                                  mb(const
                                       ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                        @{theory}),
                                     close
                                       (var("v",@{typ CP0}),
                                        mb(mb(mu(call
                                                   ("CP0.LLAddr",w64,var("v",@{typ CP0}),@{theory}),
                                                 qTy),
                                              close
                                                (var_w("v",64),
                                                 mu(eq(var_w("v",64),mop(Cast w64,var_w("pAddr",40))),
                                                    qTy))),
                                           close
                                             (var_b"b",
                                              ite(var_b"b",mu(lt,qTy),
                                                  call
                                                    ("raise'exception",
                                                     @{typ
                                                     "state \<Rightarrow> (bool \<times> state)"},
                                                     call
                                                       ("exception.UNPREDICTABLE",@{typ exception},
                                                        ls
                                                         "conditional store: address does not match previous LL address",
                                                        @{theory}),@{theory})))))))],@{context}))),
                       mu(lf,qTy)),
                   close
                     (var_b"sc_success",
                      mb(call
                           ("write'LLbit",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            lo HOLogic.boolT,@{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(mr(close
                                    (var("s",qTy),
                                     call("state.totalCore",HOLogic.natT,var("s",qTy),@{theory}))),
                               close
                                 (var_n"v",
                                  mb(mb(mu(bop(Sub,var_n"v",ln 1),qTy),
                                        close
                                          (var_n"j",
                                           forloop
                                             (tp[ln 0,var_n"j",
                                                 close
                                                   (var_n"core",
                                                    let'
                                                      (var_w("i",8),mop(Cast w8,var_n"core"),
                                                       mb(mr(close
                                                               (var("s",qTy),
                                                                call
                                                                  ("state.all_state",
                                                                   @{typ
                                                                   "8 word \<Rightarrow> procState"},
                                                                   var("s",qTy),@{theory}))),
                                                          close
                                                            (var("v",
                                                                 @{typ
                                                                 "8 word \<Rightarrow> procState"}),
                                                             mb(mu(apply
                                                                     (var("v",
                                                                          @{typ
                                                                          "8 word \<Rightarrow>
                                                                           procState"}),var_w("i",8)),
                                                                   qTy),
                                                                close
                                                                  (var("st",@{typ procState}),
                                                                   mb(mr(close
                                                                           (var("s",qTy),
                                                                            call
                                                                              ("state.procID",w8,
                                                                               var("s",qTy),
                                                                               @{theory}))),
                                                                      close
                                                                        (var_w("v",8),
                                                                         mb(mb(mb(mu(eq(var_w("i",8),
                                                                                        var_w("v",8)),
                                                                                     qTy),
                                                                                  close
                                                                                    (var_b"v",
                                                                                     mu(mop(Not,
                                                                                            var_b"v"),
                                                                                        qTy))),
                                                                               close
                                                                                 (var_b"b",
                                                                                  mu(bop(And,
                                                                                         var_b"b",
                                                                                         bop(And,
                                                                                             bop(Or,
                                                                                                 mop(Not,
                                                                                                     var_b"cond"),
                                                                                                 var_b"sc_success"),
                                                                                             bop(And,
                                                                                                 eq(call
                                                                                                      ("procState.c_LLbit",
                                                                                                       @{typ
                                                                                                       "bool
                                                                                                           option"},
                                                                                                       var("st",
                                                                                                           @{typ procState}),
                                                                                                       @{theory}),
                                                                                                    mop(Some,
                                                                                                        lt)),
                                                                                                 eq(ex(call
                                                                                                         ("CP0.LLAddr",
                                                                                                          w64,
                                                                                                          call
                                                                                                            ("procState.c_CP0",
                                                                                                             @{typ CP0},
                                                                                                             var("st",
                                                                                                                 @{typ procState}),
                                                                                                             @{theory}),
                                                                                                          @{theory}),
                                                                                                       ln
                                                                                                        39,
                                                                                                       ln
                                                                                                        3,
                                                                                                       (Word_Lib.mk_wordT 37)),
                                                                                                    ex(var_w("pAddr",40),
                                                                                                       ln
                                                                                                        39,
                                                                                                       ln
                                                                                                        3,
                                                                                                       (Word_Lib.mk_wordT 37)))))),
                                                                                     qTy))),
                                                                            close
                                                                              (var_b"b",
                                                                               ite(var_b"b",
                                                                                   mb(mr(close
                                                                                           (var("s",
                                                                                                qTy),
                                                                                            call
                                                                                              ("state.all_state",
                                                                                               @{typ
                                                                                               "8 word \<Rightarrow>
                                                                                                procState"},
                                                                                               var("s",
                                                                                                   qTy),
                                                                                               @{theory}))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ
                                                                                             "8 word \<Rightarrow>
                                                                                              procState"}),
                                                                                         mb(mu(apply
                                                                                                 (var("v",
                                                                                                      @{typ
                                                                                                      "8 word \<Rightarrow>
                                                                                                       procState"}),
                                                                                                  var_w("i",8)),
                                                                                               qTy),
                                                                                            close
                                                                                              (var("x0",
                                                                                                   @{typ procState}),
                                                                                               mb(mr(close
                                                                                                       (var("s",
                                                                                                            qTy),
                                                                                                        call
                                                                                                          ("state.all_state",
                                                                                                           @{typ
                                                                                                           "8 word \<Rightarrow>
                                                                                                            procState"},
                                                                                                           var("s",
                                                                                                               qTy),
                                                                                                           @{theory}))),
                                                                                                  close
                                                                                                    (var("v",
                                                                                                         @{typ
                                                                                                         "8 word \<Rightarrow>
                                                                                                          procState"}),
                                                                                                     mb(mu(fupd
                                                                                                             (var("v",
                                                                                                                  @{typ
                                                                                                                  "8 word \<Rightarrow>
                                                                                                                   procState"}),
                                                                                                              var_w("i",8),
                                                                                                              rupd
                                                                                                                ("procState.c_LLbit",
                                                                                                                 tp[var("x0",
                                                                                                                        @{typ procState}),
                                                                                                                    mop(Some,
                                                                                                                        lf)],
                                                                                                                 @{theory})),
                                                                                                           qTy),
                                                                                                        close
                                                                                                          (var("v",
                                                                                                               @{typ
                                                                                                               "8 word \<Rightarrow>
                                                                                                                procState"}),
                                                                                                           mw(close
                                                                                                                (var("s",
                                                                                                                     qTy),
                                                                                                                 rupd
                                                                                                                   ("state.all_state",
                                                                                                                    tp[var("s",
                                                                                                                           qTy),
                                                                                                                       var("v",
                                                                                                                           @{typ
                                                                                                                           "8 word \<Rightarrow>
                                                                                                                            procState"})],
                                                                                                                    @{theory}))))))))))),
                                                                                   mu(lu,qTy))))))))))))]))),
                                     close
                                       (var_a HOLogic.unitT,
                                        mb(ite(bop(Or,mop(Not,var_b"cond"),var_b"sc_success"),
                                               let'
                                                 (var_n"x",
                                                  bop(Mul,ln 8,
                                                      bop(Add,
                                                          mop(Cast HOLogic.natT,
                                                              var_w("AccessLength",3)),ln 1)),
                                                  call
                                                    ("WriteData",
                                                     @{typ
                                                     "state \<Rightarrow> (unit \<times> state)"},
                                                     tp[ex(var_w("pAddr",40),ln 39,ln 3,
                                                           (Word_Lib.mk_wordT 37)),
                                                        var_w("MemElem",64),
                                                        bop(Lsl,
                                                            bop(Sub,bop(Lsl,lw(1,64),var_n"x"),
                                                                lw(1,64)),
                                                            bop(Sub,ln 64,
                                                                bop(Add,var_n"x",
                                                                    bop(Mul,ln 8,
                                                                        mop(Cast HOLogic.natT,
                                                                            ex(var_w("vAddr",64),
                                                                               ln 2,ln 0,
                                                                               (Word_Lib.mk_wordT 3)))))))],
                                                     @{theory})),mu(lu,qTy)),
                                           close(var_a HOLogic.unitT,mu(var_b"sc_success",qTy))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("StoreMemory",
   close
     (tp[var_w("MemType",3),var_w("AccessLength",3),var_b"needAlign",var_w("MemElem",64),
         var_w("vAddr",64),var_b"cond"],
      mb(call("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},lw(0,5),@{theory}),
         close
           (var("capr0",@{typ Capability}),
            let'
              (tp[var_w("base",64),var_w("len",64)],
               call
                 ("getBaseAndLength",@{typ "64 word \<times> 64 word"},
                  var("capr0",@{typ Capability}),@{theory}),
               itb([(mop(Not,call("getTag",HOLogic.boolT,var("capr0",@{typ Capability}),@{theory})),
                     mb(call
                          ("SignalCapException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           tp[lc("capExcTag","CapExceptionType",@{theory}),lw(0,5)],@{theory}),
                        close
                          (var_a HOLogic.unitT,
                           mb(call
                                ("next_unknown",
                                 @{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                                 ls"sc-success",@{theory}),
                              close
                                (var("v",@{typ "nat \<times> string"}),
                                 mu(apply
                                      (lx(@{typ "(nat \<times> string) \<Rightarrow> bool"}),
                                       var("v",@{typ "nat \<times> string"})),qTy)))))),
                    (call("getSealed",HOLogic.boolT,var("capr0",@{typ Capability}),@{theory}),
                     mb(call
                          ("SignalCapException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           tp[lc("capExcSeal","CapExceptionType",@{theory}),lw(0,5)],@{theory}),
                        close
                          (var_a HOLogic.unitT,
                           mb(call
                                ("next_unknown",
                                 @{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                                 ls"sc-success",@{theory}),
                              close
                                (var("v",@{typ "nat \<times> string"}),
                                 mu(apply
                                      (lx(@{typ "(nat \<times> string) \<Rightarrow> bool"}),
                                       var("v",@{typ "nat \<times> string"})),qTy)))))),
                    (mop(Not,
                         call
                           ("Perms.Permit_Store",HOLogic.boolT,
                            call("getPerms",@{typ Perms},var("capr0",@{typ Capability}),@{theory}),
                            @{theory})),
                     mb(call
                          ("SignalCapException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           tp[lc("capExcPermStore","CapExceptionType",@{theory}),lw(0,5)],@{theory}),
                        close
                          (var_a HOLogic.unitT,
                           mb(call
                                ("next_unknown",
                                 @{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                                 ls"sc-success",@{theory}),
                              close
                                (var("v",@{typ "nat \<times> string"}),
                                 mu(apply
                                      (lx(@{typ "(nat \<times> string) \<Rightarrow> bool"}),
                                       var("v",@{typ "nat \<times> string"})),qTy)))))),
                    (bop(Ult,var_w("vAddr",64),
                         call("getBase",w64,var("capr0",@{typ Capability}),@{theory})),
                     mb(call
                          ("SignalCapException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           tp[lc("capExcLength","CapExceptionType",@{theory}),lw(0,5)],@{theory}),
                        close
                          (var_a HOLogic.unitT,
                           mb(call
                                ("next_unknown",
                                 @{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                                 ls"sc-success",@{theory}),
                              close
                                (var("v",@{typ "nat \<times> string"}),
                                 mu(apply
                                      (lx(@{typ "(nat \<times> string) \<Rightarrow> bool"}),
                                       var("v",@{typ "nat \<times> string"})),qTy)))))),
                    (bop(Ugt,
                         bop(Add,
                             bop(Add,cc[lw(0,1),var_w("vAddr",64)],
                                 mop(Cast (Word_Lib.mk_wordT 65),var_w("AccessLength",3))),lw(1,65)),
                         bop(Add,cc[lw(0,1),var_w("base",64)],cc[lw(0,1),var_w("len",64)])),
                     mb(call
                          ("SignalCapException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           tp[lc("capExcLength","CapExceptionType",@{theory}),lw(0,5)],@{theory}),
                        close
                          (var_a HOLogic.unitT,
                           mb(call
                                ("next_unknown",
                                 @{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                                 ls"sc-success",@{theory}),
                              close
                                (var("v",@{typ "nat \<times> string"}),
                                 mu(apply
                                      (lx(@{typ "(nat \<times> string) \<Rightarrow> bool"}),
                                       var("v",@{typ "nat \<times> string"})),qTy))))))],
                   call
                     ("StoreMemoryCap",@{typ "state \<Rightarrow> (bool \<times> state)"},
                      tp[var_w("MemType",3),var_w("AccessLength",3),var_w("MemElem",64),
                         var_b"needAlign",var_w("vAddr",64),var_b"cond"],@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("StoreCap",
   close
     (tp[var_w("vAddr",64),var("cap",@{typ Capability}),var_b"cond"],
      mn(lf,
         mb(ite(var_b"cond",
                mb(md(const
                        ("LLbit",@{typ "state \<Rightarrow> ((bool option) \<times> state)"},
                         @{theory}),HOLogic.boolT),
                   close
                     (var("x",@{typ "bool option"}),
                      cs(var("x",@{typ "bool option"}),
                         [(lo HOLogic.boolT,
                           md(call
                                ("raise'exception",
                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                 call
                                   ("exception.UNPREDICTABLE",@{typ exception},
                                    ls"conditional store of capability: LLbit not set",@{theory}),
                                 @{theory}),HOLogic.boolT)),
                          (mop(Some,lf),
                           mw(close
                                (var("s",@{typ "bool \<times> state"}),
                                 tp[lf,mop(Snd,var("s",@{typ "bool \<times> state"}))]))),
                          (mop(Some,lt),
                           mb(md(const
                                   ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                    @{theory}),HOLogic.boolT),
                              close
                                (var("v",@{typ CP0}),
                                 mb(mb(mu(call("CP0.LLAddr",w64,var("v",@{typ CP0}),@{theory}),
                                          @{typ "bool \<times> state"}),
                                       close
                                         (var_w("v",64),
                                          mu(eq(var_w("v",64),var_w("vAddr",64)),
                                             @{typ "bool \<times> state"}))),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           mw(close
                                                (var("s",@{typ "bool \<times> state"}),
                                                 tp[lt,
                                                    mop(Snd,var("s",@{typ "bool \<times> state"}))])),
                                           md(call
                                                ("raise'exception",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 call
                                                   ("exception.UNPREDICTABLE",@{typ exception},
                                                    ls
                                                     "conditional store of capability: address does not match previous LL address",
                                                    @{theory}),@{theory}),HOLogic.boolT)))))))],
                         @{context}))),mu(lu,@{typ "bool \<times> state"})),
            close
              (var_a HOLogic.unitT,
               mb(md(call
                       ("write'LLbit",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        lo HOLogic.boolT,@{theory}),HOLogic.boolT),
                  close
                    (var_a HOLogic.unitT,
                     mb(mb(mr(close
                                (var("s",@{typ "bool \<times> state"}),
                                 call
                                   ("state.totalCore",HOLogic.natT,
                                    mop(Snd,var("s",@{typ "bool \<times> state"})),@{theory}))),
                           close
                             (var_n"v",
                              mb(mb(mu(bop(Sub,var_n"v",ln 1),@{typ "bool \<times> state"}),
                                    close
                                      (var_n"j",
                                       forloop
                                         (tp[ln 0,var_n"j",
                                             close
                                               (var_n"core",
                                                let'
                                                  (var_w("i",8),mop(Cast w8,var_n"core"),
                                                   mb(mr(close
                                                           (var("s",@{typ "bool \<times> state"}),
                                                            call
                                                              ("state.all_state",
                                                               @{typ
                                                               "8 word \<Rightarrow> procState"},
                                                               mop(Snd,
                                                                   var("s",
                                                                       @{typ "bool \<times> state"})),
                                                               @{theory}))),
                                                      close
                                                        (var("v",
                                                             @{typ "8 word \<Rightarrow> procState"}),
                                                         mb(mu(apply
                                                                 (var("v",
                                                                      @{typ
                                                                      "8 word \<Rightarrow>
                                                                       procState"}),var_w("i",8)),
                                                               @{typ "bool \<times> state"}),
                                                            close
                                                              (var("st",@{typ procState}),
                                                               mb(mr(close
                                                                       (var("s",
                                                                            @{typ
                                                                            "bool \<times> state"}),
                                                                        call
                                                                          ("state.procID",w8,
                                                                           mop(Snd,
                                                                               var("s",
                                                                                   @{typ
                                                                                   "bool \<times>
                                                                                    state"})),
                                                                           @{theory}))),
                                                                  close
                                                                    (var_w("v",8),
                                                                     mb(mb(mb(mu(eq(var_w("i",8),
                                                                                    var_w("v",8)),
                                                                                 @{typ
                                                                                 "bool \<times>
                                                                                  state"}),
                                                                              close
                                                                                (var_b"v",
                                                                                 mu(mop(Not,var_b"v"),
                                                                                    @{typ
                                                                                    "bool \<times>
                                                                                     state"}))),
                                                                           close
                                                                             (var_b"b",
                                                                              ite(var_b"b",
                                                                                  mb(mr(close
                                                                                          (var("s",
                                                                                               @{typ
                                                                                               "bool \<times>
                                                                                                state"}),
                                                                                           mop(Fst,
                                                                                               var("s",
                                                                                                   @{typ
                                                                                                   "bool \<times>
                                                                                                    state"})))),
                                                                                     close
                                                                                       (var_b"v",
                                                                                        mb(mu(bop(Or,
                                                                                                  mop(Not,
                                                                                                      var_b"cond"),
                                                                                                  var_b"v"),
                                                                                              @{typ
                                                                                              "bool \<times>
                                                                                               state"}),
                                                                                           close
                                                                                             (var_b"b",
                                                                                              mu(bop(And,
                                                                                                     var_b"b",
                                                                                                     bop(And,
                                                                                                         eq(call
                                                                                                              ("procState.c_LLbit",
                                                                                                               @{typ
                                                                                                               "bool
                                                                                                                   option"},
                                                                                                               var("st",
                                                                                                                   @{typ procState}),
                                                                                                               @{theory}),
                                                                                                            mop(Some,
                                                                                                                lt)),
                                                                                                         eq(ex(call
                                                                                                                 ("CP0.LLAddr",
                                                                                                                  w64,
                                                                                                                  call
                                                                                                                    ("procState.c_CP0",
                                                                                                                     @{typ CP0},
                                                                                                                     var("st",
                                                                                                                         @{typ procState}),
                                                                                                                     @{theory}),
                                                                                                                  @{theory}),
                                                                                                               ln
                                                                                                                39,
                                                                                                               mop(Log,
                                                                                                                   const
                                                                                                                     ("CAPBYTEWIDTH",
                                                                                                                      HOLogic.natT,
                                                                                                                      @{theory})),
                                                                                                               (Word_Lib.mk_wordT 35)),
                                                                                                            ex(var_w("vAddr",64),
                                                                                                               ln
                                                                                                                39,
                                                                                                               mop(Log,
                                                                                                                   const
                                                                                                                     ("CAPBYTEWIDTH",
                                                                                                                      HOLogic.natT,
                                                                                                                      @{theory})),
                                                                                                               (Word_Lib.mk_wordT 35))))),
                                                                                                 @{typ
                                                                                                 "bool \<times>
                                                                                                  state"}))))),
                                                                                  mu(lf,
                                                                                     @{typ
                                                                                     "bool \<times>
                                                                                      state"})))),
                                                                        close
                                                                          (var_b"b",
                                                                           ite(var_b"b",
                                                                               mb(mr(close
                                                                                       (var("s",
                                                                                            @{typ
                                                                                            "bool \<times>
                                                                                             state"}),
                                                                                        call
                                                                                          ("state.all_state",
                                                                                           @{typ
                                                                                           "8 word \<Rightarrow>
                                                                                            procState"},
                                                                                           mop(Snd,
                                                                                               var("s",
                                                                                                   @{typ
                                                                                                   "bool \<times>
                                                                                                    state"})),
                                                                                           @{theory}))),
                                                                                  close
                                                                                    (var("v",
                                                                                         @{typ
                                                                                         "8 word \<Rightarrow>
                                                                                          procState"}),
                                                                                     mb(mu(apply
                                                                                             (var("v",
                                                                                                  @{typ
                                                                                                  "8 word \<Rightarrow>
                                                                                                   procState"}),
                                                                                              var_w("i",8)),
                                                                                           @{typ
                                                                                           "bool \<times>
                                                                                            state"}),
                                                                                        close
                                                                                          (var("x0",
                                                                                               @{typ procState}),
                                                                                           mb(mr(close
                                                                                                   (var("s",
                                                                                                        @{typ
                                                                                                        "bool \<times>
                                                                                                         state"}),
                                                                                                    call
                                                                                                      ("state.all_state",
                                                                                                       @{typ
                                                                                                       "8 word \<Rightarrow>
                                                                                                        procState"},
                                                                                                       mop(Snd,
                                                                                                           var("s",
                                                                                                               @{typ
                                                                                                               "bool \<times>
                                                                                                                state"})),
                                                                                                       @{theory}))),
                                                                                              close
                                                                                                (var("v",
                                                                                                     @{typ
                                                                                                     "8 word \<Rightarrow>
                                                                                                      procState"}),
                                                                                                 mb(mu(fupd
                                                                                                         (var("v",
                                                                                                              @{typ
                                                                                                              "8 word \<Rightarrow>
                                                                                                               procState"}),
                                                                                                          var_w("i",8),
                                                                                                          rupd
                                                                                                            ("procState.c_LLbit",
                                                                                                             tp[var("x0",
                                                                                                                    @{typ procState}),
                                                                                                                mop(Some,
                                                                                                                    lf)],
                                                                                                             @{theory})),
                                                                                                       @{typ
                                                                                                       "bool \<times>
                                                                                                        state"}),
                                                                                                    close
                                                                                                      (var("v",
                                                                                                           @{typ
                                                                                                           "8 word \<Rightarrow>
                                                                                                            procState"}),
                                                                                                       mw(close
                                                                                                            (var("s",
                                                                                                                 @{typ
                                                                                                                 "bool \<times>
                                                                                                                  state"}),
                                                                                                             tp[mop(Fst,
                                                                                                                    var("s",
                                                                                                                        @{typ
                                                                                                                        "bool \<times>
                                                                                                                         state"})),
                                                                                                                rupd
                                                                                                                  ("state.all_state",
                                                                                                                   tp[mop(Snd,
                                                                                                                          var("s",
                                                                                                                              @{typ
                                                                                                                              "bool \<times>
                                                                                                                               state"})),
                                                                                                                      var("v",
                                                                                                                          @{typ
                                                                                                                          "8 word \<Rightarrow>
                                                                                                                           procState"})],
                                                                                                                   @{theory})])))))))))),
                                                                               mu(lu,
                                                                                  @{typ
                                                                                  "bool \<times>
                                                                                   state"}))))))))))))]))),
                                 close
                                   (var_a HOLogic.unitT,
                                    mb(mr(close
                                            (var("s",@{typ "bool \<times> state"}),
                                             mop(Fst,var("s",@{typ "bool \<times> state"})))),
                                       close
                                         (var_b"v",
                                          mb(mu(bop(Or,mop(Not,var_b"cond"),var_b"v"),
                                                @{typ "bool \<times> state"}),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    md(call
                                                         ("WriteCap",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          tp[ex(var_w("vAddr",64),ln 39,
                                                                mop(Log,
                                                                    const
                                                                      ("CAPBYTEWIDTH",HOLogic.natT,
                                                                       @{theory})),
                                                                (Word_Lib.mk_wordT 35)),
                                                             var("cap",@{typ Capability})],@{theory}),
                                                       HOLogic.boolT),
                                                    mu(lu,@{typ "bool \<times> state"})))))))))),
                        close
                          (var_a HOLogic.unitT,
                           mr(close
                                (var("s",@{typ "bool \<times> state"}),
                                 mop(Fst,var("s",@{typ "bool \<times> state"})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("Fetch",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v0",@{typ CP0}),
                  mb(mb(mb(mb(mb(mb(mb(mb(mu(call
                                               ("CP0.Random",@{typ Random},var("v0",@{typ CP0}),
                                                @{theory}),qTy),
                                          close
                                            (var("v",@{typ Random}),
                                             mu(call
                                                  ("Random.Random",w8,var("v",@{typ Random}),
                                                   @{theory}),qTy))),
                                       close
                                         (var_w("v",8),
                                          mb(const
                                               ("CP0",
                                                @{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                                @{theory}),
                                             close
                                               (var("v0",@{typ CP0}),
                                                mb(mb(mu(call
                                                           ("CP0.Wired",@{typ Wired},
                                                            var("v0",@{typ CP0}),@{theory}),qTy),
                                                      close
                                                        (var("v",@{typ Wired}),
                                                         mu(call
                                                              ("Wired.Wired",w8,
                                                               var("v",@{typ Wired}),@{theory}),qTy))),
                                                   close
                                                     (var_w("v0",8),
                                                      mu(eq(var_w("v",8),var_w("v0",8)),qTy))))))),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           mu(mop(Cast w8,
                                                  bop(Sub,
                                                      const
                                                        ("TLBAssocEntries",HOLogic.natT,@{theory}),
                                                      ln 1)),qTy),
                                           mb(const
                                                ("CP0",
                                                 @{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                                 @{theory}),
                                              close
                                                (var("v",@{typ CP0}),
                                                 mb(mb(mu(call
                                                            ("CP0.Random",@{typ Random},
                                                             var("v",@{typ CP0}),@{theory}),qTy),
                                                       close
                                                         (var("v",@{typ Random}),
                                                          mu(call
                                                               ("Random.Random",w8,
                                                                var("v",@{typ Random}),@{theory}),
                                                             qTy))),
                                                    close
                                                      (var_w("v",8),
                                                       mu(bop(Sub,var_w("v",8),lw(1,8)),qTy)))))))),
                                 close
                                   (var_w("v0",8),
                                    mu(tp[call
                                            ("CP0.Random",@{typ Random},var("v",@{typ CP0}),
                                             @{theory}),var_w("v0",8)],qTy))),
                              close
                                (var("v",@{typ "Random \<times> 8 word"}),
                                 mu(rupd
                                      ("Random.Random",var("v",@{typ "Random \<times> 8 word"}),
                                       @{theory}),qTy))),
                           close
                             (var("v0",@{typ Random}),
                              mu(tp[var("v",@{typ CP0}),var("v0",@{typ Random})],qTy))),
                        close
                          (var("v",@{typ "CP0 \<times> Random"}),
                           mu(rupd("CP0.Random",var("v",@{typ "CP0 \<times> Random"}),@{theory}),qTy))),
                     close
                       (var("v",@{typ CP0}),
                        call
                          ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           var("v",@{typ CP0}),@{theory}))))),
            close
              (var_a HOLogic.unitT,
               mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                  close
                    (var("v",@{typ CP0}),
                     mb(mb(mb(mu(call("CP0.Compare",w32,var("v",@{typ CP0}),@{theory}),qTy),
                              close
                                (var_w("v",32),
                                 mb(const
                                      ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                       @{theory}),
                                    close
                                      (var("v0",@{typ CP0}),
                                       mb(mu(call("CP0.Count",w32,var("v0",@{typ CP0}),@{theory}),
                                             qTy),
                                          close
                                            (var_w("v0",32),mu(eq(var_w("v",32),var_w("v0",32)),qTy))))))),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  mb(const
                                       ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                        @{theory}),
                                     close
                                       (var("v",@{typ CP0}),
                                        mb(let'
                                             (var("x0",@{typ CauseRegister}),
                                              call
                                                ("CP0.Cause",@{typ CauseRegister},
                                                 var("v",@{typ CP0}),@{theory}),
                                              call
                                                ("write'CP0",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 rupd
                                                   ("CP0.Cause",
                                                    tp[var("v",@{typ CP0}),
                                                       rupd
                                                         ("CauseRegister.IP",
                                                          tp[var("x0",@{typ CauseRegister}),
                                                             bfi(ln 7,ln 7,mop(Cast w1,lt),
                                                                 call
                                                                   ("CauseRegister.IP",w8,
                                                                    var("x0",@{typ CauseRegister}),
                                                                    @{theory}))],@{theory})],
                                                    @{theory}),@{theory})),
                                           close
                                             (var_a HOLogic.unitT,
                                              mb(const
                                                   ("CP0",
                                                    @{typ
                                                    "state \<Rightarrow> (CP0 \<times> state)"},
                                                    @{theory}),
                                                 close
                                                   (var("x",@{typ CP0}),
                                                    call
                                                      ("write'CP0",
                                                       @{typ
                                                       "state \<Rightarrow> (unit \<times> state)"},
                                                       rupd
                                                         ("CP0.Cause",
                                                          tp[var("x",@{typ CP0}),
                                                             rupd
                                                               ("CauseRegister.TI",
                                                                tp[call
                                                                     ("CP0.Cause",
                                                                      @{typ CauseRegister},
                                                                      var("x",@{typ CP0}),@{theory}),
                                                                   lt],@{theory})],@{theory}),
                                                       @{theory}))))))),mu(lu,qTy)))),
                        close
                          (var_a HOLogic.unitT,
                           mb(const
                                ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                              close
                                (var("v",@{typ CP0}),
                                 mb(mb(mb(mb(mu(call
                                                  ("CP0.Status",@{typ StatusRegister},
                                                   var("v",@{typ CP0}),@{theory}),qTy),
                                             close
                                               (var("v",@{typ StatusRegister}),
                                                mu(call
                                                     ("StatusRegister.IE",HOLogic.boolT,
                                                      var("v",@{typ StatusRegister}),@{theory}),qTy))),
                                          close
                                            (var_b"b",
                                             ite(var_b"b",
                                                 mb(const
                                                      ("CP0",
                                                       @{typ
                                                       "state \<Rightarrow> (CP0 \<times> state)"},
                                                       @{theory}),
                                                    close
                                                      (var("v",@{typ CP0}),
                                                       mb(mb(mb(mu(call
                                                                     ("CP0.Status",
                                                                      @{typ StatusRegister},
                                                                      var("v",@{typ CP0}),@{theory}),
                                                                   qTy),
                                                                close
                                                                  (var("v",@{typ StatusRegister}),
                                                                   mu(call
                                                                        ("StatusRegister.EXL",
                                                                         HOLogic.boolT,
                                                                         var("v",
                                                                             @{typ StatusRegister}),
                                                                         @{theory}),qTy))),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",mu(lt,qTy),
                                                                    mb(const
                                                                         ("CP0",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (CP0 \<times> state)"},
                                                                          @{theory}),
                                                                       close
                                                                         (var("v",@{typ CP0}),
                                                                          mb(mu(call
                                                                                  ("CP0.Status",
                                                                                   @{typ StatusRegister},
                                                                                   var("v",
                                                                                       @{typ CP0}),
                                                                                   @{theory}),qTy),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ StatusRegister}),
                                                                                mu(call
                                                                                     ("StatusRegister.ERL",
                                                                                      HOLogic.boolT,
                                                                                      var("v",
                                                                                          @{typ StatusRegister}),
                                                                                      @{theory}),qTy)))))))),
                                                          close(var_b"v",mu(mop(Not,var_b"v"),qTy))))),
                                                 mu(lf,qTy)))),
                                       close
                                         (var_b"b",
                                          ite(var_b"b",
                                              mb(const
                                                   ("CP0",
                                                    @{typ
                                                    "state \<Rightarrow> (CP0 \<times> state)"},
                                                    @{theory}),
                                                 close
                                                   (var("v",@{typ CP0}),
                                                    mb(mb(mb(mb(mb(mb(mu(call
                                                                           ("CP0.Status",
                                                                            @{typ StatusRegister},
                                                                            var("v",@{typ CP0}),
                                                                            @{theory}),qTy),
                                                                      close
                                                                        (var("v",
                                                                             @{typ StatusRegister}),
                                                                         mu(call
                                                                              ("StatusRegister.IM",
                                                                               w8,
                                                                               var("v",
                                                                                   @{typ StatusRegister}),
                                                                               @{theory}),qTy))),
                                                                   close
                                                                     (var_w("v",8),
                                                                      mu(ex(var_w("v",8),ln 7,ln 2,
                                                                            (Word_Lib.mk_wordT 6)),
                                                                         qTy))),
                                                                close
                                                                  (var_w("v",6),
                                                                   mb(const
                                                                        ("CP0",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (CP0 \<times> state)"},
                                                                         @{theory}),
                                                                      close
                                                                        (var("v0",@{typ CP0}),
                                                                         mb(mb(mb(mu(call
                                                                                       ("CP0.Cause",
                                                                                        @{typ CauseRegister},
                                                                                        var("v0",
                                                                                            @{typ CP0}),
                                                                                        @{theory}),
                                                                                     qTy),
                                                                                  close
                                                                                    (var("v",
                                                                                         @{typ CauseRegister}),
                                                                                     mu(call
                                                                                          ("CauseRegister.IP",
                                                                                           w8,
                                                                                           var("v",
                                                                                               @{typ CauseRegister}),
                                                                                           @{theory}),
                                                                                        qTy))),
                                                                               close
                                                                                 (var_w("v",8),
                                                                                  mu(ex(var_w("v",8),
                                                                                        ln 7,ln 2,
                                                                                        (Word_Lib.mk_wordT 6)),
                                                                                     qTy))),
                                                                            close
                                                                              (var_w("v0",6),
                                                                               mu(bop(BAnd,
                                                                                      var_w("v",6),
                                                                                      var_w("v0",6)),
                                                                                  qTy))))))),
                                                             close
                                                               (var_w("v",6),
                                                                mu(eq(var_w("v",6),lw(0,6)),qTy))),
                                                          close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              call
                                                                ("SignalException",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (unit \<times> state)"},
                                                                 lc("Int","ExceptionType",@{theory}),
                                                                 @{theory}),mu(lu,qTy)))))),
                                              mu(lu,qTy)))),
                                    close
                                      (var_a HOLogic.unitT,
                                       mb(const
                                            ("exceptionSignalled",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},
                                             @{theory}),
                                          close
                                            (var_b"b",
                                             ite(var_b"b",mu(lo w32,qTy),
                                                 mb(const
                                                      ("PC",
                                                       @{typ
                                                       "state \<Rightarrow> (64 word \<times> state)"},
                                                       @{theory}),
                                                    close
                                                      (var_w("v",64),
                                                       mb(mb(mu(ex(var_w("v",64),ln 1,ln 0,
                                                                   (Word_Lib.mk_wordT 2)),qTy),
                                                             close
                                                               (var_w("v",2),
                                                                mu(eq(var_w("v",2),lw(0,2)),qTy))),
                                                          close
                                                            (var_b"b",
                                                             ite(var_b"b",
                                                                 mb(const
                                                                      ("PC",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (64 word \<times> state)"},
                                                                       @{theory}),
                                                                    close
                                                                      (var_w("v",64),
                                                                       mb(mb(const
                                                                               ("PCC",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},@{theory}),
                                                                             close
                                                                               (var("v0",
                                                                                    @{typ Capability}),
                                                                                mb(mu(call
                                                                                        ("getBase",
                                                                                         w64,
                                                                                         var("v0",
                                                                                             @{typ Capability}),
                                                                                         @{theory}),
                                                                                      qTy),
                                                                                   close
                                                                                     (var_w("v0",64),
                                                                                      mu(bop(Add,
                                                                                             var_w("v",64),
                                                                                             var_w("v0",64)),
                                                                                         qTy))))),
                                                                          close
                                                                            (var_w("vAddr",64),
                                                                             mb(const
                                                                                  ("PCC",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (Capability \<times>
                                                                                     state)"},
                                                                                   @{theory}),
                                                                                close
                                                                                  (var("v",
                                                                                       @{typ Capability}),
                                                                                   mb(mb(mu(call
                                                                                              ("getTag",
                                                                                               HOLogic.boolT,
                                                                                               var("v",
                                                                                                   @{typ Capability}),
                                                                                               @{theory}),
                                                                                            qTy),
                                                                                         close
                                                                                           (var_b"v",
                                                                                            mu(mop(Not,
                                                                                                   var_b"v"),
                                                                                               qTy))),
                                                                                      close
                                                                                        (var_b"b",
                                                                                         ite(var_b"b",
                                                                                             mb(call
                                                                                                  ("SignalCapException_noReg",
                                                                                                   @{typ
                                                                                                   "state \<Rightarrow>
                                                                                                    (unit \<times>
                                                                                                     state)"},
                                                                                                   lc("capExcTag",
                                                                                                      "CapExceptionType",
                                                                                                      @{theory}),
                                                                                                   @{theory}),
                                                                                                close
                                                                                                  (var_a
                                                                                                     HOLogic.unitT,
                                                                                                   mu(lo w32,
                                                                                                      qTy))),
                                                                                             mb(const
                                                                                                  ("PCC",
                                                                                                   @{typ
                                                                                                   "state \<Rightarrow>
                                                                                                    (Capability \<times>
                                                                                                     state)"},
                                                                                                   @{theory}),
                                                                                                close
                                                                                                  (var("v",
                                                                                                       @{typ Capability}),
                                                                                                   mb(mu(call
                                                                                                           ("getSealed",
                                                                                                            HOLogic.boolT,
                                                                                                            var("v",
                                                                                                                @{typ Capability}),
                                                                                                            @{theory}),
                                                                                                         qTy),
                                                                                                      close
                                                                                                        (var_b"b",
                                                                                                         ite(var_b"b",
                                                                                                             mb(call
                                                                                                                  ("SignalCapException_noReg",
                                                                                                                   @{typ
                                                                                                                   "state \<Rightarrow>
                                                                                                                    (unit \<times>
                                                                                                                     state)"},
                                                                                                                   lc("capExcSeal",
                                                                                                                      "CapExceptionType",
                                                                                                                      @{theory}),
                                                                                                                   @{theory}),
                                                                                                                close
                                                                                                                  (var_a
                                                                                                                     HOLogic.unitT,
                                                                                                                   mu(lo w32,
                                                                                                                      qTy))),
                                                                                                             mb(const
                                                                                                                  ("PCC",
                                                                                                                   @{typ
                                                                                                                   "state \<Rightarrow>
                                                                                                                    (Capability \<times>
                                                                                                                     state)"},
                                                                                                                   @{theory}),
                                                                                                                close
                                                                                                                  (var("v",
                                                                                                                       @{typ Capability}),
                                                                                                                   mb(mb(mu(call
                                                                                                                              ("getBase",
                                                                                                                               w64,
                                                                                                                               var("v",
                                                                                                                                   @{typ Capability}),
                                                                                                                               @{theory}),
                                                                                                                            qTy),
                                                                                                                         close
                                                                                                                           (var_w("v",64),
                                                                                                                            mu(bop(Ult,
                                                                                                                                   var_w("vAddr",64),
                                                                                                                                   var_w("v",64)),
                                                                                                                               qTy))),
                                                                                                                      close
                                                                                                                        (var_b"b",
                                                                                                                         ite(var_b"b",
                                                                                                                             mb(call
                                                                                                                                  ("SignalCapException_noReg",
                                                                                                                                   @{typ
                                                                                                                                   "state \<Rightarrow>
                                                                                                                                    (unit \<times>
                                                                                                                                     state)"},
                                                                                                                                   lc("capExcLength",
                                                                                                                                      "CapExceptionType",
                                                                                                                                      @{theory}),
                                                                                                                                   @{theory}),
                                                                                                                                close
                                                                                                                                  (var_a
                                                                                                                                     HOLogic.unitT,
                                                                                                                                   mu(lo w32,
                                                                                                                                      qTy))),
                                                                                                                             mb(const
                                                                                                                                  ("PCC",
                                                                                                                                   @{typ
                                                                                                                                   "state \<Rightarrow>
                                                                                                                                    (Capability \<times>
                                                                                                                                     state)"},
                                                                                                                                   @{theory}),
                                                                                                                                close
                                                                                                                                  (var("v",
                                                                                                                                       @{typ Capability}),
                                                                                                                                   mb(mb(mb(mb(mu(call
                                                                                                                                                    ("getBase",
                                                                                                                                                     w64,
                                                                                                                                                     var("v",
                                                                                                                                                         @{typ Capability}),
                                                                                                                                                     @{theory}),
                                                                                                                                                  qTy),
                                                                                                                                               close
                                                                                                                                                 (var_w("v",64),
                                                                                                                                                  mu(mop(Cast
                                                                                                                                                           (Word_Lib.mk_wordT 65),
                                                                                                                                                         var_w("v",64)),
                                                                                                                                                     qTy))),
                                                                                                                                            close
                                                                                                                                              (var_w("v",65),
                                                                                                                                               mb(const
                                                                                                                                                    ("PCC",
                                                                                                                                                     @{typ
                                                                                                                                                     "state \<Rightarrow>
                                                                                                                                                      (Capability \<times>
                                                                                                                                                       state)"},
                                                                                                                                                     @{theory}),
                                                                                                                                                  close
                                                                                                                                                    (var("v0",
                                                                                                                                                         @{typ Capability}),
                                                                                                                                                     mb(mb(mu(call
                                                                                                                                                                ("getLength",
                                                                                                                                                                 w64,
                                                                                                                                                                 var("v0",
                                                                                                                                                                     @{typ Capability}),
                                                                                                                                                                 @{theory}),
                                                                                                                                                              qTy),
                                                                                                                                                           close
                                                                                                                                                             (var_w("v",64),
                                                                                                                                                              mu(mop(Cast
                                                                                                                                                                       (Word_Lib.mk_wordT 65),
                                                                                                                                                                     var_w("v",64)),
                                                                                                                                                                 qTy))),
                                                                                                                                                        close
                                                                                                                                                          (var_w("v0",65),
                                                                                                                                                           mu(bop(Add,
                                                                                                                                                                  var_w("v",65),
                                                                                                                                                                  var_w("v0",65)),
                                                                                                                                                              qTy))))))),
                                                                                                                                         close
                                                                                                                                           (var_w("v",65),
                                                                                                                                            mu(bop(Ugt,
                                                                                                                                                   bop(Add,
                                                                                                                                                       cc[lw(0,
                                                                                                                                                             1),
                                                                                                                                                          var_w("vAddr",64)],
                                                                                                                                                       lw(4,
                                                                                                                                                          65)),
                                                                                                                                                   var_w("v",65)),
                                                                                                                                               qTy))),
                                                                                                                                      close
                                                                                                                                        (var_b"b",
                                                                                                                                         ite(var_b"b",
                                                                                                                                             mb(call
                                                                                                                                                  ("SignalCapException_noReg",
                                                                                                                                                   @{typ
                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                    (unit \<times>
                                                                                                                                                     state)"},
                                                                                                                                                   lc("capExcLength",
                                                                                                                                                      "CapExceptionType",
                                                                                                                                                      @{theory}),
                                                                                                                                                   @{theory}),
                                                                                                                                                close
                                                                                                                                                  (var_a
                                                                                                                                                     HOLogic.unitT,
                                                                                                                                                   mu(lo w32,
                                                                                                                                                      qTy))),
                                                                                                                                             mb(const
                                                                                                                                                  ("PCC",
                                                                                                                                                   @{typ
                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                    (Capability \<times>
                                                                                                                                                     state)"},
                                                                                                                                                   @{theory}),
                                                                                                                                                close
                                                                                                                                                  (var("v",
                                                                                                                                                       @{typ Capability}),
                                                                                                                                                   mb(mb(mb(mu(call
                                                                                                                                                                 ("getPerms",
                                                                                                                                                                  @{typ Perms},
                                                                                                                                                                  var("v",
                                                                                                                                                                      @{typ Capability}),
                                                                                                                                                                  @{theory}),
                                                                                                                                                               qTy),
                                                                                                                                                            close
                                                                                                                                                              (var("v",
                                                                                                                                                                   @{typ Perms}),
                                                                                                                                                               mu(call
                                                                                                                                                                    ("Perms.Permit_Execute",
                                                                                                                                                                     HOLogic.boolT,
                                                                                                                                                                     var("v",
                                                                                                                                                                         @{typ Perms}),
                                                                                                                                                                     @{theory}),
                                                                                                                                                                  qTy))),
                                                                                                                                                         close
                                                                                                                                                           (var_b"v",
                                                                                                                                                            mu(mop(Not,
                                                                                                                                                                   var_b"v"),
                                                                                                                                                               qTy))),
                                                                                                                                                      close
                                                                                                                                                        (var_b"b",
                                                                                                                                                         ite(var_b"b",
                                                                                                                                                             mb(call
                                                                                                                                                                  ("SignalCapException_noReg",
                                                                                                                                                                   @{typ
                                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                                    (unit \<times>
                                                                                                                                                                     state)"},
                                                                                                                                                                   lc("capExcPermExe",
                                                                                                                                                                      "CapExceptionType",
                                                                                                                                                                      @{theory}),
                                                                                                                                                                   @{theory}),
                                                                                                                                                                close
                                                                                                                                                                  (var_a
                                                                                                                                                                     HOLogic.unitT,
                                                                                                                                                                   mu(lo w32,
                                                                                                                                                                      qTy))),
                                                                                                                                                             mb(const
                                                                                                                                                                  ("exceptionSignalled",
                                                                                                                                                                   @{typ
                                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                                    (bool \<times>
                                                                                                                                                                     state)"},
                                                                                                                                                                   @{theory}),
                                                                                                                                                                close
                                                                                                                                                                  (var_b"b",
                                                                                                                                                                   ite(var_b"b",
                                                                                                                                                                       mu(lo w32,
                                                                                                                                                                          qTy),
                                                                                                                                                                       mb(call
                                                                                                                                                                            ("ReadInst",
                                                                                                                                                                             @{typ
                                                                                                                                                                             "state \<Rightarrow>
                                                                                                                                                                              (32 word \<times>
                                                                                                                                                                               state)"},
                                                                                                                                                                             mop(Cast
                                                                                                                                                                                   (Word_Lib.mk_wordT 40),
                                                                                                                                                                                 var_w("vAddr",64)),
                                                                                                                                                                             @{theory}),
                                                                                                                                                                          close
                                                                                                                                                                            (var_w("v",32),
                                                                                                                                                                             mu(mop(Some,
                                                                                                                                                                                    var_w("v",32)),
                                                                                                                                                                                qTy))))))))))))))))))))))))))))))))))),
                                                                 mb(const
                                                                      ("CP0",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (CP0 \<times> state)"},
                                                                       @{theory}),
                                                                    close
                                                                      (var("v",@{typ CP0}),
                                                                       mb(mb(const
                                                                               ("PCC",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},@{theory}),
                                                                             close
                                                                               (var("v0",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mb(mb(mu(call
                                                                                                 ("getBase",
                                                                                                  w64,
                                                                                                  var("v0",
                                                                                                      @{typ Capability}),
                                                                                                  @{theory}),
                                                                                               qTy),
                                                                                            close
                                                                                              (var_w("v",64),
                                                                                               mb(const
                                                                                                    ("PC",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (64 word \<times>
                                                                                                       state)"},
                                                                                                     @{theory}),
                                                                                                  close
                                                                                                    (var_w("v0",64),
                                                                                                     mu(bop(Add,
                                                                                                            var_w("v",64),
                                                                                                            var_w("v0",64)),
                                                                                                        qTy))))),
                                                                                         close
                                                                                           (var_w("v0",64),
                                                                                            mu(tp[var("v",
                                                                                                      @{typ CP0}),
                                                                                                  var_w("v0",64)],
                                                                                               qTy))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ
                                                                                             "CP0 \<times>
                                                                                              64 word"}),
                                                                                         mu(rupd
                                                                                              ("CP0.BadVAddr",
                                                                                               var("v",
                                                                                                   @{typ
                                                                                                   "CP0 \<times>
                                                                                                    64 word"}),
                                                                                               @{theory}),
                                                                                            qTy))),
                                                                                   close
                                                                                     (var("v",
                                                                                          @{typ CP0}),
                                                                                      call
                                                                                        ("write'CP0",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         var("v",
                                                                                             @{typ CP0}),
                                                                                         @{theory}))))),
                                                                          close
                                                                            (var_a HOLogic.unitT,
                                                                             mb(call
                                                                                  ("SignalException",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   lc("AdEL",
                                                                                      "ExceptionType",
                                                                                      @{theory}),
                                                                                   @{theory}),
                                                                                close
                                                                                  (var_a
                                                                                     HOLogic.unitT,
                                                                                   mu(lo w32,qTy))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("PSIZE",ln 40)
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("switchCore",
   close
     (var_n"n",
      mb(mr(close(var("s",qTy),call("state.procID",w8,var("s",qTy),@{theory}))),
         close
           (var_w("v",8),
            mb(mu(mop(Cast HOLogic.natT,var_w("v",8)),qTy),
               close
                 (var_n"old",
                  mb(ite(mop(Not,eq(var_n"n",var_n"old")),
                         let'
                           (var_w("i",8),mop(Cast w8,var_n"n"),
                            mb(call
                                 ("switchCoreTLB",
                                  @{typ "state \<Rightarrow> (unit \<times> state)"},var_w("i",8),
                                  @{theory}),
                               close
                                 (var_a HOLogic.unitT,
                                  mb(call
                                       ("switchCoreCAP",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},
                                        var_w("i",8),@{theory}),
                                     close
                                       (var_a HOLogic.unitT,
                                        mb(mr(close
                                                (var("s",qTy),
                                                 call
                                                   ("state.all_gpr",
                                                    @{typ
                                                    "8 word \<Rightarrow>
                                                     (5 word \<Rightarrow> 64 word)"},var("s",qTy),
                                                    @{theory}))),
                                           close
                                             (var("v",
                                                  @{typ
                                                  "8 word \<Rightarrow>
                                                   (5 word \<Rightarrow> 64 word)"}),
                                              mb(mb(mb(mr(close
                                                            (var("s",qTy),
                                                             call
                                                               ("state.procID",w8,var("s",qTy),
                                                                @{theory}))),
                                                       close
                                                         (var_w("v0",8),
                                                          mb(mr(close
                                                                  (var("s",qTy),
                                                                   call
                                                                     ("state.c_gpr",
                                                                      @{typ
                                                                      "5 word \<Rightarrow> 64 word"},
                                                                      var("s",qTy),@{theory}))),
                                                             close
                                                               (var("v1",
                                                                    @{typ
                                                                    "5 word \<Rightarrow> 64 word"}),
                                                                mu(fupd
                                                                     (var("v",
                                                                          @{typ
                                                                          "8 word \<Rightarrow>
                                                                           (5 word \<Rightarrow>
                                                                            64 word)"}),
                                                                      var_w("v0",8),
                                                                      var("v1",
                                                                          @{typ
                                                                          "5 word \<Rightarrow>
                                                                           64 word"})),qTy))))),
                                                    close
                                                      (var("v",
                                                           @{typ
                                                           "8 word \<Rightarrow>
                                                            (5 word \<Rightarrow> 64 word)"}),
                                                       mw(close
                                                            (var("s",qTy),
                                                             rupd
                                                               ("state.all_gpr",
                                                                tp[var("s",qTy),
                                                                   var("v",
                                                                       @{typ
                                                                       "8 word \<Rightarrow>
                                                                        (5 word \<Rightarrow>
                                                                         64 word)"})],@{theory}))))),
                                                 close
                                                   (var_a HOLogic.unitT,
                                                    mb(mr(close
                                                            (var("s",qTy),
                                                             call
                                                               ("state.all_state",
                                                                @{typ
                                                                "8 word \<Rightarrow> procState"},
                                                                var("s",qTy),@{theory}))),
                                                       close
                                                         (var("v",
                                                              @{typ
                                                              "8 word \<Rightarrow> procState"}),
                                                          mb(mb(mb(mr(close
                                                                        (var("s",qTy),
                                                                         call
                                                                           ("state.procID",w8,
                                                                            var("s",qTy),@{theory}))),
                                                                   close
                                                                     (var_w("v0",8),
                                                                      mb(mr(close
                                                                              (var("s",qTy),
                                                                               call
                                                                                 ("state.c_state",
                                                                                  @{typ procState},
                                                                                  var("s",qTy),
                                                                                  @{theory}))),
                                                                         close
                                                                           (var("v1",
                                                                                @{typ procState}),
                                                                            mu(fupd
                                                                                 (var("v",
                                                                                      @{typ
                                                                                      "8 word \<Rightarrow>
                                                                                       procState"}),
                                                                                  var_w("v0",8),
                                                                                  var("v1",
                                                                                      @{typ procState})),
                                                                               qTy))))),
                                                                close
                                                                  (var("v",
                                                                       @{typ
                                                                       "8 word \<Rightarrow>
                                                                        procState"}),
                                                                   mw(close
                                                                        (var("s",qTy),
                                                                         rupd
                                                                           ("state.all_state",
                                                                            tp[var("s",qTy),
                                                                               var("v",
                                                                                   @{typ
                                                                                   "8 word \<Rightarrow>
                                                                                    procState"})],
                                                                            @{theory}))))),
                                                             close
                                                               (var_a HOLogic.unitT,
                                                                mb(mr(close
                                                                        (var("s",qTy),
                                                                         call
                                                                           ("state.all_gpr",
                                                                            @{typ
                                                                            "8 word \<Rightarrow>
                                                                             (5 word \<Rightarrow>
                                                                              64 word)"},
                                                                            var("s",qTy),@{theory}))),
                                                                   close
                                                                     (var("v",
                                                                          @{typ
                                                                          "8 word \<Rightarrow>
                                                                           (5 word \<Rightarrow>
                                                                            64 word)"}),
                                                                      mb(mb(mu(apply
                                                                                 (var("v",
                                                                                      @{typ
                                                                                      "8 word \<Rightarrow>
                                                                                       (5 word \<Rightarrow>
                                                                                        64 word)"}),
                                                                                  var_w("i",8)),qTy),
                                                                            close
                                                                              (var("v",
                                                                                   @{typ
                                                                                   "5 word \<Rightarrow>
                                                                                    64 word"}),
                                                                               mw(close
                                                                                    (var("s",qTy),
                                                                                     rupd
                                                                                       ("state.c_gpr",
                                                                                        tp[var("s",
                                                                                               qTy),
                                                                                           var("v",
                                                                                               @{typ
                                                                                               "5 word \<Rightarrow>
                                                                                                64 word"})],
                                                                                        @{theory}))))),
                                                                         close
                                                                           (var_a HOLogic.unitT,
                                                                            mb(mr(close
                                                                                    (var("s",qTy),
                                                                                     call
                                                                                       ("state.all_state",
                                                                                        @{typ
                                                                                        "8 word \<Rightarrow>
                                                                                         procState"},
                                                                                        var("s",qTy),
                                                                                        @{theory}))),
                                                                               close
                                                                                 (var("v",
                                                                                      @{typ
                                                                                      "8 word \<Rightarrow>
                                                                                       procState"}),
                                                                                  mb(mb(mu(apply
                                                                                             (var("v",
                                                                                                  @{typ
                                                                                                  "8 word \<Rightarrow>
                                                                                                   procState"}),
                                                                                              var_w("i",8)),
                                                                                           qTy),
                                                                                        close
                                                                                          (var("v",
                                                                                               @{typ procState}),
                                                                                           mw(close
                                                                                                (var("s",
                                                                                                     qTy),
                                                                                                 rupd
                                                                                                   ("state.c_state",
                                                                                                    tp[var("s",
                                                                                                           qTy),
                                                                                                       var("v",
                                                                                                           @{typ procState})],
                                                                                                    @{theory}))))),
                                                                                     close
                                                                                       (var_a
                                                                                          HOLogic.unitT,
                                                                                        mw(close
                                                                                             (var("s",
                                                                                                  qTy),
                                                                                              rupd
                                                                                                ("state.procID",
                                                                                                 tp[var("s",
                                                                                                        qTy),
                                                                                                    var_w("i",8)],
                                                                                                 @{theory})))))))))))))))))))))))),
                         mu(lu,qTy)),close(var_a HOLogic.unitT,mu(var_n"old",qTy)))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("resetStats",
   mb(const("initCoreStats",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
      close(var_a HOLogic.unitT,mu(lu,qTy))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("dumpStats",close(tp[var_n"inst",var_s"ips",var("fmt",@{typ "string option"})],ls""))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("clearDynamicStats",close(var_a HOLogic.unitT,lu))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("HI",
   mb(const("hi",@{typ "state \<Rightarrow> ((64 word option) \<times> state)"},@{theory}),
      close
        (var("x",@{typ "64 word option"}),
         cs(var("x",@{typ "64 word option"}),
            [(mop(Some,var_w("v",64)),mu(var_w("v",64),qTy)),
             (lo w64,
              mb(mr(close
                      (var("s",qTy),
                       call
                         ("state.UNPREDICTABLE_HI",@{typ "unit \<Rightarrow> unit"},var("s",qTy),
                          @{theory}))),
                 close
                   (var("v",@{typ "unit \<Rightarrow> unit"}),
                    mb(mu(lu,qTy),
                       close
                         (var_a HOLogic.unitT,
                          mb(call
                               ("next_unknown",
                                @{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                                ls"hi-reg",@{theory}),
                             close
                               (var("v",@{typ "nat \<times> string"}),
                                mu(apply
                                     (lx(@{typ "(nat \<times> string) \<Rightarrow> 64 word"}),
                                      var("v",@{typ "nat \<times> string"})),qTy))))))))],@{context}))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'HI",
   close
     (var_w("value",64),
      mb(call
           ("write'hi",@{typ "state \<Rightarrow> (unit \<times> state)"},
            mop(Some,var_w("value",64)),@{theory}),close(var_a HOLogic.unitT,mu(lu,qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LO",
   mb(const("lo",@{typ "state \<Rightarrow> ((64 word option) \<times> state)"},@{theory}),
      close
        (var("x",@{typ "64 word option"}),
         cs(var("x",@{typ "64 word option"}),
            [(mop(Some,var_w("v",64)),mu(var_w("v",64),qTy)),
             (lo w64,
              mb(mr(close
                      (var("s",qTy),
                       call
                         ("state.UNPREDICTABLE_LO",@{typ "unit \<Rightarrow> unit"},var("s",qTy),
                          @{theory}))),
                 close
                   (var("v",@{typ "unit \<Rightarrow> unit"}),
                    mb(mu(lu,qTy),
                       close
                         (var_a HOLogic.unitT,
                          mb(call
                               ("next_unknown",
                                @{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                                ls"lo-reg",@{theory}),
                             close
                               (var("v",@{typ "nat \<times> string"}),
                                mu(apply
                                     (lx(@{typ "(nat \<times> string) \<Rightarrow> 64 word"}),
                                      var("v",@{typ "nat \<times> string"})),qTy))))))))],@{context}))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'LO",
   close
     (var_w("value",64),
      mb(call
           ("write'lo",@{typ "state \<Rightarrow> (unit \<times> state)"},
            mop(Some,var_w("value",64)),@{theory}),close(var_a HOLogic.unitT,mu(lu,qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CPR",
   close
     (tp[var_n"n",var_w("reg",5),var_w("sel",3)],
      itb([(bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(0,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.Index",@{typ Index},var("v",@{typ CP0}),@{theory}),qTy),
                        close
                          (var("v",@{typ Index}),
                           mu(call("reg'Index",w32,var("v",@{typ Index}),@{theory}),qTy))),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(1,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.Random",@{typ Random},var("v",@{typ CP0}),@{theory}),qTy),
                        close
                          (var("v",@{typ Random}),
                           mu(call("reg'Random",w32,var("v",@{typ Random}),@{theory}),qTy))),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(2,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mu(call("CP0.EntryLo0",@{typ EntryLo},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ EntryLo}),
                        mu(call("reg'EntryLo",w64,var("v",@{typ EntryLo}),@{theory}),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(3,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mu(call("CP0.EntryLo1",@{typ EntryLo},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ EntryLo}),
                        mu(call("reg'EntryLo",w64,var("v",@{typ EntryLo}),@{theory}),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(4,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mu(call("CP0.Context",@{typ Context},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ Context}),
                        mu(call("reg'Context",w64,var("v",@{typ Context}),@{theory}),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(4,5)),eq(var_w("sel",3),lw(2,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),mu(call("CP0.UsrLocal",w64,var("v",@{typ CP0}),@{theory}),qTy)))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(5,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.PageMask",@{typ PageMask},var("v",@{typ CP0}),@{theory}),qTy),
                        close
                          (var("v",@{typ PageMask}),
                           mu(call("reg'PageMask",w32,var("v",@{typ PageMask}),@{theory}),qTy))),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(6,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.Wired",@{typ Wired},var("v",@{typ CP0}),@{theory}),qTy),
                        close
                          (var("v",@{typ Wired}),
                           mu(call("reg'Wired",w32,var("v",@{typ Wired}),@{theory}),qTy))),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(7,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.HWREna",@{typ HWREna},var("v",@{typ CP0}),@{theory}),qTy),
                        close
                          (var("v",@{typ HWREna}),
                           mu(call("reg'HWREna",w32,var("v",@{typ HWREna}),@{theory}),qTy))),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(8,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),mu(call("CP0.BadVAddr",w64,var("v",@{typ CP0}),@{theory}),qTy)))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(8,5)),eq(var_w("sel",3),lw(1,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mu(call("CP0.EInstr",w32,var("v",@{typ CP0}),@{theory}),qTy),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(9,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mu(call("CP0.Count",w32,var("v",@{typ CP0}),@{theory}),qTy),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(10,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mu(call("CP0.EntryHi",@{typ EntryHi},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ EntryHi}),
                        mu(call("reg'EntryHi",w64,var("v",@{typ EntryHi}),@{theory}),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(11,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mu(call("CP0.Compare",w32,var("v",@{typ CP0}),@{theory}),qTy),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(12,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),
                           qTy),
                        close
                          (var("v",@{typ StatusRegister}),
                           mu(call
                                ("reg'StatusRegister",w32,var("v",@{typ StatusRegister}),@{theory}),
                              qTy))),close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(13,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.Cause",@{typ CauseRegister},var("v",@{typ CP0}),@{theory}),qTy),
                        close
                          (var("v",@{typ CauseRegister}),
                           mu(call("reg'CauseRegister",w32,var("v",@{typ CauseRegister}),@{theory}),
                              qTy))),close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(14,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close(var("v",@{typ CP0}),mu(call("CP0.EPC",w64,var("v",@{typ CP0}),@{theory}),qTy)))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(15,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mu(call("CP0.PRId",w32,var("v",@{typ CP0}),@{theory}),qTy),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(15,5)),eq(var_w("sel",3),lw(1,3)))),
            mb(mr(close(var("s",qTy),call("state.totalCore",HOLogic.natT,var("s",qTy),@{theory}))),
               close
                 (var_n"v",
                  mb(mb(mb(mu(bop(Sub,var_n"v",ln 1),qTy),
                           close(var_n"v",mu(mop(Cast w16,var_n"v"),qTy))),
                        close
                          (var_w("v",16),
                           mb(mr(close(var("s",qTy),call("state.procID",w8,var("s",qTy),@{theory}))),
                              close
                                (var_w("v0",8),
                                 mb(mu(mop(Cast w16,var_w("v0",8)),qTy),
                                    close(var_w("v0",16),mu(cc[var_w("v",16),var_w("v0",16)],qTy))))))),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(15,5)),eq(var_w("sel",3),lw(6,3)))),
            mb(mr(close(var("s",qTy),call("state.totalCore",HOLogic.natT,var("s",qTy),@{theory}))),
               close
                 (var_n"v",
                  mb(mb(mb(mu(bop(Sub,var_n"v",ln 1),qTy),
                           close(var_n"v",mu(mop(Cast w16,var_n"v"),qTy))),
                        close
                          (var_w("v",16),
                           mb(mr(close(var("s",qTy),call("state.procID",w8,var("s",qTy),@{theory}))),
                              close
                                (var_w("v0",8),
                                 mb(mu(mop(Cast w16,var_w("v0",8)),qTy),
                                    close(var_w("v0",16),mu(cc[var_w("v",16),var_w("v0",16)],qTy))))))),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(16,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.Config",@{typ ConfigRegister},var("v",@{typ CP0}),@{theory}),
                           qTy),
                        close
                          (var("v",@{typ ConfigRegister}),
                           mu(call
                                ("reg'ConfigRegister",w32,var("v",@{typ ConfigRegister}),@{theory}),
                              qTy))),close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(16,5)),eq(var_w("sel",3),lw(1,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.Config1",@{typ ConfigRegister1},var("v",@{typ CP0}),@{theory}),
                           qTy),
                        close
                          (var("v",@{typ ConfigRegister1}),
                           mu(call
                                ("reg'ConfigRegister1",w32,var("v",@{typ ConfigRegister1}),@{theory}),
                              qTy))),close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(16,5)),eq(var_w("sel",3),lw(2,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.Config2",@{typ ConfigRegister2},var("v",@{typ CP0}),@{theory}),
                           qTy),
                        close
                          (var("v",@{typ ConfigRegister2}),
                           mu(call
                                ("reg'ConfigRegister2",w32,var("v",@{typ ConfigRegister2}),@{theory}),
                              qTy))),close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(16,5)),eq(var_w("sel",3),lw(3,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.Config3",@{typ ConfigRegister3},var("v",@{typ CP0}),@{theory}),
                           qTy),
                        close
                          (var("v",@{typ ConfigRegister3}),
                           mu(call
                                ("reg'ConfigRegister3",w32,var("v",@{typ ConfigRegister3}),@{theory}),
                              qTy))),close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(16,5)),eq(var_w("sel",3),lw(4,3)))),mu(lw(1,64),qTy)),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(16,5)),eq(var_w("sel",3),lw(5,3)))),mu(lw(1,64),qTy)),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(16,5)),eq(var_w("sel",3),lw(6,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mb(mu(call("CP0.Config6",@{typ ConfigRegister6},var("v",@{typ CP0}),@{theory}),
                           qTy),
                        close
                          (var("v",@{typ ConfigRegister6}),
                           mu(call
                                ("reg'ConfigRegister6",w32,var("v",@{typ ConfigRegister6}),@{theory}),
                              qTy))),close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(17,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),mu(call("CP0.LLAddr",w64,var("v",@{typ CP0}),@{theory}),qTy)))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(20,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mu(call("CP0.XContext",@{typ XContext},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ XContext}),
                        mu(call("reg'XContext",w64,var("v",@{typ XContext}),@{theory}),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(23,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mu(call("CP0.Debug",w32,var("v",@{typ CP0}),@{theory}),qTy),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(26,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(mu(call("CP0.ErrCtl",w32,var("v",@{typ CP0}),@{theory}),qTy),
                     close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(30,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),mu(call("CP0.ErrorEPC",w64,var("v",@{typ CP0}),@{theory}),qTy))))],
          mb(call
               ("next_unknown",@{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                ls"cop-reg",@{theory}),
             close
               (var("v",@{typ "nat \<times> string"}),
                mu(apply
                     (lx(@{typ "(nat \<times> string) \<Rightarrow> 64 word"}),
                      var("v",@{typ "nat \<times> string"})),qTy))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("write'CPR",
   close
     (tp[var_w("value",64),var_n"n",var_w("reg",5),var_w("sel",3)],
      itb([(bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(0,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.Index",
                        tp[var("x",@{typ CP0}),
                           rupd
                             ("Index.Index",
                              tp[call("CP0.Index",@{typ Index},var("x",@{typ CP0}),@{theory}),
                                 ex(var_w("value",64),ln 8,ln 0,(Word_Lib.mk_wordT 9))],@{theory})],
                        @{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(2,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.EntryLo0",
                        tp[var("x",@{typ CP0}),
                           call
                             ("write'reg'EntryLo",@{typ EntryLo},
                              tp[call("CP0.EntryLo0",@{typ EntryLo},var("x",@{typ CP0}),@{theory}),
                                 var_w("value",64)],@{theory})],@{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(3,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.EntryLo1",
                        tp[var("x",@{typ CP0}),
                           call
                             ("write'reg'EntryLo",@{typ EntryLo},
                              tp[call("CP0.EntryLo1",@{typ EntryLo},var("x",@{typ CP0}),@{theory}),
                                 var_w("value",64)],@{theory})],@{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(4,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.Context",
                        tp[var("x",@{typ CP0}),
                           rupd
                             ("Context.PTEBase",
                              tp[call("CP0.Context",@{typ Context},var("x",@{typ CP0}),@{theory}),
                                 ex(var_w("value",64),ln 63,ln 23,(Word_Lib.mk_wordT 41))],@{theory})],
                        @{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(4,5)),eq(var_w("sel",3),lw(2,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd("CP0.UsrLocal",tp[var("x",@{typ CP0}),var_w("value",64)],@{theory}),
                     @{theory})))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(5,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.PageMask",
                        tp[var("x",@{typ CP0}),
                           rupd
                             ("PageMask.Mask",
                              tp[call("CP0.PageMask",@{typ PageMask},var("x",@{typ CP0}),@{theory}),
                                 ex(var_w("value",64),ln 24,ln 13,(Word_Lib.mk_wordT 12))],@{theory})],
                        @{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(6,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(call
                       ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        rupd
                          ("CP0.Wired",
                           tp[var("v",@{typ CP0}),
                              rupd
                                ("Wired.Wired",
                                 tp[call("CP0.Wired",@{typ Wired},var("v",@{typ CP0}),@{theory}),
                                    ex(var_w("value",64),ln 7,ln 0,w8)],@{theory})],@{theory}),
                        @{theory}),
                     close
                       (var_a HOLogic.unitT,
                        mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                           close
                             (var("x",@{typ CP0}),
                              call
                                ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 rupd
                                   ("CP0.Random",
                                    tp[var("x",@{typ CP0}),
                                       rupd
                                         ("Random.Random",
                                          tp[call
                                               ("CP0.Random",@{typ Random},var("x",@{typ CP0}),
                                                @{theory}),
                                             mop(Cast w8,
                                                 bop(Sub,
                                                     const("TLBAssocEntries",HOLogic.natT,@{theory}),
                                                     ln 1))],@{theory})],@{theory}),@{theory})))))))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(7,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(call
                       ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        rupd
                          ("CP0.HWREna",
                           tp[var("v",@{typ CP0}),
                              rupd
                                ("HWREna.CPUNum",
                                 tp[call("CP0.HWREna",@{typ HWREna},var("v",@{typ CP0}),@{theory}),
                                    bop(Bit,var_w("value",64),ln 0)],@{theory})],@{theory}),
                        @{theory}),
                     close
                       (var_a HOLogic.unitT,
                        mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                           close
                             (var("v",@{typ CP0}),
                              mb(call
                                   ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    rupd
                                      ("CP0.HWREna",
                                       tp[var("v",@{typ CP0}),
                                          rupd
                                            ("HWREna.CC",
                                             tp[call
                                                  ("CP0.HWREna",@{typ HWREna},var("v",@{typ CP0}),
                                                   @{theory}),bop(Bit,var_w("value",64),ln 2)],
                                             @{theory})],@{theory}),@{theory}),
                                 close
                                   (var_a HOLogic.unitT,
                                    mb(const
                                         ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                          @{theory}),
                                       close
                                         (var("v",@{typ CP0}),
                                          mb(call
                                               ("write'CP0",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                rupd
                                                  ("CP0.HWREna",
                                                   tp[var("v",@{typ CP0}),
                                                      rupd
                                                        ("HWREna.CCRes",
                                                         tp[call
                                                              ("CP0.HWREna",@{typ HWREna},
                                                               var("v",@{typ CP0}),@{theory}),
                                                            bop(Bit,var_w("value",64),ln 3)],
                                                         @{theory})],@{theory}),@{theory}),
                                             close
                                               (var_a HOLogic.unitT,
                                                mb(const
                                                     ("CP0",
                                                      @{typ
                                                      "state \<Rightarrow> (CP0 \<times> state)"},
                                                      @{theory}),
                                                   close
                                                     (var("v",@{typ CP0}),
                                                      mb(call
                                                           ("write'CP0",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (unit \<times> state)"},
                                                            rupd
                                                              ("CP0.HWREna",
                                                               tp[var("v",@{typ CP0}),
                                                                  rupd
                                                                    ("HWREna.RS",
                                                                     tp[call
                                                                          ("CP0.HWREna",
                                                                           @{typ HWREna},
                                                                           var("v",@{typ CP0}),
                                                                           @{theory}),
                                                                        bop(Bit,var_w("value",64),
                                                                            ln 27)],@{theory})],
                                                               @{theory}),@{theory}),
                                                         close
                                                           (var_a HOLogic.unitT,
                                                            mb(const
                                                                 ("CP0",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (CP0 \<times> state)"},@{theory}),
                                                               close
                                                                 (var("v",@{typ CP0}),
                                                                  mb(call
                                                                       ("write'CP0",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        rupd
                                                                          ("CP0.HWREna",
                                                                           tp[var("v",@{typ CP0}),
                                                                              rupd
                                                                                ("HWREna.DS",
                                                                                 tp[call
                                                                                      ("CP0.HWREna",
                                                                                       @{typ HWREna},
                                                                                       var("v",
                                                                                           @{typ CP0}),
                                                                                       @{theory}),
                                                                                    bop(Bit,
                                                                                        var_w("value",64),
                                                                                        ln 28)],
                                                                                 @{theory})],
                                                                           @{theory}),@{theory}),
                                                                     close
                                                                       (var_a HOLogic.unitT,
                                                                        mb(const
                                                                             ("CP0",
                                                                              @{typ
                                                                              "state \<Rightarrow>
                                                                               (CP0 \<times> state)"},
                                                                              @{theory}),
                                                                           close
                                                                             (var("x",@{typ CP0}),
                                                                              call
                                                                                ("write'CP0",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (unit \<times>
                                                                                   state)"},
                                                                                 rupd
                                                                                   ("CP0.HWREna",
                                                                                    tp[var("x",
                                                                                           @{typ CP0}),
                                                                                       rupd
                                                                                         ("HWREna.UL",
                                                                                          tp[call
                                                                                               ("CP0.HWREna",
                                                                                                @{typ HWREna},
                                                                                                var("x",
                                                                                                    @{typ CP0}),
                                                                                                @{theory}),
                                                                                             bop(Bit,
                                                                                                 var_w("value",64),
                                                                                                 ln
                                                                                                  29)],
                                                                                          @{theory})],
                                                                                    @{theory}),
                                                                                 @{theory})))))))))))))))))))))))),
           (bop(And,eq(var_n"n",ln 0),bop(And,eq(var_w("reg",5),lw(9,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.Count",tp[var("x",@{typ CP0}),ex(var_w("value",64),ln 31,ln 0,w32)],
                        @{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(10,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.EntryHi",
                        tp[var("x",@{typ CP0}),
                           call
                             ("write'reg'EntryHi",@{typ EntryHi},
                              tp[call("CP0.EntryHi",@{typ EntryHi},var("x",@{typ CP0}),@{theory}),
                                 var_w("value",64)],@{theory})],@{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(11,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(call
                       ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        rupd
                          ("CP0.Compare",
                           tp[var("v",@{typ CP0}),ex(var_w("value",64),ln 31,ln 0,w32)],@{theory}),
                        @{theory}),
                     close
                       (var_a HOLogic.unitT,
                        mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                           close
                             (var("v",@{typ CP0}),
                              mb(let'
                                   (var("x0",@{typ CauseRegister}),
                                    call
                                      ("CP0.Cause",@{typ CauseRegister},var("v",@{typ CP0}),
                                       @{theory}),
                                    call
                                      ("write'CP0",
                                       @{typ "state \<Rightarrow> (unit \<times> state)"},
                                       rupd
                                         ("CP0.Cause",
                                          tp[var("v",@{typ CP0}),
                                             rupd
                                               ("CauseRegister.IP",
                                                tp[var("x0",@{typ CauseRegister}),
                                                   bfi(ln 7,ln 7,mop(Cast w1,lf),
                                                       call
                                                         ("CauseRegister.IP",w8,
                                                          var("x0",@{typ CauseRegister}),@{theory}))],
                                                @{theory})],@{theory}),@{theory})),
                                 close
                                   (var_a HOLogic.unitT,
                                    mb(const
                                         ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                          @{theory}),
                                       close
                                         (var("x",@{typ CP0}),
                                          call
                                            ("write'CP0",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             rupd
                                               ("CP0.Cause",
                                                tp[var("x",@{typ CP0}),
                                                   rupd
                                                     ("CauseRegister.TI",
                                                      tp[call
                                                           ("CP0.Cause",@{typ CauseRegister},
                                                            var("x",@{typ CP0}),@{theory}),lf],
                                                      @{theory})],@{theory}),@{theory})))))))))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(12,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.Status",
                        tp[var("x",@{typ CP0}),
                           call
                             ("write'reg'StatusRegister",@{typ StatusRegister},
                              tp[call
                                   ("CP0.Status",@{typ StatusRegister},var("x",@{typ CP0}),@{theory}),
                                 ex(var_w("value",64),ln 31,ln 0,w32)],@{theory})],@{theory}),
                     @{theory})))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(13,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  let'
                    (var("x0",@{typ CauseRegister}),
                     call("CP0.Cause",@{typ CauseRegister},var("x",@{typ CP0}),@{theory}),
                     call
                       ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        rupd
                          ("CP0.Cause",
                           tp[var("x",@{typ CP0}),
                              rupd
                                ("CauseRegister.IP",
                                 tp[var("x0",@{typ CauseRegister}),
                                    bfi(ln 1,ln 0,
                                        ex(var_w("value",64),ln 9,ln 8,(Word_Lib.mk_wordT 2)),
                                        call
                                          ("CauseRegister.IP",w8,var("x0",@{typ CauseRegister}),
                                           @{theory}))],@{theory})],@{theory}),@{theory}))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(14,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd("CP0.EPC",tp[var("x",@{typ CP0}),var_w("value",64)],@{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(16,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.Config",
                        tp[var("x",@{typ CP0}),
                           rupd
                             ("ConfigRegister.K0",
                              tp[call
                                   ("CP0.Config",@{typ ConfigRegister},var("x",@{typ CP0}),@{theory}),
                                 ex(var_w("value",64),ln 2,ln 0,(Word_Lib.mk_wordT 3))],@{theory})],
                        @{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(16,5)),eq(var_w("sel",3),lw(2,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.Config2",
                        tp[var("x",@{typ CP0}),
                           rupd
                             ("ConfigRegister2.SU",
                              tp[call
                                   ("CP0.Config2",@{typ ConfigRegister2},var("x",@{typ CP0}),
                                    @{theory}),ex(var_w("value",64),ln 15,ln 12,w4)],@{theory})],
                        @{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(16,5)),eq(var_w("sel",3),lw(6,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.Config6",
                        tp[var("x",@{typ CP0}),
                           rupd
                             ("ConfigRegister6.LTLB",
                              tp[call
                                   ("CP0.Config6",@{typ ConfigRegister6},var("x",@{typ CP0}),
                                    @{theory}),bop(Bit,var_w("value",64),ln 2)],@{theory})],
                        @{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(20,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd
                       ("CP0.XContext",
                        tp[var("x",@{typ CP0}),
                           rupd
                             ("XContext.PTEBase",
                              tp[call("CP0.XContext",@{typ XContext},var("x",@{typ CP0}),@{theory}),
                                 ex(var_w("value",64),ln 63,ln 33,(Word_Lib.mk_wordT 31))],@{theory})],
                        @{theory}),@{theory})))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(23,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(call
                       ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        rupd
                          ("CP0.Debug",tp[var("v",@{typ CP0}),ex(var_w("value",64),ln 31,ln 0,w32)],
                           @{theory}),@{theory}),
                     close
                       (var_a HOLogic.unitT,
                        mw(close(var("s",qTy),rupd("state.done",tp[var("s",qTy),lt],@{theory})))))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(26,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("v",@{typ CP0}),
                  mb(call
                       ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        rupd
                          ("CP0.ErrCtl",
                           tp[var("v",@{typ CP0}),ex(var_w("value",64),ln 31,ln 0,w32)],@{theory}),
                        @{theory}),close(var_a HOLogic.unitT,mu(lu,qTy)))))),
           (bop(And,eq(var_n"n",ln 0),
                bop(And,eq(var_w("reg",5),lw(30,5)),eq(var_w("sel",3),lw(0,3)))),
            mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
               close
                 (var("x",@{typ CP0}),
                  call
                    ("write'CP0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     rupd("CP0.ErrorEPC",tp[var("x",@{typ CP0}),var_w("value",64)],@{theory}),
                     @{theory}))))],mu(lu,qTy))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'COP1",
   close
     (var_a HOLogic.unitT,
      call
        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
         lc("ResI","ExceptionType",@{theory}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("register_inaccessible",
   close
     (var_w("cb",5),
      mb(const("PCC",@{typ "state \<Rightarrow> (Capability \<times> state)"},@{theory}),
         close
           (var("v",@{typ Capability}),
            mb(mb(mb(mu(call("getPerms",@{typ Perms},var("v",@{typ Capability}),@{theory}),qTy),
                     close(var("v",@{typ Perms}),mu(tp[var("v",@{typ Perms}),var_w("cb",5)],qTy))),
                  close
                    (var("v",@{typ "Perms \<times> 5 word"}),
                     call
                       ("allow_system_reg_access",
                        @{typ "state \<Rightarrow> (bool \<times> state)"},
                        var("v",@{typ "Perms \<times> 5 word"}),@{theory}))),
               close(var_b"v",mu(mop(Not,var_b"v"),qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("register_inaccessible_write_attempt",
   close
     (var_w("mask",16),
      mn(lt,
         mb(ite(bop(Bit,var_w("mask",16),ln 15),
                md(call
                     ("register_inaccessible",@{typ "state \<Rightarrow> (bool \<times> state)"},
                      lw(31,5),@{theory}),HOLogic.boolT),mu(lf,@{typ "bool \<times> state"})),
            close
              (var_b"v",
               mb(ite(var_b"v",
                      md(call
                           ("SignalCapException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),lw(31,5)],
                            @{theory}),HOLogic.boolT),
                      mb(ite(bop(Bit,var_w("mask",16),ln 14),
                             md(call
                                  ("register_inaccessible",
                                   @{typ "state \<Rightarrow> (bool \<times> state)"},lw(30,5),
                                   @{theory}),HOLogic.boolT),mu(lf,@{typ "bool \<times> state"})),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                md(call
                                     ("SignalCapException",
                                      @{typ "state \<Rightarrow> (unit \<times> state)"},
                                      tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                         lw(30,5)],@{theory}),HOLogic.boolT),
                                mb(ite(bop(Bit,var_w("mask",16),ln 13),
                                       md(call
                                            ("register_inaccessible",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},
                                             lw(29,5),@{theory}),HOLogic.boolT),
                                       mu(lf,@{typ "bool \<times> state"})),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          md(call
                                               ("SignalCapException",
                                                @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                tp[lc("capExcAccessSysReg","CapExceptionType",
                                                      @{theory}),lw(29,5)],@{theory}),HOLogic.boolT),
                                          mb(ite(bop(Bit,var_w("mask",16),ln 11),
                                                 md(call
                                                      ("register_inaccessible",
                                                       @{typ
                                                       "state \<Rightarrow> (bool \<times> state)"},
                                                       lw(27,5),@{theory}),HOLogic.boolT),
                                                 mu(lf,@{typ "bool \<times> state"})),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    md(call
                                                         ("SignalCapException",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          tp[lc("capExcAccessSysReg",
                                                                "CapExceptionType",@{theory}),
                                                             lw(27,5)],@{theory}),HOLogic.boolT),
                                                    mb(ite(bop(Bit,var_w("mask",16),ln 12),
                                                           md(call
                                                                ("register_inaccessible",
                                                                 @{typ
                                                                 "state \<Rightarrow>
                                                                  (bool \<times> state)"},lw(28,5),
                                                                 @{theory}),HOLogic.boolT),
                                                           mu(lf,@{typ "bool \<times> state"})),
                                                       close
                                                         (var_b"b",
                                                          ite(var_b"b",
                                                              md(call
                                                                   ("SignalCapException",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    tp[lc("capExcAccessSysReg",
                                                                          "CapExceptionType",
                                                                          @{theory}),lw(28,5)],
                                                                    @{theory}),HOLogic.boolT),
                                                              mw(close
                                                                   (var("s",
                                                                        @{typ "bool \<times> state"}),
                                                                    tp[lf,
                                                                       mop(Snd,
                                                                           var("s",
                                                                               @{typ
                                                                               "bool \<times> state"}))]))))))))))))))),
                  close
                    (var_a HOLogic.unitT,
                     mr(close
                          (var("s",@{typ "bool \<times> state"}),
                           mop(Fst,var("s",@{typ "bool \<times> state"})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("watchOOB",
   close
     (tp[var("cap",@{typ Capability}),var_w("pc",64)],
      mb(mr(close(var("s",qTy),call("state.watchOOBCap",HOLogic.boolT,var("s",qTy),@{theory}))),
         close(var_b"b",mu(lu,qTy)))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SignExtendBitString",
   close(tp[var_n"w",var_v"x"],mop(PadLeft,tp[mop(Head,var_v"x"),var_n"w",var_v"x"])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("ZeroExtendBitString",close(tp[var_n"w",var_v"x"],mop(PadLeft,tp[lf,var_n"w",var_v"x"])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("dfn'DumpCapReg",lu)
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CGetBase",
   close
     (tp[var_w("rd",5),var_w("cb",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mb(call
                                     ("CAPR",
                                      @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var("v",@{typ Capability}),
                                      mb(mb(mu(call
                                                 ("getBase",w64,var("v",@{typ Capability}),@{theory}),
                                               qTy),
                                            close
                                              (var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                                         close
                                           (var("v",@{typ "64 word \<times> 5 word"}),
                                            call
                                              ("write'GPR",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CGetOffset",
   close
     (tp[var_w("rd",5),var_w("cb",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mb(call
                                     ("CAPR",
                                      @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var("v",@{typ Capability}),
                                      mb(mb(mu(call
                                                 ("getOffset",w64,var("v",@{typ Capability}),
                                                  @{theory}),qTy),
                                            close
                                              (var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                                         close
                                           (var("v",@{typ "64 word \<times> 5 word"}),
                                            call
                                              ("write'GPR",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CGetLen",
   close
     (tp[var_w("rd",5),var_w("cb",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mb(call
                                     ("CAPR",
                                      @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var("v",@{typ Capability}),
                                      mb(mb(mu(call
                                                 ("getLength",w64,var("v",@{typ Capability}),
                                                  @{theory}),qTy),
                                            close
                                              (var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                                         close
                                           (var("v",@{typ "64 word \<times> 5 word"}),
                                            call
                                              ("write'GPR",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CGetTag",
   close
     (tp[var_w("rd",5),var_w("cb",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mb(call
                                     ("CAPR",
                                      @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var("v",@{typ Capability}),
                                      mb(mb(mb(mb(mu(call
                                                       ("getTag",HOLogic.boolT,
                                                        var("v",@{typ Capability}),@{theory}),qTy),
                                                  close(var_b"v",mu(mop(Cast w1,var_b"v"),qTy))),
                                               close
                                                 (var_w("v",1),mu(mop(Cast w64,var_w("v",1)),qTy))),
                                            close
                                              (var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                                         close
                                           (var("v",@{typ "64 word \<times> 5 word"}),
                                            call
                                              ("write'GPR",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CGetSealed",
   close
     (tp[var_w("rd",5),var_w("cb",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mb(call
                                     ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                      var_w("rd",5),@{theory}),
                                   close
                                     (var_w("v",64),
                                      mb(mb(call
                                              ("CAPR",
                                               @{typ
                                               "state \<Rightarrow> (Capability \<times> state)"},
                                               var_w("cb",5),@{theory}),
                                            close
                                              (var("v0",@{typ Capability}),
                                               mb(mb(mb(mb(mu(call
                                                                ("getSealed",HOLogic.boolT,
                                                                 var("v0",@{typ Capability}),
                                                                 @{theory}),qTy),
                                                           close
                                                             (var_b"v",mu(mop(Cast w1,var_b"v"),qTy))),
                                                        close
                                                          (var_w("v0",1),
                                                           mu(bfi(ln 0,ln 0,var_w("v0",1),
                                                                  var_w("v",64)),qTy))),
                                                     close
                                                       (var_w("v",64),
                                                        mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                                                  close
                                                    (var("v",@{typ "64 word \<times> 5 word"}),
                                                     call
                                                       ("write'GPR",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        var("v",@{typ "64 word \<times> 5 word"}),
                                                        @{theory}))))),
                                         close
                                           (var_a HOLogic.unitT,
                                            mb(call
                                                 ("GPR",
                                                  @{typ
                                                  "state \<Rightarrow> (64 word \<times> state)"},
                                                  var_w("rd",5),@{theory}),
                                               close
                                                 (var_w("w",64),
                                                  call
                                                    ("write'GPR",
                                                     @{typ
                                                     "state \<Rightarrow> (unit \<times> state)"},
                                                     tp[bfi(ln 63,ln 1,lw(0,63),var_w("w",64)),
                                                        var_w("rd",5)],@{theory})))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CGetPerm",
   close
     (tp[var_w("rd",5),var_w("cb",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mn(lw(0,64),
                                   mb(mr(close
                                           (var("s",@{typ "64 word \<times> state"}),
                                            mop(Fst,var("s",@{typ "64 word \<times> state"})))),
                                      close
                                        (var_w("v",64),
                                         mb(mb(mb(md(call
                                                       ("CAPR",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (Capability \<times> state)"},
                                                        var_w("cb",5),@{theory}),w64),
                                                  close
                                                    (var("v0",@{typ Capability}),
                                                     mb(mb(mb(mu(call
                                                                   ("getPerms",@{typ Perms},
                                                                    var("v0",@{typ Capability}),
                                                                    @{theory}),
                                                                 @{typ "64 word \<times> state"}),
                                                              close
                                                                (var("v",@{typ Perms}),
                                                                 mu(call
                                                                      ("reg'Perms",w32,
                                                                       var("v",@{typ Perms}),
                                                                       @{theory}),
                                                                    @{typ "64 word \<times> state"}))),
                                                           close
                                                             (var_w("v",32),
                                                              mu(ex(var_w("v",32),ln 14,ln 0,
                                                                    (Word_Lib.mk_wordT 15)),
                                                                 @{typ "64 word \<times> state"}))),
                                                        close
                                                          (var_w("v0",15),
                                                           mu(bfi(ln 14,ln 0,var_w("v0",15),
                                                                  var_w("v",64)),
                                                              @{typ "64 word \<times> state"}))))),
                                               close
                                                 (var_w("v",64),
                                                  mw(close
                                                       (var("s",@{typ "64 word \<times> state"}),
                                                        tp[var_w("v",64),
                                                           mop(Snd,
                                                               var("s",
                                                                   @{typ "64 word \<times> state"}))])))),
                                            close
                                              (var_a HOLogic.unitT,
                                               mb(mb(mr(close
                                                          (var("s",@{typ "64 word \<times> state"}),
                                                           mop(Fst,
                                                               var("s",
                                                                   @{typ "64 word \<times> state"})))),
                                                     close
                                                       (var_w("v",64),
                                                        mb(mb(md(call
                                                                   ("CAPR",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (Capability \<times> state)"},
                                                                    var_w("cb",5),@{theory}),w64),
                                                              close
                                                                (var("v0",@{typ Capability}),
                                                                 mb(mb(mb(mu(call
                                                                               ("getUPerms",
                                                                                @{typ UPerms},
                                                                                var("v0",
                                                                                    @{typ Capability}),
                                                                                @{theory}),
                                                                             @{typ
                                                                             "64 word \<times> state"}),
                                                                          close
                                                                            (var("v",@{typ UPerms}),
                                                                             mu(call
                                                                                  ("reg'UPerms",w32,
                                                                                   var("v",
                                                                                       @{typ UPerms}),
                                                                                   @{theory}),
                                                                                @{typ
                                                                                "64 word \<times>
                                                                                 state"}))),
                                                                       close
                                                                         (var_w("v",32),
                                                                          mu(ex(var_w("v",32),
                                                                                bop(Sub,
                                                                                    const
                                                                                      ("UPERMS",
                                                                                       HOLogic.natT,
                                                                                       @{theory}),
                                                                                    ln 1),ln 0,w16),
                                                                             @{typ
                                                                             "64 word \<times> state"}))),
                                                                    close
                                                                      (var_w("v0",16),
                                                                       mu(bfi(bop(Add,
                                                                                  const
                                                                                    ("UPERMS",
                                                                                     HOLogic.natT,
                                                                                     @{theory}),
                                                                                  ln 14),ln 15,
                                                                              var_w("v0",16),
                                                                              var_w("v",64)),
                                                                          @{typ
                                                                          "64 word \<times> state"}))))),
                                                           close
                                                             (var_w("v",64),
                                                              mw(close
                                                                   (var("s",
                                                                        @{typ
                                                                        "64 word \<times> state"}),
                                                                    tp[var_w("v",64),
                                                                       mop(Snd,
                                                                           var("s",
                                                                               @{typ
                                                                               "64 word \<times>
                                                                                state"}))])))))),
                                                  close
                                                    (var_a HOLogic.unitT,
                                                     mb(mr(close
                                                             (var("s",
                                                                  @{typ "64 word \<times> state"}),
                                                              mop(Fst,
                                                                  var("s",
                                                                      @{typ
                                                                      "64 word \<times> state"})))),
                                                        close
                                                          (var_w("v",64),
                                                           mb(mu(tp[var_w("v",64),var_w("rd",5)],
                                                                 @{typ "64 word \<times> state"}),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "64 word \<times> 5 word"}),
                                                                 md(call
                                                                      ("write'GPR",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       var("v",
                                                                           @{typ
                                                                           "64 word \<times> 5 word"}),
                                                                       @{theory}),w64))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CGetType",
   close
     (tp[var_w("rd",5),var_w("cb",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mb(call
                                     ("CAPR",
                                      @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var("v",@{typ Capability}),
                                      mb(mu(call
                                              ("getSealed",HOLogic.boolT,var("v",@{typ Capability}),
                                               @{theory}),qTy),
                                         close
                                           (var_b"b",
                                            ite(var_b"b",
                                                mb(call
                                                     ("CAPR",
                                                      @{typ
                                                      "state \<Rightarrow>
                                                       (Capability \<times> state)"},var_w("cb",5),
                                                      @{theory}),
                                                   close
                                                     (var("v",@{typ Capability}),
                                                      mb(mb(mb(mu(call
                                                                    ("getType",
                                                                     (Word_Lib.mk_wordT 24),
                                                                     var("v",@{typ Capability}),
                                                                     @{theory}),qTy),
                                                               close
                                                                 (var_w("v",24),
                                                                  mu(mop(Cast w64,var_w("v",24)),qTy))),
                                                            close
                                                              (var_w("v",64),
                                                               mu(tp[var_w("v",64),var_w("rd",5)],
                                                                  qTy))),
                                                         close
                                                           (var("v",@{typ "64 word \<times> 5 word"}),
                                                            call
                                                              ("write'GPR",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (unit \<times> state)"},
                                                               var("v",
                                                                   @{typ "64 word \<times> 5 word"}),
                                                               @{theory}))))),
                                                call
                                                  ("write'GPR",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},
                                                   tp[mop(BNot,lw(0,64)),var_w("rd",5)],@{theory}))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CGetPCC",
   close
     (var_w("cd",5),
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(const
                                     ("PCC",
                                      @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                      @{theory}),
                                   close
                                     (var("v",@{typ Capability}),
                                      mb(mb(mb(mb(mb(const
                                                       ("PC",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (64 word \<times> state)"},@{theory}),
                                                     close
                                                       (var_w("v0",64),
                                                        mu(tp[var("v",@{typ Capability}),
                                                              var_w("v0",64)],qTy))),
                                                  close
                                                    (var("v",@{typ "Capability \<times> 64 word"}),
                                                     mu(call
                                                          ("setOffset",@{typ Capability},
                                                           var("v",
                                                               @{typ "Capability \<times> 64 word"}),
                                                           @{theory}),qTy))),
                                               close
                                                 (var("v",@{typ Capability}),
                                                  mu(tp[var("v",@{typ Capability}),var_w("cd",5)],
                                                     qTy))),
                                            close
                                              (var("v",@{typ "Capability \<times> 5 word"}),
                                               call
                                                 ("write'CAPR",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  var("v",@{typ "Capability \<times> 5 word"}),
                                                  @{theory}))),
                                         close
                                           (var_a HOLogic.unitT,
                                            mb(call
                                                 ("CAPR",
                                                  @{typ
                                                  "state \<Rightarrow> (Capability \<times> state)"},
                                                  var_w("cd",5),@{theory}),
                                               close
                                                 (var("v",@{typ Capability}),
                                                  mb(mb(const
                                                          ("PC",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (64 word \<times> state)"},@{theory}),
                                                        close
                                                          (var_w("v0",64),
                                                           mu(tp[var("v",@{typ Capability}),
                                                                 var_w("v0",64)],qTy))),
                                                     close
                                                       (var("v",@{typ "Capability \<times> 64 word"}),
                                                        call
                                                          ("watchOOB",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (unit \<times> state)"},
                                                           var("v",
                                                               @{typ "Capability \<times> 64 word"}),
                                                           @{theory})))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CGetPCCSetOffset",
   close
     (tp[var_w("cd",5),var_w("rs",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(const
                                     ("PCC",
                                      @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                      @{theory}),
                                   close
                                     (var("v",@{typ Capability}),
                                      mb(mb(mb(mb(call
                                                    ("GPR",
                                                     @{typ
                                                     "state \<Rightarrow> (64 word \<times> state)"},
                                                     var_w("rs",5),@{theory}),
                                                  close
                                                    (var_w("v0",64),
                                                     mu(tp[var("v",@{typ Capability}),var_w("v0",64)],
                                                        qTy))),
                                               close
                                                 (var("v",@{typ "Capability \<times> 64 word"}),
                                                  mu(call
                                                       ("canRepOffset",HOLogic.boolT,
                                                        var("v",@{typ "Capability \<times> 64 word"}),
                                                        @{theory}),qTy))),
                                            close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                         close
                                           (var_b"b",
                                            ite(var_b"b",
                                                mb(const
                                                     ("PCC",
                                                      @{typ
                                                      "state \<Rightarrow>
                                                       (Capability \<times> state)"},@{theory}),
                                                   close
                                                     (var("v",@{typ Capability}),
                                                      mb(mb(mb(mb(mb(mb(mu(call
                                                                             ("getBase",w64,
                                                                              var("v",
                                                                                  @{typ Capability}),
                                                                              @{theory}),qTy),
                                                                        close
                                                                          (var_w("v",64),
                                                                           mb(call
                                                                                ("GPR",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (64 word \<times>
                                                                                   state)"},
                                                                                 var_w("rs",5),
                                                                                 @{theory}),
                                                                              close
                                                                                (var_w("v0",64),
                                                                                 mu(bop(Add,
                                                                                        var_w("v",64),
                                                                                        var_w("v0",64)),
                                                                                    qTy))))),
                                                                     close
                                                                       (var_w("v",64),
                                                                        mu(tp[const
                                                                                ("nullCap",
                                                                                 @{typ Capability},
                                                                                 @{theory}),
                                                                              var_w("v",64)],qTy))),
                                                                  close
                                                                    (var("v",
                                                                         @{typ
                                                                         "Capability \<times>
                                                                          64 word"}),
                                                                     mu(call
                                                                          ("setOffset",
                                                                           @{typ Capability},
                                                                           var("v",
                                                                               @{typ
                                                                               "Capability \<times>
                                                                                64 word"}),@{theory}),
                                                                        qTy))),
                                                               close
                                                                 (var("v",@{typ Capability}),
                                                                  mu(tp[var("v",@{typ Capability}),
                                                                        var_w("cd",5)],qTy))),
                                                            close
                                                              (var("v",
                                                                   @{typ
                                                                   "Capability \<times> 5 word"}),
                                                               call
                                                                 ("write'CAPR",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  var("v",
                                                                      @{typ
                                                                      "Capability \<times> 5 word"}),
                                                                  @{theory}))),
                                                         close
                                                           (var_a HOLogic.unitT,
                                                            mb(call
                                                                 ("CAPR",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (Capability \<times> state)"},
                                                                  var_w("cd",5),@{theory}),
                                                               close
                                                                 (var("v",@{typ Capability}),
                                                                  mb(mb(const
                                                                          ("PC",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (64 word \<times> state)"},
                                                                           @{theory}),
                                                                        close
                                                                          (var_w("v0",64),
                                                                           mu(tp[var("v",
                                                                                     @{typ Capability}),
                                                                                 var_w("v0",64)],qTy))),
                                                                     close
                                                                       (var("v",
                                                                            @{typ
                                                                            "Capability \<times>
                                                                             64 word"}),
                                                                        call
                                                                          ("watchOOB",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           var("v",
                                                                               @{typ
                                                                               "Capability \<times>
                                                                                64 word"}),@{theory}))))))))),
                                                mb(const
                                                     ("PCC",
                                                      @{typ
                                                      "state \<Rightarrow>
                                                       (Capability \<times> state)"},@{theory}),
                                                   close
                                                     (var("v",@{typ Capability}),
                                                      mb(mb(mb(mb(mb(call
                                                                       ("GPR",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (64 word \<times> state)"},
                                                                        var_w("rs",5),@{theory}),
                                                                     close
                                                                       (var_w("v0",64),
                                                                        mu(tp[var("v",
                                                                                  @{typ Capability}),
                                                                              var_w("v0",64)],qTy))),
                                                                  close
                                                                    (var("v",
                                                                         @{typ
                                                                         "Capability \<times>
                                                                          64 word"}),
                                                                     mu(call
                                                                          ("setOffset",
                                                                           @{typ Capability},
                                                                           var("v",
                                                                               @{typ
                                                                               "Capability \<times>
                                                                                64 word"}),@{theory}),
                                                                        qTy))),
                                                               close
                                                                 (var("v",@{typ Capability}),
                                                                  mu(tp[var("v",@{typ Capability}),
                                                                        var_w("cd",5)],qTy))),
                                                            close
                                                              (var("v",
                                                                   @{typ
                                                                   "Capability \<times> 5 word"}),
                                                               call
                                                                 ("write'CAPR",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  var("v",
                                                                      @{typ
                                                                      "Capability \<times> 5 word"}),
                                                                  @{theory}))),
                                                         close
                                                           (var_a HOLogic.unitT,
                                                            mb(call
                                                                 ("CAPR",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (Capability \<times> state)"},
                                                                  var_w("cd",5),@{theory}),
                                                               close
                                                                 (var("v",@{typ Capability}),
                                                                  mb(mb(const
                                                                          ("PC",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (64 word \<times> state)"},
                                                                           @{theory}),
                                                                        close
                                                                          (var_w("v0",64),
                                                                           mu(tp[var("v",
                                                                                     @{typ Capability}),
                                                                                 var_w("v0",64)],qTy))),
                                                                     close
                                                                       (var("v",
                                                                            @{typ
                                                                            "Capability \<times>
                                                                             64 word"}),
                                                                        call
                                                                          ("watchOOB",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (unit \<times> state)"},
                                                                           var("v",
                                                                               @{typ
                                                                               "Capability \<times>
                                                                                64 word"}),@{theory}))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CGetCause",
   close
     (var_w("rd",5),
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(const
                           ("PCC",@{typ "state \<Rightarrow> (Capability \<times> state)"},@{theory}),
                         close
                           (var("v",@{typ Capability}),
                            mb(mb(mb(mu(call
                                          ("getPerms",@{typ Perms},var("v",@{typ Capability}),
                                           @{theory}),qTy),
                                     close
                                       (var("v",@{typ Perms}),
                                        mu(call
                                             ("Perms.Access_System_Registers",HOLogic.boolT,
                                              var("v",@{typ Perms}),@{theory}),qTy))),
                                  close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      call
                                        ("SignalCapException_noReg",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                         @{theory}),
                                      mb(call
                                           ("GPR",
                                            @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                            var_w("rd",5),@{theory}),
                                         close
                                           (var_w("v",64),
                                            mb(mb(mr(close
                                                       (var("s",qTy),
                                                        call
                                                          ("state.capcause",@{typ CapCause},
                                                           var("s",qTy),@{theory}))),
                                                  close
                                                    (var("v0",@{typ CapCause}),
                                                     mb(mb(mb(mu(call
                                                                   ("CapCause.RegNum",w8,
                                                                    var("v0",@{typ CapCause}),
                                                                    @{theory}),qTy),
                                                              close
                                                                (var_w("v0",8),
                                                                 mu(bfi(ln 7,ln 0,var_w("v0",8),
                                                                        var_w("v",64)),qTy))),
                                                           close
                                                             (var_w("v",64),
                                                              mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                                                        close
                                                          (var("v",@{typ "64 word \<times> 5 word"}),
                                                           call
                                                             ("write'GPR",
                                                              @{typ
                                                              "state \<Rightarrow>
                                                               (unit \<times> state)"},
                                                              var("v",
                                                                  @{typ "64 word \<times> 5 word"}),
                                                              @{theory}))))),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mb(call
                                                       ("GPR",
                                                        @{typ
                                                        "state \<Rightarrow>
                                                         (64 word \<times> state)"},var_w("rd",5),
                                                        @{theory}),
                                                     close
                                                       (var_w("v",64),
                                                        mb(mb(mr(close
                                                                   (var("s",qTy),
                                                                    call
                                                                      ("state.capcause",
                                                                       @{typ CapCause},var("s",qTy),
                                                                       @{theory}))),
                                                              close
                                                                (var("v0",@{typ CapCause}),
                                                                 mb(mb(mb(mu(call
                                                                               ("CapCause.ExcCode",
                                                                                w8,
                                                                                var("v0",
                                                                                    @{typ CapCause}),
                                                                                @{theory}),qTy),
                                                                          close
                                                                            (var_w("v0",8),
                                                                             mu(bfi(ln 15,ln 8,
                                                                                    var_w("v0",8),
                                                                                    var_w("v",64)),
                                                                                qTy))),
                                                                       close
                                                                         (var_w("v",64),
                                                                          mu(tp[var_w("v",64),
                                                                                var_w("rd",5)],qTy))),
                                                                    close
                                                                      (var("v",
                                                                           @{typ
                                                                           "64 word \<times> 5 word"}),
                                                                       call
                                                                         ("write'GPR",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          var("v",
                                                                              @{typ
                                                                              "64 word \<times>
                                                                               5 word"}),@{theory}))))),
                                                           close
                                                             (var_a HOLogic.unitT,
                                                              mb(call
                                                                   ("GPR",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (64 word \<times> state)"},
                                                                    var_w("rd",5),@{theory}),
                                                                 close
                                                                   (var_w("w",64),
                                                                    call
                                                                      ("write'GPR",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       tp[bfi(ln 63,ln 16,lw(0,48),
                                                                              var_w("w",64)),
                                                                          var_w("rd",5)],@{theory})))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CSetCause",
   close
     (var_w("rt",5),
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(const
                           ("PCC",@{typ "state \<Rightarrow> (Capability \<times> state)"},@{theory}),
                         close
                           (var("v",@{typ Capability}),
                            mb(mb(mb(mu(call
                                          ("getPerms",@{typ Perms},var("v",@{typ Capability}),
                                           @{theory}),qTy),
                                     close
                                       (var("v",@{typ Perms}),
                                        mu(call
                                             ("Perms.Access_System_Registers",HOLogic.boolT,
                                              var("v",@{typ Perms}),@{theory}),qTy))),
                                  close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      call
                                        ("SignalCapException_noReg",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                         @{theory}),
                                      mb(mr(close
                                              (var("s",qTy),
                                               call
                                                 ("state.capcause",@{typ CapCause},var("s",qTy),
                                                  @{theory}))),
                                         close
                                           (var("v",@{typ CapCause}),
                                            mb(mb(mb(mb(call
                                                          ("GPR",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (64 word \<times> state)"},
                                                           var_w("rt",5),@{theory}),
                                                        close
                                                          (var_w("v0",64),
                                                           mb(mu(ex(var_w("v0",64),ln 15,ln 8,w8),
                                                                 qTy),
                                                              close
                                                                (var_w("v0",8),
                                                                 mu(tp[var("v",@{typ CapCause}),
                                                                       var_w("v0",8)],qTy))))),
                                                     close
                                                       (var("v",@{typ "CapCause \<times> 8 word"}),
                                                        mu(rupd
                                                             ("CapCause.ExcCode",
                                                              var("v",
                                                                  @{typ "CapCause \<times> 8 word"}),
                                                              @{theory}),qTy))),
                                                  close
                                                    (var("v",@{typ CapCause}),
                                                     mw(close
                                                          (var("s",qTy),
                                                           rupd
                                                             ("state.capcause",
                                                              tp[var("s",qTy),
                                                                 var("v",@{typ CapCause})],@{theory}))))),
                                               close
                                                 (var_a HOLogic.unitT,
                                                  mb(mr(close
                                                          (var("s",qTy),
                                                           call
                                                             ("state.capcause",@{typ CapCause},
                                                              var("s",qTy),@{theory}))),
                                                     close
                                                       (var("v",@{typ CapCause}),
                                                        mb(mb(mb(call
                                                                   ("GPR",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (64 word \<times> state)"},
                                                                    var_w("rt",5),@{theory}),
                                                                 close
                                                                   (var_w("v0",64),
                                                                    mb(mu(ex(var_w("v0",64),ln 7,
                                                                             ln 0,w8),qTy),
                                                                       close
                                                                         (var_w("v0",8),
                                                                          mu(tp[var("v",
                                                                                    @{typ CapCause}),
                                                                                var_w("v0",8)],qTy))))),
                                                              close
                                                                (var("v",
                                                                     @{typ
                                                                     "CapCause \<times> 8 word"}),
                                                                 mu(rupd
                                                                      ("CapCause.RegNum",
                                                                       var("v",
                                                                           @{typ
                                                                           "CapCause \<times> 8 word"}),
                                                                       @{theory}),qTy))),
                                                           close
                                                             (var("v",@{typ CapCause}),
                                                              mw(close
                                                                   (var("s",qTy),
                                                                    rupd
                                                                      ("state.capcause",
                                                                       tp[var("s",qTy),
                                                                          var("v",@{typ CapCause})],
                                                                       @{theory})))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CIncOffset",
   close
     (tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cb",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mu(call
                                                           ("getTag",HOLogic.boolT,
                                                            var("v",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close
                                                        (var_b"b",
                                                         ite(var_b"b",
                                                             mb(call
                                                                  ("CAPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (Capability \<times> state)"},
                                                                   var_w("cb",5),@{theory}),
                                                                close
                                                                  (var("v",@{typ Capability}),
                                                                   mb(mu(call
                                                                           ("getSealed",
                                                                            HOLogic.boolT,
                                                                            var("v",
                                                                                @{typ Capability}),
                                                                            @{theory}),qTy),
                                                                      close
                                                                        (var_b"b",
                                                                         ite(var_b"b",
                                                                             mb(call
                                                                                  ("GPR",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (64 word \<times>
                                                                                     state)"},
                                                                                   var_w("rt",5),
                                                                                   @{theory}),
                                                                                close
                                                                                  (var_w("v",64),
                                                                                   mb(mu(eq(var_w("v",64),
                                                                                            lw(0,64)),
                                                                                         qTy),
                                                                                      close
                                                                                        (var_b"v",
                                                                                         mu(mop(Not,
                                                                                                var_b"v"),
                                                                                            qTy))))),
                                                                             mu(lf,qTy)))))),
                                                             mu(lf,qTy)))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          call
                                                            ("SignalCapException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[lc("capExcSeal","CapExceptionType",
                                                                   @{theory}),var_w("cb",5)],
                                                             @{theory}),
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mb(mb(mb(call
                                                                              ("CAPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (Capability \<times>
                                                                                 state)"},
                                                                               var_w("cb",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var("v0",
                                                                                   @{typ Capability}),
                                                                               mb(mb(mu(call
                                                                                          ("getOffset",
                                                                                           w64,
                                                                                           var("v0",
                                                                                               @{typ Capability}),
                                                                                           @{theory}),
                                                                                        qTy),
                                                                                     close
                                                                                       (var_w("v",64),
                                                                                        mb(call
                                                                                             ("GPR",
                                                                                              @{typ
                                                                                              "state \<Rightarrow>
                                                                                               (64 word \<times>
                                                                                                state)"},
                                                                                              var_w("rt",5),
                                                                                              @{theory}),
                                                                                           close
                                                                                             (var_w("v0",64),
                                                                                              mu(bop(Add,
                                                                                                     var_w("v",64),
                                                                                                     var_w("v0",64)),
                                                                                                 qTy))))),
                                                                                  close
                                                                                    (var_w("v0",64),
                                                                                     mu(tp[var("v",
                                                                                               @{typ Capability}),
                                                                                           var_w("v0",64)],
                                                                                        qTy))))),
                                                                         close
                                                                           (var("v",
                                                                                @{typ
                                                                                "Capability \<times>
                                                                                 64 word"}),
                                                                            mu(call
                                                                                 ("canRepOffset",
                                                                                  HOLogic.boolT,
                                                                                  var("v",
                                                                                      @{typ
                                                                                      "Capability \<times>
                                                                                       64 word"}),
                                                                                  @{theory}),qTy))),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(mop(Not,var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cb",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mb(mb(mb(mb(mb(mu(call
                                                                                                          ("getBase",
                                                                                                           w64,
                                                                                                           var("v",
                                                                                                               @{typ Capability}),
                                                                                                           @{theory}),
                                                                                                        qTy),
                                                                                                     close
                                                                                                       (var_w("v",64),
                                                                                                        mb(call
                                                                                                             ("CAPR",
                                                                                                              @{typ
                                                                                                              "state \<Rightarrow>
                                                                                                               (Capability \<times>
                                                                                                                state)"},
                                                                                                              var_w("cb",5),
                                                                                                              @{theory}),
                                                                                                           close
                                                                                                             (var("v0",
                                                                                                                  @{typ Capability}),
                                                                                                              mb(mu(call
                                                                                                                      ("getOffset",
                                                                                                                       w64,
                                                                                                                       var("v0",
                                                                                                                           @{typ Capability}),
                                                                                                                       @{theory}),
                                                                                                                    qTy),
                                                                                                                 close
                                                                                                                   (var_w("v0",64),
                                                                                                                    mu(bop(Add,
                                                                                                                           var_w("v",64),
                                                                                                                           var_w("v0",64)),
                                                                                                                       qTy))))))),
                                                                                                  close
                                                                                                    (var_w("v",64),
                                                                                                     mb(call
                                                                                                          ("GPR",
                                                                                                           @{typ
                                                                                                           "state \<Rightarrow>
                                                                                                            (64 word \<times>
                                                                                                             state)"},
                                                                                                           var_w("rt",5),
                                                                                                           @{theory}),
                                                                                                        close
                                                                                                          (var_w("v0",64),
                                                                                                           mu(bop(Add,
                                                                                                                  var_w("v",64),
                                                                                                                  var_w("v0",64)),
                                                                                                              qTy))))),
                                                                                               close
                                                                                                 (var_w("v",64),
                                                                                                  mu(tp[const
                                                                                                          ("nullCap",
                                                                                                           @{typ Capability},
                                                                                                           @{theory}),
                                                                                                        var_w("v",64)],
                                                                                                     qTy))),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ
                                                                                                   "Capability \<times>
                                                                                                    64 word"}),
                                                                                               mu(call
                                                                                                    ("setOffset",
                                                                                                     @{typ Capability},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mu(tp[var("v",
                                                                                                      @{typ Capability}),
                                                                                                  var_w("cd",5)],
                                                                                               qTy))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ
                                                                                             "Capability \<times>
                                                                                              5 word"}),
                                                                                         call
                                                                                           ("write'CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (unit \<times>
                                                                                              state)"},
                                                                                            var("v",
                                                                                                @{typ
                                                                                                "Capability \<times>
                                                                                                 5 word"}),
                                                                                            @{theory}))),
                                                                                   close
                                                                                     (var_a
                                                                                        HOLogic.unitT,
                                                                                      mb(call
                                                                                           ("CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (Capability \<times>
                                                                                              state)"},
                                                                                            var_w("cd",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mb(mb(const
                                                                                                    ("PC",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (64 word \<times>
                                                                                                       state)"},
                                                                                                     @{theory}),
                                                                                                  close
                                                                                                    (var_w("v0",64),
                                                                                                     mu(tp[var("v",
                                                                                                               @{typ Capability}),
                                                                                                           var_w("v0",64)],
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ
                                                                                                      "Capability \<times>
                                                                                                       64 word"}),
                                                                                                  call
                                                                                                    ("watchOOB",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (unit \<times>
                                                                                                       state)"},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}))))))))),
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cb",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mb(mb(mb(call
                                                                                                 ("CAPR",
                                                                                                  @{typ
                                                                                                  "state \<Rightarrow>
                                                                                                   (Capability \<times>
                                                                                                    state)"},
                                                                                                  var_w("cb",5),
                                                                                                  @{theory}),
                                                                                               close
                                                                                                 (var("v0",
                                                                                                      @{typ Capability}),
                                                                                                  mb(mb(mu(call
                                                                                                             ("getOffset",
                                                                                                              w64,
                                                                                                              var("v0",
                                                                                                                  @{typ Capability}),
                                                                                                              @{theory}),
                                                                                                           qTy),
                                                                                                        close
                                                                                                          (var_w("v",64),
                                                                                                           mb(call
                                                                                                                ("GPR",
                                                                                                                 @{typ
                                                                                                                 "state \<Rightarrow>
                                                                                                                  (64 word \<times>
                                                                                                                   state)"},
                                                                                                                 var_w("rt",5),
                                                                                                                 @{theory}),
                                                                                                              close
                                                                                                                (var_w("v0",64),
                                                                                                                 mu(bop(Add,
                                                                                                                        var_w("v",64),
                                                                                                                        var_w("v0",64)),
                                                                                                                    qTy))))),
                                                                                                     close
                                                                                                       (var_w("v0",64),
                                                                                                        mu(tp[var("v",
                                                                                                                  @{typ Capability}),
                                                                                                              var_w("v0",64)],
                                                                                                           qTy))))),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ
                                                                                                   "Capability \<times>
                                                                                                    64 word"}),
                                                                                               mu(call
                                                                                                    ("setOffset",
                                                                                                     @{typ Capability},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mu(tp[var("v",
                                                                                                      @{typ Capability}),
                                                                                                  var_w("cd",5)],
                                                                                               qTy))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ
                                                                                             "Capability \<times>
                                                                                              5 word"}),
                                                                                         call
                                                                                           ("write'CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (unit \<times>
                                                                                              state)"},
                                                                                            var("v",
                                                                                                @{typ
                                                                                                "Capability \<times>
                                                                                                 5 word"}),
                                                                                            @{theory}))),
                                                                                   close
                                                                                     (var_a
                                                                                        HOLogic.unitT,
                                                                                      mb(call
                                                                                           ("CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (Capability \<times>
                                                                                              state)"},
                                                                                            var_w("cd",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mb(mb(const
                                                                                                    ("PC",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (64 word \<times>
                                                                                                       state)"},
                                                                                                     @{theory}),
                                                                                                  close
                                                                                                    (var_w("v0",64),
                                                                                                     mu(tp[var("v",
                                                                                                               @{typ Capability}),
                                                                                                           var_w("v0",64)],
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ
                                                                                                      "Capability \<times>
                                                                                                       64 word"}),
                                                                                                  call
                                                                                                    ("watchOOB",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (unit \<times>
                                                                                                       state)"},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CIncOffsetImmediate",
   close
     (tp[var_w("cd",5),var_w("cb",5),var_w("increment",11)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cb",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mu(call
                                                           ("getTag",HOLogic.boolT,
                                                            var("v",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close
                                                        (var_b"b",
                                                         ite(var_b"b",
                                                             mb(call
                                                                  ("CAPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (Capability \<times> state)"},
                                                                   var_w("cb",5),@{theory}),
                                                                close
                                                                  (var("v",@{typ Capability}),
                                                                   mu(call
                                                                        ("getSealed",HOLogic.boolT,
                                                                         var("v",@{typ Capability}),
                                                                         @{theory}),qTy))),
                                                             mu(lf,qTy)))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          call
                                                            ("SignalCapException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[lc("capExcSeal","CapExceptionType",
                                                                   @{theory}),var_w("cb",5)],
                                                             @{theory}),
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mb(mb(mb(call
                                                                              ("CAPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (Capability \<times>
                                                                                 state)"},
                                                                               var_w("cb",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var("v0",
                                                                                   @{typ Capability}),
                                                                               mb(mb(mu(call
                                                                                          ("getOffset",
                                                                                           w64,
                                                                                           var("v0",
                                                                                               @{typ Capability}),
                                                                                           @{theory}),
                                                                                        qTy),
                                                                                     close
                                                                                       (var_w("v",64),
                                                                                        mu(bop(Add,
                                                                                               var_w("v",64),
                                                                                               mop(SE w64,
                                                                                                   var_w("increment",11))),
                                                                                           qTy))),
                                                                                  close
                                                                                    (var_w("v0",64),
                                                                                     mu(tp[var("v",
                                                                                               @{typ Capability}),
                                                                                           var_w("v0",64)],
                                                                                        qTy))))),
                                                                         close
                                                                           (var("v",
                                                                                @{typ
                                                                                "Capability \<times>
                                                                                 64 word"}),
                                                                            mu(call
                                                                                 ("canRepOffset",
                                                                                  HOLogic.boolT,
                                                                                  var("v",
                                                                                      @{typ
                                                                                      "Capability \<times>
                                                                                       64 word"}),
                                                                                  @{theory}),qTy))),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(mop(Not,var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cb",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mb(mb(mb(mb(mb(mu(call
                                                                                                          ("getBase",
                                                                                                           w64,
                                                                                                           var("v",
                                                                                                               @{typ Capability}),
                                                                                                           @{theory}),
                                                                                                        qTy),
                                                                                                     close
                                                                                                       (var_w("v",64),
                                                                                                        mb(call
                                                                                                             ("CAPR",
                                                                                                              @{typ
                                                                                                              "state \<Rightarrow>
                                                                                                               (Capability \<times>
                                                                                                                state)"},
                                                                                                              var_w("cb",5),
                                                                                                              @{theory}),
                                                                                                           close
                                                                                                             (var("v0",
                                                                                                                  @{typ Capability}),
                                                                                                              mb(mu(call
                                                                                                                      ("getOffset",
                                                                                                                       w64,
                                                                                                                       var("v0",
                                                                                                                           @{typ Capability}),
                                                                                                                       @{theory}),
                                                                                                                    qTy),
                                                                                                                 close
                                                                                                                   (var_w("v0",64),
                                                                                                                    mu(bop(Add,
                                                                                                                           var_w("v",64),
                                                                                                                           var_w("v0",64)),
                                                                                                                       qTy))))))),
                                                                                                  close
                                                                                                    (var_w("v",64),
                                                                                                     mu(bop(Add,
                                                                                                            var_w("v",64),
                                                                                                            mop(SE w64,
                                                                                                                var_w("increment",11))),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var_w("v",64),
                                                                                                  mu(tp[const
                                                                                                          ("nullCap",
                                                                                                           @{typ Capability},
                                                                                                           @{theory}),
                                                                                                        var_w("v",64)],
                                                                                                     qTy))),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ
                                                                                                   "Capability \<times>
                                                                                                    64 word"}),
                                                                                               mu(call
                                                                                                    ("setOffset",
                                                                                                     @{typ Capability},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mu(tp[var("v",
                                                                                                      @{typ Capability}),
                                                                                                  var_w("cd",5)],
                                                                                               qTy))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ
                                                                                             "Capability \<times>
                                                                                              5 word"}),
                                                                                         call
                                                                                           ("write'CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (unit \<times>
                                                                                              state)"},
                                                                                            var("v",
                                                                                                @{typ
                                                                                                "Capability \<times>
                                                                                                 5 word"}),
                                                                                            @{theory}))),
                                                                                   close
                                                                                     (var_a
                                                                                        HOLogic.unitT,
                                                                                      mb(call
                                                                                           ("CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (Capability \<times>
                                                                                              state)"},
                                                                                            var_w("cd",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mb(mb(const
                                                                                                    ("PC",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (64 word \<times>
                                                                                                       state)"},
                                                                                                     @{theory}),
                                                                                                  close
                                                                                                    (var_w("v0",64),
                                                                                                     mu(tp[var("v",
                                                                                                               @{typ Capability}),
                                                                                                           var_w("v0",64)],
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ
                                                                                                      "Capability \<times>
                                                                                                       64 word"}),
                                                                                                  call
                                                                                                    ("watchOOB",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (unit \<times>
                                                                                                       state)"},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}))))))))),
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cb",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mb(mb(mb(call
                                                                                                 ("CAPR",
                                                                                                  @{typ
                                                                                                  "state \<Rightarrow>
                                                                                                   (Capability \<times>
                                                                                                    state)"},
                                                                                                  var_w("cb",5),
                                                                                                  @{theory}),
                                                                                               close
                                                                                                 (var("v0",
                                                                                                      @{typ Capability}),
                                                                                                  mb(mb(mu(call
                                                                                                             ("getOffset",
                                                                                                              w64,
                                                                                                              var("v0",
                                                                                                                  @{typ Capability}),
                                                                                                              @{theory}),
                                                                                                           qTy),
                                                                                                        close
                                                                                                          (var_w("v",64),
                                                                                                           mu(bop(Add,
                                                                                                                  var_w("v",64),
                                                                                                                  mop(SE w64,
                                                                                                                      var_w("increment",11))),
                                                                                                              qTy))),
                                                                                                     close
                                                                                                       (var_w("v0",64),
                                                                                                        mu(tp[var("v",
                                                                                                                  @{typ Capability}),
                                                                                                              var_w("v0",64)],
                                                                                                           qTy))))),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ
                                                                                                   "Capability \<times>
                                                                                                    64 word"}),
                                                                                               mu(call
                                                                                                    ("setOffset",
                                                                                                     @{typ Capability},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mu(tp[var("v",
                                                                                                      @{typ Capability}),
                                                                                                  var_w("cd",5)],
                                                                                               qTy))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ
                                                                                             "Capability \<times>
                                                                                              5 word"}),
                                                                                         call
                                                                                           ("write'CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (unit \<times>
                                                                                              state)"},
                                                                                            var("v",
                                                                                                @{typ
                                                                                                "Capability \<times>
                                                                                                 5 word"}),
                                                                                            @{theory}))),
                                                                                   close
                                                                                     (var_a
                                                                                        HOLogic.unitT,
                                                                                      mb(call
                                                                                           ("CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (Capability \<times>
                                                                                              state)"},
                                                                                            var_w("cd",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mb(mb(const
                                                                                                    ("PC",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (64 word \<times>
                                                                                                       state)"},
                                                                                                     @{theory}),
                                                                                                  close
                                                                                                    (var_w("v0",64),
                                                                                                     mu(tp[var("v",
                                                                                                               @{typ Capability}),
                                                                                                           var_w("v0",64)],
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ
                                                                                                      "Capability \<times>
                                                                                                       64 word"}),
                                                                                                  call
                                                                                                    ("watchOOB",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (unit \<times>
                                                                                                       state)"},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CSetBounds",
   close
     (tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
      mb(call
           ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},var_w("cb",5),@{theory}),
         close
           (var("v",@{typ Capability}),
            mb(mu(call("getBase",w64,var("v",@{typ Capability}),@{theory}),qTy),
               close
                 (var_w("base",64),
                  mb(call
                       ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},
                        var_w("cb",5),@{theory}),
                     close
                       (var("v",@{typ Capability}),
                        mb(mu(call("getLength",w64,var("v",@{typ Capability}),@{theory}),qTy),
                           close
                             (var_w("length",64),
                              mb(call
                                   ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},
                                    var_w("cb",5),@{theory}),
                                 close
                                   (var("v",@{typ Capability}),
                                    mb(mb(mu(call
                                               ("getBase",w64,var("v",@{typ Capability}),@{theory}),
                                             qTy),
                                          close
                                            (var_w("v",64),
                                             mb(call
                                                  ("CAPR",
                                                   @{typ
                                                   "state \<Rightarrow> (Capability \<times> state)"},
                                                   var_w("cb",5),@{theory}),
                                                close
                                                  (var("v0",@{typ Capability}),
                                                   mb(mu(call
                                                           ("getOffset",w64,
                                                            var("v0",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close
                                                        (var_w("v0",64),
                                                         mu(bop(Add,var_w("v",64),var_w("v0",64)),
                                                            qTy))))))),
                                       close
                                         (var_w("cursor",64),
                                          mb(const
                                               ("CP0",
                                                @{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                                @{theory}),
                                             close
                                               (var("v",@{typ CP0}),
                                                mb(mb(mb(mu(call
                                                              ("CP0.Status",@{typ StatusRegister},
                                                               var("v",@{typ CP0}),@{theory}),qTy),
                                                         close
                                                           (var("v",@{typ StatusRegister}),
                                                            mu(call
                                                                 ("StatusRegister.CU2",
                                                                  HOLogic.boolT,
                                                                  var("v",@{typ StatusRegister}),
                                                                  @{theory}),qTy))),
                                                      close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          const
                                                            ("SignalCP2UnusableException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},@{theory}),
                                                          mb(call
                                                               ("register_inaccessible",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},
                                                                var_w("cd",5),@{theory}),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    call
                                                                      ("SignalCapException",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       tp[lc("capExcAccessSysReg",
                                                                             "CapExceptionType",
                                                                             @{theory}),
                                                                          var_w("cd",5)],@{theory}),
                                                                    mb(call
                                                                         ("register_inaccessible",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (bool \<times> state)"},
                                                                          var_w("cb",5),@{theory}),
                                                                       close
                                                                         (var_b"b",
                                                                          ite(var_b"b",
                                                                              call
                                                                                ("SignalCapException",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (unit \<times>
                                                                                   state)"},
                                                                                 tp[lc("capExcAccessSysReg",
                                                                                       "CapExceptionType",
                                                                                       @{theory}),
                                                                                    var_w("cb",5)],
                                                                                 @{theory}),
                                                                              mb(call
                                                                                   ("CAPR",
                                                                                    @{typ
                                                                                    "state \<Rightarrow>
                                                                                     (Capability \<times>
                                                                                      state)"},
                                                                                    var_w("cb",5),
                                                                                    @{theory}),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ Capability}),
                                                                                    mb(mb(mu(call
                                                                                               ("getTag",
                                                                                                HOLogic.boolT,
                                                                                                var("v",
                                                                                                    @{typ Capability}),
                                                                                                @{theory}),
                                                                                             qTy),
                                                                                          close
                                                                                            (var_b"v",
                                                                                             mu(mop(Not,
                                                                                                    var_b"v"),
                                                                                                qTy))),
                                                                                       close
                                                                                         (var_b"b",
                                                                                          ite(var_b"b",
                                                                                              call
                                                                                                ("SignalCapException",
                                                                                                 @{typ
                                                                                                 "state \<Rightarrow>
                                                                                                  (unit \<times>
                                                                                                   state)"},
                                                                                                 tp[lc("capExcTag",
                                                                                                       "CapExceptionType",
                                                                                                       @{theory}),
                                                                                                    var_w("cb",5)],
                                                                                                 @{theory}),
                                                                                              mb(call
                                                                                                   ("CAPR",
                                                                                                    @{typ
                                                                                                    "state \<Rightarrow>
                                                                                                     (Capability \<times>
                                                                                                      state)"},
                                                                                                    var_w("cb",5),
                                                                                                    @{theory}),
                                                                                                 close
                                                                                                   (var("v",
                                                                                                        @{typ Capability}),
                                                                                                    mb(mu(call
                                                                                                            ("getSealed",
                                                                                                             HOLogic.boolT,
                                                                                                             var("v",
                                                                                                                 @{typ Capability}),
                                                                                                             @{theory}),
                                                                                                          qTy),
                                                                                                       close
                                                                                                         (var_b"b",
                                                                                                          itb([(var_b"b",
                                                                                                                call
                                                                                                                  ("SignalCapException",
                                                                                                                   @{typ
                                                                                                                   "state \<Rightarrow>
                                                                                                                    (unit \<times>
                                                                                                                     state)"},
                                                                                                                   tp[lc("capExcSeal",
                                                                                                                         "CapExceptionType",
                                                                                                                         @{theory}),
                                                                                                                      var_w("cb",5)],
                                                                                                                   @{theory})),
                                                                                                               (bop(Ult,
                                                                                                                    var_w("cursor",64),
                                                                                                                    var_w("base",64)),
                                                                                                                call
                                                                                                                  ("SignalCapException",
                                                                                                                   @{typ
                                                                                                                   "state \<Rightarrow>
                                                                                                                    (unit \<times>
                                                                                                                     state)"},
                                                                                                                   tp[lc("capExcLength",
                                                                                                                         "CapExceptionType",
                                                                                                                         @{theory}),
                                                                                                                      var_w("cb",5)],
                                                                                                                   @{theory}))],
                                                                                                              mb(call
                                                                                                                   ("GPR",
                                                                                                                    @{typ
                                                                                                                    "state \<Rightarrow>
                                                                                                                     (64 word \<times>
                                                                                                                      state)"},
                                                                                                                    var_w("rt",5),
                                                                                                                    @{theory}),
                                                                                                                 close
                                                                                                                   (var_w("v",64),
                                                                                                                    mb(mb(mb(mu(cc[lw(0,
                                                                                                                                      1),
                                                                                                                                   var_w("v",64)],
                                                                                                                                qTy),
                                                                                                                             close
                                                                                                                               (var_w("v",65),
                                                                                                                                mu(bop(Add,
                                                                                                                                       cc[lw(0,
                                                                                                                                             1),
                                                                                                                                          var_w("cursor",64)],
                                                                                                                                       var_w("v",65)),
                                                                                                                                   qTy))),
                                                                                                                          close
                                                                                                                            (var_w("v",65),
                                                                                                                             mu(bop(Ugt,
                                                                                                                                    var_w("v",65),
                                                                                                                                    bop(Add,
                                                                                                                                        cc[lw(0,
                                                                                                                                              1),
                                                                                                                                           var_w("base",64)],
                                                                                                                                        cc[lw(0,
                                                                                                                                              1),
                                                                                                                                           var_w("length",64)])),
                                                                                                                                qTy))),
                                                                                                                       close
                                                                                                                         (var_b"b",
                                                                                                                          ite(var_b"b",
                                                                                                                              call
                                                                                                                                ("SignalCapException",
                                                                                                                                 @{typ
                                                                                                                                 "state \<Rightarrow>
                                                                                                                                  (unit \<times>
                                                                                                                                   state)"},
                                                                                                                                 tp[lc("capExcLength",
                                                                                                                                       "CapExceptionType",
                                                                                                                                       @{theory}),
                                                                                                                                    var_w("cb",5)],
                                                                                                                                 @{theory}),
                                                                                                                              mb(call
                                                                                                                                   ("CAPR",
                                                                                                                                    @{typ
                                                                                                                                    "state \<Rightarrow>
                                                                                                                                     (Capability \<times>
                                                                                                                                      state)"},
                                                                                                                                    var_w("cb",5),
                                                                                                                                    @{theory}),
                                                                                                                                 close
                                                                                                                                   (var("v",
                                                                                                                                        @{typ Capability}),
                                                                                                                                    mb(mb(mb(mb(call
                                                                                                                                                  ("GPR",
                                                                                                                                                   @{typ
                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                    (64 word \<times>
                                                                                                                                                     state)"},
                                                                                                                                                   var_w("rt",5),
                                                                                                                                                   @{theory}),
                                                                                                                                                close
                                                                                                                                                  (var_w("v0",64),
                                                                                                                                                   mu(tp[var("v",
                                                                                                                                                             @{typ Capability}),
                                                                                                                                                         var_w("v0",64)],
                                                                                                                                                      qTy))),
                                                                                                                                             close
                                                                                                                                               (var("v",
                                                                                                                                                    @{typ
                                                                                                                                                    "Capability \<times>
                                                                                                                                                     64 word"}),
                                                                                                                                                mu(call
                                                                                                                                                     ("setBounds",
                                                                                                                                                      @{typ Capability},
                                                                                                                                                      var("v",
                                                                                                                                                          @{typ
                                                                                                                                                          "Capability \<times>
                                                                                                                                                           64 word"}),
                                                                                                                                                      @{theory}),
                                                                                                                                                   qTy))),
                                                                                                                                          close
                                                                                                                                            (var("v",
                                                                                                                                                 @{typ Capability}),
                                                                                                                                             mu(tp[var("v",
                                                                                                                                                       @{typ Capability}),
                                                                                                                                                   var_w("cd",5)],
                                                                                                                                                qTy))),
                                                                                                                                       close
                                                                                                                                         (var("v",
                                                                                                                                              @{typ
                                                                                                                                              "Capability \<times>
                                                                                                                                               5 word"}),
                                                                                                                                          call
                                                                                                                                            ("write'CAPR",
                                                                                                                                             @{typ
                                                                                                                                             "state \<Rightarrow>
                                                                                                                                              (unit \<times>
                                                                                                                                               state)"},
                                                                                                                                             var("v",
                                                                                                                                                 @{typ
                                                                                                                                                 "Capability \<times>
                                                                                                                                                  5 word"}),
                                                                                                                                             @{theory})))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CSetBoundsExact",
   close
     (tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
      mb(call
           ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},var_w("cb",5),@{theory}),
         close
           (var("v",@{typ Capability}),
            mb(mu(call("getBase",w64,var("v",@{typ Capability}),@{theory}),qTy),
               close
                 (var_w("base",64),
                  mb(call
                       ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},
                        var_w("cb",5),@{theory}),
                     close
                       (var("v",@{typ Capability}),
                        mb(mu(call("getLength",w64,var("v",@{typ Capability}),@{theory}),qTy),
                           close
                             (var_w("length",64),
                              mb(call
                                   ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},
                                    var_w("cb",5),@{theory}),
                                 close
                                   (var("v",@{typ Capability}),
                                    mb(mb(mu(call
                                               ("getBase",w64,var("v",@{typ Capability}),@{theory}),
                                             qTy),
                                          close
                                            (var_w("v",64),
                                             mb(call
                                                  ("CAPR",
                                                   @{typ
                                                   "state \<Rightarrow> (Capability \<times> state)"},
                                                   var_w("cb",5),@{theory}),
                                                close
                                                  (var("v0",@{typ Capability}),
                                                   mb(mu(call
                                                           ("getOffset",w64,
                                                            var("v0",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close
                                                        (var_w("v0",64),
                                                         mu(bop(Add,var_w("v",64),var_w("v0",64)),
                                                            qTy))))))),
                                       close
                                         (var_w("cursor",64),
                                          mb(const
                                               ("CP0",
                                                @{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                                @{theory}),
                                             close
                                               (var("v",@{typ CP0}),
                                                mb(mb(mb(mu(call
                                                              ("CP0.Status",@{typ StatusRegister},
                                                               var("v",@{typ CP0}),@{theory}),qTy),
                                                         close
                                                           (var("v",@{typ StatusRegister}),
                                                            mu(call
                                                                 ("StatusRegister.CU2",
                                                                  HOLogic.boolT,
                                                                  var("v",@{typ StatusRegister}),
                                                                  @{theory}),qTy))),
                                                      close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          const
                                                            ("SignalCP2UnusableException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},@{theory}),
                                                          mb(call
                                                               ("register_inaccessible",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},
                                                                var_w("cd",5),@{theory}),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    call
                                                                      ("SignalCapException",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       tp[lc("capExcAccessSysReg",
                                                                             "CapExceptionType",
                                                                             @{theory}),
                                                                          var_w("cd",5)],@{theory}),
                                                                    mb(call
                                                                         ("register_inaccessible",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (bool \<times> state)"},
                                                                          var_w("cb",5),@{theory}),
                                                                       close
                                                                         (var_b"b",
                                                                          ite(var_b"b",
                                                                              call
                                                                                ("SignalCapException",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (unit \<times>
                                                                                   state)"},
                                                                                 tp[lc("capExcAccessSysReg",
                                                                                       "CapExceptionType",
                                                                                       @{theory}),
                                                                                    var_w("cb",5)],
                                                                                 @{theory}),
                                                                              mb(call
                                                                                   ("CAPR",
                                                                                    @{typ
                                                                                    "state \<Rightarrow>
                                                                                     (Capability \<times>
                                                                                      state)"},
                                                                                    var_w("cb",5),
                                                                                    @{theory}),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ Capability}),
                                                                                    mb(mb(mu(call
                                                                                               ("getTag",
                                                                                                HOLogic.boolT,
                                                                                                var("v",
                                                                                                    @{typ Capability}),
                                                                                                @{theory}),
                                                                                             qTy),
                                                                                          close
                                                                                            (var_b"v",
                                                                                             mu(mop(Not,
                                                                                                    var_b"v"),
                                                                                                qTy))),
                                                                                       close
                                                                                         (var_b"b",
                                                                                          ite(var_b"b",
                                                                                              call
                                                                                                ("SignalCapException",
                                                                                                 @{typ
                                                                                                 "state \<Rightarrow>
                                                                                                  (unit \<times>
                                                                                                   state)"},
                                                                                                 tp[lc("capExcTag",
                                                                                                       "CapExceptionType",
                                                                                                       @{theory}),
                                                                                                    var_w("cb",5)],
                                                                                                 @{theory}),
                                                                                              mb(call
                                                                                                   ("CAPR",
                                                                                                    @{typ
                                                                                                    "state \<Rightarrow>
                                                                                                     (Capability \<times>
                                                                                                      state)"},
                                                                                                    var_w("cb",5),
                                                                                                    @{theory}),
                                                                                                 close
                                                                                                   (var("v",
                                                                                                        @{typ Capability}),
                                                                                                    mb(mu(call
                                                                                                            ("getSealed",
                                                                                                             HOLogic.boolT,
                                                                                                             var("v",
                                                                                                                 @{typ Capability}),
                                                                                                             @{theory}),
                                                                                                          qTy),
                                                                                                       close
                                                                                                         (var_b"b",
                                                                                                          itb([(var_b"b",
                                                                                                                call
                                                                                                                  ("SignalCapException",
                                                                                                                   @{typ
                                                                                                                   "state \<Rightarrow>
                                                                                                                    (unit \<times>
                                                                                                                     state)"},
                                                                                                                   tp[lc("capExcSeal",
                                                                                                                         "CapExceptionType",
                                                                                                                         @{theory}),
                                                                                                                      var_w("cb",5)],
                                                                                                                   @{theory})),
                                                                                                               (bop(Ult,
                                                                                                                    var_w("cursor",64),
                                                                                                                    var_w("base",64)),
                                                                                                                call
                                                                                                                  ("SignalCapException",
                                                                                                                   @{typ
                                                                                                                   "state \<Rightarrow>
                                                                                                                    (unit \<times>
                                                                                                                     state)"},
                                                                                                                   tp[lc("capExcLength",
                                                                                                                         "CapExceptionType",
                                                                                                                         @{theory}),
                                                                                                                      var_w("cb",5)],
                                                                                                                   @{theory}))],
                                                                                                              mb(call
                                                                                                                   ("GPR",
                                                                                                                    @{typ
                                                                                                                    "state \<Rightarrow>
                                                                                                                     (64 word \<times>
                                                                                                                      state)"},
                                                                                                                    var_w("rt",5),
                                                                                                                    @{theory}),
                                                                                                                 close
                                                                                                                   (var_w("v",64),
                                                                                                                    mb(mb(mb(mu(cc[lw(0,
                                                                                                                                      1),
                                                                                                                                   var_w("v",64)],
                                                                                                                                qTy),
                                                                                                                             close
                                                                                                                               (var_w("v",65),
                                                                                                                                mu(bop(Add,
                                                                                                                                       cc[lw(0,
                                                                                                                                             1),
                                                                                                                                          var_w("cursor",64)],
                                                                                                                                       var_w("v",65)),
                                                                                                                                   qTy))),
                                                                                                                          close
                                                                                                                            (var_w("v",65),
                                                                                                                             mu(bop(Ugt,
                                                                                                                                    var_w("v",65),
                                                                                                                                    bop(Add,
                                                                                                                                        cc[lw(0,
                                                                                                                                              1),
                                                                                                                                           var_w("base",64)],
                                                                                                                                        cc[lw(0,
                                                                                                                                              1),
                                                                                                                                           var_w("length",64)])),
                                                                                                                                qTy))),
                                                                                                                       close
                                                                                                                         (var_b"b",
                                                                                                                          ite(var_b"b",
                                                                                                                              call
                                                                                                                                ("SignalCapException",
                                                                                                                                 @{typ
                                                                                                                                 "state \<Rightarrow>
                                                                                                                                  (unit \<times>
                                                                                                                                   state)"},
                                                                                                                                 tp[lc("capExcLength",
                                                                                                                                       "CapExceptionType",
                                                                                                                                       @{theory}),
                                                                                                                                    var_w("cb",5)],
                                                                                                                                 @{theory}),
                                                                                                                              mb(call
                                                                                                                                   ("CAPR",
                                                                                                                                    @{typ
                                                                                                                                    "state \<Rightarrow>
                                                                                                                                     (Capability \<times>
                                                                                                                                      state)"},
                                                                                                                                    var_w("cb",5),
                                                                                                                                    @{theory}),
                                                                                                                                 close
                                                                                                                                   (var("v",
                                                                                                                                        @{typ Capability}),
                                                                                                                                    mb(mb(mb(mb(call
                                                                                                                                                  ("GPR",
                                                                                                                                                   @{typ
                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                    (64 word \<times>
                                                                                                                                                     state)"},
                                                                                                                                                   var_w("rt",5),
                                                                                                                                                   @{theory}),
                                                                                                                                                close
                                                                                                                                                  (var_w("v0",64),
                                                                                                                                                   mu(tp[var("v",
                                                                                                                                                             @{typ Capability}),
                                                                                                                                                         var_w("v0",64)],
                                                                                                                                                      qTy))),
                                                                                                                                             close
                                                                                                                                               (var("v",
                                                                                                                                                    @{typ
                                                                                                                                                    "Capability \<times>
                                                                                                                                                     64 word"}),
                                                                                                                                                mu(call
                                                                                                                                                     ("canRepBounds",
                                                                                                                                                      HOLogic.boolT,
                                                                                                                                                      var("v",
                                                                                                                                                          @{typ
                                                                                                                                                          "Capability \<times>
                                                                                                                                                           64 word"}),
                                                                                                                                                      @{theory}),
                                                                                                                                                   qTy))),
                                                                                                                                          close
                                                                                                                                            (var_b"v",
                                                                                                                                             mu(mop(Not,
                                                                                                                                                    var_b"v"),
                                                                                                                                                qTy))),
                                                                                                                                       close
                                                                                                                                         (var_b"b",
                                                                                                                                          ite(var_b"b",
                                                                                                                                              call
                                                                                                                                                ("SignalCapException",
                                                                                                                                                 @{typ
                                                                                                                                                 "state \<Rightarrow>
                                                                                                                                                  (unit \<times>
                                                                                                                                                   state)"},
                                                                                                                                                 tp[lc("capExcInexact",
                                                                                                                                                       "CapExceptionType",
                                                                                                                                                       @{theory}),
                                                                                                                                                    var_w("cb",5)],
                                                                                                                                                 @{theory}),
                                                                                                                                              mb(call
                                                                                                                                                   ("CAPR",
                                                                                                                                                    @{typ
                                                                                                                                                    "state \<Rightarrow>
                                                                                                                                                     (Capability \<times>
                                                                                                                                                      state)"},
                                                                                                                                                    var_w("cb",5),
                                                                                                                                                    @{theory}),
                                                                                                                                                 close
                                                                                                                                                   (var("v",
                                                                                                                                                        @{typ Capability}),
                                                                                                                                                    mb(mb(mb(mb(call
                                                                                                                                                                  ("GPR",
                                                                                                                                                                   @{typ
                                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                                    (64 word \<times>
                                                                                                                                                                     state)"},
                                                                                                                                                                   var_w("rt",5),
                                                                                                                                                                   @{theory}),
                                                                                                                                                                close
                                                                                                                                                                  (var_w("v0",64),
                                                                                                                                                                   mu(tp[var("v",
                                                                                                                                                                             @{typ Capability}),
                                                                                                                                                                         var_w("v0",64)],
                                                                                                                                                                      qTy))),
                                                                                                                                                             close
                                                                                                                                                               (var("v",
                                                                                                                                                                    @{typ
                                                                                                                                                                    "Capability \<times>
                                                                                                                                                                     64 word"}),
                                                                                                                                                                mu(call
                                                                                                                                                                     ("setBounds",
                                                                                                                                                                      @{typ Capability},
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ
                                                                                                                                                                          "Capability \<times>
                                                                                                                                                                           64 word"}),
                                                                                                                                                                      @{theory}),
                                                                                                                                                                   qTy))),
                                                                                                                                                          close
                                                                                                                                                            (var("v",
                                                                                                                                                                 @{typ Capability}),
                                                                                                                                                             mu(tp[var("v",
                                                                                                                                                                       @{typ Capability}),
                                                                                                                                                                   var_w("cd",5)],
                                                                                                                                                                qTy))),
                                                                                                                                                       close
                                                                                                                                                         (var("v",
                                                                                                                                                              @{typ
                                                                                                                                                              "Capability \<times>
                                                                                                                                                               5 word"}),
                                                                                                                                                          call
                                                                                                                                                            ("write'CAPR",
                                                                                                                                                             @{typ
                                                                                                                                                             "state \<Rightarrow>
                                                                                                                                                              (unit \<times>
                                                                                                                                                               state)"},
                                                                                                                                                             var("v",
                                                                                                                                                                 @{typ
                                                                                                                                                                 "Capability \<times>
                                                                                                                                                                  5 word"}),
                                                                                                                                                             @{theory}))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CSetBoundsImmediate",
   close
     (tp[var_w("cd",5),var_w("cb",5),var_w("req_length",11)],
      mb(call
           ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},var_w("cb",5),@{theory}),
         close
           (var("v",@{typ Capability}),
            mb(mu(call("getBase",w64,var("v",@{typ Capability}),@{theory}),qTy),
               close
                 (var_w("base",64),
                  mb(call
                       ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},
                        var_w("cb",5),@{theory}),
                     close
                       (var("v",@{typ Capability}),
                        mb(mu(call("getLength",w64,var("v",@{typ Capability}),@{theory}),qTy),
                           close
                             (var_w("length",64),
                              mb(call
                                   ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},
                                    var_w("cb",5),@{theory}),
                                 close
                                   (var("v",@{typ Capability}),
                                    mb(mb(mu(call
                                               ("getBase",w64,var("v",@{typ Capability}),@{theory}),
                                             qTy),
                                          close
                                            (var_w("v",64),
                                             mb(call
                                                  ("CAPR",
                                                   @{typ
                                                   "state \<Rightarrow> (Capability \<times> state)"},
                                                   var_w("cb",5),@{theory}),
                                                close
                                                  (var("v0",@{typ Capability}),
                                                   mb(mu(call
                                                           ("getOffset",w64,
                                                            var("v0",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close
                                                        (var_w("v0",64),
                                                         mu(bop(Add,var_w("v",64),var_w("v0",64)),
                                                            qTy))))))),
                                       close
                                         (var_w("cursor",64),
                                          mb(const
                                               ("CP0",
                                                @{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                                @{theory}),
                                             close
                                               (var("v",@{typ CP0}),
                                                mb(mb(mb(mu(call
                                                              ("CP0.Status",@{typ StatusRegister},
                                                               var("v",@{typ CP0}),@{theory}),qTy),
                                                         close
                                                           (var("v",@{typ StatusRegister}),
                                                            mu(call
                                                                 ("StatusRegister.CU2",
                                                                  HOLogic.boolT,
                                                                  var("v",@{typ StatusRegister}),
                                                                  @{theory}),qTy))),
                                                      close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          const
                                                            ("SignalCP2UnusableException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},@{theory}),
                                                          mb(call
                                                               ("register_inaccessible",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (bool \<times> state)"},
                                                                var_w("cd",5),@{theory}),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    call
                                                                      ("SignalCapException",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       tp[lc("capExcAccessSysReg",
                                                                             "CapExceptionType",
                                                                             @{theory}),
                                                                          var_w("cd",5)],@{theory}),
                                                                    mb(call
                                                                         ("register_inaccessible",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (bool \<times> state)"},
                                                                          var_w("cb",5),@{theory}),
                                                                       close
                                                                         (var_b"b",
                                                                          ite(var_b"b",
                                                                              call
                                                                                ("SignalCapException",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (unit \<times>
                                                                                   state)"},
                                                                                 tp[lc("capExcAccessSysReg",
                                                                                       "CapExceptionType",
                                                                                       @{theory}),
                                                                                    var_w("cb",5)],
                                                                                 @{theory}),
                                                                              mb(call
                                                                                   ("CAPR",
                                                                                    @{typ
                                                                                    "state \<Rightarrow>
                                                                                     (Capability \<times>
                                                                                      state)"},
                                                                                    var_w("cb",5),
                                                                                    @{theory}),
                                                                                 close
                                                                                   (var("v",
                                                                                        @{typ Capability}),
                                                                                    mb(mb(mu(call
                                                                                               ("getTag",
                                                                                                HOLogic.boolT,
                                                                                                var("v",
                                                                                                    @{typ Capability}),
                                                                                                @{theory}),
                                                                                             qTy),
                                                                                          close
                                                                                            (var_b"v",
                                                                                             mu(mop(Not,
                                                                                                    var_b"v"),
                                                                                                qTy))),
                                                                                       close
                                                                                         (var_b"b",
                                                                                          ite(var_b"b",
                                                                                              call
                                                                                                ("SignalCapException",
                                                                                                 @{typ
                                                                                                 "state \<Rightarrow>
                                                                                                  (unit \<times>
                                                                                                   state)"},
                                                                                                 tp[lc("capExcTag",
                                                                                                       "CapExceptionType",
                                                                                                       @{theory}),
                                                                                                    var_w("cb",5)],
                                                                                                 @{theory}),
                                                                                              mb(call
                                                                                                   ("CAPR",
                                                                                                    @{typ
                                                                                                    "state \<Rightarrow>
                                                                                                     (Capability \<times>
                                                                                                      state)"},
                                                                                                    var_w("cb",5),
                                                                                                    @{theory}),
                                                                                                 close
                                                                                                   (var("v",
                                                                                                        @{typ Capability}),
                                                                                                    mb(mu(call
                                                                                                            ("getSealed",
                                                                                                             HOLogic.boolT,
                                                                                                             var("v",
                                                                                                                 @{typ Capability}),
                                                                                                             @{theory}),
                                                                                                          qTy),
                                                                                                       close
                                                                                                         (var_b"b",
                                                                                                          itb([(var_b"b",
                                                                                                                call
                                                                                                                  ("SignalCapException",
                                                                                                                   @{typ
                                                                                                                   "state \<Rightarrow>
                                                                                                                    (unit \<times>
                                                                                                                     state)"},
                                                                                                                   tp[lc("capExcSeal",
                                                                                                                         "CapExceptionType",
                                                                                                                         @{theory}),
                                                                                                                      var_w("cb",5)],
                                                                                                                   @{theory})),
                                                                                                               (bop(Ult,
                                                                                                                    var_w("cursor",64),
                                                                                                                    var_w("base",64)),
                                                                                                                call
                                                                                                                  ("SignalCapException",
                                                                                                                   @{typ
                                                                                                                   "state \<Rightarrow>
                                                                                                                    (unit \<times>
                                                                                                                     state)"},
                                                                                                                   tp[lc("capExcLength",
                                                                                                                         "CapExceptionType",
                                                                                                                         @{theory}),
                                                                                                                      var_w("cb",5)],
                                                                                                                   @{theory})),
                                                                                                               (bop(Ugt,
                                                                                                                    bop(Add,
                                                                                                                        cc[lw(0,
                                                                                                                              1),
                                                                                                                           var_w("cursor",64)],
                                                                                                                        mop(Cast
                                                                                                                              (Word_Lib.mk_wordT 65),
                                                                                                                            var_w("req_length",11))),
                                                                                                                    bop(Add,
                                                                                                                        cc[lw(0,
                                                                                                                              1),
                                                                                                                           var_w("base",64)],
                                                                                                                        cc[lw(0,
                                                                                                                              1),
                                                                                                                           var_w("length",64)])),
                                                                                                                call
                                                                                                                  ("SignalCapException",
                                                                                                                   @{typ
                                                                                                                   "state \<Rightarrow>
                                                                                                                    (unit \<times>
                                                                                                                     state)"},
                                                                                                                   tp[lc("capExcLength",
                                                                                                                         "CapExceptionType",
                                                                                                                         @{theory}),
                                                                                                                      var_w("cb",5)],
                                                                                                                   @{theory}))],
                                                                                                              mb(call
                                                                                                                   ("CAPR",
                                                                                                                    @{typ
                                                                                                                    "state \<Rightarrow>
                                                                                                                     (Capability \<times>
                                                                                                                      state)"},
                                                                                                                    var_w("cb",5),
                                                                                                                    @{theory}),
                                                                                                                 close
                                                                                                                   (var("v",
                                                                                                                        @{typ Capability}),
                                                                                                                    mb(mb(mb(mu(tp[var("v",
                                                                                                                                       @{typ Capability}),
                                                                                                                                   mop(Cast
                                                                                                                                         w64,
                                                                                                                                       var_w("req_length",11))],
                                                                                                                                qTy),
                                                                                                                             close
                                                                                                                               (var("v",
                                                                                                                                    @{typ
                                                                                                                                    "Capability \<times>
                                                                                                                                     64 word"}),
                                                                                                                                mu(call
                                                                                                                                     ("setBounds",
                                                                                                                                      @{typ Capability},
                                                                                                                                      var("v",
                                                                                                                                          @{typ
                                                                                                                                          "Capability \<times>
                                                                                                                                           64 word"}),
                                                                                                                                      @{theory}),
                                                                                                                                   qTy))),
                                                                                                                          close
                                                                                                                            (var("v",
                                                                                                                                 @{typ Capability}),
                                                                                                                             mu(tp[var("v",
                                                                                                                                       @{typ Capability}),
                                                                                                                                   var_w("cd",5)],
                                                                                                                                qTy))),
                                                                                                                       close
                                                                                                                         (var("v",
                                                                                                                              @{typ
                                                                                                                              "Capability \<times>
                                                                                                                               5 word"}),
                                                                                                                          call
                                                                                                                            ("write'CAPR",
                                                                                                                             @{typ
                                                                                                                             "state \<Rightarrow>
                                                                                                                              (unit \<times>
                                                                                                                               state)"},
                                                                                                                             var("v",
                                                                                                                                 @{typ
                                                                                                                                 "Capability \<times>
                                                                                                                                  5 word"}),
                                                                                                                             @{theory}))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("ClearRegs",
   close
     (tp[var_w("mask",16),var("regset",@{typ RegSet})],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      cs(var("regset",@{typ RegSet}),
                         [(lc("Lo_rs","RegSet",@{theory}),
                           forloop
                             (tp[ln 0,ln 15,
                                 close
                                   (var_n"i",
                                    ite(bop(Bit,var_w("mask",16),var_n"i"),
                                        call
                                          ("write'GPR",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           tp[lw(0,64),mop(Cast (Word_Lib.mk_wordT 5),var_n"i")],
                                           @{theory}),mu(lu,qTy)))])),
                          (lc("Hi_rs","RegSet",@{theory}),
                           forloop
                             (tp[ln 16,ln 31,
                                 close
                                   (var_n"i",
                                    ite(bop(Bit,var_w("mask",16),bop(Sub,var_n"i",ln 16)),
                                        call
                                          ("write'GPR",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           tp[lw(0,64),mop(Cast (Word_Lib.mk_wordT 5),var_n"i")],
                                           @{theory}),mu(lu,qTy)))])),
                          (lc("CLo_rs","RegSet",@{theory}),
                           forloop
                             (tp[ln 0,ln 15,
                                 close
                                   (var_n"i",
                                    ite(bop(Bit,var_w("mask",16),var_n"i"),
                                        call
                                          ("write'CAPR",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           tp[const("nullCap",@{typ Capability},@{theory}),
                                              mop(Cast (Word_Lib.mk_wordT 5),var_n"i")],@{theory}),
                                        mu(lu,qTy)))])),
                          (lc("CHi_rs","RegSet",@{theory}),
                           mb(call
                                ("register_inaccessible_write_attempt",
                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                 var_w("mask",16),@{theory}),
                              close
                                (var_b"v",
                                 mb(mu(mop(Not,var_b"v"),qTy),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           forloop
                                             (tp[ln 16,ln 31,
                                                 close
                                                   (var_n"i",
                                                    ite(bop(Bit,var_w("mask",16),
                                                            bop(Sub,var_n"i",ln 16)),
                                                        call
                                                          ("write'CAPR",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (unit \<times> state)"},
                                                           tp[const
                                                                ("nullCap",@{typ Capability},
                                                                 @{theory}),
                                                              mop(Cast (Word_Lib.mk_wordT 5),
                                                                  var_n"i")],@{theory}),mu(lu,qTy)))]),
                                           mu(lu,qTy)))))))],@{context}))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'ClearLo",
   close
     (var_w("mask",16),
      call
        ("ClearRegs",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("mask",16),lc("Lo_rs","RegSet",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'ClearHi",
   close
     (var_w("mask",16),
      call
        ("ClearRegs",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("mask",16),lc("Hi_rs","RegSet",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'CClearLo",
   close
     (var_w("mask",16),
      call
        ("ClearRegs",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("mask",16),lc("CLo_rs","RegSet",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'CClearHi",
   close
     (var_w("mask",16),
      call
        ("ClearRegs",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("mask",16),lc("CHi_rs","RegSet",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CClearTag",
   close
     (tp[var_w("cd",5),var_w("cb",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cb",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mb(mu(tp[var("v",@{typ Capability}),lf],qTy),
                                                         close
                                                           (var("v",
                                                                @{typ "Capability \<times> bool"}),
                                                            mu(call
                                                                 ("setTag",@{typ Capability},
                                                                  var("v",
                                                                      @{typ
                                                                      "Capability \<times> bool"}),
                                                                  @{theory}),qTy))),
                                                      close
                                                        (var("v",@{typ Capability}),
                                                         mu(tp[var("v",@{typ Capability}),
                                                               var_w("cd",5)],qTy))),
                                                   close
                                                     (var("v",@{typ "Capability \<times> 5 word"}),
                                                      call
                                                        ("write'CAPR",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         var("v",@{typ "Capability \<times> 5 word"}),
                                                         @{theory}))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CAndPerm",
   close
     (tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cb",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mu(call
                                                           ("getTag",HOLogic.boolT,
                                                            var("v",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          call
                                                            ("SignalCapException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[lc("capExcTag","CapExceptionType",
                                                                   @{theory}),var_w("cb",5)],
                                                             @{theory}),
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mu(call
                                                                        ("getSealed",HOLogic.boolT,
                                                                         var("v",@{typ Capability}),
                                                                         @{theory}),qTy),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("SignalCapException",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[lc("capExcSeal",
                                                                                   "CapExceptionType",
                                                                                   @{theory}),
                                                                                var_w("cb",5)],
                                                                             @{theory}),
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cb",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mn(var("v",
                                                                                       @{typ Capability}),
                                                                                   mb(mr(close
                                                                                           (var("s",
                                                                                                @{typ
                                                                                                "Capability \<times>
                                                                                                 state"}),
                                                                                            mop(Fst,
                                                                                                var("s",
                                                                                                    @{typ
                                                                                                    "Capability \<times>
                                                                                                     state"})))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ Capability}),
                                                                                         mb(mb(mb(mb(md(call
                                                                                                          ("CAPR",
                                                                                                           @{typ
                                                                                                           "state \<Rightarrow>
                                                                                                            (Capability \<times>
                                                                                                             state)"},
                                                                                                           var_w("cb",5),
                                                                                                           @{theory}),
                                                                                                        @{typ Capability}),
                                                                                                     close
                                                                                                       (var("v0",
                                                                                                            @{typ Capability}),
                                                                                                        mb(mb(mb(mb(mb(mb(mu(call
                                                                                                                               ("getPerms",
                                                                                                                                @{typ Perms},
                                                                                                                                var("v0",
                                                                                                                                    @{typ Capability}),
                                                                                                                                @{theory}),
                                                                                                                             @{typ
                                                                                                                             "Capability \<times>
                                                                                                                              state"}),
                                                                                                                          close
                                                                                                                            (var("v",
                                                                                                                                 @{typ Perms}),
                                                                                                                             mu(call
                                                                                                                                  ("reg'Perms",
                                                                                                                                   w32,
                                                                                                                                   var("v",
                                                                                                                                       @{typ Perms}),
                                                                                                                                   @{theory}),
                                                                                                                                @{typ
                                                                                                                                "Capability \<times>
                                                                                                                                 state"}))),
                                                                                                                       close
                                                                                                                         (var_w("v",32),
                                                                                                                          mu(ex(var_w("v",32),
                                                                                                                                ln
                                                                                                                                 14,
                                                                                                                                ln
                                                                                                                                 0,
                                                                                                                                (Word_Lib.mk_wordT 15)),
                                                                                                                             @{typ
                                                                                                                             "Capability \<times>
                                                                                                                              state"}))),
                                                                                                                    close
                                                                                                                      (var_w("v",15),
                                                                                                                       mb(md(call
                                                                                                                               ("GPR",
                                                                                                                                @{typ
                                                                                                                                "state \<Rightarrow>
                                                                                                                                 (64 word \<times>
                                                                                                                                  state)"},
                                                                                                                                var_w("rt",5),
                                                                                                                                @{theory}),
                                                                                                                             @{typ Capability}),
                                                                                                                          close
                                                                                                                            (var_w("v0",64),
                                                                                                                             mb(mu(ex(var_w("v0",64),
                                                                                                                                      ln
                                                                                                                                       14,
                                                                                                                                      ln
                                                                                                                                       0,
                                                                                                                                      (Word_Lib.mk_wordT 15)),
                                                                                                                                   @{typ
                                                                                                                                   "Capability \<times>
                                                                                                                                    state"}),
                                                                                                                                close
                                                                                                                                  (var_w("v0",15),
                                                                                                                                   mu(bop(BAnd,
                                                                                                                                          var_w("v",15),
                                                                                                                                          var_w("v0",15)),
                                                                                                                                      @{typ
                                                                                                                                      "Capability \<times>
                                                                                                                                       state"}))))))),
                                                                                                                 close
                                                                                                                   (var_w("v",15),
                                                                                                                    mu(mop(Cast
                                                                                                                             w32,
                                                                                                                           var_w("v",15)),
                                                                                                                       @{typ
                                                                                                                       "Capability \<times>
                                                                                                                        state"}))),
                                                                                                              close
                                                                                                                (var_w("v",32),
                                                                                                                 mu(call
                                                                                                                      ("rec'Perms",
                                                                                                                       @{typ Perms},
                                                                                                                       var_w("v",32),
                                                                                                                       @{theory}),
                                                                                                                    @{typ
                                                                                                                    "Capability \<times>
                                                                                                                     state"}))),
                                                                                                           close
                                                                                                             (var("v0",
                                                                                                                  @{typ Perms}),
                                                                                                              mu(tp[var("v",
                                                                                                                        @{typ Capability}),
                                                                                                                    var("v0",
                                                                                                                        @{typ Perms})],
                                                                                                                 @{typ
                                                                                                                 "Capability \<times>
                                                                                                                  state"}))))),
                                                                                                  close
                                                                                                    (var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          Perms"}),
                                                                                                     mu(call
                                                                                                          ("setPerms",
                                                                                                           @{typ Capability},
                                                                                                           var("v",
                                                                                                               @{typ
                                                                                                               "Capability \<times>
                                                                                                                Perms"}),
                                                                                                           @{theory}),
                                                                                                        @{typ
                                                                                                        "Capability \<times>
                                                                                                         state"}))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ Capability}),
                                                                                                  mw(close
                                                                                                       (var("s",
                                                                                                            @{typ
                                                                                                            "Capability \<times>
                                                                                                             state"}),
                                                                                                        tp[var("v",
                                                                                                               @{typ Capability}),
                                                                                                           mop(Snd,
                                                                                                               var("s",
                                                                                                                   @{typ
                                                                                                                   "Capability \<times>
                                                                                                                    state"}))])))),
                                                                                            close
                                                                                              (var_a
                                                                                                 HOLogic.unitT,
                                                                                               mb(mr(close
                                                                                                       (var("s",
                                                                                                            @{typ
                                                                                                            "Capability \<times>
                                                                                                             state"}),
                                                                                                        mop(Fst,
                                                                                                            var("s",
                                                                                                                @{typ
                                                                                                                "Capability \<times>
                                                                                                                 state"})))),
                                                                                                  close
                                                                                                    (var("v",
                                                                                                         @{typ Capability}),
                                                                                                     mb(mb(mb(mb(md(call
                                                                                                                      ("CAPR",
                                                                                                                       @{typ
                                                                                                                       "state \<Rightarrow>
                                                                                                                        (Capability \<times>
                                                                                                                         state)"},
                                                                                                                       var_w("cb",5),
                                                                                                                       @{theory}),
                                                                                                                    @{typ Capability}),
                                                                                                                 close
                                                                                                                   (var("v0",
                                                                                                                        @{typ Capability}),
                                                                                                                    mb(mb(mb(mb(mb(mb(mu(call
                                                                                                                                           ("getUPerms",
                                                                                                                                            @{typ UPerms},
                                                                                                                                            var("v0",
                                                                                                                                                @{typ Capability}),
                                                                                                                                            @{theory}),
                                                                                                                                         @{typ
                                                                                                                                         "Capability \<times>
                                                                                                                                          state"}),
                                                                                                                                      close
                                                                                                                                        (var("v",
                                                                                                                                             @{typ UPerms}),
                                                                                                                                         mu(call
                                                                                                                                              ("reg'UPerms",
                                                                                                                                               w32,
                                                                                                                                               var("v",
                                                                                                                                                   @{typ UPerms}),
                                                                                                                                               @{theory}),
                                                                                                                                            @{typ
                                                                                                                                            "Capability \<times>
                                                                                                                                             state"}))),
                                                                                                                                   close
                                                                                                                                     (var_w("v",32),
                                                                                                                                      mu(ex(var_w("v",32),
                                                                                                                                            bop(Sub,
                                                                                                                                                const
                                                                                                                                                  ("UPERMS",
                                                                                                                                                   HOLogic.natT,
                                                                                                                                                   @{theory}),
                                                                                                                                                ln
                                                                                                                                                 1),
                                                                                                                                            ln
                                                                                                                                             0,
                                                                                                                                            w16),
                                                                                                                                         @{typ
                                                                                                                                         "Capability \<times>
                                                                                                                                          state"}))),
                                                                                                                                close
                                                                                                                                  (var_w("v",16),
                                                                                                                                   mb(md(call
                                                                                                                                           ("GPR",
                                                                                                                                            @{typ
                                                                                                                                            "state \<Rightarrow>
                                                                                                                                             (64 word \<times>
                                                                                                                                              state)"},
                                                                                                                                            var_w("rt",5),
                                                                                                                                            @{theory}),
                                                                                                                                         @{typ Capability}),
                                                                                                                                      close
                                                                                                                                        (var_w("v0",64),
                                                                                                                                         mb(mu(ex(var_w("v0",64),
                                                                                                                                                  bop(Add,
                                                                                                                                                      const
                                                                                                                                                        ("UPERMS",
                                                                                                                                                         HOLogic.natT,
                                                                                                                                                         @{theory}),
                                                                                                                                                      ln
                                                                                                                                                       14),
                                                                                                                                                  ln
                                                                                                                                                   15,
                                                                                                                                                  w16),
                                                                                                                                               @{typ
                                                                                                                                               "Capability \<times>
                                                                                                                                                state"}),
                                                                                                                                            close
                                                                                                                                              (var_w("v0",16),
                                                                                                                                               mu(bop(BAnd,
                                                                                                                                                      var_w("v",16),
                                                                                                                                                      var_w("v0",16)),
                                                                                                                                                  @{typ
                                                                                                                                                  "Capability \<times>
                                                                                                                                                   state"}))))))),
                                                                                                                             close
                                                                                                                               (var_w("v",16),
                                                                                                                                mu(mop(Cast
                                                                                                                                         w32,
                                                                                                                                       var_w("v",16)),
                                                                                                                                   @{typ
                                                                                                                                   "Capability \<times>
                                                                                                                                    state"}))),
                                                                                                                          close
                                                                                                                            (var_w("v",32),
                                                                                                                             mu(call
                                                                                                                                  ("rec'UPerms",
                                                                                                                                   @{typ UPerms},
                                                                                                                                   var_w("v",32),
                                                                                                                                   @{theory}),
                                                                                                                                @{typ
                                                                                                                                "Capability \<times>
                                                                                                                                 state"}))),
                                                                                                                       close
                                                                                                                         (var("v0",
                                                                                                                              @{typ UPerms}),
                                                                                                                          mu(tp[var("v",
                                                                                                                                    @{typ Capability}),
                                                                                                                                var("v0",
                                                                                                                                    @{typ UPerms})],
                                                                                                                             @{typ
                                                                                                                             "Capability \<times>
                                                                                                                              state"}))))),
                                                                                                              close
                                                                                                                (var("v",
                                                                                                                     @{typ
                                                                                                                     "Capability \<times>
                                                                                                                      UPerms"}),
                                                                                                                 mu(call
                                                                                                                      ("setUPerms",
                                                                                                                       @{typ Capability},
                                                                                                                       var("v",
                                                                                                                           @{typ
                                                                                                                           "Capability \<times>
                                                                                                                            UPerms"}),
                                                                                                                       @{theory}),
                                                                                                                    @{typ
                                                                                                                    "Capability \<times>
                                                                                                                     state"}))),
                                                                                                           close
                                                                                                             (var("v",
                                                                                                                  @{typ Capability}),
                                                                                                              mw(close
                                                                                                                   (var("s",
                                                                                                                        @{typ
                                                                                                                        "Capability \<times>
                                                                                                                         state"}),
                                                                                                                    tp[var("v",
                                                                                                                           @{typ Capability}),
                                                                                                                       mop(Snd,
                                                                                                                           var("s",
                                                                                                                               @{typ
                                                                                                                               "Capability \<times>
                                                                                                                                state"}))])))),
                                                                                                        close
                                                                                                          (var_a
                                                                                                             HOLogic.unitT,
                                                                                                           mb(mr(close
                                                                                                                   (var("s",
                                                                                                                        @{typ
                                                                                                                        "Capability \<times>
                                                                                                                         state"}),
                                                                                                                    mop(Fst,
                                                                                                                        var("s",
                                                                                                                            @{typ
                                                                                                                            "Capability \<times>
                                                                                                                             state"})))),
                                                                                                              close
                                                                                                                (var("v",
                                                                                                                     @{typ Capability}),
                                                                                                                 mb(mu(tp[var("v",
                                                                                                                              @{typ Capability}),
                                                                                                                          var_w("cd",5)],
                                                                                                                       @{typ
                                                                                                                       "Capability \<times>
                                                                                                                        state"}),
                                                                                                                    close
                                                                                                                      (var("v",
                                                                                                                           @{typ
                                                                                                                           "Capability \<times>
                                                                                                                            5 word"}),
                                                                                                                       md(call
                                                                                                                            ("write'CAPR",
                                                                                                                             @{typ
                                                                                                                             "state \<Rightarrow>
                                                                                                                              (unit \<times>
                                                                                                                               state)"},
                                                                                                                             var("v",
                                                                                                                                 @{typ
                                                                                                                                 "Capability \<times>
                                                                                                                                  5 word"}),
                                                                                                                             @{theory}),
                                                                                                                          @{typ Capability})))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CSetOffset",
   close
     (tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cb",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mu(call
                                                           ("getTag",HOLogic.boolT,
                                                            var("v",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close
                                                        (var_b"b",
                                                         ite(var_b"b",
                                                             mb(call
                                                                  ("CAPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (Capability \<times> state)"},
                                                                   var_w("cb",5),@{theory}),
                                                                close
                                                                  (var("v",@{typ Capability}),
                                                                   mu(call
                                                                        ("getSealed",HOLogic.boolT,
                                                                         var("v",@{typ Capability}),
                                                                         @{theory}),qTy))),
                                                             mu(lf,qTy)))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          call
                                                            ("SignalCapException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[lc("capExcSeal","CapExceptionType",
                                                                   @{theory}),var_w("cb",5)],
                                                             @{theory}),
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mb(mb(mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v0",64),
                                                                               mu(tp[var("v",
                                                                                         @{typ Capability}),
                                                                                     var_w("v0",64)],
                                                                                  qTy))),
                                                                         close
                                                                           (var("v",
                                                                                @{typ
                                                                                "Capability \<times>
                                                                                 64 word"}),
                                                                            mu(call
                                                                                 ("canRepOffset",
                                                                                  HOLogic.boolT,
                                                                                  var("v",
                                                                                      @{typ
                                                                                      "Capability \<times>
                                                                                       64 word"}),
                                                                                  @{theory}),qTy))),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(mop(Not,var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cb",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mb(mb(mb(mb(mu(call
                                                                                                       ("getBase",
                                                                                                        w64,
                                                                                                        var("v",
                                                                                                            @{typ Capability}),
                                                                                                        @{theory}),
                                                                                                     qTy),
                                                                                                  close
                                                                                                    (var_w("v",64),
                                                                                                     mb(call
                                                                                                          ("GPR",
                                                                                                           @{typ
                                                                                                           "state \<Rightarrow>
                                                                                                            (64 word \<times>
                                                                                                             state)"},
                                                                                                           var_w("rt",5),
                                                                                                           @{theory}),
                                                                                                        close
                                                                                                          (var_w("v0",64),
                                                                                                           mu(bop(Add,
                                                                                                                  var_w("v",64),
                                                                                                                  var_w("v0",64)),
                                                                                                              qTy))))),
                                                                                               close
                                                                                                 (var_w("v",64),
                                                                                                  mu(tp[const
                                                                                                          ("nullCap",
                                                                                                           @{typ Capability},
                                                                                                           @{theory}),
                                                                                                        var_w("v",64)],
                                                                                                     qTy))),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ
                                                                                                   "Capability \<times>
                                                                                                    64 word"}),
                                                                                               mu(call
                                                                                                    ("setOffset",
                                                                                                     @{typ Capability},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mu(tp[var("v",
                                                                                                      @{typ Capability}),
                                                                                                  var_w("cd",5)],
                                                                                               qTy))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ
                                                                                             "Capability \<times>
                                                                                              5 word"}),
                                                                                         call
                                                                                           ("write'CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (unit \<times>
                                                                                              state)"},
                                                                                            var("v",
                                                                                                @{typ
                                                                                                "Capability \<times>
                                                                                                 5 word"}),
                                                                                            @{theory}))),
                                                                                   close
                                                                                     (var_a
                                                                                        HOLogic.unitT,
                                                                                      mb(call
                                                                                           ("CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (Capability \<times>
                                                                                              state)"},
                                                                                            var_w("cd",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mb(mb(const
                                                                                                    ("PC",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (64 word \<times>
                                                                                                       state)"},
                                                                                                     @{theory}),
                                                                                                  close
                                                                                                    (var_w("v0",64),
                                                                                                     mu(tp[var("v",
                                                                                                               @{typ Capability}),
                                                                                                           var_w("v0",64)],
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ
                                                                                                      "Capability \<times>
                                                                                                       64 word"}),
                                                                                                  call
                                                                                                    ("watchOOB",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (unit \<times>
                                                                                                       state)"},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}))))))))),
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cb",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mb(mb(mb(call
                                                                                                 ("GPR",
                                                                                                  @{typ
                                                                                                  "state \<Rightarrow>
                                                                                                   (64 word \<times>
                                                                                                    state)"},
                                                                                                  var_w("rt",5),
                                                                                                  @{theory}),
                                                                                               close
                                                                                                 (var_w("v0",64),
                                                                                                  mu(tp[var("v",
                                                                                                            @{typ Capability}),
                                                                                                        var_w("v0",64)],
                                                                                                     qTy))),
                                                                                            close
                                                                                              (var("v",
                                                                                                   @{typ
                                                                                                   "Capability \<times>
                                                                                                    64 word"}),
                                                                                               mu(call
                                                                                                    ("setOffset",
                                                                                                     @{typ Capability},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mu(tp[var("v",
                                                                                                      @{typ Capability}),
                                                                                                  var_w("cd",5)],
                                                                                               qTy))),
                                                                                      close
                                                                                        (var("v",
                                                                                             @{typ
                                                                                             "Capability \<times>
                                                                                              5 word"}),
                                                                                         call
                                                                                           ("write'CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (unit \<times>
                                                                                              state)"},
                                                                                            var("v",
                                                                                                @{typ
                                                                                                "Capability \<times>
                                                                                                 5 word"}),
                                                                                            @{theory}))),
                                                                                   close
                                                                                     (var_a
                                                                                        HOLogic.unitT,
                                                                                      mb(call
                                                                                           ("CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (Capability \<times>
                                                                                              state)"},
                                                                                            var_w("cd",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mb(mb(const
                                                                                                    ("PC",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (64 word \<times>
                                                                                                       state)"},
                                                                                                     @{theory}),
                                                                                                  close
                                                                                                    (var_w("v0",64),
                                                                                                     mu(tp[var("v",
                                                                                                               @{typ Capability}),
                                                                                                           var_w("v0",64)],
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ
                                                                                                      "Capability \<times>
                                                                                                       64 word"}),
                                                                                                  call
                                                                                                    ("watchOOB",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (unit \<times>
                                                                                                       state)"},
                                                                                                     var("v",
                                                                                                         @{typ
                                                                                                         "Capability \<times>
                                                                                                          64 word"}),
                                                                                                     @{theory}))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CSub",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("ct",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("ct",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("ct",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cb",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mb(mb(mb(mu(call
                                                                    ("getBase",w64,
                                                                     var("v",@{typ Capability}),
                                                                     @{theory}),qTy),
                                                               close
                                                                 (var_w("v",64),
                                                                  mb(call
                                                                       ("CAPR",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (Capability \<times> state)"},
                                                                        var_w("cb",5),@{theory}),
                                                                     close
                                                                       (var("v0",@{typ Capability}),
                                                                        mb(mu(call
                                                                                ("getOffset",w64,
                                                                                 var("v0",
                                                                                     @{typ Capability}),
                                                                                 @{theory}),qTy),
                                                                           close
                                                                             (var_w("v0",64),
                                                                              mu(bop(Add,
                                                                                     var_w("v",64),
                                                                                     var_w("v0",64)),
                                                                                 qTy))))))),
                                                            close
                                                              (var_w("v",64),
                                                               mb(call
                                                                    ("CAPR",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (Capability \<times> state)"},
                                                                     var_w("ct",5),@{theory}),
                                                                  close
                                                                    (var("v0",@{typ Capability}),
                                                                     mb(mu(call
                                                                             ("getBase",w64,
                                                                              var("v0",
                                                                                  @{typ Capability}),
                                                                              @{theory}),qTy),
                                                                        close
                                                                          (var_w("v0",64),
                                                                           mu(bop(Sub,var_w("v",64),
                                                                                  var_w("v0",64)),
                                                                              qTy))))))),
                                                         close
                                                           (var_w("v",64),
                                                            mb(call
                                                                 ("CAPR",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (Capability \<times> state)"},
                                                                  var_w("ct",5),@{theory}),
                                                               close
                                                                 (var("v0",@{typ Capability}),
                                                                  mb(mu(call
                                                                          ("getOffset",w64,
                                                                           var("v0",
                                                                               @{typ Capability}),
                                                                           @{theory}),qTy),
                                                                     close
                                                                       (var_w("v0",64),
                                                                        mu(bop(Sub,var_w("v",64),
                                                                               var_w("v0",64)),qTy))))))),
                                                      close
                                                        (var_w("v",64),
                                                         mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                                                   close
                                                     (var("v",@{typ "64 word \<times> 5 word"}),
                                                      call
                                                        ("write'GPR",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         var("v",@{typ "64 word \<times> 5 word"}),
                                                         @{theory}))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CCheckPerm",
   close
     (tp[var_w("cs",5),var_w("rt",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cs",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cs",5)],@{theory}),
                                mb(call
                                     ("CAPR",
                                      @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                      var_w("cs",5),@{theory}),
                                   close
                                     (var("v",@{typ Capability}),
                                      mb(mb(mu(call
                                                 ("getTag",HOLogic.boolT,var("v",@{typ Capability}),
                                                  @{theory}),qTy),
                                            close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                         close
                                           (var_b"b",
                                            ite(var_b"b",
                                                call
                                                  ("SignalCapException",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},
                                                   tp[lc("capExcTag","CapExceptionType",@{theory}),
                                                      var_w("cs",5)],@{theory}),
                                                mb(call
                                                     ("CAPR",
                                                      @{typ
                                                      "state \<Rightarrow>
                                                       (Capability \<times> state)"},var_w("cs",5),
                                                      @{theory}),
                                                   close
                                                     (var("v",@{typ Capability}),
                                                      mb(mb(mb(mb(mb(mb(mu(call
                                                                             ("getPerms",
                                                                              @{typ Perms},
                                                                              var("v",
                                                                                  @{typ Capability}),
                                                                              @{theory}),qTy),
                                                                        close
                                                                          (var("v",@{typ Perms}),
                                                                           mu(call
                                                                                ("reg'Perms",w32,
                                                                                 var("v",
                                                                                     @{typ Perms}),
                                                                                 @{theory}),qTy))),
                                                                     close
                                                                       (var_w("v",32),
                                                                        mu(ex(var_w("v",32),ln 14,
                                                                              ln 0,
                                                                              (Word_Lib.mk_wordT 15)),
                                                                           qTy))),
                                                                  close
                                                                    (var_w("v",15),
                                                                     mb(call
                                                                          ("GPR",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (64 word \<times> state)"},
                                                                           var_w("rt",5),@{theory}),
                                                                        close
                                                                          (var_w("v0",64),
                                                                           mb(mu(ex(var_w("v0",64),
                                                                                    ln 14,ln 0,
                                                                                    (Word_Lib.mk_wordT 15)),
                                                                                 qTy),
                                                                              close
                                                                                (var_w("v0",15),
                                                                                 mu(bop(BAnd,
                                                                                        var_w("v",15),
                                                                                        var_w("v0",15)),
                                                                                    qTy))))))),
                                                               close
                                                                 (var_w("v",15),
                                                                  mb(call
                                                                       ("GPR",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (64 word \<times> state)"},
                                                                        var_w("rt",5),@{theory}),
                                                                     close
                                                                       (var_w("v0",64),
                                                                        mb(mu(ex(var_w("v0",64),
                                                                                 ln 14,ln 0,
                                                                                 (Word_Lib.mk_wordT 15)),
                                                                              qTy),
                                                                           close
                                                                             (var_w("v0",15),
                                                                              mu(eq(var_w("v",15),
                                                                                    var_w("v0",15)),
                                                                                 qTy))))))),
                                                            close
                                                              (var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                         close
                                                           (var_b"b",
                                                            ite(var_b"b",
                                                                call
                                                                  ("SignalCapException",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (unit \<times> state)"},
                                                                   tp[lc("capExcUser",
                                                                         "CapExceptionType",
                                                                         @{theory}),var_w("cs",5)],
                                                                   @{theory}),
                                                                mb(call
                                                                     ("CAPR",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (Capability \<times> state)"},
                                                                      var_w("cs",5),@{theory}),
                                                                   close
                                                                     (var("v",@{typ Capability}),
                                                                      mb(mb(mb(mb(mb(mb(mu(call
                                                                                             ("getUPerms",
                                                                                              @{typ UPerms},
                                                                                              var("v",
                                                                                                  @{typ Capability}),
                                                                                              @{theory}),
                                                                                           qTy),
                                                                                        close
                                                                                          (var("v",
                                                                                               @{typ UPerms}),
                                                                                           mu(call
                                                                                                ("reg'UPerms",
                                                                                                 w32,
                                                                                                 var("v",
                                                                                                     @{typ UPerms}),
                                                                                                 @{theory}),
                                                                                              qTy))),
                                                                                     close
                                                                                       (var_w("v",32),
                                                                                        mu(ex(var_w("v",32),
                                                                                              bop(Sub,
                                                                                                  const
                                                                                                    ("UPERMS",
                                                                                                     HOLogic.natT,
                                                                                                     @{theory}),
                                                                                                  ln
                                                                                                   1),
                                                                                              ln 0,
                                                                                              w16),
                                                                                           qTy))),
                                                                                  close
                                                                                    (var_w("v",16),
                                                                                     mb(call
                                                                                          ("GPR",
                                                                                           @{typ
                                                                                           "state \<Rightarrow>
                                                                                            (64 word \<times>
                                                                                             state)"},
                                                                                           var_w("rt",5),
                                                                                           @{theory}),
                                                                                        close
                                                                                          (var_w("v0",64),
                                                                                           mb(mu(ex(var_w("v0",64),
                                                                                                    bop(Add,
                                                                                                        const
                                                                                                          ("UPERMS",
                                                                                                           HOLogic.natT,
                                                                                                           @{theory}),
                                                                                                        ln
                                                                                                         14),
                                                                                                    ln
                                                                                                     15,
                                                                                                    w16),
                                                                                                 qTy),
                                                                                              close
                                                                                                (var_w("v0",16),
                                                                                                 mu(bop(BAnd,
                                                                                                        var_w("v",16),
                                                                                                        var_w("v0",16)),
                                                                                                    qTy))))))),
                                                                               close
                                                                                 (var_w("v",16),
                                                                                  mb(call
                                                                                       ("GPR",
                                                                                        @{typ
                                                                                        "state \<Rightarrow>
                                                                                         (64 word \<times>
                                                                                          state)"},
                                                                                        var_w("rt",5),
                                                                                        @{theory}),
                                                                                     close
                                                                                       (var_w("v0",64),
                                                                                        mb(mu(ex(var_w("v0",64),
                                                                                                 bop(Add,
                                                                                                     const
                                                                                                       ("UPERMS",
                                                                                                        HOLogic.natT,
                                                                                                        @{theory}),
                                                                                                     ln
                                                                                                      14),
                                                                                                 ln
                                                                                                  15,
                                                                                                 w16),
                                                                                              qTy),
                                                                                           close
                                                                                             (var_w("v0",16),
                                                                                              mu(eq(var_w("v",16),
                                                                                                    var_w("v0",16)),
                                                                                                 qTy))))))),
                                                                            close
                                                                              (var_b"v",
                                                                               mu(mop(Not,var_b"v"),
                                                                                  qTy))),
                                                                         close
                                                                           (var_b"b",
                                                                            ite(var_b"b",
                                                                                call
                                                                                  ("SignalCapException",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[lc("capExcUser",
                                                                                         "CapExceptionType",
                                                                                         @{theory}),
                                                                                      var_w("cs",5)],
                                                                                   @{theory}),
                                                                                mb(call
                                                                                     ("GPR",
                                                                                      @{typ
                                                                                      "state \<Rightarrow>
                                                                                       (64 word \<times>
                                                                                        state)"},
                                                                                      var_w("rt",5),
                                                                                      @{theory}),
                                                                                   close
                                                                                     (var_w("v",64),
                                                                                      mb(mb(mb(mu(ex(var_w("v",64),
                                                                                                     ln
                                                                                                      63,
                                                                                                     bop(Add,
                                                                                                         const
                                                                                                           ("UPERMS",
                                                                                                            HOLogic.natT,
                                                                                                            @{theory}),
                                                                                                         ln
                                                                                                          15),
                                                                                                     (Word_Lib.mk_wordT 33)),
                                                                                                  qTy),
                                                                                               close
                                                                                                 (var_w("v",33),
                                                                                                  mu(eq(var_w("v",33),
                                                                                                        lw(0,
                                                                                                           33)),
                                                                                                     qTy))),
                                                                                            close
                                                                                              (var_b"v",
                                                                                               mu(mop(Not,
                                                                                                      var_b"v"),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var_b"b",
                                                                                            ite(var_b"b",
                                                                                                call
                                                                                                  ("SignalCapException",
                                                                                                   @{typ
                                                                                                   "state \<Rightarrow>
                                                                                                    (unit \<times>
                                                                                                     state)"},
                                                                                                   tp[lc("capExcUser",
                                                                                                         "CapExceptionType",
                                                                                                         @{theory}),
                                                                                                      var_w("cs",5)],
                                                                                                   @{theory}),
                                                                                                mu(lu,
                                                                                                   qTy)))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CCheckType",
   close
     (tp[var_w("cs",5),var_w("cb",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cs",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cs",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cs",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mu(call
                                                           ("getTag",HOLogic.boolT,
                                                            var("v",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          call
                                                            ("SignalCapException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[lc("capExcTag","CapExceptionType",
                                                                   @{theory}),var_w("cs",5)],
                                                             @{theory}),
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mb(mu(call
                                                                           ("getTag",HOLogic.boolT,
                                                                            var("v",
                                                                                @{typ Capability}),
                                                                            @{theory}),qTy),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(mop(Not,var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("SignalCapException",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[lc("capExcTag",
                                                                                   "CapExceptionType",
                                                                                   @{theory}),
                                                                                var_w("cb",5)],
                                                                             @{theory}),
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cs",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mu(call
                                                                                           ("getSealed",
                                                                                            HOLogic.boolT,
                                                                                            var("v",
                                                                                                @{typ Capability}),
                                                                                            @{theory}),
                                                                                         qTy),
                                                                                      close
                                                                                        (var_b"v",
                                                                                         mu(mop(Not,
                                                                                                var_b"v"),
                                                                                            qTy))),
                                                                                   close
                                                                                     (var_b"b",
                                                                                      ite(var_b"b",
                                                                                          call
                                                                                            ("SignalCapException",
                                                                                             @{typ
                                                                                             "state \<Rightarrow>
                                                                                              (unit \<times>
                                                                                               state)"},
                                                                                             tp[lc("capExcSeal",
                                                                                                   "CapExceptionType",
                                                                                                   @{theory}),
                                                                                                var_w("cs",5)],
                                                                                             @{theory}),
                                                                                          mb(call
                                                                                               ("CAPR",
                                                                                                @{typ
                                                                                                "state \<Rightarrow>
                                                                                                 (Capability \<times>
                                                                                                  state)"},
                                                                                                var_w("cb",5),
                                                                                                @{theory}),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ Capability}),
                                                                                                mb(mb(mu(call
                                                                                                           ("getSealed",
                                                                                                            HOLogic.boolT,
                                                                                                            var("v",
                                                                                                                @{typ Capability}),
                                                                                                            @{theory}),
                                                                                                         qTy),
                                                                                                      close
                                                                                                        (var_b"v",
                                                                                                         mu(mop(Not,
                                                                                                                var_b"v"),
                                                                                                            qTy))),
                                                                                                   close
                                                                                                     (var_b"b",
                                                                                                      ite(var_b"b",
                                                                                                          call
                                                                                                            ("SignalCapException",
                                                                                                             @{typ
                                                                                                             "state \<Rightarrow>
                                                                                                              (unit \<times>
                                                                                                               state)"},
                                                                                                             tp[lc("capExcSeal",
                                                                                                                   "CapExceptionType",
                                                                                                                   @{theory}),
                                                                                                                var_w("cb",5)],
                                                                                                             @{theory}),
                                                                                                          mb(call
                                                                                                               ("CAPR",
                                                                                                                @{typ
                                                                                                                "state \<Rightarrow>
                                                                                                                 (Capability \<times>
                                                                                                                  state)"},
                                                                                                                var_w("cs",5),
                                                                                                                @{theory}),
                                                                                                             close
                                                                                                               (var("v",
                                                                                                                    @{typ Capability}),
                                                                                                                mb(mb(mb(mu(call
                                                                                                                              ("getType",
                                                                                                                               (Word_Lib.mk_wordT 24),
                                                                                                                               var("v",
                                                                                                                                   @{typ Capability}),
                                                                                                                               @{theory}),
                                                                                                                            qTy),
                                                                                                                         close
                                                                                                                           (var_w("v",24),
                                                                                                                            mb(call
                                                                                                                                 ("CAPR",
                                                                                                                                  @{typ
                                                                                                                                  "state \<Rightarrow>
                                                                                                                                   (Capability \<times>
                                                                                                                                    state)"},
                                                                                                                                  var_w("cb",5),
                                                                                                                                  @{theory}),
                                                                                                                               close
                                                                                                                                 (var("v0",
                                                                                                                                      @{typ Capability}),
                                                                                                                                  mb(mu(call
                                                                                                                                          ("getType",
                                                                                                                                           (Word_Lib.mk_wordT 24),
                                                                                                                                           var("v0",
                                                                                                                                               @{typ Capability}),
                                                                                                                                           @{theory}),
                                                                                                                                        qTy),
                                                                                                                                     close
                                                                                                                                       (var_w("v0",24),
                                                                                                                                        mu(eq(var_w("v",24),
                                                                                                                                              var_w("v0",24)),
                                                                                                                                           qTy))))))),
                                                                                                                      close
                                                                                                                        (var_b"v",
                                                                                                                         mu(mop(Not,
                                                                                                                                var_b"v"),
                                                                                                                            qTy))),
                                                                                                                   close
                                                                                                                     (var_b"b",
                                                                                                                      ite(var_b"b",
                                                                                                                          call
                                                                                                                            ("SignalCapException",
                                                                                                                             @{typ
                                                                                                                             "state \<Rightarrow>
                                                                                                                              (unit \<times>
                                                                                                                               state)"},
                                                                                                                             tp[lc("capExcType",
                                                                                                                                   "CapExceptionType",
                                                                                                                                   @{theory}),
                                                                                                                                var_w("cs",5)],
                                                                                                                             @{theory}),
                                                                                                                          mu(lu,
                                                                                                                             qTy)))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CFromPtr",
   close
     (tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("GPR",
                                                @{typ
                                                "state \<Rightarrow> (64 word \<times> state)"},
                                                var_w("rt",5),@{theory}),
                                             close
                                               (var_w("v",64),
                                                mb(mu(eq(var_w("v",64),lw(0,64)),qTy),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          call
                                                            ("write'CAPR",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[const
                                                                  ("nullCap",@{typ Capability},
                                                                   @{theory}),var_w("cd",5)],
                                                             @{theory}),
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mb(mu(call
                                                                           ("getTag",HOLogic.boolT,
                                                                            var("v",
                                                                                @{typ Capability}),
                                                                            @{theory}),qTy),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(mop(Not,var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("SignalCapException",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[lc("capExcTag",
                                                                                   "CapExceptionType",
                                                                                   @{theory}),
                                                                                var_w("cb",5)],
                                                                             @{theory}),
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cb",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mu(call
                                                                                        ("getSealed",
                                                                                         HOLogic.boolT,
                                                                                         var("v",
                                                                                             @{typ Capability}),
                                                                                         @{theory}),
                                                                                      qTy),
                                                                                   close
                                                                                     (var_b"b",
                                                                                      ite(var_b"b",
                                                                                          call
                                                                                            ("SignalCapException",
                                                                                             @{typ
                                                                                             "state \<Rightarrow>
                                                                                              (unit \<times>
                                                                                               state)"},
                                                                                             tp[lc("capExcSeal",
                                                                                                   "CapExceptionType",
                                                                                                   @{theory}),
                                                                                                var_w("cb",5)],
                                                                                             @{theory}),
                                                                                          mb(call
                                                                                               ("CAPR",
                                                                                                @{typ
                                                                                                "state \<Rightarrow>
                                                                                                 (Capability \<times>
                                                                                                  state)"},
                                                                                                var_w("cb",5),
                                                                                                @{theory}),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ Capability}),
                                                                                                mb(mb(mb(mb(call
                                                                                                              ("GPR",
                                                                                                               @{typ
                                                                                                               "state \<Rightarrow>
                                                                                                                (64 word \<times>
                                                                                                                 state)"},
                                                                                                               var_w("rt",5),
                                                                                                               @{theory}),
                                                                                                            close
                                                                                                              (var_w("v0",64),
                                                                                                               mu(tp[var("v",
                                                                                                                         @{typ Capability}),
                                                                                                                     var_w("v0",64)],
                                                                                                                  qTy))),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ
                                                                                                                "Capability \<times>
                                                                                                                 64 word"}),
                                                                                                            mu(call
                                                                                                                 ("canRepOffset",
                                                                                                                  HOLogic.boolT,
                                                                                                                  var("v",
                                                                                                                      @{typ
                                                                                                                      "Capability \<times>
                                                                                                                       64 word"}),
                                                                                                                  @{theory}),
                                                                                                               qTy))),
                                                                                                      close
                                                                                                        (var_b"v",
                                                                                                         mu(mop(Not,
                                                                                                                var_b"v"),
                                                                                                            qTy))),
                                                                                                   close
                                                                                                     (var_b"b",
                                                                                                      ite(var_b"b",
                                                                                                          mb(call
                                                                                                               ("CAPR",
                                                                                                                @{typ
                                                                                                                "state \<Rightarrow>
                                                                                                                 (Capability \<times>
                                                                                                                  state)"},
                                                                                                                var_w("cb",5),
                                                                                                                @{theory}),
                                                                                                             close
                                                                                                               (var("v",
                                                                                                                    @{typ Capability}),
                                                                                                                mb(mb(mb(mb(mb(mb(mu(call
                                                                                                                                       ("getBase",
                                                                                                                                        w64,
                                                                                                                                        var("v",
                                                                                                                                            @{typ Capability}),
                                                                                                                                        @{theory}),
                                                                                                                                     qTy),
                                                                                                                                  close
                                                                                                                                    (var_w("v",64),
                                                                                                                                     mb(call
                                                                                                                                          ("GPR",
                                                                                                                                           @{typ
                                                                                                                                           "state \<Rightarrow>
                                                                                                                                            (64 word \<times>
                                                                                                                                             state)"},
                                                                                                                                           var_w("rt",5),
                                                                                                                                           @{theory}),
                                                                                                                                        close
                                                                                                                                          (var_w("v0",64),
                                                                                                                                           mu(bop(Add,
                                                                                                                                                  var_w("v",64),
                                                                                                                                                  var_w("v0",64)),
                                                                                                                                              qTy))))),
                                                                                                                               close
                                                                                                                                 (var_w("v",64),
                                                                                                                                  mu(tp[const
                                                                                                                                          ("nullCap",
                                                                                                                                           @{typ Capability},
                                                                                                                                           @{theory}),
                                                                                                                                        var_w("v",64)],
                                                                                                                                     qTy))),
                                                                                                                            close
                                                                                                                              (var("v",
                                                                                                                                   @{typ
                                                                                                                                   "Capability \<times>
                                                                                                                                    64 word"}),
                                                                                                                               mu(call
                                                                                                                                    ("setOffset",
                                                                                                                                     @{typ Capability},
                                                                                                                                     var("v",
                                                                                                                                         @{typ
                                                                                                                                         "Capability \<times>
                                                                                                                                          64 word"}),
                                                                                                                                     @{theory}),
                                                                                                                                  qTy))),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ Capability}),
                                                                                                                            mu(tp[var("v",
                                                                                                                                      @{typ Capability}),
                                                                                                                                  var_w("cd",5)],
                                                                                                                               qTy))),
                                                                                                                      close
                                                                                                                        (var("v",
                                                                                                                             @{typ
                                                                                                                             "Capability \<times>
                                                                                                                              5 word"}),
                                                                                                                         call
                                                                                                                           ("write'CAPR",
                                                                                                                            @{typ
                                                                                                                            "state \<Rightarrow>
                                                                                                                             (unit \<times>
                                                                                                                              state)"},
                                                                                                                            var("v",
                                                                                                                                @{typ
                                                                                                                                "Capability \<times>
                                                                                                                                 5 word"}),
                                                                                                                            @{theory}))),
                                                                                                                   close
                                                                                                                     (var_a
                                                                                                                        HOLogic.unitT,
                                                                                                                      mb(call
                                                                                                                           ("CAPR",
                                                                                                                            @{typ
                                                                                                                            "state \<Rightarrow>
                                                                                                                             (Capability \<times>
                                                                                                                              state)"},
                                                                                                                            var_w("cd",5),
                                                                                                                            @{theory}),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ Capability}),
                                                                                                                            mb(mb(const
                                                                                                                                    ("PC",
                                                                                                                                     @{typ
                                                                                                                                     "state \<Rightarrow>
                                                                                                                                      (64 word \<times>
                                                                                                                                       state)"},
                                                                                                                                     @{theory}),
                                                                                                                                  close
                                                                                                                                    (var_w("v0",64),
                                                                                                                                     mu(tp[var("v",
                                                                                                                                               @{typ Capability}),
                                                                                                                                           var_w("v0",64)],
                                                                                                                                        qTy))),
                                                                                                                               close
                                                                                                                                 (var("v",
                                                                                                                                      @{typ
                                                                                                                                      "Capability \<times>
                                                                                                                                       64 word"}),
                                                                                                                                  call
                                                                                                                                    ("watchOOB",
                                                                                                                                     @{typ
                                                                                                                                     "state \<Rightarrow>
                                                                                                                                      (unit \<times>
                                                                                                                                       state)"},
                                                                                                                                     var("v",
                                                                                                                                         @{typ
                                                                                                                                         "Capability \<times>
                                                                                                                                          64 word"}),
                                                                                                                                     @{theory}))))))))),
                                                                                                          mb(call
                                                                                                               ("CAPR",
                                                                                                                @{typ
                                                                                                                "state \<Rightarrow>
                                                                                                                 (Capability \<times>
                                                                                                                  state)"},
                                                                                                                var_w("cb",5),
                                                                                                                @{theory}),
                                                                                                             close
                                                                                                               (var("v",
                                                                                                                    @{typ Capability}),
                                                                                                                mb(mb(mb(mb(mb(call
                                                                                                                                 ("GPR",
                                                                                                                                  @{typ
                                                                                                                                  "state \<Rightarrow>
                                                                                                                                   (64 word \<times>
                                                                                                                                    state)"},
                                                                                                                                  var_w("rt",5),
                                                                                                                                  @{theory}),
                                                                                                                               close
                                                                                                                                 (var_w("v0",64),
                                                                                                                                  mu(tp[var("v",
                                                                                                                                            @{typ Capability}),
                                                                                                                                        var_w("v0",64)],
                                                                                                                                     qTy))),
                                                                                                                            close
                                                                                                                              (var("v",
                                                                                                                                   @{typ
                                                                                                                                   "Capability \<times>
                                                                                                                                    64 word"}),
                                                                                                                               mu(call
                                                                                                                                    ("setOffset",
                                                                                                                                     @{typ Capability},
                                                                                                                                     var("v",
                                                                                                                                         @{typ
                                                                                                                                         "Capability \<times>
                                                                                                                                          64 word"}),
                                                                                                                                     @{theory}),
                                                                                                                                  qTy))),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ Capability}),
                                                                                                                            mu(tp[var("v",
                                                                                                                                      @{typ Capability}),
                                                                                                                                  var_w("cd",5)],
                                                                                                                               qTy))),
                                                                                                                      close
                                                                                                                        (var("v",
                                                                                                                             @{typ
                                                                                                                             "Capability \<times>
                                                                                                                              5 word"}),
                                                                                                                         call
                                                                                                                           ("write'CAPR",
                                                                                                                            @{typ
                                                                                                                            "state \<Rightarrow>
                                                                                                                             (unit \<times>
                                                                                                                              state)"},
                                                                                                                            var("v",
                                                                                                                                @{typ
                                                                                                                                "Capability \<times>
                                                                                                                                 5 word"}),
                                                                                                                            @{theory}))),
                                                                                                                   close
                                                                                                                     (var_a
                                                                                                                        HOLogic.unitT,
                                                                                                                      mb(call
                                                                                                                           ("CAPR",
                                                                                                                            @{typ
                                                                                                                            "state \<Rightarrow>
                                                                                                                             (Capability \<times>
                                                                                                                              state)"},
                                                                                                                            var_w("cd",5),
                                                                                                                            @{theory}),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ Capability}),
                                                                                                                            mb(mb(const
                                                                                                                                    ("PC",
                                                                                                                                     @{typ
                                                                                                                                     "state \<Rightarrow>
                                                                                                                                      (64 word \<times>
                                                                                                                                       state)"},
                                                                                                                                     @{theory}),
                                                                                                                                  close
                                                                                                                                    (var_w("v0",64),
                                                                                                                                     mu(tp[var("v",
                                                                                                                                               @{typ Capability}),
                                                                                                                                           var_w("v0",64)],
                                                                                                                                        qTy))),
                                                                                                                               close
                                                                                                                                 (var("v",
                                                                                                                                      @{typ
                                                                                                                                      "Capability \<times>
                                                                                                                                       64 word"}),
                                                                                                                                  call
                                                                                                                                    ("watchOOB",
                                                                                                                                     @{typ
                                                                                                                                     "state \<Rightarrow>
                                                                                                                                      (unit \<times>
                                                                                                                                       state)"},
                                                                                                                                     var("v",
                                                                                                                                         @{typ
                                                                                                                                         "Capability \<times>
                                                                                                                                          64 word"}),
                                                                                                                                     @{theory}))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CToPtr",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("ct",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("ct",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("ct",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("ct",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mu(call
                                                           ("getTag",HOLogic.boolT,
                                                            var("v",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          call
                                                            ("SignalCapException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[lc("capExcTag","CapExceptionType",
                                                                   @{theory}),var_w("ct",5)],
                                                             @{theory}),
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mb(mu(call
                                                                           ("getTag",HOLogic.boolT,
                                                                            var("v",
                                                                                @{typ Capability}),
                                                                            @{theory}),qTy),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(mop(Not,var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("write'GPR",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[lw(0,64),
                                                                                var_w("rd",5)],
                                                                             @{theory}),
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cb",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mb(mb(mu(call
                                                                                                 ("getBase",
                                                                                                  w64,
                                                                                                  var("v",
                                                                                                      @{typ Capability}),
                                                                                                  @{theory}),
                                                                                               qTy),
                                                                                            close
                                                                                              (var_w("v",64),
                                                                                               mb(call
                                                                                                    ("CAPR",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (Capability \<times>
                                                                                                       state)"},
                                                                                                     var_w("cb",5),
                                                                                                     @{theory}),
                                                                                                  close
                                                                                                    (var("v0",
                                                                                                         @{typ Capability}),
                                                                                                     mb(mu(call
                                                                                                             ("getOffset",
                                                                                                              w64,
                                                                                                              var("v0",
                                                                                                                  @{typ Capability}),
                                                                                                              @{theory}),
                                                                                                           qTy),
                                                                                                        close
                                                                                                          (var_w("v0",64),
                                                                                                           mu(bop(Add,
                                                                                                                  var_w("v",64),
                                                                                                                  var_w("v0",64)),
                                                                                                              qTy))))))),
                                                                                         close
                                                                                           (var_w("v",64),
                                                                                            mb(call
                                                                                                 ("CAPR",
                                                                                                  @{typ
                                                                                                  "state \<Rightarrow>
                                                                                                   (Capability \<times>
                                                                                                    state)"},
                                                                                                  var_w("ct",5),
                                                                                                  @{theory}),
                                                                                               close
                                                                                                 (var("v0",
                                                                                                      @{typ Capability}),
                                                                                                  mb(mu(call
                                                                                                          ("getBase",
                                                                                                           w64,
                                                                                                           var("v0",
                                                                                                               @{typ Capability}),
                                                                                                           @{theory}),
                                                                                                        qTy),
                                                                                                     close
                                                                                                       (var_w("v0",64),
                                                                                                        mu(bop(Sub,
                                                                                                               var_w("v",64),
                                                                                                               var_w("v0",64)),
                                                                                                           qTy))))))),
                                                                                      close
                                                                                        (var_w("v",64),
                                                                                         mu(tp[var_w("v",64),
                                                                                               var_w("rd",5)],
                                                                                            qTy))),
                                                                                   close
                                                                                     (var("v",
                                                                                          @{typ
                                                                                          "64 word \<times>
                                                                                           5 word"}),
                                                                                      call
                                                                                        ("write'GPR",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         var("v",
                                                                                             @{typ
                                                                                             "64 word \<times>
                                                                                              5 word"}),
                                                                                         @{theory}))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CPtrCmp",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("ct",5),var("t",@{typ CmpType})],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("ct",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("ct",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cb",5),@{theory}),
                                             close
                                               (var("cap_cb",@{typ Capability}),
                                                mb(call
                                                     ("CAPR",
                                                      @{typ
                                                      "state \<Rightarrow>
                                                       (Capability \<times> state)"},var_w("ct",5),
                                                      @{theory}),
                                                   close
                                                     (var("cap_ct",@{typ Capability}),
                                                      mn(lf,
                                                         mn(lx HOLogic.boolT,
                                                            mn(lx HOLogic.boolT,
                                                               mn(lx HOLogic.boolT,
                                                                  mn(lx HOLogic.boolT,
                                                                     mb(ite(mop(Not,
                                                                                eq(call
                                                                                     ("getTag",
                                                                                      HOLogic.boolT,
                                                                                      var("cap_cb",
                                                                                          @{typ Capability}),
                                                                                      @{theory}),
                                                                                   call
                                                                                     ("getTag",
                                                                                      HOLogic.boolT,
                                                                                      var("cap_ct",
                                                                                          @{typ Capability}),
                                                                                      @{theory}))),
                                                                            ite(call
                                                                                  ("getTag",
                                                                                   HOLogic.boolT,
                                                                                   var("cap_cb",
                                                                                       @{typ Capability}),
                                                                                   @{theory}),
                                                                                mb(mw(close
                                                                                        (var("s",
                                                                                             @{typ
                                                                                             "bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              state"}),
                                                                                         tp[mop(Fst,
                                                                                                var("s",
                                                                                                    @{typ
                                                                                                    "bool \<times>
                                                                                                     bool \<times>
                                                                                                     bool \<times>
                                                                                                     bool \<times>
                                                                                                     bool \<times>
                                                                                                     state"})),
                                                                                            let'
                                                                                              (var("s",
                                                                                                   @{typ
                                                                                                   "bool \<times>
                                                                                                    bool \<times>
                                                                                                    bool \<times>
                                                                                                    bool \<times>
                                                                                                    state"}),
                                                                                               mop(Snd,
                                                                                                   var("s",
                                                                                                       @{typ
                                                                                                       "bool \<times>
                                                                                                        bool \<times>
                                                                                                        bool \<times>
                                                                                                        bool \<times>
                                                                                                        bool \<times>
                                                                                                        state"})),
                                                                                               tp[mop(Fst,
                                                                                                      var("s",
                                                                                                          @{typ
                                                                                                          "bool \<times>
                                                                                                           bool \<times>
                                                                                                           bool \<times>
                                                                                                           bool \<times>
                                                                                                           state"})),
                                                                                                  let'
                                                                                                    (var("s",
                                                                                                         @{typ
                                                                                                         "bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          state"}),
                                                                                                     mop(Snd,
                                                                                                         var("s",
                                                                                                             @{typ
                                                                                                             "bool \<times>
                                                                                                              bool \<times>
                                                                                                              bool \<times>
                                                                                                              bool \<times>
                                                                                                              state"})),
                                                                                                     tp[mop(Fst,
                                                                                                            var("s",
                                                                                                                @{typ
                                                                                                                "bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 state"})),
                                                                                                        lt,
                                                                                                        mop(Snd,
                                                                                                            mop(Snd,
                                                                                                                var("s",
                                                                                                                    @{typ
                                                                                                                    "bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     state"})))])])])),
                                                                                   close
                                                                                     (var_a
                                                                                        HOLogic.unitT,
                                                                                      mb(mw(close
                                                                                              (var("s",
                                                                                                   @{typ
                                                                                                   "bool \<times>
                                                                                                    bool \<times>
                                                                                                    bool \<times>
                                                                                                    bool \<times>
                                                                                                    bool \<times>
                                                                                                    state"}),
                                                                                               tp[mop(Fst,
                                                                                                      var("s",
                                                                                                          @{typ
                                                                                                          "bool \<times>
                                                                                                           bool \<times>
                                                                                                           bool \<times>
                                                                                                           bool \<times>
                                                                                                           bool \<times>
                                                                                                           state"})),
                                                                                                  let'
                                                                                                    (var("s",
                                                                                                         @{typ
                                                                                                         "bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          state"}),
                                                                                                     mop(Snd,
                                                                                                         var("s",
                                                                                                             @{typ
                                                                                                             "bool \<times>
                                                                                                              bool \<times>
                                                                                                              bool \<times>
                                                                                                              bool \<times>
                                                                                                              bool \<times>
                                                                                                              state"})),
                                                                                                     tp[mop(Fst,
                                                                                                            var("s",
                                                                                                                @{typ
                                                                                                                "bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 state"})),
                                                                                                        lt,
                                                                                                        mop(Snd,
                                                                                                            mop(Snd,
                                                                                                                var("s",
                                                                                                                    @{typ
                                                                                                                    "bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     state"})))])])),
                                                                                         close
                                                                                           (var_a
                                                                                              HOLogic.unitT,
                                                                                            mb(mw(close
                                                                                                    (var("s",
                                                                                                         @{typ
                                                                                                         "bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          state"}),
                                                                                                     tp[mop(Fst,
                                                                                                            var("s",
                                                                                                                @{typ
                                                                                                                "bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 state"})),
                                                                                                        lf,
                                                                                                        mop(Snd,
                                                                                                            mop(Snd,
                                                                                                                var("s",
                                                                                                                    @{typ
                                                                                                                    "bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     state"})))])),
                                                                                               close
                                                                                                 (var_a
                                                                                                    HOLogic.unitT,
                                                                                                  mw(close
                                                                                                       (var("s",
                                                                                                            @{typ
                                                                                                            "bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             state"}),
                                                                                                        tp[lf,
                                                                                                           mop(Snd,
                                                                                                               var("s",
                                                                                                                   @{typ
                                                                                                                   "bool \<times>
                                                                                                                    bool \<times>
                                                                                                                    bool \<times>
                                                                                                                    bool \<times>
                                                                                                                    bool \<times>
                                                                                                                    state"}))])))))))),
                                                                                mb(mw(close
                                                                                        (var("s",
                                                                                             @{typ
                                                                                             "bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              state"}),
                                                                                         tp[mop(Fst,
                                                                                                var("s",
                                                                                                    @{typ
                                                                                                    "bool \<times>
                                                                                                     bool \<times>
                                                                                                     bool \<times>
                                                                                                     bool \<times>
                                                                                                     bool \<times>
                                                                                                     state"})),
                                                                                            let'
                                                                                              (var("s",
                                                                                                   @{typ
                                                                                                   "bool \<times>
                                                                                                    bool \<times>
                                                                                                    bool \<times>
                                                                                                    bool \<times>
                                                                                                    state"}),
                                                                                               mop(Snd,
                                                                                                   var("s",
                                                                                                       @{typ
                                                                                                       "bool \<times>
                                                                                                        bool \<times>
                                                                                                        bool \<times>
                                                                                                        bool \<times>
                                                                                                        bool \<times>
                                                                                                        state"})),
                                                                                               tp[mop(Fst,
                                                                                                      var("s",
                                                                                                          @{typ
                                                                                                          "bool \<times>
                                                                                                           bool \<times>
                                                                                                           bool \<times>
                                                                                                           bool \<times>
                                                                                                           state"})),
                                                                                                  let'
                                                                                                    (var("s",
                                                                                                         @{typ
                                                                                                         "bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          state"}),
                                                                                                     mop(Snd,
                                                                                                         var("s",
                                                                                                             @{typ
                                                                                                             "bool \<times>
                                                                                                              bool \<times>
                                                                                                              bool \<times>
                                                                                                              bool \<times>
                                                                                                              state"})),
                                                                                                     tp[mop(Fst,
                                                                                                            var("s",
                                                                                                                @{typ
                                                                                                                "bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 state"})),
                                                                                                        lf,
                                                                                                        mop(Snd,
                                                                                                            mop(Snd,
                                                                                                                var("s",
                                                                                                                    @{typ
                                                                                                                    "bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     state"})))])])])),
                                                                                   close
                                                                                     (var_a
                                                                                        HOLogic.unitT,
                                                                                      mb(mw(close
                                                                                              (var("s",
                                                                                                   @{typ
                                                                                                   "bool \<times>
                                                                                                    bool \<times>
                                                                                                    bool \<times>
                                                                                                    bool \<times>
                                                                                                    bool \<times>
                                                                                                    state"}),
                                                                                               tp[mop(Fst,
                                                                                                      var("s",
                                                                                                          @{typ
                                                                                                          "bool \<times>
                                                                                                           bool \<times>
                                                                                                           bool \<times>
                                                                                                           bool \<times>
                                                                                                           bool \<times>
                                                                                                           state"})),
                                                                                                  let'
                                                                                                    (var("s",
                                                                                                         @{typ
                                                                                                         "bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          state"}),
                                                                                                     mop(Snd,
                                                                                                         var("s",
                                                                                                             @{typ
                                                                                                             "bool \<times>
                                                                                                              bool \<times>
                                                                                                              bool \<times>
                                                                                                              bool \<times>
                                                                                                              bool \<times>
                                                                                                              state"})),
                                                                                                     tp[mop(Fst,
                                                                                                            var("s",
                                                                                                                @{typ
                                                                                                                "bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 state"})),
                                                                                                        lf,
                                                                                                        mop(Snd,
                                                                                                            mop(Snd,
                                                                                                                var("s",
                                                                                                                    @{typ
                                                                                                                    "bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     state"})))])])),
                                                                                         close
                                                                                           (var_a
                                                                                              HOLogic.unitT,
                                                                                            mb(mw(close
                                                                                                    (var("s",
                                                                                                         @{typ
                                                                                                         "bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          state"}),
                                                                                                     tp[mop(Fst,
                                                                                                            var("s",
                                                                                                                @{typ
                                                                                                                "bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 bool \<times>
                                                                                                                 state"})),
                                                                                                        lt,
                                                                                                        mop(Snd,
                                                                                                            mop(Snd,
                                                                                                                var("s",
                                                                                                                    @{typ
                                                                                                                    "bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     state"})))])),
                                                                                               close
                                                                                                 (var_a
                                                                                                    HOLogic.unitT,
                                                                                                  mw(close
                                                                                                       (var("s",
                                                                                                            @{typ
                                                                                                            "bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             state"}),
                                                                                                        tp[lt,
                                                                                                           mop(Snd,
                                                                                                               var("s",
                                                                                                                   @{typ
                                                                                                                   "bool \<times>
                                                                                                                    bool \<times>
                                                                                                                    bool \<times>
                                                                                                                    bool \<times>
                                                                                                                    bool \<times>
                                                                                                                    state"}))]))))))))),
                                                                            let'
                                                                              (var_w("cursor1",64),
                                                                               bop(Add,
                                                                                   call
                                                                                     ("getBase",w64,
                                                                                      var("cap_cb",
                                                                                          @{typ Capability}),
                                                                                      @{theory}),
                                                                                   call
                                                                                     ("getOffset",
                                                                                      w64,
                                                                                      var("cap_cb",
                                                                                          @{typ Capability}),
                                                                                      @{theory})),
                                                                               let'
                                                                                 (var_w("cursor2",64),
                                                                                  bop(Add,
                                                                                      call
                                                                                        ("getBase",
                                                                                         w64,
                                                                                         var("cap_ct",
                                                                                             @{typ Capability}),
                                                                                         @{theory}),
                                                                                      call
                                                                                        ("getOffset",
                                                                                         w64,
                                                                                         var("cap_ct",
                                                                                             @{typ Capability}),
                                                                                         @{theory})),
                                                                                  mb(mw(close
                                                                                          (var("s",
                                                                                               @{typ
                                                                                               "bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                state"}),
                                                                                           tp[mop(Fst,
                                                                                                  var("s",
                                                                                                      @{typ
                                                                                                      "bool \<times>
                                                                                                       bool \<times>
                                                                                                       bool \<times>
                                                                                                       bool \<times>
                                                                                                       bool \<times>
                                                                                                       state"})),
                                                                                              let'
                                                                                                (var("s",
                                                                                                     @{typ
                                                                                                     "bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      state"}),
                                                                                                 mop(Snd,
                                                                                                     var("s",
                                                                                                         @{typ
                                                                                                         "bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          bool \<times>
                                                                                                          state"})),
                                                                                                 tp[mop(Fst,
                                                                                                        var("s",
                                                                                                            @{typ
                                                                                                            "bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             state"})),
                                                                                                    let'
                                                                                                      (var("s",
                                                                                                           @{typ
                                                                                                           "bool \<times>
                                                                                                            bool \<times>
                                                                                                            bool \<times>
                                                                                                            state"}),
                                                                                                       mop(Snd,
                                                                                                           var("s",
                                                                                                               @{typ
                                                                                                               "bool \<times>
                                                                                                                bool \<times>
                                                                                                                bool \<times>
                                                                                                                bool \<times>
                                                                                                                state"})),
                                                                                                       tp[mop(Fst,
                                                                                                              var("s",
                                                                                                                  @{typ
                                                                                                                  "bool \<times>
                                                                                                                   bool \<times>
                                                                                                                   bool \<times>
                                                                                                                   state"})),
                                                                                                          let'
                                                                                                            (var("s",
                                                                                                                 @{typ
                                                                                                                 "bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  state"}),
                                                                                                             mop(Snd,
                                                                                                                 var("s",
                                                                                                                     @{typ
                                                                                                                     "bool \<times>
                                                                                                                      bool \<times>
                                                                                                                      bool \<times>
                                                                                                                      state"})),
                                                                                                             tp[mop(Fst,
                                                                                                                    var("s",
                                                                                                                        @{typ
                                                                                                                        "bool \<times>
                                                                                                                         bool \<times>
                                                                                                                         state"})),
                                                                                                                eq(var_w("cursor1",64),
                                                                                                                   var_w("cursor2",64)),
                                                                                                                mop(Snd,
                                                                                                                    mop(Snd,
                                                                                                                        var("s",
                                                                                                                            @{typ
                                                                                                                            "bool \<times>
                                                                                                                             bool \<times>
                                                                                                                             state"})))])])])])),
                                                                                     close
                                                                                       (var_a
                                                                                          HOLogic.unitT,
                                                                                        mb(mw(close
                                                                                                (var("s",
                                                                                                     @{typ
                                                                                                     "bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      state"}),
                                                                                                 tp[mop(Fst,
                                                                                                        var("s",
                                                                                                            @{typ
                                                                                                            "bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             state"})),
                                                                                                    let'
                                                                                                      (var("s",
                                                                                                           @{typ
                                                                                                           "bool \<times>
                                                                                                            bool \<times>
                                                                                                            bool \<times>
                                                                                                            bool \<times>
                                                                                                            state"}),
                                                                                                       mop(Snd,
                                                                                                           var("s",
                                                                                                               @{typ
                                                                                                               "bool \<times>
                                                                                                                bool \<times>
                                                                                                                bool \<times>
                                                                                                                bool \<times>
                                                                                                                bool \<times>
                                                                                                                state"})),
                                                                                                       tp[mop(Fst,
                                                                                                              var("s",
                                                                                                                  @{typ
                                                                                                                  "bool \<times>
                                                                                                                   bool \<times>
                                                                                                                   bool \<times>
                                                                                                                   bool \<times>
                                                                                                                   state"})),
                                                                                                          let'
                                                                                                            (var("s",
                                                                                                                 @{typ
                                                                                                                 "bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  state"}),
                                                                                                             mop(Snd,
                                                                                                                 var("s",
                                                                                                                     @{typ
                                                                                                                     "bool \<times>
                                                                                                                      bool \<times>
                                                                                                                      bool \<times>
                                                                                                                      bool \<times>
                                                                                                                      state"})),
                                                                                                             tp[mop(Fst,
                                                                                                                    var("s",
                                                                                                                        @{typ
                                                                                                                        "bool \<times>
                                                                                                                         bool \<times>
                                                                                                                         bool \<times>
                                                                                                                         state"})),
                                                                                                                bop(Gt,
                                                                                                                    var_w("cursor1",64),
                                                                                                                    var_w("cursor2",64)),
                                                                                                                mop(Snd,
                                                                                                                    mop(Snd,
                                                                                                                        var("s",
                                                                                                                            @{typ
                                                                                                                            "bool \<times>
                                                                                                                             bool \<times>
                                                                                                                             bool \<times>
                                                                                                                             state"})))])])])),
                                                                                           close
                                                                                             (var_a
                                                                                                HOLogic.unitT,
                                                                                              mb(mw(close
                                                                                                      (var("s",
                                                                                                           @{typ
                                                                                                           "bool \<times>
                                                                                                            bool \<times>
                                                                                                            bool \<times>
                                                                                                            bool \<times>
                                                                                                            bool \<times>
                                                                                                            state"}),
                                                                                                       tp[mop(Fst,
                                                                                                              var("s",
                                                                                                                  @{typ
                                                                                                                  "bool \<times>
                                                                                                                   bool \<times>
                                                                                                                   bool \<times>
                                                                                                                   bool \<times>
                                                                                                                   bool \<times>
                                                                                                                   state"})),
                                                                                                          let'
                                                                                                            (var("s",
                                                                                                                 @{typ
                                                                                                                 "bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  state"}),
                                                                                                             mop(Snd,
                                                                                                                 var("s",
                                                                                                                     @{typ
                                                                                                                     "bool \<times>
                                                                                                                      bool \<times>
                                                                                                                      bool \<times>
                                                                                                                      bool \<times>
                                                                                                                      bool \<times>
                                                                                                                      state"})),
                                                                                                             tp[mop(Fst,
                                                                                                                    var("s",
                                                                                                                        @{typ
                                                                                                                        "bool \<times>
                                                                                                                         bool \<times>
                                                                                                                         bool \<times>
                                                                                                                         bool \<times>
                                                                                                                         state"})),
                                                                                                                bop(Ugt,
                                                                                                                    var_w("cursor1",64),
                                                                                                                    var_w("cursor2",64)),
                                                                                                                mop(Snd,
                                                                                                                    mop(Snd,
                                                                                                                        var("s",
                                                                                                                            @{typ
                                                                                                                            "bool \<times>
                                                                                                                             bool \<times>
                                                                                                                             bool \<times>
                                                                                                                             bool \<times>
                                                                                                                             state"})))])])),
                                                                                                 close
                                                                                                   (var_a
                                                                                                      HOLogic.unitT,
                                                                                                    mb(mw(close
                                                                                                            (var("s",
                                                                                                                 @{typ
                                                                                                                 "bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  state"}),
                                                                                                             tp[mop(Fst,
                                                                                                                    var("s",
                                                                                                                        @{typ
                                                                                                                        "bool \<times>
                                                                                                                         bool \<times>
                                                                                                                         bool \<times>
                                                                                                                         bool \<times>
                                                                                                                         bool \<times>
                                                                                                                         state"})),
                                                                                                                bop(Lt,
                                                                                                                    var_w("cursor1",64),
                                                                                                                    var_w("cursor2",64)),
                                                                                                                mop(Snd,
                                                                                                                    mop(Snd,
                                                                                                                        var("s",
                                                                                                                            @{typ
                                                                                                                            "bool \<times>
                                                                                                                             bool \<times>
                                                                                                                             bool \<times>
                                                                                                                             bool \<times>
                                                                                                                             bool \<times>
                                                                                                                             state"})))])),
                                                                                                       close
                                                                                                         (var_a
                                                                                                            HOLogic.unitT,
                                                                                                          mw(close
                                                                                                               (var("s",
                                                                                                                    @{typ
                                                                                                                    "bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     bool \<times>
                                                                                                                     state"}),
                                                                                                                tp[bop(Ult,
                                                                                                                       var_w("cursor1",64),
                                                                                                                       var_w("cursor2",64)),
                                                                                                                   mop(Snd,
                                                                                                                       var("s",
                                                                                                                           @{typ
                                                                                                                           "bool \<times>
                                                                                                                            bool \<times>
                                                                                                                            bool \<times>
                                                                                                                            bool \<times>
                                                                                                                            bool \<times>
                                                                                                                            state"}))]))))))))))))),
                                                                        close
                                                                          (var_a HOLogic.unitT,
                                                                           cs(var("t",@{typ CmpType}),
                                                                              [(lc("EQ","CmpType",
                                                                                   @{theory}),
                                                                                mb(mr(close
                                                                                        (var("s",
                                                                                             @{typ
                                                                                             "bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              state"}),
                                                                                         mop(Fst,
                                                                                             mop(Snd,
                                                                                                 mop(Snd,
                                                                                                     mop(Snd,
                                                                                                         mop(Snd,
                                                                                                             var("s",
                                                                                                                 @{typ
                                                                                                                 "bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  state"})))))))),
                                                                                   close
                                                                                     (var_b"v",
                                                                                      mb(mb(mu(mop(Cast
                                                                                                     w64,
                                                                                                   var_b"v"),
                                                                                               @{typ
                                                                                               "bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                state"}),
                                                                                            close
                                                                                              (var_w("v",64),
                                                                                               mu(tp[var_w("v",64),
                                                                                                     var_w("rd",5)],
                                                                                                  @{typ
                                                                                                  "bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   state"}))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ
                                                                                                "64 word \<times>
                                                                                                 5 word"}),
                                                                                            md(md(md(md(md(call
                                                                                                             ("write'GPR",
                                                                                                              @{typ
                                                                                                              "state \<Rightarrow>
                                                                                                               (unit \<times>
                                                                                                                state)"},
                                                                                                              var("v",
                                                                                                                  @{typ
                                                                                                                  "64 word \<times>
                                                                                                                   5 word"}),
                                                                                                              @{theory}),
                                                                                                           HOLogic.boolT),
                                                                                                        HOLogic.boolT),
                                                                                                     HOLogic.boolT),
                                                                                                  HOLogic.boolT),
                                                                                               HOLogic.boolT)))))),
                                                                               (lc("NE","CmpType",
                                                                                   @{theory}),
                                                                                mb(mr(close
                                                                                        (var("s",
                                                                                             @{typ
                                                                                             "bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              state"}),
                                                                                         mop(Fst,
                                                                                             mop(Snd,
                                                                                                 mop(Snd,
                                                                                                     mop(Snd,
                                                                                                         mop(Snd,
                                                                                                             var("s",
                                                                                                                 @{typ
                                                                                                                 "bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  bool \<times>
                                                                                                                  state"})))))))),
                                                                                   close
                                                                                     (var_b"v",
                                                                                      mb(mb(mb(mu(mop(Not,
                                                                                                      var_b"v"),
                                                                                                  @{typ
                                                                                                  "bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   state"}),
                                                                                               close
                                                                                                 (var_b"v",
                                                                                                  mu(mop(Cast
                                                                                                           w64,
                                                                                                         var_b"v"),
                                                                                                     @{typ
                                                                                                     "bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      state"}))),
                                                                                            close
                                                                                              (var_w("v",64),
                                                                                               mu(tp[var_w("v",64),
                                                                                                     var_w("rd",5)],
                                                                                                  @{typ
                                                                                                  "bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   state"}))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ
                                                                                                "64 word \<times>
                                                                                                 5 word"}),
                                                                                            md(md(md(md(md(call
                                                                                                             ("write'GPR",
                                                                                                              @{typ
                                                                                                              "state \<Rightarrow>
                                                                                                               (unit \<times>
                                                                                                                state)"},
                                                                                                              var("v",
                                                                                                                  @{typ
                                                                                                                  "64 word \<times>
                                                                                                                   5 word"}),
                                                                                                              @{theory}),
                                                                                                           HOLogic.boolT),
                                                                                                        HOLogic.boolT),
                                                                                                     HOLogic.boolT),
                                                                                                  HOLogic.boolT),
                                                                                               HOLogic.boolT)))))),
                                                                               (lc("LT","CmpType",
                                                                                   @{theory}),
                                                                                mb(mr(close
                                                                                        (var("s",
                                                                                             @{typ
                                                                                             "bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              state"}),
                                                                                         mop(Fst,
                                                                                             mop(Snd,
                                                                                                 var("s",
                                                                                                     @{typ
                                                                                                     "bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      state"}))))),
                                                                                   close
                                                                                     (var_b"v",
                                                                                      mb(mb(mu(mop(Cast
                                                                                                     w64,
                                                                                                   var_b"v"),
                                                                                               @{typ
                                                                                               "bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                state"}),
                                                                                            close
                                                                                              (var_w("v",64),
                                                                                               mu(tp[var_w("v",64),
                                                                                                     var_w("rd",5)],
                                                                                                  @{typ
                                                                                                  "bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   state"}))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ
                                                                                                "64 word \<times>
                                                                                                 5 word"}),
                                                                                            md(md(md(md(md(call
                                                                                                             ("write'GPR",
                                                                                                              @{typ
                                                                                                              "state \<Rightarrow>
                                                                                                               (unit \<times>
                                                                                                                state)"},
                                                                                                              var("v",
                                                                                                                  @{typ
                                                                                                                  "64 word \<times>
                                                                                                                   5 word"}),
                                                                                                              @{theory}),
                                                                                                           HOLogic.boolT),
                                                                                                        HOLogic.boolT),
                                                                                                     HOLogic.boolT),
                                                                                                  HOLogic.boolT),
                                                                                               HOLogic.boolT)))))),
                                                                               (lc("LE","CmpType",
                                                                                   @{theory}),
                                                                                mb(mr(close
                                                                                        (var("s",
                                                                                             @{typ
                                                                                             "bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              state"}),
                                                                                         mop(Fst,
                                                                                             mop(Snd,
                                                                                                 var("s",
                                                                                                     @{typ
                                                                                                     "bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      state"}))))),
                                                                                   close
                                                                                     (var_b"v",
                                                                                      mb(mb(mb(mb(mr(close
                                                                                                       (var("s",
                                                                                                            @{typ
                                                                                                            "bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             state"}),
                                                                                                        mop(Fst,
                                                                                                            mop(Snd,
                                                                                                                mop(Snd,
                                                                                                                    mop(Snd,
                                                                                                                        mop(Snd,
                                                                                                                            var("s",
                                                                                                                                @{typ
                                                                                                                                "bool \<times>
                                                                                                                                 bool \<times>
                                                                                                                                 bool \<times>
                                                                                                                                 bool \<times>
                                                                                                                                 bool \<times>
                                                                                                                                 state"})))))))),
                                                                                                  close
                                                                                                    (var_b"v0",
                                                                                                     mu(bop(Or,
                                                                                                            var_b"v",
                                                                                                            var_b"v0"),
                                                                                                        @{typ
                                                                                                        "bool \<times>
                                                                                                         bool \<times>
                                                                                                         bool \<times>
                                                                                                         bool \<times>
                                                                                                         bool \<times>
                                                                                                         state"}))),
                                                                                               close
                                                                                                 (var_b"v",
                                                                                                  mu(mop(Cast
                                                                                                           w64,
                                                                                                         var_b"v"),
                                                                                                     @{typ
                                                                                                     "bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      state"}))),
                                                                                            close
                                                                                              (var_w("v",64),
                                                                                               mu(tp[var_w("v",64),
                                                                                                     var_w("rd",5)],
                                                                                                  @{typ
                                                                                                  "bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   state"}))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ
                                                                                                "64 word \<times>
                                                                                                 5 word"}),
                                                                                            md(md(md(md(md(call
                                                                                                             ("write'GPR",
                                                                                                              @{typ
                                                                                                              "state \<Rightarrow>
                                                                                                               (unit \<times>
                                                                                                                state)"},
                                                                                                              var("v",
                                                                                                                  @{typ
                                                                                                                  "64 word \<times>
                                                                                                                   5 word"}),
                                                                                                              @{theory}),
                                                                                                           HOLogic.boolT),
                                                                                                        HOLogic.boolT),
                                                                                                     HOLogic.boolT),
                                                                                                  HOLogic.boolT),
                                                                                               HOLogic.boolT)))))),
                                                                               (lc("LTU","CmpType",
                                                                                   @{theory}),
                                                                                mb(mr(close
                                                                                        (var("s",
                                                                                             @{typ
                                                                                             "bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              state"}),
                                                                                         mop(Fst,
                                                                                             var("s",
                                                                                                 @{typ
                                                                                                 "bool \<times>
                                                                                                  bool \<times>
                                                                                                  bool \<times>
                                                                                                  bool \<times>
                                                                                                  bool \<times>
                                                                                                  state"})))),
                                                                                   close
                                                                                     (var_b"v",
                                                                                      mb(mb(mu(mop(Cast
                                                                                                     w64,
                                                                                                   var_b"v"),
                                                                                               @{typ
                                                                                               "bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                bool \<times>
                                                                                                state"}),
                                                                                            close
                                                                                              (var_w("v",64),
                                                                                               mu(tp[var_w("v",64),
                                                                                                     var_w("rd",5)],
                                                                                                  @{typ
                                                                                                  "bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   state"}))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ
                                                                                                "64 word \<times>
                                                                                                 5 word"}),
                                                                                            md(md(md(md(md(call
                                                                                                             ("write'GPR",
                                                                                                              @{typ
                                                                                                              "state \<Rightarrow>
                                                                                                               (unit \<times>
                                                                                                                state)"},
                                                                                                              var("v",
                                                                                                                  @{typ
                                                                                                                  "64 word \<times>
                                                                                                                   5 word"}),
                                                                                                              @{theory}),
                                                                                                           HOLogic.boolT),
                                                                                                        HOLogic.boolT),
                                                                                                     HOLogic.boolT),
                                                                                                  HOLogic.boolT),
                                                                                               HOLogic.boolT)))))),
                                                                               (lc("LEU","CmpType",
                                                                                   @{theory}),
                                                                                mb(mr(close
                                                                                        (var("s",
                                                                                             @{typ
                                                                                             "bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              bool \<times>
                                                                                              state"}),
                                                                                         mop(Fst,
                                                                                             var("s",
                                                                                                 @{typ
                                                                                                 "bool \<times>
                                                                                                  bool \<times>
                                                                                                  bool \<times>
                                                                                                  bool \<times>
                                                                                                  bool \<times>
                                                                                                  state"})))),
                                                                                   close
                                                                                     (var_b"v",
                                                                                      mb(mb(mb(mb(mr(close
                                                                                                       (var("s",
                                                                                                            @{typ
                                                                                                            "bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             bool \<times>
                                                                                                             state"}),
                                                                                                        mop(Fst,
                                                                                                            mop(Snd,
                                                                                                                mop(Snd,
                                                                                                                    mop(Snd,
                                                                                                                        mop(Snd,
                                                                                                                            var("s",
                                                                                                                                @{typ
                                                                                                                                "bool \<times>
                                                                                                                                 bool \<times>
                                                                                                                                 bool \<times>
                                                                                                                                 bool \<times>
                                                                                                                                 bool \<times>
                                                                                                                                 state"})))))))),
                                                                                                  close
                                                                                                    (var_b"v0",
                                                                                                     mu(bop(Or,
                                                                                                            var_b"v",
                                                                                                            var_b"v0"),
                                                                                                        @{typ
                                                                                                        "bool \<times>
                                                                                                         bool \<times>
                                                                                                         bool \<times>
                                                                                                         bool \<times>
                                                                                                         bool \<times>
                                                                                                         state"}))),
                                                                                               close
                                                                                                 (var_b"v",
                                                                                                  mu(mop(Cast
                                                                                                           w64,
                                                                                                         var_b"v"),
                                                                                                     @{typ
                                                                                                     "bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      bool \<times>
                                                                                                      state"}))),
                                                                                            close
                                                                                              (var_w("v",64),
                                                                                               mu(tp[var_w("v",64),
                                                                                                     var_w("rd",5)],
                                                                                                  @{typ
                                                                                                  "bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   bool \<times>
                                                                                                   state"}))),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ
                                                                                                "64 word \<times>
                                                                                                 5 word"}),
                                                                                            md(md(md(md(md(call
                                                                                                             ("write'GPR",
                                                                                                              @{typ
                                                                                                              "state \<Rightarrow>
                                                                                                               (unit \<times>
                                                                                                                state)"},
                                                                                                              var("v",
                                                                                                                  @{typ
                                                                                                                  "64 word \<times>
                                                                                                                   5 word"}),
                                                                                                              @{theory}),
                                                                                                           HOLogic.boolT),
                                                                                                        HOLogic.boolT),
                                                                                                     HOLogic.boolT),
                                                                                                  HOLogic.boolT),
                                                                                               HOLogic.boolT)))))),
                                                                               (lc("EXEQ","CmpType",
                                                                                   @{theory}),
                                                                                md(md(md(md(md(call
                                                                                                 ("write'GPR",
                                                                                                  @{typ
                                                                                                  "state \<Rightarrow>
                                                                                                   (unit \<times>
                                                                                                    state)"},
                                                                                                  tp[ite(eq(var("cap_cb",
                                                                                                                @{typ Capability}),
                                                                                                            var("cap_ct",
                                                                                                                @{typ Capability})),
                                                                                                         lw(1,
                                                                                                            64),
                                                                                                         lw(0,
                                                                                                            64)),
                                                                                                     var_w("rd",5)],
                                                                                                  @{theory}),
                                                                                               HOLogic.boolT),
                                                                                            HOLogic.boolT),
                                                                                         HOLogic.boolT),
                                                                                      HOLogic.boolT),
                                                                                   HOLogic.boolT)),
                                                                               (lc("NEXEQ",
                                                                                   "CmpType",
                                                                                   @{theory}),
                                                                                md(md(md(md(md(call
                                                                                                 ("write'GPR",
                                                                                                  @{typ
                                                                                                  "state \<Rightarrow>
                                                                                                   (unit \<times>
                                                                                                    state)"},
                                                                                                  tp[ite(eq(var("cap_cb",
                                                                                                                @{typ Capability}),
                                                                                                            var("cap_ct",
                                                                                                                @{typ Capability})),
                                                                                                         lw(0,
                                                                                                            64),
                                                                                                         lw(1,
                                                                                                            64)),
                                                                                                     var_w("rd",5)],
                                                                                                  @{theory}),
                                                                                               HOLogic.boolT),
                                                                                            HOLogic.boolT),
                                                                                         HOLogic.boolT),
                                                                                      HOLogic.boolT),
                                                                                   HOLogic.boolT))],
                                                                              @{context})))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'CEQ",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
      call
        ("CPtrCmp",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("rd",5),var_w("cb",5),var_w("cs",5),lc("EQ","CmpType",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'CNE",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
      call
        ("CPtrCmp",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("rd",5),var_w("cb",5),var_w("cs",5),lc("NE","CmpType",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'CLT",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
      call
        ("CPtrCmp",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("rd",5),var_w("cb",5),var_w("cs",5),lc("LT","CmpType",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'CLE",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
      call
        ("CPtrCmp",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("rd",5),var_w("cb",5),var_w("cs",5),lc("LE","CmpType",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'CLTU",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
      call
        ("CPtrCmp",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("rd",5),var_w("cb",5),var_w("cs",5),lc("LTU","CmpType",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'CLEU",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
      call
        ("CPtrCmp",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("rd",5),var_w("cb",5),var_w("cs",5),lc("LEU","CmpType",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'CEXEQ",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
      call
        ("CPtrCmp",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("rd",5),var_w("cb",5),var_w("cs",5),lc("EXEQ","CmpType",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'CNEXEQ",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
      call
        ("CPtrCmp",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("rd",5),var_w("cb",5),var_w("cs",5),lc("NEXEQ","CmpType",@{theory})],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CBTU",
   close
     (tp[var_w("cb",5),var_w("offset",16)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(const
                           ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            @{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(call
                                 ("register_inaccessible",
                                  @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                                  @{theory}),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      call
                                        ("SignalCapException",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                            var_w("cb",5)],@{theory}),
                                      mb(call
                                           ("CAPR",
                                            @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                            var_w("cb",5),@{theory}),
                                         close
                                           (var("v",@{typ Capability}),
                                            mb(mb(mu(call
                                                       ("getTag",HOLogic.boolT,
                                                        var("v",@{typ Capability}),@{theory}),qTy),
                                                  close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                               close
                                                 (var_b"b",
                                                  ite(var_b"b",
                                                      mb(const
                                                           ("PC",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (64 word \<times> state)"},@{theory}),
                                                         close
                                                           (var_w("v",64),
                                                            mb(mb(mb(mu(bop(Add,var_w("v",64),
                                                                            lw(4,64)),qTy),
                                                                     close
                                                                       (var_w("v",64),
                                                                        mu(bop(Add,var_w("v",64),
                                                                               bop(Lsl,
                                                                                   mop(SE w64,
                                                                                       var_w("offset",16)),
                                                                                   ln 2)),qTy))),
                                                                  close
                                                                    (var_w("v",64),
                                                                     mu(mop(Some,var_w("v",64)),qTy))),
                                                               close
                                                                 (var("v",@{typ "64 word option"}),
                                                                  call
                                                                    ("write'BranchTo",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     var("v",@{typ "64 word option"}),
                                                                     @{theory}))))),mu(lu,qTy))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CBTS",
   close
     (tp[var_w("cb",5),var_w("offset",16)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(const
                           ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            @{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(call
                                 ("register_inaccessible",
                                  @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                                  @{theory}),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      call
                                        ("SignalCapException",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                            var_w("cb",5)],@{theory}),
                                      mb(call
                                           ("CAPR",
                                            @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                            var_w("cb",5),@{theory}),
                                         close
                                           (var("v",@{typ Capability}),
                                            mb(mu(call
                                                    ("getTag",HOLogic.boolT,
                                                     var("v",@{typ Capability}),@{theory}),qTy),
                                               close
                                                 (var_b"b",
                                                  ite(var_b"b",
                                                      mb(const
                                                           ("PC",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (64 word \<times> state)"},@{theory}),
                                                         close
                                                           (var_w("v",64),
                                                            mb(mb(mb(mu(bop(Add,var_w("v",64),
                                                                            lw(4,64)),qTy),
                                                                     close
                                                                       (var_w("v",64),
                                                                        mu(bop(Add,var_w("v",64),
                                                                               bop(Lsl,
                                                                                   mop(SE w64,
                                                                                       var_w("offset",16)),
                                                                                   ln 2)),qTy))),
                                                                  close
                                                                    (var_w("v",64),
                                                                     mu(mop(Some,var_w("v",64)),qTy))),
                                                               close
                                                                 (var("v",@{typ "64 word option"}),
                                                                  call
                                                                    ("write'BranchTo",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (unit \<times> state)"},
                                                                     var("v",@{typ "64 word option"}),
                                                                     @{theory}))))),mu(lu,qTy))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CSC",
   close
     (tp[var_w("cs",5),var_w("cb",5),var_w("rt",5),var_w("offset",11)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cs",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cs",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cb",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mu(call
                                                           ("getTag",HOLogic.boolT,
                                                            var("v",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          call
                                                            ("SignalCapException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[lc("capExcTag","CapExceptionType",
                                                                   @{theory}),var_w("cb",5)],
                                                             @{theory}),
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mu(call
                                                                        ("getSealed",HOLogic.boolT,
                                                                         var("v",@{typ Capability}),
                                                                         @{theory}),qTy),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("SignalCapException",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[lc("capExcSeal",
                                                                                   "CapExceptionType",
                                                                                   @{theory}),
                                                                                var_w("cb",5)],
                                                                             @{theory}),
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cb",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mb(mu(call
                                                                                              ("getPerms",
                                                                                               @{typ Perms},
                                                                                               var("v",
                                                                                                   @{typ Capability}),
                                                                                               @{theory}),
                                                                                            qTy),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Perms}),
                                                                                            mu(call
                                                                                                 ("Perms.Permit_Store_Capability",
                                                                                                  HOLogic.boolT,
                                                                                                  var("v",
                                                                                                      @{typ Perms}),
                                                                                                  @{theory}),
                                                                                               qTy))),
                                                                                      close
                                                                                        (var_b"v",
                                                                                         mu(mop(Not,
                                                                                                var_b"v"),
                                                                                            qTy))),
                                                                                   close
                                                                                     (var_b"b",
                                                                                      ite(var_b"b",
                                                                                          call
                                                                                            ("SignalCapException",
                                                                                             @{typ
                                                                                             "state \<Rightarrow>
                                                                                              (unit \<times>
                                                                                               state)"},
                                                                                             tp[lc("capExcPermStoreCap",
                                                                                                   "CapExceptionType",
                                                                                                   @{theory}),
                                                                                                var_w("cb",5)],
                                                                                             @{theory}),
                                                                                          mb(call
                                                                                               ("CAPR",
                                                                                                @{typ
                                                                                                "state \<Rightarrow>
                                                                                                 (Capability \<times>
                                                                                                  state)"},
                                                                                                var_w("cb",5),
                                                                                                @{theory}),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ Capability}),
                                                                                                mb(mb(mb(mb(mu(call
                                                                                                                 ("getPerms",
                                                                                                                  @{typ Perms},
                                                                                                                  var("v",
                                                                                                                      @{typ Capability}),
                                                                                                                  @{theory}),
                                                                                                               qTy),
                                                                                                            close
                                                                                                              (var("v",
                                                                                                                   @{typ Perms}),
                                                                                                               mu(call
                                                                                                                    ("Perms.Permit_Store_Local_Capability",
                                                                                                                     HOLogic.boolT,
                                                                                                                     var("v",
                                                                                                                         @{typ Perms}),
                                                                                                                     @{theory}),
                                                                                                                  qTy))),
                                                                                                         close
                                                                                                           (var_b"v",
                                                                                                            mu(mop(Not,
                                                                                                                   var_b"v"),
                                                                                                               qTy))),
                                                                                                      close
                                                                                                        (var_b"b",
                                                                                                         ite(var_b"b",
                                                                                                             mb(call
                                                                                                                  ("CAPR",
                                                                                                                   @{typ
                                                                                                                   "state \<Rightarrow>
                                                                                                                    (Capability \<times>
                                                                                                                     state)"},
                                                                                                                   var_w("cs",5),
                                                                                                                   @{theory}),
                                                                                                                close
                                                                                                                  (var("v",
                                                                                                                       @{typ Capability}),
                                                                                                                   mb(mu(call
                                                                                                                           ("getTag",
                                                                                                                            HOLogic.boolT,
                                                                                                                            var("v",
                                                                                                                                @{typ Capability}),
                                                                                                                            @{theory}),
                                                                                                                         qTy),
                                                                                                                      close
                                                                                                                        (var_b"b",
                                                                                                                         ite(var_b"b",
                                                                                                                             mb(call
                                                                                                                                  ("CAPR",
                                                                                                                                   @{typ
                                                                                                                                   "state \<Rightarrow>
                                                                                                                                    (Capability \<times>
                                                                                                                                     state)"},
                                                                                                                                   var_w("cs",5),
                                                                                                                                   @{theory}),
                                                                                                                                close
                                                                                                                                  (var("v",
                                                                                                                                       @{typ Capability}),
                                                                                                                                   mb(mb(mu(call
                                                                                                                                              ("getPerms",
                                                                                                                                               @{typ Perms},
                                                                                                                                               var("v",
                                                                                                                                                   @{typ Capability}),
                                                                                                                                               @{theory}),
                                                                                                                                            qTy),
                                                                                                                                         close
                                                                                                                                           (var("v",
                                                                                                                                                @{typ Perms}),
                                                                                                                                            mu(call
                                                                                                                                                 ("Perms.Global",
                                                                                                                                                  HOLogic.boolT,
                                                                                                                                                  var("v",
                                                                                                                                                      @{typ Perms}),
                                                                                                                                                  @{theory}),
                                                                                                                                               qTy))),
                                                                                                                                      close
                                                                                                                                        (var_b"v",
                                                                                                                                         mu(mop(Not,
                                                                                                                                                var_b"v"),
                                                                                                                                            qTy))))),
                                                                                                                             mu(lf,
                                                                                                                                qTy)))))),
                                                                                                             mu(lf,
                                                                                                                qTy)))),
                                                                                                   close
                                                                                                     (var_b"b",
                                                                                                      ite(var_b"b",
                                                                                                          call
                                                                                                            ("SignalCapException",
                                                                                                             @{typ
                                                                                                             "state \<Rightarrow>
                                                                                                              (unit \<times>
                                                                                                               state)"},
                                                                                                             tp[lc("capExcPermStoreLocalCap",
                                                                                                                   "CapExceptionType",
                                                                                                                   @{theory}),
                                                                                                                var_w("cb",5)],
                                                                                                             @{theory}),
                                                                                                          mb(call
                                                                                                               ("CAPR",
                                                                                                                @{typ
                                                                                                                "state \<Rightarrow>
                                                                                                                 (Capability \<times>
                                                                                                                  state)"},
                                                                                                                var_w("cb",5),
                                                                                                                @{theory}),
                                                                                                             close
                                                                                                               (var("v",
                                                                                                                    @{typ Capability}),
                                                                                                                mb(mb(mu(call
                                                                                                                           ("getBase",
                                                                                                                            w64,
                                                                                                                            var("v",
                                                                                                                                @{typ Capability}),
                                                                                                                            @{theory}),
                                                                                                                         qTy),
                                                                                                                      close
                                                                                                                        (var_w("v",64),
                                                                                                                         mb(call
                                                                                                                              ("CAPR",
                                                                                                                               @{typ
                                                                                                                               "state \<Rightarrow>
                                                                                                                                (Capability \<times>
                                                                                                                                 state)"},
                                                                                                                               var_w("cb",5),
                                                                                                                               @{theory}),
                                                                                                                            close
                                                                                                                              (var("v0",
                                                                                                                                   @{typ Capability}),
                                                                                                                               mb(mu(call
                                                                                                                                       ("getOffset",
                                                                                                                                        w64,
                                                                                                                                        var("v0",
                                                                                                                                            @{typ Capability}),
                                                                                                                                        @{theory}),
                                                                                                                                     qTy),
                                                                                                                                  close
                                                                                                                                    (var_w("v0",64),
                                                                                                                                     mu(bop(Add,
                                                                                                                                            var_w("v",64),
                                                                                                                                            var_w("v0",64)),
                                                                                                                                        qTy))))))),
                                                                                                                   close
                                                                                                                     (var_w("cursor",64),
                                                                                                                      mb(call
                                                                                                                           ("GPR",
                                                                                                                            @{typ
                                                                                                                            "state \<Rightarrow>
                                                                                                                             (64 word \<times>
                                                                                                                              state)"},
                                                                                                                            var_w("rt",5),
                                                                                                                            @{theory}),
                                                                                                                         close
                                                                                                                           (var_w("v",64),
                                                                                                                            mb(mb(mu(bop(Add,
                                                                                                                                         var_w("cursor",64),
                                                                                                                                         var_w("v",64)),
                                                                                                                                     qTy),
                                                                                                                                  close
                                                                                                                                    (var_w("v",64),
                                                                                                                                     mu(bop(Add,
                                                                                                                                            var_w("v",64),
                                                                                                                                            mop(SE w64,
                                                                                                                                                cc[var_w("offset",11),
                                                                                                                                                   lw(0,
                                                                                                                                                      4)])),
                                                                                                                                        qTy))),
                                                                                                                               close
                                                                                                                                 (var_w("addr",64),
                                                                                                                                  mb(call
                                                                                                                                       ("CAPR",
                                                                                                                                        @{typ
                                                                                                                                        "state \<Rightarrow>
                                                                                                                                         (Capability \<times>
                                                                                                                                          state)"},
                                                                                                                                        var_w("cb",5),
                                                                                                                                        @{theory}),
                                                                                                                                     close
                                                                                                                                       (var("v",
                                                                                                                                            @{typ Capability}),
                                                                                                                                        mb(mb(mb(mb(mu(call
                                                                                                                                                         ("getBase",
                                                                                                                                                          w64,
                                                                                                                                                          var("v",
                                                                                                                                                              @{typ Capability}),
                                                                                                                                                          @{theory}),
                                                                                                                                                       qTy),
                                                                                                                                                    close
                                                                                                                                                      (var_w("v",64),
                                                                                                                                                       mu(cc[lw(0,
                                                                                                                                                                1),
                                                                                                                                                             var_w("v",64)],
                                                                                                                                                          qTy))),
                                                                                                                                                 close
                                                                                                                                                   (var_w("v",65),
                                                                                                                                                    mb(call
                                                                                                                                                         ("CAPR",
                                                                                                                                                          @{typ
                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                           (Capability \<times>
                                                                                                                                                            state)"},
                                                                                                                                                          var_w("cb",5),
                                                                                                                                                          @{theory}),
                                                                                                                                                       close
                                                                                                                                                         (var("v0",
                                                                                                                                                              @{typ Capability}),
                                                                                                                                                          mb(mb(mu(call
                                                                                                                                                                     ("getLength",
                                                                                                                                                                      w64,
                                                                                                                                                                      var("v0",
                                                                                                                                                                          @{typ Capability}),
                                                                                                                                                                      @{theory}),
                                                                                                                                                                   qTy),
                                                                                                                                                                close
                                                                                                                                                                  (var_w("v",64),
                                                                                                                                                                   mu(cc[lw(0,
                                                                                                                                                                            1),
                                                                                                                                                                         var_w("v",64)],
                                                                                                                                                                      qTy))),
                                                                                                                                                             close
                                                                                                                                                               (var_w("v0",65),
                                                                                                                                                                mu(bop(Add,
                                                                                                                                                                       var_w("v",65),
                                                                                                                                                                       var_w("v0",65)),
                                                                                                                                                                   qTy))))))),
                                                                                                                                              close
                                                                                                                                                (var_w("v",65),
                                                                                                                                                 mu(bop(Ugt,
                                                                                                                                                        bop(Add,
                                                                                                                                                            cc[lw(0,
                                                                                                                                                                  1),
                                                                                                                                                               var_w("addr",64)],
                                                                                                                                                            mop(Cast
                                                                                                                                                                  (Word_Lib.mk_wordT 65),
                                                                                                                                                                const
                                                                                                                                                                  ("CAPBYTEWIDTH",
                                                                                                                                                                   HOLogic.natT,
                                                                                                                                                                   @{theory}))),
                                                                                                                                                        var_w("v",65)),
                                                                                                                                                    qTy))),
                                                                                                                                           close
                                                                                                                                             (var_b"b",
                                                                                                                                              ite(var_b"b",
                                                                                                                                                  call
                                                                                                                                                    ("SignalCapException",
                                                                                                                                                     @{typ
                                                                                                                                                     "state \<Rightarrow>
                                                                                                                                                      (unit \<times>
                                                                                                                                                       state)"},
                                                                                                                                                     tp[lc("capExcLength",
                                                                                                                                                           "CapExceptionType",
                                                                                                                                                           @{theory}),
                                                                                                                                                        var_w("cb",5)],
                                                                                                                                                     @{theory}),
                                                                                                                                                  mb(call
                                                                                                                                                       ("CAPR",
                                                                                                                                                        @{typ
                                                                                                                                                        "state \<Rightarrow>
                                                                                                                                                         (Capability \<times>
                                                                                                                                                          state)"},
                                                                                                                                                        var_w("cb",5),
                                                                                                                                                        @{theory}),
                                                                                                                                                     close
                                                                                                                                                       (var("v",
                                                                                                                                                            @{typ Capability}),
                                                                                                                                                        mb(mb(mu(call
                                                                                                                                                                   ("getBase",
                                                                                                                                                                    w64,
                                                                                                                                                                    var("v",
                                                                                                                                                                        @{typ Capability}),
                                                                                                                                                                    @{theory}),
                                                                                                                                                                 qTy),
                                                                                                                                                              close
                                                                                                                                                                (var_w("v",64),
                                                                                                                                                                 mu(bop(Ult,
                                                                                                                                                                        var_w("addr",64),
                                                                                                                                                                        var_w("v",64)),
                                                                                                                                                                    qTy))),
                                                                                                                                                           close
                                                                                                                                                             (var_b"b",
                                                                                                                                                              itb([(var_b"b",
                                                                                                                                                                    call
                                                                                                                                                                      ("SignalCapException",
                                                                                                                                                                       @{typ
                                                                                                                                                                       "state \<Rightarrow>
                                                                                                                                                                        (unit \<times>
                                                                                                                                                                         state)"},
                                                                                                                                                                       tp[lc("capExcLength",
                                                                                                                                                                             "CapExceptionType",
                                                                                                                                                                             @{theory}),
                                                                                                                                                                          var_w("cb",5)],
                                                                                                                                                                       @{theory})),
                                                                                                                                                                   (mop(Not,
                                                                                                                                                                        call
                                                                                                                                                                          ("isCapAligned",
                                                                                                                                                                           HOLogic.boolT,
                                                                                                                                                                           var_w("addr",64),
                                                                                                                                                                           @{theory})),
                                                                                                                                                                    mb(const
                                                                                                                                                                         ("CP0",
                                                                                                                                                                          @{typ
                                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                                           (CP0 \<times>
                                                                                                                                                                            state)"},
                                                                                                                                                                          @{theory}),
                                                                                                                                                                       close
                                                                                                                                                                         (var("v",
                                                                                                                                                                              @{typ CP0}),
                                                                                                                                                                          mb(call
                                                                                                                                                                               ("write'CP0",
                                                                                                                                                                                @{typ
                                                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                                                 (unit \<times>
                                                                                                                                                                                  state)"},
                                                                                                                                                                                rupd
                                                                                                                                                                                  ("CP0.BadVAddr",
                                                                                                                                                                                   tp[var("v",
                                                                                                                                                                                          @{typ CP0}),
                                                                                                                                                                                      var_w("addr",64)],
                                                                                                                                                                                   @{theory}),
                                                                                                                                                                                @{theory}),
                                                                                                                                                                             close
                                                                                                                                                                               (var_a
                                                                                                                                                                                  HOLogic.unitT,
                                                                                                                                                                                call
                                                                                                                                                                                  ("SignalException",
                                                                                                                                                                                   @{typ
                                                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                                                    (unit \<times>
                                                                                                                                                                                     state)"},
                                                                                                                                                                                   lc("AdES",
                                                                                                                                                                                      "ExceptionType",
                                                                                                                                                                                      @{theory}),
                                                                                                                                                                                   @{theory}))))))],
                                                                                                                                                                  mb(call
                                                                                                                                                                       ("CAPR",
                                                                                                                                                                        @{typ
                                                                                                                                                                        "state \<Rightarrow>
                                                                                                                                                                         (Capability \<times>
                                                                                                                                                                          state)"},
                                                                                                                                                                        var_w("cs",5),
                                                                                                                                                                        @{theory}),
                                                                                                                                                                     close
                                                                                                                                                                       (var("v",
                                                                                                                                                                            @{typ Capability}),
                                                                                                                                                                        mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                           @{typ Capability}),
                                                                                                                                                                                       lf],
                                                                                                                                                                                    qTy),
                                                                                                                                                                                 close
                                                                                                                                                                                   (var("v",
                                                                                                                                                                                        @{typ
                                                                                                                                                                                        "Capability \<times>
                                                                                                                                                                                         bool"}),
                                                                                                                                                                                    mu(tp[var_w("addr",64),
                                                                                                                                                                                          var("v",
                                                                                                                                                                                              @{typ
                                                                                                                                                                                              "Capability \<times>
                                                                                                                                                                                               bool"})],
                                                                                                                                                                                       qTy))),
                                                                                                                                                                              close
                                                                                                                                                                                (var("v",
                                                                                                                                                                                     @{typ
                                                                                                                                                                                     "64 word \<times>
                                                                                                                                                                                      Capability \<times>
                                                                                                                                                                                      bool"}),
                                                                                                                                                                                 call
                                                                                                                                                                                   ("StoreCap",
                                                                                                                                                                                    @{typ
                                                                                                                                                                                    "state \<Rightarrow>
                                                                                                                                                                                     (bool \<times>
                                                                                                                                                                                      state)"},
                                                                                                                                                                                    var("v",
                                                                                                                                                                                        @{typ
                                                                                                                                                                                        "64 word \<times>
                                                                                                                                                                                         Capability \<times>
                                                                                                                                                                                         bool"}),
                                                                                                                                                                                    @{theory}))),
                                                                                                                                                                           close
                                                                                                                                                                             (var_a
                                                                                                                                                                                HOLogic.boolT,
                                                                                                                                                                              call
                                                                                                                                                                                ("write'LLbit",
                                                                                                                                                                                 @{typ
                                                                                                                                                                                 "state \<Rightarrow>
                                                                                                                                                                                  (unit \<times>
                                                                                                                                                                                   state)"},
                                                                                                                                                                                 lo HOLogic.boolT,
                                                                                                                                                                                 @{theory}))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CLC",
   close
     (tp[var_w("cd",5),var_w("cb",5),var_w("rt",5),var_w("offset",11)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cb",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mu(call
                                                           ("getTag",HOLogic.boolT,
                                                            var("v",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          call
                                                            ("SignalCapException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[lc("capExcTag","CapExceptionType",
                                                                   @{theory}),var_w("cb",5)],
                                                             @{theory}),
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mu(call
                                                                        ("getSealed",HOLogic.boolT,
                                                                         var("v",@{typ Capability}),
                                                                         @{theory}),qTy),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("SignalCapException",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[lc("capExcSeal",
                                                                                   "CapExceptionType",
                                                                                   @{theory}),
                                                                                var_w("cb",5)],
                                                                             @{theory}),
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cb",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mu(call
                                                                                           ("getBase",
                                                                                            w64,
                                                                                            var("v",
                                                                                                @{typ Capability}),
                                                                                            @{theory}),
                                                                                         qTy),
                                                                                      close
                                                                                        (var_w("v",64),
                                                                                         mb(call
                                                                                              ("CAPR",
                                                                                               @{typ
                                                                                               "state \<Rightarrow>
                                                                                                (Capability \<times>
                                                                                                 state)"},
                                                                                               var_w("cb",5),
                                                                                               @{theory}),
                                                                                            close
                                                                                              (var("v0",
                                                                                                   @{typ Capability}),
                                                                                               mb(mu(call
                                                                                                       ("getOffset",
                                                                                                        w64,
                                                                                                        var("v0",
                                                                                                            @{typ Capability}),
                                                                                                        @{theory}),
                                                                                                     qTy),
                                                                                                  close
                                                                                                    (var_w("v0",64),
                                                                                                     mu(bop(Add,
                                                                                                            var_w("v",64),
                                                                                                            var_w("v0",64)),
                                                                                                        qTy))))))),
                                                                                   close
                                                                                     (var_w("cursor",64),
                                                                                      mb(call
                                                                                           ("GPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (64 word \<times>
                                                                                              state)"},
                                                                                            var_w("rt",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var_w("v",64),
                                                                                            mb(mb(mu(bop(Add,
                                                                                                         var_w("cursor",64),
                                                                                                         var_w("v",64)),
                                                                                                     qTy),
                                                                                                  close
                                                                                                    (var_w("v",64),
                                                                                                     mu(bop(Add,
                                                                                                            var_w("v",64),
                                                                                                            mop(SE w64,
                                                                                                                cc[var_w("offset",11),
                                                                                                                   lw(0,
                                                                                                                      4)])),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var_w("addr",64),
                                                                                                  mb(call
                                                                                                       ("CAPR",
                                                                                                        @{typ
                                                                                                        "state \<Rightarrow>
                                                                                                         (Capability \<times>
                                                                                                          state)"},
                                                                                                        var_w("cb",5),
                                                                                                        @{theory}),
                                                                                                     close
                                                                                                       (var("v",
                                                                                                            @{typ Capability}),
                                                                                                        mb(mb(mb(mb(mu(call
                                                                                                                         ("getBase",
                                                                                                                          w64,
                                                                                                                          var("v",
                                                                                                                              @{typ Capability}),
                                                                                                                          @{theory}),
                                                                                                                       qTy),
                                                                                                                    close
                                                                                                                      (var_w("v",64),
                                                                                                                       mu(cc[lw(0,
                                                                                                                                1),
                                                                                                                             var_w("v",64)],
                                                                                                                          qTy))),
                                                                                                                 close
                                                                                                                   (var_w("v",65),
                                                                                                                    mb(call
                                                                                                                         ("CAPR",
                                                                                                                          @{typ
                                                                                                                          "state \<Rightarrow>
                                                                                                                           (Capability \<times>
                                                                                                                            state)"},
                                                                                                                          var_w("cb",5),
                                                                                                                          @{theory}),
                                                                                                                       close
                                                                                                                         (var("v0",
                                                                                                                              @{typ Capability}),
                                                                                                                          mb(mb(mu(call
                                                                                                                                     ("getLength",
                                                                                                                                      w64,
                                                                                                                                      var("v0",
                                                                                                                                          @{typ Capability}),
                                                                                                                                      @{theory}),
                                                                                                                                   qTy),
                                                                                                                                close
                                                                                                                                  (var_w("v",64),
                                                                                                                                   mu(cc[lw(0,
                                                                                                                                            1),
                                                                                                                                         var_w("v",64)],
                                                                                                                                      qTy))),
                                                                                                                             close
                                                                                                                               (var_w("v0",65),
                                                                                                                                mu(bop(Add,
                                                                                                                                       var_w("v",65),
                                                                                                                                       var_w("v0",65)),
                                                                                                                                   qTy))))))),
                                                                                                              close
                                                                                                                (var_w("v",65),
                                                                                                                 mu(bop(Ugt,
                                                                                                                        bop(Add,
                                                                                                                            cc[lw(0,
                                                                                                                                  1),
                                                                                                                               var_w("addr",64)],
                                                                                                                            mop(Cast
                                                                                                                                  (Word_Lib.mk_wordT 65),
                                                                                                                                const
                                                                                                                                  ("CAPBYTEWIDTH",
                                                                                                                                   HOLogic.natT,
                                                                                                                                   @{theory}))),
                                                                                                                        var_w("v",65)),
                                                                                                                    qTy))),
                                                                                                           close
                                                                                                             (var_b"b",
                                                                                                              ite(var_b"b",
                                                                                                                  call
                                                                                                                    ("SignalCapException",
                                                                                                                     @{typ
                                                                                                                     "state \<Rightarrow>
                                                                                                                      (unit \<times>
                                                                                                                       state)"},
                                                                                                                     tp[lc("capExcLength",
                                                                                                                           "CapExceptionType",
                                                                                                                           @{theory}),
                                                                                                                        var_w("cb",5)],
                                                                                                                     @{theory}),
                                                                                                                  mb(call
                                                                                                                       ("CAPR",
                                                                                                                        @{typ
                                                                                                                        "state \<Rightarrow>
                                                                                                                         (Capability \<times>
                                                                                                                          state)"},
                                                                                                                        var_w("cb",5),
                                                                                                                        @{theory}),
                                                                                                                     close
                                                                                                                       (var("v",
                                                                                                                            @{typ Capability}),
                                                                                                                        mb(mb(mu(call
                                                                                                                                   ("getBase",
                                                                                                                                    w64,
                                                                                                                                    var("v",
                                                                                                                                        @{typ Capability}),
                                                                                                                                    @{theory}),
                                                                                                                                 qTy),
                                                                                                                              close
                                                                                                                                (var_w("v",64),
                                                                                                                                 mu(bop(Ult,
                                                                                                                                        var_w("addr",64),
                                                                                                                                        var_w("v",64)),
                                                                                                                                    qTy))),
                                                                                                                           close
                                                                                                                             (var_b"b",
                                                                                                                              itb([(var_b"b",
                                                                                                                                    call
                                                                                                                                      ("SignalCapException",
                                                                                                                                       @{typ
                                                                                                                                       "state \<Rightarrow>
                                                                                                                                        (unit \<times>
                                                                                                                                         state)"},
                                                                                                                                       tp[lc("capExcLength",
                                                                                                                                             "CapExceptionType",
                                                                                                                                             @{theory}),
                                                                                                                                          var_w("cb",5)],
                                                                                                                                       @{theory})),
                                                                                                                                   (mop(Not,
                                                                                                                                        call
                                                                                                                                          ("isCapAligned",
                                                                                                                                           HOLogic.boolT,
                                                                                                                                           var_w("addr",64),
                                                                                                                                           @{theory})),
                                                                                                                                    mb(const
                                                                                                                                         ("CP0",
                                                                                                                                          @{typ
                                                                                                                                          "state \<Rightarrow>
                                                                                                                                           (CP0 \<times>
                                                                                                                                            state)"},
                                                                                                                                          @{theory}),
                                                                                                                                       close
                                                                                                                                         (var("v",
                                                                                                                                              @{typ CP0}),
                                                                                                                                          mb(call
                                                                                                                                               ("write'CP0",
                                                                                                                                                @{typ
                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                 (unit \<times>
                                                                                                                                                  state)"},
                                                                                                                                                rupd
                                                                                                                                                  ("CP0.BadVAddr",
                                                                                                                                                   tp[var("v",
                                                                                                                                                          @{typ CP0}),
                                                                                                                                                      var_w("addr",64)],
                                                                                                                                                   @{theory}),
                                                                                                                                                @{theory}),
                                                                                                                                             close
                                                                                                                                               (var_a
                                                                                                                                                  HOLogic.unitT,
                                                                                                                                                call
                                                                                                                                                  ("SignalException",
                                                                                                                                                   @{typ
                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                    (unit \<times>
                                                                                                                                                     state)"},
                                                                                                                                                   lc("AdEL",
                                                                                                                                                      "ExceptionType",
                                                                                                                                                      @{theory}),
                                                                                                                                                   @{theory}))))))],
                                                                                                                                  mb(call
                                                                                                                                       ("LoadCap",
                                                                                                                                        @{typ
                                                                                                                                        "state \<Rightarrow>
                                                                                                                                         (Capability \<times>
                                                                                                                                          state)"},
                                                                                                                                        tp[var_w("addr",64),
                                                                                                                                           lf],
                                                                                                                                        @{theory}),
                                                                                                                                     close
                                                                                                                                       (var("v",
                                                                                                                                            @{typ Capability}),
                                                                                                                                        mn(var("v",
                                                                                                                                               @{typ Capability}),
                                                                                                                                           mb(md(call
                                                                                                                                                   ("CAPR",
                                                                                                                                                    @{typ
                                                                                                                                                    "state \<Rightarrow>
                                                                                                                                                     (Capability \<times>
                                                                                                                                                      state)"},
                                                                                                                                                    var_w("cb",5),
                                                                                                                                                    @{theory}),
                                                                                                                                                 @{typ Capability}),
                                                                                                                                              close
                                                                                                                                                (var("v",
                                                                                                                                                     @{typ Capability}),
                                                                                                                                                 mb(mb(mb(mb(mu(call
                                                                                                                                                                  ("getPerms",
                                                                                                                                                                   @{typ Perms},
                                                                                                                                                                   var("v",
                                                                                                                                                                       @{typ Capability}),
                                                                                                                                                                   @{theory}),
                                                                                                                                                                @{typ
                                                                                                                                                                "Capability \<times>
                                                                                                                                                                 state"}),
                                                                                                                                                             close
                                                                                                                                                               (var("v",
                                                                                                                                                                    @{typ Perms}),
                                                                                                                                                                mu(call
                                                                                                                                                                     ("Perms.Permit_Load_Capability",
                                                                                                                                                                      HOLogic.boolT,
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ Perms}),
                                                                                                                                                                      @{theory}),
                                                                                                                                                                   @{typ
                                                                                                                                                                   "Capability \<times>
                                                                                                                                                                    state"}))),
                                                                                                                                                          close
                                                                                                                                                            (var_b"v",
                                                                                                                                                             mu(mop(Not,
                                                                                                                                                                    var_b"v"),
                                                                                                                                                                @{typ
                                                                                                                                                                "Capability \<times>
                                                                                                                                                                 state"}))),
                                                                                                                                                       close
                                                                                                                                                         (var_b"b",
                                                                                                                                                          ite(var_b"b",
                                                                                                                                                              mb(mr(close
                                                                                                                                                                      (var("s",
                                                                                                                                                                           @{typ
                                                                                                                                                                           "Capability \<times>
                                                                                                                                                                            state"}),
                                                                                                                                                                       mop(Fst,
                                                                                                                                                                           var("s",
                                                                                                                                                                               @{typ
                                                                                                                                                                               "Capability \<times>
                                                                                                                                                                                state"})))),
                                                                                                                                                                 close
                                                                                                                                                                   (var("v",
                                                                                                                                                                        @{typ Capability}),
                                                                                                                                                                    mb(mb(mu(tp[var("v",
                                                                                                                                                                                    @{typ Capability}),
                                                                                                                                                                                lf],
                                                                                                                                                                             @{typ
                                                                                                                                                                             "Capability \<times>
                                                                                                                                                                              state"}),
                                                                                                                                                                          close
                                                                                                                                                                            (var("v",
                                                                                                                                                                                 @{typ
                                                                                                                                                                                 "Capability \<times>
                                                                                                                                                                                  bool"}),
                                                                                                                                                                             mu(call
                                                                                                                                                                                  ("setTag",
                                                                                                                                                                                   @{typ Capability},
                                                                                                                                                                                   var("v",
                                                                                                                                                                                       @{typ
                                                                                                                                                                                       "Capability \<times>
                                                                                                                                                                                        bool"}),
                                                                                                                                                                                   @{theory}),
                                                                                                                                                                                @{typ
                                                                                                                                                                                "Capability \<times>
                                                                                                                                                                                 state"}))),
                                                                                                                                                                       close
                                                                                                                                                                         (var("v",
                                                                                                                                                                              @{typ Capability}),
                                                                                                                                                                          mw(close
                                                                                                                                                                               (var("s",
                                                                                                                                                                                    @{typ
                                                                                                                                                                                    "Capability \<times>
                                                                                                                                                                                     state"}),
                                                                                                                                                                                tp[var("v",
                                                                                                                                                                                       @{typ Capability}),
                                                                                                                                                                                   mop(Snd,
                                                                                                                                                                                       var("s",
                                                                                                                                                                                           @{typ
                                                                                                                                                                                           "Capability \<times>
                                                                                                                                                                                            state"}))])))))),
                                                                                                                                                              mu(lu,
                                                                                                                                                                 @{typ
                                                                                                                                                                 "Capability \<times>
                                                                                                                                                                  state"})))),
                                                                                                                                                    close
                                                                                                                                                      (var_a
                                                                                                                                                         HOLogic.unitT,
                                                                                                                                                       mb(md(const
                                                                                                                                                               ("exceptionSignalled",
                                                                                                                                                                @{typ
                                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                                 (bool \<times>
                                                                                                                                                                  state)"},
                                                                                                                                                                @{theory}),
                                                                                                                                                             @{typ Capability}),
                                                                                                                                                          close
                                                                                                                                                            (var_b"v",
                                                                                                                                                             mb(mb(mu(mop(Not,
                                                                                                                                                                          var_b"v"),
                                                                                                                                                                      @{typ
                                                                                                                                                                      "Capability \<times>
                                                                                                                                                                       state"}),
                                                                                                                                                                   close
                                                                                                                                                                     (var_b"b",
                                                                                                                                                                      ite(var_b"b",
                                                                                                                                                                          mb(mr(close
                                                                                                                                                                                  (var("s",
                                                                                                                                                                                       @{typ
                                                                                                                                                                                       "Capability \<times>
                                                                                                                                                                                        state"}),
                                                                                                                                                                                   mop(Fst,
                                                                                                                                                                                       var("s",
                                                                                                                                                                                           @{typ
                                                                                                                                                                                           "Capability \<times>
                                                                                                                                                                                            state"})))),
                                                                                                                                                                             close
                                                                                                                                                                               (var("v",
                                                                                                                                                                                    @{typ Capability}),
                                                                                                                                                                                mb(mu(tp[var("v",
                                                                                                                                                                                             @{typ Capability}),
                                                                                                                                                                                         var_w("cd",5)],
                                                                                                                                                                                      @{typ
                                                                                                                                                                                      "Capability \<times>
                                                                                                                                                                                       state"}),
                                                                                                                                                                                   close
                                                                                                                                                                                     (var("v",
                                                                                                                                                                                          @{typ
                                                                                                                                                                                          "Capability \<times>
                                                                                                                                                                                           5 word"}),
                                                                                                                                                                                      md(call
                                                                                                                                                                                           ("write'CAPR",
                                                                                                                                                                                            @{typ
                                                                                                                                                                                            "state \<Rightarrow>
                                                                                                                                                                                             (unit \<times>
                                                                                                                                                                                              state)"},
                                                                                                                                                                                            var("v",
                                                                                                                                                                                                @{typ
                                                                                                                                                                                                "Capability \<times>
                                                                                                                                                                                                 5 word"}),
                                                                                                                                                                                            @{theory}),
                                                                                                                                                                                         @{typ Capability}))))),
                                                                                                                                                                          mu(lu,
                                                                                                                                                                             @{typ
                                                                                                                                                                             "Capability \<times>
                                                                                                                                                                              state"})))),
                                                                                                                                                                close
                                                                                                                                                                  (var_a
                                                                                                                                                                     HOLogic.unitT,
                                                                                                                                                                   md(call
                                                                                                                                                                        ("write'LLbit",
                                                                                                                                                                         @{typ
                                                                                                                                                                         "state \<Rightarrow>
                                                                                                                                                                          (unit \<times>
                                                                                                                                                                           state)"},
                                                                                                                                                                         lo HOLogic.boolT,
                                                                                                                                                                         @{theory}),
                                                                                                                                                                      @{typ Capability})))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CLoad",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),var_w("s",1),var_w("t",2)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mb(call
                                     ("CAPR",
                                      @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var("v",@{typ Capability}),
                                      mb(mb(mu(call
                                                 ("getTag",HOLogic.boolT,var("v",@{typ Capability}),
                                                  @{theory}),qTy),
                                            close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                         close
                                           (var_b"b",
                                            ite(var_b"b",
                                                call
                                                  ("SignalCapException",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},
                                                   tp[lc("capExcTag","CapExceptionType",@{theory}),
                                                      var_w("cb",5)],@{theory}),
                                                mb(call
                                                     ("CAPR",
                                                      @{typ
                                                      "state \<Rightarrow>
                                                       (Capability \<times> state)"},var_w("cb",5),
                                                      @{theory}),
                                                   close
                                                     (var("v",@{typ Capability}),
                                                      mb(mu(call
                                                              ("getSealed",HOLogic.boolT,
                                                               var("v",@{typ Capability}),@{theory}),
                                                            qTy),
                                                         close
                                                           (var_b"b",
                                                            ite(var_b"b",
                                                                call
                                                                  ("SignalCapException",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (unit \<times> state)"},
                                                                   tp[lc("capExcSeal",
                                                                         "CapExceptionType",
                                                                         @{theory}),var_w("cb",5)],
                                                                   @{theory}),
                                                                mb(call
                                                                     ("CAPR",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (Capability \<times> state)"},
                                                                      var_w("cb",5),@{theory}),
                                                                   close
                                                                     (var("v",@{typ Capability}),
                                                                      mb(mb(mb(mu(call
                                                                                    ("getPerms",
                                                                                     @{typ Perms},
                                                                                     var("v",
                                                                                         @{typ Capability}),
                                                                                     @{theory}),qTy),
                                                                               close
                                                                                 (var("v",
                                                                                      @{typ Perms}),
                                                                                  mu(call
                                                                                       ("Perms.Permit_Load",
                                                                                        HOLogic.boolT,
                                                                                        var("v",
                                                                                            @{typ Perms}),
                                                                                        @{theory}),
                                                                                     qTy))),
                                                                            close
                                                                              (var_b"v",
                                                                               mu(mop(Not,var_b"v"),
                                                                                  qTy))),
                                                                         close
                                                                           (var_b"b",
                                                                            ite(var_b"b",
                                                                                call
                                                                                  ("SignalCapException",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[lc("capExcPermLoad",
                                                                                         "CapExceptionType",
                                                                                         @{theory}),
                                                                                      var_w("cb",5)],
                                                                                   @{theory}),
                                                                                mb(call
                                                                                     ("CAPR",
                                                                                      @{typ
                                                                                      "state \<Rightarrow>
                                                                                       (Capability \<times>
                                                                                        state)"},
                                                                                      var_w("cb",5),
                                                                                      @{theory}),
                                                                                   close
                                                                                     (var("cap_cb",
                                                                                          @{typ Capability}),
                                                                                      mb(call
                                                                                           ("GPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (64 word \<times>
                                                                                              state)"},
                                                                                            var_w("rt",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var_w("v",64),
                                                                                            mb(mb(mu(bop(Add,
                                                                                                         bop(Add,
                                                                                                             call
                                                                                                               ("getBase",
                                                                                                                w64,
                                                                                                                var("cap_cb",
                                                                                                                    @{typ Capability}),
                                                                                                                @{theory}),
                                                                                                             call
                                                                                                               ("getOffset",
                                                                                                                w64,
                                                                                                                var("cap_cb",
                                                                                                                    @{typ Capability}),
                                                                                                                @{theory})),
                                                                                                         var_w("v",64)),
                                                                                                     qTy),
                                                                                                  close
                                                                                                    (var_w("v",64),
                                                                                                     mu(bop(Add,
                                                                                                            var_w("v",64),
                                                                                                            mop(SE w64,
                                                                                                                bop(Lsl,
                                                                                                                    cc[rep(mop(Cast
                                                                                                                                 w1,
                                                                                                                               bop(Bit,
                                                                                                                                   var_w("offset",8),
                                                                                                                                   ln
                                                                                                                                    7)),
                                                                                                                           ln
                                                                                                                            3,
                                                                                                                           (Word_Lib.mk_wordT 3)),
                                                                                                                       var_w("offset",8)],
                                                                                                                    mop(Cast
                                                                                                                          HOLogic.natT,
                                                                                                                        var_w("t",2))))),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var_w("addr",64),
                                                                                                  mn(lx w64,
                                                                                                     mn(lx (Word_Lib.mk_wordT 3),
                                                                                                        mn(lw(0,
                                                                                                              3),
                                                                                                           mb(itb([(eq(var_w("t",2),
                                                                                                                       lw(0,
                                                                                                                          2)),
                                                                                                                    mb(mw(close
                                                                                                                            (var("s",
                                                                                                                                 @{typ
                                                                                                                                 "3 word \<times>
                                                                                                                                  3 word \<times>
                                                                                                                                  64 word \<times>
                                                                                                                                  state"}),
                                                                                                                             tp[mop(Fst,
                                                                                                                                    var("s",
                                                                                                                                        @{typ
                                                                                                                                        "3 word \<times>
                                                                                                                                         3 word \<times>
                                                                                                                                         64 word \<times>
                                                                                                                                         state"})),
                                                                                                                                let'
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   mop(Snd,
                                                                                                                                       var("s",
                                                                                                                                           @{typ
                                                                                                                                           "3 word \<times>
                                                                                                                                            3 word \<times>
                                                                                                                                            64 word \<times>
                                                                                                                                            state"})),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      lw(1,
                                                                                                                                         64),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])])),
                                                                                                                       close
                                                                                                                         (var_a
                                                                                                                            HOLogic.unitT,
                                                                                                                          mb(mw(close
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      const
                                                                                                                                        ("BYTE",
                                                                                                                                         (Word_Lib.mk_wordT 3),
                                                                                                                                         @{theory}),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])),
                                                                                                                             close
                                                                                                                               (var_a
                                                                                                                                  HOLogic.unitT,
                                                                                                                                mb(md(md(md(const
                                                                                                                                              ("BigEndianCPU",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (1 word \<times>
                                                                                                                                                 state)"},
                                                                                                                                               @{theory}),
                                                                                                                                            w64),
                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                      (Word_Lib.mk_wordT 3)),
                                                                                                                                   close
                                                                                                                                     (var_w("v",1),
                                                                                                                                      mb(mb(mu(rep(var_w("v",1),
                                                                                                                                                   ln
                                                                                                                                                    3,
                                                                                                                                                   (Word_Lib.mk_wordT 3)),
                                                                                                                                               @{typ
                                                                                                                                               "3 word \<times>
                                                                                                                                                3 word \<times>
                                                                                                                                                64 word \<times>
                                                                                                                                                state"}),
                                                                                                                                            close
                                                                                                                                              (var_w("v",3),
                                                                                                                                               mu(bop(BXor,
                                                                                                                                                      ex(var_w("addr",64),
                                                                                                                                                         ln
                                                                                                                                                          2,
                                                                                                                                                         ln
                                                                                                                                                          0,
                                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                                      var_w("v",3)),
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"}))),
                                                                                                                                         close
                                                                                                                                           (var_w("v",3),
                                                                                                                                            mw(close
                                                                                                                                                 (var("s",
                                                                                                                                                      @{typ
                                                                                                                                                      "3 word \<times>
                                                                                                                                                       3 word \<times>
                                                                                                                                                       64 word \<times>
                                                                                                                                                       state"}),
                                                                                                                                                  tp[var_w("v",3),
                                                                                                                                                     mop(Snd,
                                                                                                                                                         var("s",
                                                                                                                                                             @{typ
                                                                                                                                                             "3 word \<times>
                                                                                                                                                              3 word \<times>
                                                                                                                                                              64 word \<times>
                                                                                                                                                              state"}))]))))))))))),
                                                                                                                   (eq(var_w("t",2),
                                                                                                                       lw(1,
                                                                                                                          2)),
                                                                                                                    mb(mw(close
                                                                                                                            (var("s",
                                                                                                                                 @{typ
                                                                                                                                 "3 word \<times>
                                                                                                                                  3 word \<times>
                                                                                                                                  64 word \<times>
                                                                                                                                  state"}),
                                                                                                                             tp[mop(Fst,
                                                                                                                                    var("s",
                                                                                                                                        @{typ
                                                                                                                                        "3 word \<times>
                                                                                                                                         3 word \<times>
                                                                                                                                         64 word \<times>
                                                                                                                                         state"})),
                                                                                                                                let'
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   mop(Snd,
                                                                                                                                       var("s",
                                                                                                                                           @{typ
                                                                                                                                           "3 word \<times>
                                                                                                                                            3 word \<times>
                                                                                                                                            64 word \<times>
                                                                                                                                            state"})),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      lw(2,
                                                                                                                                         64),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])])),
                                                                                                                       close
                                                                                                                         (var_a
                                                                                                                            HOLogic.unitT,
                                                                                                                          mb(mw(close
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      const
                                                                                                                                        ("HALFWORD",
                                                                                                                                         (Word_Lib.mk_wordT 3),
                                                                                                                                         @{theory}),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])),
                                                                                                                             close
                                                                                                                               (var_a
                                                                                                                                  HOLogic.unitT,
                                                                                                                                mb(md(md(md(const
                                                                                                                                              ("BigEndianCPU",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (1 word \<times>
                                                                                                                                                 state)"},
                                                                                                                                               @{theory}),
                                                                                                                                            w64),
                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                      (Word_Lib.mk_wordT 3)),
                                                                                                                                   close
                                                                                                                                     (var_w("v",1),
                                                                                                                                      mb(mb(mb(mu(rep(var_w("v",1),
                                                                                                                                                      ln
                                                                                                                                                       2,
                                                                                                                                                      (Word_Lib.mk_wordT 2)),
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"}),
                                                                                                                                               close
                                                                                                                                                 (var_w("v",2),
                                                                                                                                                  mu(cc[var_w("v",2),
                                                                                                                                                        lw(0,
                                                                                                                                                           1)],
                                                                                                                                                     @{typ
                                                                                                                                                     "3 word \<times>
                                                                                                                                                      3 word \<times>
                                                                                                                                                      64 word \<times>
                                                                                                                                                      state"}))),
                                                                                                                                            close
                                                                                                                                              (var_w("v",3),
                                                                                                                                               mu(bop(BXor,
                                                                                                                                                      ex(var_w("addr",64),
                                                                                                                                                         ln
                                                                                                                                                          2,
                                                                                                                                                         ln
                                                                                                                                                          0,
                                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                                      var_w("v",3)),
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"}))),
                                                                                                                                         close
                                                                                                                                           (var_w("v",3),
                                                                                                                                            mw(close
                                                                                                                                                 (var("s",
                                                                                                                                                      @{typ
                                                                                                                                                      "3 word \<times>
                                                                                                                                                       3 word \<times>
                                                                                                                                                       64 word \<times>
                                                                                                                                                       state"}),
                                                                                                                                                  tp[var_w("v",3),
                                                                                                                                                     mop(Snd,
                                                                                                                                                         var("s",
                                                                                                                                                             @{typ
                                                                                                                                                             "3 word \<times>
                                                                                                                                                              3 word \<times>
                                                                                                                                                              64 word \<times>
                                                                                                                                                              state"}))]))))))))))),
                                                                                                                   (eq(var_w("t",2),
                                                                                                                       lw(2,
                                                                                                                          2)),
                                                                                                                    mb(mw(close
                                                                                                                            (var("s",
                                                                                                                                 @{typ
                                                                                                                                 "3 word \<times>
                                                                                                                                  3 word \<times>
                                                                                                                                  64 word \<times>
                                                                                                                                  state"}),
                                                                                                                             tp[mop(Fst,
                                                                                                                                    var("s",
                                                                                                                                        @{typ
                                                                                                                                        "3 word \<times>
                                                                                                                                         3 word \<times>
                                                                                                                                         64 word \<times>
                                                                                                                                         state"})),
                                                                                                                                let'
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   mop(Snd,
                                                                                                                                       var("s",
                                                                                                                                           @{typ
                                                                                                                                           "3 word \<times>
                                                                                                                                            3 word \<times>
                                                                                                                                            64 word \<times>
                                                                                                                                            state"})),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      lw(4,
                                                                                                                                         64),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])])),
                                                                                                                       close
                                                                                                                         (var_a
                                                                                                                            HOLogic.unitT,
                                                                                                                          mb(mw(close
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      const
                                                                                                                                        ("WORD",
                                                                                                                                         (Word_Lib.mk_wordT 3),
                                                                                                                                         @{theory}),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])),
                                                                                                                             close
                                                                                                                               (var_a
                                                                                                                                  HOLogic.unitT,
                                                                                                                                mb(md(md(md(const
                                                                                                                                              ("BigEndianCPU",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (1 word \<times>
                                                                                                                                                 state)"},
                                                                                                                                               @{theory}),
                                                                                                                                            w64),
                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                      (Word_Lib.mk_wordT 3)),
                                                                                                                                   close
                                                                                                                                     (var_w("v",1),
                                                                                                                                      mb(mb(mu(cc[var_w("v",1),
                                                                                                                                                  lw(0,
                                                                                                                                                     2)],
                                                                                                                                               @{typ
                                                                                                                                               "3 word \<times>
                                                                                                                                                3 word \<times>
                                                                                                                                                64 word \<times>
                                                                                                                                                state"}),
                                                                                                                                            close
                                                                                                                                              (var_w("v",3),
                                                                                                                                               mu(bop(BXor,
                                                                                                                                                      ex(var_w("addr",64),
                                                                                                                                                         ln
                                                                                                                                                          2,
                                                                                                                                                         ln
                                                                                                                                                          0,
                                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                                      var_w("v",3)),
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"}))),
                                                                                                                                         close
                                                                                                                                           (var_w("v",3),
                                                                                                                                            mw(close
                                                                                                                                                 (var("s",
                                                                                                                                                      @{typ
                                                                                                                                                      "3 word \<times>
                                                                                                                                                       3 word \<times>
                                                                                                                                                       64 word \<times>
                                                                                                                                                       state"}),
                                                                                                                                                  tp[var_w("v",3),
                                                                                                                                                     mop(Snd,
                                                                                                                                                         var("s",
                                                                                                                                                             @{typ
                                                                                                                                                             "3 word \<times>
                                                                                                                                                              3 word \<times>
                                                                                                                                                              64 word \<times>
                                                                                                                                                              state"}))]))))))))))),
                                                                                                                   (eq(var_w("t",2),
                                                                                                                       lw(3,
                                                                                                                          2)),
                                                                                                                    mb(mw(close
                                                                                                                            (var("s",
                                                                                                                                 @{typ
                                                                                                                                 "3 word \<times>
                                                                                                                                  3 word \<times>
                                                                                                                                  64 word \<times>
                                                                                                                                  state"}),
                                                                                                                             tp[mop(Fst,
                                                                                                                                    var("s",
                                                                                                                                        @{typ
                                                                                                                                        "3 word \<times>
                                                                                                                                         3 word \<times>
                                                                                                                                         64 word \<times>
                                                                                                                                         state"})),
                                                                                                                                let'
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   mop(Snd,
                                                                                                                                       var("s",
                                                                                                                                           @{typ
                                                                                                                                           "3 word \<times>
                                                                                                                                            3 word \<times>
                                                                                                                                            64 word \<times>
                                                                                                                                            state"})),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      lw(8,
                                                                                                                                         64),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])])),
                                                                                                                       close
                                                                                                                         (var_a
                                                                                                                            HOLogic.unitT,
                                                                                                                          mw(close
                                                                                                                               (var("s",
                                                                                                                                    @{typ
                                                                                                                                    "3 word \<times>
                                                                                                                                     3 word \<times>
                                                                                                                                     64 word \<times>
                                                                                                                                     state"}),
                                                                                                                                tp[mop(Fst,
                                                                                                                                       var("s",
                                                                                                                                           @{typ
                                                                                                                                           "3 word \<times>
                                                                                                                                            3 word \<times>
                                                                                                                                            64 word \<times>
                                                                                                                                            state"})),
                                                                                                                                   const
                                                                                                                                     ("DOUBLEWORD",
                                                                                                                                      (Word_Lib.mk_wordT 3),
                                                                                                                                      @{theory}),
                                                                                                                                   mop(Snd,
                                                                                                                                       mop(Snd,
                                                                                                                                           var("s",
                                                                                                                                               @{typ
                                                                                                                                               "3 word \<times>
                                                                                                                                                3 word \<times>
                                                                                                                                                64 word \<times>
                                                                                                                                                state"})))])))))],
                                                                                                                  lx(@{typ
                                                                                                                     "(3 word \<times>
                                                                                                                       3 word \<times>
                                                                                                                       64 word \<times>
                                                                                                                       state) \<Rightarrow>
                                                                                                                      (unit \<times>
                                                                                                                       3 word \<times>
                                                                                                                       3 word \<times>
                                                                                                                       64 word \<times>
                                                                                                                       state)"})),
                                                                                                              close
                                                                                                                (var_a
                                                                                                                   HOLogic.unitT,
                                                                                                                 mb(mr(close
                                                                                                                         (var("s",
                                                                                                                              @{typ
                                                                                                                              "3 word \<times>
                                                                                                                               3 word \<times>
                                                                                                                               64 word \<times>
                                                                                                                               state"}),
                                                                                                                          mop(Fst,
                                                                                                                              mop(Snd,
                                                                                                                                  mop(Snd,
                                                                                                                                      var("s",
                                                                                                                                          @{typ
                                                                                                                                          "3 word \<times>
                                                                                                                                           3 word \<times>
                                                                                                                                           64 word \<times>
                                                                                                                                           state"})))))),
                                                                                                                    close
                                                                                                                      (var_w("v",64),
                                                                                                                       mb(mb(mb(mu(cc[lw(0,
                                                                                                                                         1),
                                                                                                                                      var_w("v",64)],
                                                                                                                                   @{typ
                                                                                                                                   "3 word \<times>
                                                                                                                                    3 word \<times>
                                                                                                                                    64 word \<times>
                                                                                                                                    state"}),
                                                                                                                                close
                                                                                                                                  (var_w("v",65),
                                                                                                                                   mu(bop(Add,
                                                                                                                                          cc[lw(0,
                                                                                                                                                1),
                                                                                                                                             var_w("addr",64)],
                                                                                                                                          var_w("v",65)),
                                                                                                                                      @{typ
                                                                                                                                      "3 word \<times>
                                                                                                                                       3 word \<times>
                                                                                                                                       64 word \<times>
                                                                                                                                       state"}))),
                                                                                                                             close
                                                                                                                               (var_w("v",65),
                                                                                                                                mu(bop(Ugt,
                                                                                                                                       var_w("v",65),
                                                                                                                                       bop(Add,
                                                                                                                                           cc[lw(0,
                                                                                                                                                 1),
                                                                                                                                              call
                                                                                                                                                ("getBase",
                                                                                                                                                 w64,
                                                                                                                                                 var("cap_cb",
                                                                                                                                                     @{typ Capability}),
                                                                                                                                                 @{theory})],
                                                                                                                                           cc[lw(0,
                                                                                                                                                 1),
                                                                                                                                              call
                                                                                                                                                ("getLength",
                                                                                                                                                 w64,
                                                                                                                                                 var("cap_cb",
                                                                                                                                                     @{typ Capability}),
                                                                                                                                                 @{theory})])),
                                                                                                                                   @{typ
                                                                                                                                   "3 word \<times>
                                                                                                                                    3 word \<times>
                                                                                                                                    64 word \<times>
                                                                                                                                    state"}))),
                                                                                                                          close
                                                                                                                            (var_b"b",
                                                                                                                             itb([(var_b"b",
                                                                                                                                   md(md(md(call
                                                                                                                                              ("SignalCapException",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (unit \<times>
                                                                                                                                                 state)"},
                                                                                                                                               tp[lc("capExcLength",
                                                                                                                                                     "CapExceptionType",
                                                                                                                                                     @{theory}),
                                                                                                                                                  var_w("cb",5)],
                                                                                                                                               @{theory}),
                                                                                                                                            w64),
                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                      (Word_Lib.mk_wordT 3))),
                                                                                                                                  (bop(Ult,
                                                                                                                                       var_w("addr",64),
                                                                                                                                       call
                                                                                                                                         ("getBase",
                                                                                                                                          w64,
                                                                                                                                          var("cap_cb",
                                                                                                                                              @{typ Capability}),
                                                                                                                                          @{theory})),
                                                                                                                                   md(md(md(call
                                                                                                                                              ("SignalCapException",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (unit \<times>
                                                                                                                                                 state)"},
                                                                                                                                               tp[lc("capExcLength",
                                                                                                                                                     "CapExceptionType",
                                                                                                                                                     @{theory}),
                                                                                                                                                  var_w("cb",5)],
                                                                                                                                               @{theory}),
                                                                                                                                            w64),
                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                      (Word_Lib.mk_wordT 3)))],
                                                                                                                                 mb(mr(close
                                                                                                                                         (var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"}),
                                                                                                                                          mop(Fst,
                                                                                                                                              mop(Snd,
                                                                                                                                                  var("s",
                                                                                                                                                      @{typ
                                                                                                                                                      "3 word \<times>
                                                                                                                                                       3 word \<times>
                                                                                                                                                       64 word \<times>
                                                                                                                                                       state"}))))),
                                                                                                                                    close
                                                                                                                                      (var_w("v",3),
                                                                                                                                       mb(mb(mu(tp[var_w("v",3),
                                                                                                                                                   lt,
                                                                                                                                                   var_w("addr",64),
                                                                                                                                                   lf],
                                                                                                                                                @{typ
                                                                                                                                                "3 word \<times>
                                                                                                                                                 3 word \<times>
                                                                                                                                                 64 word \<times>
                                                                                                                                                 state"}),
                                                                                                                                             close
                                                                                                                                               (var("v",
                                                                                                                                                    @{typ
                                                                                                                                                    "3 word \<times>
                                                                                                                                                     bool \<times>
                                                                                                                                                     64 word \<times>
                                                                                                                                                     bool"}),
                                                                                                                                                md(md(md(call
                                                                                                                                                           ("LoadMemoryCap",
                                                                                                                                                            @{typ
                                                                                                                                                            "state \<Rightarrow>
                                                                                                                                                             (64 word \<times>
                                                                                                                                                              state)"},
                                                                                                                                                            var("v",
                                                                                                                                                                @{typ
                                                                                                                                                                "3 word \<times>
                                                                                                                                                                 bool \<times>
                                                                                                                                                                 64 word \<times>
                                                                                                                                                                 bool"}),
                                                                                                                                                            @{theory}),
                                                                                                                                                         w64),
                                                                                                                                                      (Word_Lib.mk_wordT 3)),
                                                                                                                                                   (Word_Lib.mk_wordT 3)))),
                                                                                                                                          close
                                                                                                                                            (var_w("data",64),
                                                                                                                                             mb(md(md(md(const
                                                                                                                                                           ("exceptionSignalled",
                                                                                                                                                            @{typ
                                                                                                                                                            "state \<Rightarrow>
                                                                                                                                                             (bool \<times>
                                                                                                                                                              state)"},
                                                                                                                                                            @{theory}),
                                                                                                                                                         w64),
                                                                                                                                                      (Word_Lib.mk_wordT 3)),
                                                                                                                                                   (Word_Lib.mk_wordT 3)),
                                                                                                                                                close
                                                                                                                                                  (var_b"v",
                                                                                                                                                   mb(mu(mop(Not,
                                                                                                                                                             var_b"v"),
                                                                                                                                                         @{typ
                                                                                                                                                         "3 word \<times>
                                                                                                                                                          3 word \<times>
                                                                                                                                                          64 word \<times>
                                                                                                                                                          state"}),
                                                                                                                                                      close
                                                                                                                                                        (var_b"b",
                                                                                                                                                         ite(var_b"b",
                                                                                                                                                             mb(mr(close
                                                                                                                                                                     (var("s",
                                                                                                                                                                          @{typ
                                                                                                                                                                          "3 word \<times>
                                                                                                                                                                           3 word \<times>
                                                                                                                                                                           64 word \<times>
                                                                                                                                                                           state"}),
                                                                                                                                                                      mop(Fst,
                                                                                                                                                                          var("s",
                                                                                                                                                                              @{typ
                                                                                                                                                                              "3 word \<times>
                                                                                                                                                                               3 word \<times>
                                                                                                                                                                               64 word \<times>
                                                                                                                                                                               state"})))),
                                                                                                                                                                close
                                                                                                                                                                  (var_w("v",3),
                                                                                                                                                                   mb(mb(mu(mop(Cast
                                                                                                                                                                                  HOLogic.natT,
                                                                                                                                                                                var_w("v",3)),
                                                                                                                                                                            @{typ
                                                                                                                                                                            "3 word \<times>
                                                                                                                                                                             3 word \<times>
                                                                                                                                                                             64 word \<times>
                                                                                                                                                                             state"}),
                                                                                                                                                                         close
                                                                                                                                                                           (var_n"v",
                                                                                                                                                                            mu(bop(Mul,
                                                                                                                                                                                   var_n"v",
                                                                                                                                                                                   ln
                                                                                                                                                                                    8),
                                                                                                                                                                               @{typ
                                                                                                                                                                               "3 word \<times>
                                                                                                                                                                                3 word \<times>
                                                                                                                                                                                64 word \<times>
                                                                                                                                                                                state"}))),
                                                                                                                                                                      close
                                                                                                                                                                        (var_n"bottom",
                                                                                                                                                                         mb(mr(close
                                                                                                                                                                                 (var("s",
                                                                                                                                                                                      @{typ
                                                                                                                                                                                      "3 word \<times>
                                                                                                                                                                                       3 word \<times>
                                                                                                                                                                                       64 word \<times>
                                                                                                                                                                                       state"}),
                                                                                                                                                                                  mop(Fst,
                                                                                                                                                                                      var("s",
                                                                                                                                                                                          @{typ
                                                                                                                                                                                          "3 word \<times>
                                                                                                                                                                                           3 word \<times>
                                                                                                                                                                                           64 word \<times>
                                                                                                                                                                                           state"})))),
                                                                                                                                                                            close
                                                                                                                                                                              (var_w("v",3),
                                                                                                                                                                               mb(mb(mb(mb(mu(mop(Cast
                                                                                                                                                                                                    HOLogic.natT,
                                                                                                                                                                                                  var_w("v",3)),
                                                                                                                                                                                              @{typ
                                                                                                                                                                                              "3 word \<times>
                                                                                                                                                                                               3 word \<times>
                                                                                                                                                                                               64 word \<times>
                                                                                                                                                                                               state"}),
                                                                                                                                                                                           close
                                                                                                                                                                                             (var_n"v",
                                                                                                                                                                                              mu(bop(Mul,
                                                                                                                                                                                                     var_n"v",
                                                                                                                                                                                                     ln
                                                                                                                                                                                                      8),
                                                                                                                                                                                                 @{typ
                                                                                                                                                                                                 "3 word \<times>
                                                                                                                                                                                                  3 word \<times>
                                                                                                                                                                                                  64 word \<times>
                                                                                                                                                                                                  state"}))),
                                                                                                                                                                                        close
                                                                                                                                                                                          (var_n"v",
                                                                                                                                                                                           mb(mr(close
                                                                                                                                                                                                   (var("s",
                                                                                                                                                                                                        @{typ
                                                                                                                                                                                                        "3 word \<times>
                                                                                                                                                                                                         3 word \<times>
                                                                                                                                                                                                         64 word \<times>
                                                                                                                                                                                                         state"}),
                                                                                                                                                                                                    mop(Fst,
                                                                                                                                                                                                        mop(Snd,
                                                                                                                                                                                                            mop(Snd,
                                                                                                                                                                                                                var("s",
                                                                                                                                                                                                                    @{typ
                                                                                                                                                                                                                    "3 word \<times>
                                                                                                                                                                                                                     3 word \<times>
                                                                                                                                                                                                                     64 word \<times>
                                                                                                                                                                                                                     state"})))))),
                                                                                                                                                                                              close
                                                                                                                                                                                                (var_w("v0",64),
                                                                                                                                                                                                 mb(mb(mu(mop(Cast
                                                                                                                                                                                                                HOLogic.natT,
                                                                                                                                                                                                              var_w("v0",64)),
                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                          "3 word \<times>
                                                                                                                                                                                                           3 word \<times>
                                                                                                                                                                                                           64 word \<times>
                                                                                                                                                                                                           state"}),
                                                                                                                                                                                                       close
                                                                                                                                                                                                         (var_n"v",
                                                                                                                                                                                                          mu(bop(Mul,
                                                                                                                                                                                                                 var_n"v",
                                                                                                                                                                                                                 ln
                                                                                                                                                                                                                  8),
                                                                                                                                                                                                             @{typ
                                                                                                                                                                                                             "3 word \<times>
                                                                                                                                                                                                              3 word \<times>
                                                                                                                                                                                                              64 word \<times>
                                                                                                                                                                                                              state"}))),
                                                                                                                                                                                                    close
                                                                                                                                                                                                      (var_n"v0",
                                                                                                                                                                                                       mu(bop(Add,
                                                                                                                                                                                                              var_n"v",
                                                                                                                                                                                                              var_n"v0"),
                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                          "3 word \<times>
                                                                                                                                                                                                           3 word \<times>
                                                                                                                                                                                                           64 word \<times>
                                                                                                                                                                                                           state"}))))))),
                                                                                                                                                                                     close
                                                                                                                                                                                       (var_n"v",
                                                                                                                                                                                        mu(bop(Sub,
                                                                                                                                                                                               var_n"v",
                                                                                                                                                                                               ln
                                                                                                                                                                                                1),
                                                                                                                                                                                           @{typ
                                                                                                                                                                                           "3 word \<times>
                                                                                                                                                                                            3 word \<times>
                                                                                                                                                                                            64 word \<times>
                                                                                                                                                                                            state"}))),
                                                                                                                                                                                  close
                                                                                                                                                                                    (var_n"top",
                                                                                                                                                                                     let'
                                                                                                                                                                                       (var_v"final_data",
                                                                                                                                                                                        ex(mop(Cast
                                                                                                                                                                                                 (@{typ
                                                                                                                                                                                                  "bool list"}),
                                                                                                                                                                                               var_w("data",64)),
                                                                                                                                                                                           var_n"top",
                                                                                                                                                                                           var_n"bottom",
                                                                                                                                                                                           @{typ
                                                                                                                                                                                           "bool list"}),
                                                                                                                                                                                        ite(eq(var_w("s",1),
                                                                                                                                                                                               lw(0,
                                                                                                                                                                                                  1)),
                                                                                                                                                                                            md(md(md(call
                                                                                                                                                                                                       ("write'GPR",
                                                                                                                                                                                                        @{typ
                                                                                                                                                                                                        "state \<Rightarrow>
                                                                                                                                                                                                         (unit \<times>
                                                                                                                                                                                                          state)"},
                                                                                                                                                                                                        tp[mop(Cast
                                                                                                                                                                                                                 w64,
                                                                                                                                                                                                               call
                                                                                                                                                                                                                 ("ZeroExtendBitString",
                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                  "bool list"},
                                                                                                                                                                                                                  tp[ln
                                                                                                                                                                                                                      64,
                                                                                                                                                                                                                     var_v"final_data"],
                                                                                                                                                                                                                  @{theory})),
                                                                                                                                                                                                           var_w("rd",5)],
                                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                                     w64),
                                                                                                                                                                                                  (Word_Lib.mk_wordT 3)),
                                                                                                                                                                                               (Word_Lib.mk_wordT 3)),
                                                                                                                                                                                            md(md(md(call
                                                                                                                                                                                                       ("write'GPR",
                                                                                                                                                                                                        @{typ
                                                                                                                                                                                                        "state \<Rightarrow>
                                                                                                                                                                                                         (unit \<times>
                                                                                                                                                                                                          state)"},
                                                                                                                                                                                                        tp[mop(Cast
                                                                                                                                                                                                                 w64,
                                                                                                                                                                                                               call
                                                                                                                                                                                                                 ("SignExtendBitString",
                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                  "bool list"},
                                                                                                                                                                                                                  tp[ln
                                                                                                                                                                                                                      64,
                                                                                                                                                                                                                     var_v"final_data"],
                                                                                                                                                                                                                  @{theory})),
                                                                                                                                                                                                           var_w("rd",5)],
                                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                                     w64),
                                                                                                                                                                                                  (Word_Lib.mk_wordT 3)),
                                                                                                                                                                                               (Word_Lib.mk_wordT 3)))))))))))),
                                                                                                                                                             mu(lu,
                                                                                                                                                                @{typ
                                                                                                                                                                "3 word \<times>
                                                                                                                                                                 3 word \<times>
                                                                                                                                                                 64 word \<times>
                                                                                                                                                                 state"})))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CStore",
   close
     (tp[var_w("rs",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),var_w("t",2)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cb",5)],@{theory}),
                                mb(call
                                     ("CAPR",
                                      @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var("v",@{typ Capability}),
                                      mb(mb(mu(call
                                                 ("getTag",HOLogic.boolT,var("v",@{typ Capability}),
                                                  @{theory}),qTy),
                                            close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                         close
                                           (var_b"b",
                                            ite(var_b"b",
                                                call
                                                  ("SignalCapException",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},
                                                   tp[lc("capExcTag","CapExceptionType",@{theory}),
                                                      var_w("cb",5)],@{theory}),
                                                mb(call
                                                     ("CAPR",
                                                      @{typ
                                                      "state \<Rightarrow>
                                                       (Capability \<times> state)"},var_w("cb",5),
                                                      @{theory}),
                                                   close
                                                     (var("v",@{typ Capability}),
                                                      mb(mu(call
                                                              ("getSealed",HOLogic.boolT,
                                                               var("v",@{typ Capability}),@{theory}),
                                                            qTy),
                                                         close
                                                           (var_b"b",
                                                            ite(var_b"b",
                                                                call
                                                                  ("SignalCapException",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (unit \<times> state)"},
                                                                   tp[lc("capExcSeal",
                                                                         "CapExceptionType",
                                                                         @{theory}),var_w("cb",5)],
                                                                   @{theory}),
                                                                mb(call
                                                                     ("CAPR",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (Capability \<times> state)"},
                                                                      var_w("cb",5),@{theory}),
                                                                   close
                                                                     (var("v",@{typ Capability}),
                                                                      mb(mb(mb(mu(call
                                                                                    ("getPerms",
                                                                                     @{typ Perms},
                                                                                     var("v",
                                                                                         @{typ Capability}),
                                                                                     @{theory}),qTy),
                                                                               close
                                                                                 (var("v",
                                                                                      @{typ Perms}),
                                                                                  mu(call
                                                                                       ("Perms.Permit_Store",
                                                                                        HOLogic.boolT,
                                                                                        var("v",
                                                                                            @{typ Perms}),
                                                                                        @{theory}),
                                                                                     qTy))),
                                                                            close
                                                                              (var_b"v",
                                                                               mu(mop(Not,var_b"v"),
                                                                                  qTy))),
                                                                         close
                                                                           (var_b"b",
                                                                            ite(var_b"b",
                                                                                call
                                                                                  ("SignalCapException",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[lc("capExcPermStore",
                                                                                         "CapExceptionType",
                                                                                         @{theory}),
                                                                                      var_w("cb",5)],
                                                                                   @{theory}),
                                                                                mb(call
                                                                                     ("CAPR",
                                                                                      @{typ
                                                                                      "state \<Rightarrow>
                                                                                       (Capability \<times>
                                                                                        state)"},
                                                                                      var_w("cb",5),
                                                                                      @{theory}),
                                                                                   close
                                                                                     (var("cap_cb",
                                                                                          @{typ Capability}),
                                                                                      mb(call
                                                                                           ("GPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (64 word \<times>
                                                                                              state)"},
                                                                                            var_w("rt",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var_w("v",64),
                                                                                            mb(mb(mu(bop(Add,
                                                                                                         bop(Add,
                                                                                                             call
                                                                                                               ("getBase",
                                                                                                                w64,
                                                                                                                var("cap_cb",
                                                                                                                    @{typ Capability}),
                                                                                                                @{theory}),
                                                                                                             call
                                                                                                               ("getOffset",
                                                                                                                w64,
                                                                                                                var("cap_cb",
                                                                                                                    @{typ Capability}),
                                                                                                                @{theory})),
                                                                                                         var_w("v",64)),
                                                                                                     qTy),
                                                                                                  close
                                                                                                    (var_w("v",64),
                                                                                                     mu(bop(Add,
                                                                                                            var_w("v",64),
                                                                                                            mop(SE w64,
                                                                                                                bop(Lsl,
                                                                                                                    cc[rep(mop(Cast
                                                                                                                                 w1,
                                                                                                                               bop(Bit,
                                                                                                                                   var_w("offset",8),
                                                                                                                                   ln
                                                                                                                                    7)),
                                                                                                                           ln
                                                                                                                            3,
                                                                                                                           (Word_Lib.mk_wordT 3)),
                                                                                                                       var_w("offset",8)],
                                                                                                                    mop(Cast
                                                                                                                          HOLogic.natT,
                                                                                                                        var_w("t",2))))),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var_w("addr",64),
                                                                                                  mn(lx w64,
                                                                                                     mn(lx (Word_Lib.mk_wordT 3),
                                                                                                        mn(lw(0,
                                                                                                              3),
                                                                                                           mb(itb([(eq(var_w("t",2),
                                                                                                                       lw(0,
                                                                                                                          2)),
                                                                                                                    mb(mw(close
                                                                                                                            (var("s",
                                                                                                                                 @{typ
                                                                                                                                 "3 word \<times>
                                                                                                                                  3 word \<times>
                                                                                                                                  64 word \<times>
                                                                                                                                  state"}),
                                                                                                                             tp[mop(Fst,
                                                                                                                                    var("s",
                                                                                                                                        @{typ
                                                                                                                                        "3 word \<times>
                                                                                                                                         3 word \<times>
                                                                                                                                         64 word \<times>
                                                                                                                                         state"})),
                                                                                                                                let'
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   mop(Snd,
                                                                                                                                       var("s",
                                                                                                                                           @{typ
                                                                                                                                           "3 word \<times>
                                                                                                                                            3 word \<times>
                                                                                                                                            64 word \<times>
                                                                                                                                            state"})),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      lw(1,
                                                                                                                                         64),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])])),
                                                                                                                       close
                                                                                                                         (var_a
                                                                                                                            HOLogic.unitT,
                                                                                                                          mb(mw(close
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      const
                                                                                                                                        ("BYTE",
                                                                                                                                         (Word_Lib.mk_wordT 3),
                                                                                                                                         @{theory}),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])),
                                                                                                                             close
                                                                                                                               (var_a
                                                                                                                                  HOLogic.unitT,
                                                                                                                                mb(md(md(md(const
                                                                                                                                              ("BigEndianCPU",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (1 word \<times>
                                                                                                                                                 state)"},
                                                                                                                                               @{theory}),
                                                                                                                                            w64),
                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                      (Word_Lib.mk_wordT 3)),
                                                                                                                                   close
                                                                                                                                     (var_w("v",1),
                                                                                                                                      mb(mb(mu(rep(var_w("v",1),
                                                                                                                                                   ln
                                                                                                                                                    3,
                                                                                                                                                   (Word_Lib.mk_wordT 3)),
                                                                                                                                               @{typ
                                                                                                                                               "3 word \<times>
                                                                                                                                                3 word \<times>
                                                                                                                                                64 word \<times>
                                                                                                                                                state"}),
                                                                                                                                            close
                                                                                                                                              (var_w("v",3),
                                                                                                                                               mu(bop(BXor,
                                                                                                                                                      ex(var_w("addr",64),
                                                                                                                                                         ln
                                                                                                                                                          2,
                                                                                                                                                         ln
                                                                                                                                                          0,
                                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                                      var_w("v",3)),
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"}))),
                                                                                                                                         close
                                                                                                                                           (var_w("v",3),
                                                                                                                                            mw(close
                                                                                                                                                 (var("s",
                                                                                                                                                      @{typ
                                                                                                                                                      "3 word \<times>
                                                                                                                                                       3 word \<times>
                                                                                                                                                       64 word \<times>
                                                                                                                                                       state"}),
                                                                                                                                                  tp[var_w("v",3),
                                                                                                                                                     mop(Snd,
                                                                                                                                                         var("s",
                                                                                                                                                             @{typ
                                                                                                                                                             "3 word \<times>
                                                                                                                                                              3 word \<times>
                                                                                                                                                              64 word \<times>
                                                                                                                                                              state"}))]))))))))))),
                                                                                                                   (eq(var_w("t",2),
                                                                                                                       lw(1,
                                                                                                                          2)),
                                                                                                                    mb(mw(close
                                                                                                                            (var("s",
                                                                                                                                 @{typ
                                                                                                                                 "3 word \<times>
                                                                                                                                  3 word \<times>
                                                                                                                                  64 word \<times>
                                                                                                                                  state"}),
                                                                                                                             tp[mop(Fst,
                                                                                                                                    var("s",
                                                                                                                                        @{typ
                                                                                                                                        "3 word \<times>
                                                                                                                                         3 word \<times>
                                                                                                                                         64 word \<times>
                                                                                                                                         state"})),
                                                                                                                                let'
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   mop(Snd,
                                                                                                                                       var("s",
                                                                                                                                           @{typ
                                                                                                                                           "3 word \<times>
                                                                                                                                            3 word \<times>
                                                                                                                                            64 word \<times>
                                                                                                                                            state"})),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      lw(2,
                                                                                                                                         64),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])])),
                                                                                                                       close
                                                                                                                         (var_a
                                                                                                                            HOLogic.unitT,
                                                                                                                          mb(mw(close
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      const
                                                                                                                                        ("HALFWORD",
                                                                                                                                         (Word_Lib.mk_wordT 3),
                                                                                                                                         @{theory}),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])),
                                                                                                                             close
                                                                                                                               (var_a
                                                                                                                                  HOLogic.unitT,
                                                                                                                                mb(md(md(md(const
                                                                                                                                              ("BigEndianCPU",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (1 word \<times>
                                                                                                                                                 state)"},
                                                                                                                                               @{theory}),
                                                                                                                                            w64),
                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                      (Word_Lib.mk_wordT 3)),
                                                                                                                                   close
                                                                                                                                     (var_w("v",1),
                                                                                                                                      mb(mb(mb(mu(rep(var_w("v",1),
                                                                                                                                                      ln
                                                                                                                                                       2,
                                                                                                                                                      (Word_Lib.mk_wordT 2)),
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"}),
                                                                                                                                               close
                                                                                                                                                 (var_w("v",2),
                                                                                                                                                  mu(cc[var_w("v",2),
                                                                                                                                                        lw(0,
                                                                                                                                                           1)],
                                                                                                                                                     @{typ
                                                                                                                                                     "3 word \<times>
                                                                                                                                                      3 word \<times>
                                                                                                                                                      64 word \<times>
                                                                                                                                                      state"}))),
                                                                                                                                            close
                                                                                                                                              (var_w("v",3),
                                                                                                                                               mu(bop(BXor,
                                                                                                                                                      ex(var_w("addr",64),
                                                                                                                                                         ln
                                                                                                                                                          2,
                                                                                                                                                         ln
                                                                                                                                                          0,
                                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                                      var_w("v",3)),
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"}))),
                                                                                                                                         close
                                                                                                                                           (var_w("v",3),
                                                                                                                                            mw(close
                                                                                                                                                 (var("s",
                                                                                                                                                      @{typ
                                                                                                                                                      "3 word \<times>
                                                                                                                                                       3 word \<times>
                                                                                                                                                       64 word \<times>
                                                                                                                                                       state"}),
                                                                                                                                                  tp[var_w("v",3),
                                                                                                                                                     mop(Snd,
                                                                                                                                                         var("s",
                                                                                                                                                             @{typ
                                                                                                                                                             "3 word \<times>
                                                                                                                                                              3 word \<times>
                                                                                                                                                              64 word \<times>
                                                                                                                                                              state"}))]))))))))))),
                                                                                                                   (eq(var_w("t",2),
                                                                                                                       lw(2,
                                                                                                                          2)),
                                                                                                                    mb(mw(close
                                                                                                                            (var("s",
                                                                                                                                 @{typ
                                                                                                                                 "3 word \<times>
                                                                                                                                  3 word \<times>
                                                                                                                                  64 word \<times>
                                                                                                                                  state"}),
                                                                                                                             tp[mop(Fst,
                                                                                                                                    var("s",
                                                                                                                                        @{typ
                                                                                                                                        "3 word \<times>
                                                                                                                                         3 word \<times>
                                                                                                                                         64 word \<times>
                                                                                                                                         state"})),
                                                                                                                                let'
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   mop(Snd,
                                                                                                                                       var("s",
                                                                                                                                           @{typ
                                                                                                                                           "3 word \<times>
                                                                                                                                            3 word \<times>
                                                                                                                                            64 word \<times>
                                                                                                                                            state"})),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      lw(4,
                                                                                                                                         64),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])])),
                                                                                                                       close
                                                                                                                         (var_a
                                                                                                                            HOLogic.unitT,
                                                                                                                          mb(mw(close
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      const
                                                                                                                                        ("WORD",
                                                                                                                                         (Word_Lib.mk_wordT 3),
                                                                                                                                         @{theory}),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])),
                                                                                                                             close
                                                                                                                               (var_a
                                                                                                                                  HOLogic.unitT,
                                                                                                                                mb(md(md(md(const
                                                                                                                                              ("BigEndianCPU",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (1 word \<times>
                                                                                                                                                 state)"},
                                                                                                                                               @{theory}),
                                                                                                                                            w64),
                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                      (Word_Lib.mk_wordT 3)),
                                                                                                                                   close
                                                                                                                                     (var_w("v",1),
                                                                                                                                      mb(mb(mb(mu(rep(var_w("v",1),
                                                                                                                                                      ln
                                                                                                                                                       1,
                                                                                                                                                      w1),
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"}),
                                                                                                                                               close
                                                                                                                                                 (var_w("v",1),
                                                                                                                                                  mu(cc[var_w("v",1),
                                                                                                                                                        lw(0,
                                                                                                                                                           2)],
                                                                                                                                                     @{typ
                                                                                                                                                     "3 word \<times>
                                                                                                                                                      3 word \<times>
                                                                                                                                                      64 word \<times>
                                                                                                                                                      state"}))),
                                                                                                                                            close
                                                                                                                                              (var_w("v",3),
                                                                                                                                               mu(bop(BXor,
                                                                                                                                                      ex(var_w("addr",64),
                                                                                                                                                         ln
                                                                                                                                                          2,
                                                                                                                                                         ln
                                                                                                                                                          0,
                                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                                      var_w("v",3)),
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"}))),
                                                                                                                                         close
                                                                                                                                           (var_w("v",3),
                                                                                                                                            mw(close
                                                                                                                                                 (var("s",
                                                                                                                                                      @{typ
                                                                                                                                                      "3 word \<times>
                                                                                                                                                       3 word \<times>
                                                                                                                                                       64 word \<times>
                                                                                                                                                       state"}),
                                                                                                                                                  tp[var_w("v",3),
                                                                                                                                                     mop(Snd,
                                                                                                                                                         var("s",
                                                                                                                                                             @{typ
                                                                                                                                                             "3 word \<times>
                                                                                                                                                              3 word \<times>
                                                                                                                                                              64 word \<times>
                                                                                                                                                              state"}))]))))))))))),
                                                                                                                   (eq(var_w("t",2),
                                                                                                                       lw(3,
                                                                                                                          2)),
                                                                                                                    mb(mw(close
                                                                                                                            (var("s",
                                                                                                                                 @{typ
                                                                                                                                 "3 word \<times>
                                                                                                                                  3 word \<times>
                                                                                                                                  64 word \<times>
                                                                                                                                  state"}),
                                                                                                                             tp[mop(Fst,
                                                                                                                                    var("s",
                                                                                                                                        @{typ
                                                                                                                                        "3 word \<times>
                                                                                                                                         3 word \<times>
                                                                                                                                         64 word \<times>
                                                                                                                                         state"})),
                                                                                                                                let'
                                                                                                                                  (var("s",
                                                                                                                                       @{typ
                                                                                                                                       "3 word \<times>
                                                                                                                                        64 word \<times>
                                                                                                                                        state"}),
                                                                                                                                   mop(Snd,
                                                                                                                                       var("s",
                                                                                                                                           @{typ
                                                                                                                                           "3 word \<times>
                                                                                                                                            3 word \<times>
                                                                                                                                            64 word \<times>
                                                                                                                                            state"})),
                                                                                                                                   tp[mop(Fst,
                                                                                                                                          var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"})),
                                                                                                                                      lw(8,
                                                                                                                                         64),
                                                                                                                                      mop(Snd,
                                                                                                                                          mop(Snd,
                                                                                                                                              var("s",
                                                                                                                                                  @{typ
                                                                                                                                                  "3 word \<times>
                                                                                                                                                   64 word \<times>
                                                                                                                                                   state"})))])])),
                                                                                                                       close
                                                                                                                         (var_a
                                                                                                                            HOLogic.unitT,
                                                                                                                          mw(close
                                                                                                                               (var("s",
                                                                                                                                    @{typ
                                                                                                                                    "3 word \<times>
                                                                                                                                     3 word \<times>
                                                                                                                                     64 word \<times>
                                                                                                                                     state"}),
                                                                                                                                tp[mop(Fst,
                                                                                                                                       var("s",
                                                                                                                                           @{typ
                                                                                                                                           "3 word \<times>
                                                                                                                                            3 word \<times>
                                                                                                                                            64 word \<times>
                                                                                                                                            state"})),
                                                                                                                                   const
                                                                                                                                     ("DOUBLEWORD",
                                                                                                                                      (Word_Lib.mk_wordT 3),
                                                                                                                                      @{theory}),
                                                                                                                                   mop(Snd,
                                                                                                                                       mop(Snd,
                                                                                                                                           var("s",
                                                                                                                                               @{typ
                                                                                                                                               "3 word \<times>
                                                                                                                                                3 word \<times>
                                                                                                                                                64 word \<times>
                                                                                                                                                state"})))])))))],
                                                                                                                  lx(@{typ
                                                                                                                     "(3 word \<times>
                                                                                                                       3 word \<times>
                                                                                                                       64 word \<times>
                                                                                                                       state) \<Rightarrow>
                                                                                                                      (unit \<times>
                                                                                                                       3 word \<times>
                                                                                                                       3 word \<times>
                                                                                                                       64 word \<times>
                                                                                                                       state)"})),
                                                                                                              close
                                                                                                                (var_a
                                                                                                                   HOLogic.unitT,
                                                                                                                 mb(mr(close
                                                                                                                         (var("s",
                                                                                                                              @{typ
                                                                                                                              "3 word \<times>
                                                                                                                               3 word \<times>
                                                                                                                               64 word \<times>
                                                                                                                               state"}),
                                                                                                                          mop(Fst,
                                                                                                                              mop(Snd,
                                                                                                                                  mop(Snd,
                                                                                                                                      var("s",
                                                                                                                                          @{typ
                                                                                                                                          "3 word \<times>
                                                                                                                                           3 word \<times>
                                                                                                                                           64 word \<times>
                                                                                                                                           state"})))))),
                                                                                                                    close
                                                                                                                      (var_w("v",64),
                                                                                                                       mb(mb(mb(mu(cc[lw(0,
                                                                                                                                         1),
                                                                                                                                      var_w("v",64)],
                                                                                                                                   @{typ
                                                                                                                                   "3 word \<times>
                                                                                                                                    3 word \<times>
                                                                                                                                    64 word \<times>
                                                                                                                                    state"}),
                                                                                                                                close
                                                                                                                                  (var_w("v",65),
                                                                                                                                   mu(bop(Add,
                                                                                                                                          cc[lw(0,
                                                                                                                                                1),
                                                                                                                                             var_w("addr",64)],
                                                                                                                                          var_w("v",65)),
                                                                                                                                      @{typ
                                                                                                                                      "3 word \<times>
                                                                                                                                       3 word \<times>
                                                                                                                                       64 word \<times>
                                                                                                                                       state"}))),
                                                                                                                             close
                                                                                                                               (var_w("v",65),
                                                                                                                                mu(bop(Ugt,
                                                                                                                                       var_w("v",65),
                                                                                                                                       bop(Add,
                                                                                                                                           cc[lw(0,
                                                                                                                                                 1),
                                                                                                                                              call
                                                                                                                                                ("getBase",
                                                                                                                                                 w64,
                                                                                                                                                 var("cap_cb",
                                                                                                                                                     @{typ Capability}),
                                                                                                                                                 @{theory})],
                                                                                                                                           cc[lw(0,
                                                                                                                                                 1),
                                                                                                                                              call
                                                                                                                                                ("getLength",
                                                                                                                                                 w64,
                                                                                                                                                 var("cap_cb",
                                                                                                                                                     @{typ Capability}),
                                                                                                                                                 @{theory})])),
                                                                                                                                   @{typ
                                                                                                                                   "3 word \<times>
                                                                                                                                    3 word \<times>
                                                                                                                                    64 word \<times>
                                                                                                                                    state"}))),
                                                                                                                          close
                                                                                                                            (var_b"b",
                                                                                                                             itb([(var_b"b",
                                                                                                                                   md(md(md(call
                                                                                                                                              ("SignalCapException",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (unit \<times>
                                                                                                                                                 state)"},
                                                                                                                                               tp[lc("capExcLength",
                                                                                                                                                     "CapExceptionType",
                                                                                                                                                     @{theory}),
                                                                                                                                                  var_w("cb",5)],
                                                                                                                                               @{theory}),
                                                                                                                                            w64),
                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                      (Word_Lib.mk_wordT 3))),
                                                                                                                                  (bop(Ult,
                                                                                                                                       var_w("addr",64),
                                                                                                                                       call
                                                                                                                                         ("getBase",
                                                                                                                                          w64,
                                                                                                                                          var("cap_cb",
                                                                                                                                              @{typ Capability}),
                                                                                                                                          @{theory})),
                                                                                                                                   md(md(md(call
                                                                                                                                              ("SignalCapException",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (unit \<times>
                                                                                                                                                 state)"},
                                                                                                                                               tp[lc("capExcLength",
                                                                                                                                                     "CapExceptionType",
                                                                                                                                                     @{theory}),
                                                                                                                                                  var_w("cb",5)],
                                                                                                                                               @{theory}),
                                                                                                                                            w64),
                                                                                                                                         (Word_Lib.mk_wordT 3)),
                                                                                                                                      (Word_Lib.mk_wordT 3)))],
                                                                                                                                 mb(mr(close
                                                                                                                                         (var("s",
                                                                                                                                              @{typ
                                                                                                                                              "3 word \<times>
                                                                                                                                               3 word \<times>
                                                                                                                                               64 word \<times>
                                                                                                                                               state"}),
                                                                                                                                          mop(Fst,
                                                                                                                                              mop(Snd,
                                                                                                                                                  var("s",
                                                                                                                                                      @{typ
                                                                                                                                                      "3 word \<times>
                                                                                                                                                       3 word \<times>
                                                                                                                                                       64 word \<times>
                                                                                                                                                       state"}))))),
                                                                                                                                    close
                                                                                                                                      (var_w("v",3),
                                                                                                                                       mb(mb(mb(mr(close
                                                                                                                                                     (var("s",
                                                                                                                                                          @{typ
                                                                                                                                                          "3 word \<times>
                                                                                                                                                           3 word \<times>
                                                                                                                                                           64 word \<times>
                                                                                                                                                           state"}),
                                                                                                                                                      mop(Fst,
                                                                                                                                                          mop(Snd,
                                                                                                                                                              var("s",
                                                                                                                                                                  @{typ
                                                                                                                                                                  "3 word \<times>
                                                                                                                                                                   3 word \<times>
                                                                                                                                                                   64 word \<times>
                                                                                                                                                                   state"}))))),
                                                                                                                                                close
                                                                                                                                                  (var_w("v0",3),
                                                                                                                                                   mb(mb(md(md(md(call
                                                                                                                                                                    ("GPR",
                                                                                                                                                                     @{typ
                                                                                                                                                                     "state \<Rightarrow>
                                                                                                                                                                      (64 word \<times>
                                                                                                                                                                       state)"},
                                                                                                                                                                     var_w("rs",5),
                                                                                                                                                                     @{theory}),
                                                                                                                                                                  w64),
                                                                                                                                                               (Word_Lib.mk_wordT 3)),
                                                                                                                                                            (Word_Lib.mk_wordT 3)),
                                                                                                                                                         close
                                                                                                                                                           (var_w("v1",64),
                                                                                                                                                            mb(mb(mb(mr(close
                                                                                                                                                                          (var("s",
                                                                                                                                                                               @{typ
                                                                                                                                                                               "3 word \<times>
                                                                                                                                                                                3 word \<times>
                                                                                                                                                                                64 word \<times>
                                                                                                                                                                                state"}),
                                                                                                                                                                           mop(Fst,
                                                                                                                                                                               var("s",
                                                                                                                                                                                   @{typ
                                                                                                                                                                                   "3 word \<times>
                                                                                                                                                                                    3 word \<times>
                                                                                                                                                                                    64 word \<times>
                                                                                                                                                                                    state"})))),
                                                                                                                                                                     close
                                                                                                                                                                       (var_w("v2",3),
                                                                                                                                                                        mb(mb(mu(mop(Cast
                                                                                                                                                                                       HOLogic.natT,
                                                                                                                                                                                     var_w("v2",3)),
                                                                                                                                                                                 @{typ
                                                                                                                                                                                 "3 word \<times>
                                                                                                                                                                                  3 word \<times>
                                                                                                                                                                                  64 word \<times>
                                                                                                                                                                                  state"}),
                                                                                                                                                                              close
                                                                                                                                                                                (var_n"v",
                                                                                                                                                                                 mu(bop(Mul,
                                                                                                                                                                                        ln
                                                                                                                                                                                         8,
                                                                                                                                                                                        var_n"v"),
                                                                                                                                                                                    @{typ
                                                                                                                                                                                    "3 word \<times>
                                                                                                                                                                                     3 word \<times>
                                                                                                                                                                                     64 word \<times>
                                                                                                                                                                                     state"}))),
                                                                                                                                                                           close
                                                                                                                                                                             (var_n"v2",
                                                                                                                                                                              mu(bop(Lsl,
                                                                                                                                                                                     var_w("v1",64),
                                                                                                                                                                                     var_n"v2"),
                                                                                                                                                                                 @{typ
                                                                                                                                                                                 "3 word \<times>
                                                                                                                                                                                  3 word \<times>
                                                                                                                                                                                  64 word \<times>
                                                                                                                                                                                  state"}))))),
                                                                                                                                                                  close
                                                                                                                                                                    (var_w("v",64),
                                                                                                                                                                     mu(tp[var_w("v",64),
                                                                                                                                                                           lt,
                                                                                                                                                                           var_w("addr",64),
                                                                                                                                                                           lf],
                                                                                                                                                                        @{typ
                                                                                                                                                                        "3 word \<times>
                                                                                                                                                                         3 word \<times>
                                                                                                                                                                         64 word \<times>
                                                                                                                                                                         state"}))),
                                                                                                                                                               close
                                                                                                                                                                 (var("v1",
                                                                                                                                                                      @{typ
                                                                                                                                                                      "64 word \<times>
                                                                                                                                                                       bool \<times>
                                                                                                                                                                       64 word \<times>
                                                                                                                                                                       bool"}),
                                                                                                                                                                  mu(tp[var_w("v0",3),
                                                                                                                                                                        var("v1",
                                                                                                                                                                            @{typ
                                                                                                                                                                            "64 word \<times>
                                                                                                                                                                             bool \<times>
                                                                                                                                                                             64 word \<times>
                                                                                                                                                                             bool"})],
                                                                                                                                                                     @{typ
                                                                                                                                                                     "3 word \<times>
                                                                                                                                                                      3 word \<times>
                                                                                                                                                                      64 word \<times>
                                                                                                                                                                      state"}))))),
                                                                                                                                                      close
                                                                                                                                                        (var("v0",
                                                                                                                                                             @{typ
                                                                                                                                                             "3 word \<times>
                                                                                                                                                              64 word \<times>
                                                                                                                                                              bool \<times>
                                                                                                                                                              64 word \<times>
                                                                                                                                                              bool"}),
                                                                                                                                                         mu(tp[var_w("v",3),
                                                                                                                                                               var("v0",
                                                                                                                                                                   @{typ
                                                                                                                                                                   "3 word \<times>
                                                                                                                                                                    64 word \<times>
                                                                                                                                                                    bool \<times>
                                                                                                                                                                    64 word \<times>
                                                                                                                                                                    bool"})],
                                                                                                                                                            @{typ
                                                                                                                                                            "3 word \<times>
                                                                                                                                                             3 word \<times>
                                                                                                                                                             64 word \<times>
                                                                                                                                                             state"}))))),
                                                                                                                                             close
                                                                                                                                               (var("v",
                                                                                                                                                    @{typ
                                                                                                                                                    "3 word \<times>
                                                                                                                                                     3 word \<times>
                                                                                                                                                     64 word \<times>
                                                                                                                                                     bool \<times>
                                                                                                                                                     64 word \<times>
                                                                                                                                                     bool"}),
                                                                                                                                                md(md(md(call
                                                                                                                                                           ("StoreMemoryCap",
                                                                                                                                                            @{typ
                                                                                                                                                            "state \<Rightarrow>
                                                                                                                                                             (bool \<times>
                                                                                                                                                              state)"},
                                                                                                                                                            var("v",
                                                                                                                                                                @{typ
                                                                                                                                                                "3 word \<times>
                                                                                                                                                                 3 word \<times>
                                                                                                                                                                 64 word \<times>
                                                                                                                                                                 bool \<times>
                                                                                                                                                                 64 word \<times>
                                                                                                                                                                 bool"}),
                                                                                                                                                            @{theory}),
                                                                                                                                                         w64),
                                                                                                                                                      (Word_Lib.mk_wordT 3)),
                                                                                                                                                   (Word_Lib.mk_wordT 3)))),
                                                                                                                                          close
                                                                                                                                            (var_a
                                                                                                                                               HOLogic.boolT,
                                                                                                                                             mu(lu,
                                                                                                                                                @{typ
                                                                                                                                                "3 word \<times>
                                                                                                                                                 3 word \<times>
                                                                                                                                                 64 word \<times>
                                                                                                                                                 state"}))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CLLC",
   close
     (tp[var_w("cd",5),var_w("cb",5)],
      mb(call
           ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},var_w("cb",5),@{theory}),
         close
           (var("v",@{typ Capability}),
            mb(mb(mu(call("getBase",w64,var("v",@{typ Capability}),@{theory}),qTy),
                  close
                    (var_w("v",64),
                     mb(call
                          ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},
                           var_w("cb",5),@{theory}),
                        close
                          (var("v0",@{typ Capability}),
                           mb(mu(call("getOffset",w64,var("v0",@{typ Capability}),@{theory}),qTy),
                              close(var_w("v0",64),mu(bop(Add,var_w("v",64),var_w("v0",64)),qTy))))))),
               close
                 (var_w("addr",64),
                  mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                     close
                       (var("v",@{typ CP0}),
                        mb(mb(mb(mu(call
                                      ("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),
                                       @{theory}),qTy),
                                 close
                                   (var("v",@{typ StatusRegister}),
                                    mu(call
                                         ("StatusRegister.CU2",HOLogic.boolT,
                                          var("v",@{typ StatusRegister}),@{theory}),qTy))),
                              close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  const
                                    ("SignalCP2UnusableException",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                                  mb(call
                                       ("register_inaccessible",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},
                                        var_w("cd",5),@{theory}),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            call
                                              ("SignalCapException",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               tp[lc("capExcAccessSysReg","CapExceptionType",
                                                     @{theory}),var_w("cd",5)],@{theory}),
                                            mb(call
                                                 ("register_inaccessible",
                                                  @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                  var_w("cb",5),@{theory}),
                                               close
                                                 (var_b"b",
                                                  ite(var_b"b",
                                                      call
                                                        ("SignalCapException",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[lc("capExcAccessSysReg",
                                                               "CapExceptionType",@{theory}),
                                                            var_w("cb",5)],@{theory}),
                                                      mb(call
                                                           ("CAPR",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (Capability \<times> state)"},
                                                            var_w("cb",5),@{theory}),
                                                         close
                                                           (var("v",@{typ Capability}),
                                                            mb(mb(mu(call
                                                                       ("getTag",HOLogic.boolT,
                                                                        var("v",@{typ Capability}),
                                                                        @{theory}),qTy),
                                                                  close
                                                                    (var_b"v",
                                                                     mu(mop(Not,var_b"v"),qTy))),
                                                               close
                                                                 (var_b"b",
                                                                  ite(var_b"b",
                                                                      call
                                                                        ("SignalCapException",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (unit \<times> state)"},
                                                                         tp[lc("capExcTag",
                                                                               "CapExceptionType",
                                                                               @{theory}),
                                                                            var_w("cb",5)],@{theory}),
                                                                      mb(call
                                                                           ("CAPR",
                                                                            @{typ
                                                                            "state \<Rightarrow>
                                                                             (Capability \<times>
                                                                              state)"},
                                                                            var_w("cb",5),@{theory}),
                                                                         close
                                                                           (var("v",
                                                                                @{typ Capability}),
                                                                            mb(mu(call
                                                                                    ("getSealed",
                                                                                     HOLogic.boolT,
                                                                                     var("v",
                                                                                         @{typ Capability}),
                                                                                     @{theory}),qTy),
                                                                               close
                                                                                 (var_b"b",
                                                                                  ite(var_b"b",
                                                                                      call
                                                                                        ("SignalCapException",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[lc("capExcSeal",
                                                                                               "CapExceptionType",
                                                                                               @{theory}),
                                                                                            var_w("cb",5)],
                                                                                         @{theory}),
                                                                                      mb(call
                                                                                           ("CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (Capability \<times>
                                                                                              state)"},
                                                                                            var_w("cb",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mb(mb(mb(mb(mu(call
                                                                                                             ("getBase",
                                                                                                              w64,
                                                                                                              var("v",
                                                                                                                  @{typ Capability}),
                                                                                                              @{theory}),
                                                                                                           qTy),
                                                                                                        close
                                                                                                          (var_w("v",64),
                                                                                                           mu(cc[lw(0,
                                                                                                                    1),
                                                                                                                 var_w("v",64)],
                                                                                                              qTy))),
                                                                                                     close
                                                                                                       (var_w("v",65),
                                                                                                        mb(call
                                                                                                             ("CAPR",
                                                                                                              @{typ
                                                                                                              "state \<Rightarrow>
                                                                                                               (Capability \<times>
                                                                                                                state)"},
                                                                                                              var_w("cb",5),
                                                                                                              @{theory}),
                                                                                                           close
                                                                                                             (var("v0",
                                                                                                                  @{typ Capability}),
                                                                                                              mb(mb(mu(call
                                                                                                                         ("getLength",
                                                                                                                          w64,
                                                                                                                          var("v0",
                                                                                                                              @{typ Capability}),
                                                                                                                          @{theory}),
                                                                                                                       qTy),
                                                                                                                    close
                                                                                                                      (var_w("v",64),
                                                                                                                       mu(cc[lw(0,
                                                                                                                                1),
                                                                                                                             var_w("v",64)],
                                                                                                                          qTy))),
                                                                                                                 close
                                                                                                                   (var_w("v0",65),
                                                                                                                    mu(bop(Add,
                                                                                                                           var_w("v",65),
                                                                                                                           var_w("v0",65)),
                                                                                                                       qTy))))))),
                                                                                                  close
                                                                                                    (var_w("v",65),
                                                                                                     mu(bop(Ugt,
                                                                                                            bop(Add,
                                                                                                                cc[lw(0,
                                                                                                                      1),
                                                                                                                   var_w("addr",64)],
                                                                                                                mop(Cast
                                                                                                                      (Word_Lib.mk_wordT 65),
                                                                                                                    const
                                                                                                                      ("CAPBYTEWIDTH",
                                                                                                                       HOLogic.natT,
                                                                                                                       @{theory}))),
                                                                                                            var_w("v",65)),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var_b"b",
                                                                                                  ite(var_b"b",
                                                                                                      call
                                                                                                        ("SignalCapException",
                                                                                                         @{typ
                                                                                                         "state \<Rightarrow>
                                                                                                          (unit \<times>
                                                                                                           state)"},
                                                                                                         tp[lc("capExcLength",
                                                                                                               "CapExceptionType",
                                                                                                               @{theory}),
                                                                                                            var_w("cb",5)],
                                                                                                         @{theory}),
                                                                                                      mb(call
                                                                                                           ("CAPR",
                                                                                                            @{typ
                                                                                                            "state \<Rightarrow>
                                                                                                             (Capability \<times>
                                                                                                              state)"},
                                                                                                            var_w("cb",5),
                                                                                                            @{theory}),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ Capability}),
                                                                                                            mb(mb(mu(call
                                                                                                                       ("getBase",
                                                                                                                        w64,
                                                                                                                        var("v",
                                                                                                                            @{typ Capability}),
                                                                                                                        @{theory}),
                                                                                                                     qTy),
                                                                                                                  close
                                                                                                                    (var_w("v",64),
                                                                                                                     mu(bop(Ult,
                                                                                                                            var_w("addr",64),
                                                                                                                            var_w("v",64)),
                                                                                                                        qTy))),
                                                                                                               close
                                                                                                                 (var_b"b",
                                                                                                                  itb([(var_b"b",
                                                                                                                        call
                                                                                                                          ("SignalCapException",
                                                                                                                           @{typ
                                                                                                                           "state \<Rightarrow>
                                                                                                                            (unit \<times>
                                                                                                                             state)"},
                                                                                                                           tp[lc("capExcLength",
                                                                                                                                 "CapExceptionType",
                                                                                                                                 @{theory}),
                                                                                                                              var_w("cb",5)],
                                                                                                                           @{theory})),
                                                                                                                       (mop(Not,
                                                                                                                            call
                                                                                                                              ("isCapAligned",
                                                                                                                               HOLogic.boolT,
                                                                                                                               var_w("addr",64),
                                                                                                                               @{theory})),
                                                                                                                        mb(const
                                                                                                                             ("CP0",
                                                                                                                              @{typ
                                                                                                                              "state \<Rightarrow>
                                                                                                                               (CP0 \<times>
                                                                                                                                state)"},
                                                                                                                              @{theory}),
                                                                                                                           close
                                                                                                                             (var("v",
                                                                                                                                  @{typ CP0}),
                                                                                                                              mb(call
                                                                                                                                   ("write'CP0",
                                                                                                                                    @{typ
                                                                                                                                    "state \<Rightarrow>
                                                                                                                                     (unit \<times>
                                                                                                                                      state)"},
                                                                                                                                    rupd
                                                                                                                                      ("CP0.BadVAddr",
                                                                                                                                       tp[var("v",
                                                                                                                                              @{typ CP0}),
                                                                                                                                          var_w("addr",64)],
                                                                                                                                       @{theory}),
                                                                                                                                    @{theory}),
                                                                                                                                 close
                                                                                                                                   (var_a
                                                                                                                                      HOLogic.unitT,
                                                                                                                                    call
                                                                                                                                      ("SignalException",
                                                                                                                                       @{typ
                                                                                                                                       "state \<Rightarrow>
                                                                                                                                        (unit \<times>
                                                                                                                                         state)"},
                                                                                                                                       lc("AdEL",
                                                                                                                                          "ExceptionType",
                                                                                                                                          @{theory}),
                                                                                                                                       @{theory}))))))],
                                                                                                                      mb(call
                                                                                                                           ("LoadCap",
                                                                                                                            @{typ
                                                                                                                            "state \<Rightarrow>
                                                                                                                             (Capability \<times>
                                                                                                                              state)"},
                                                                                                                            tp[var_w("addr",64),
                                                                                                                               lt],
                                                                                                                            @{theory}),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ Capability}),
                                                                                                                            mn(var("v",
                                                                                                                                   @{typ Capability}),
                                                                                                                               mb(md(call
                                                                                                                                       ("CAPR",
                                                                                                                                        @{typ
                                                                                                                                        "state \<Rightarrow>
                                                                                                                                         (Capability \<times>
                                                                                                                                          state)"},
                                                                                                                                        var_w("cb",5),
                                                                                                                                        @{theory}),
                                                                                                                                     @{typ Capability}),
                                                                                                                                  close
                                                                                                                                    (var("v",
                                                                                                                                         @{typ Capability}),
                                                                                                                                     mb(mb(mb(mb(mu(call
                                                                                                                                                      ("getPerms",
                                                                                                                                                       @{typ Perms},
                                                                                                                                                       var("v",
                                                                                                                                                           @{typ Capability}),
                                                                                                                                                       @{theory}),
                                                                                                                                                    @{typ
                                                                                                                                                    "Capability \<times>
                                                                                                                                                     state"}),
                                                                                                                                                 close
                                                                                                                                                   (var("v",
                                                                                                                                                        @{typ Perms}),
                                                                                                                                                    mu(call
                                                                                                                                                         ("Perms.Permit_Load_Capability",
                                                                                                                                                          HOLogic.boolT,
                                                                                                                                                          var("v",
                                                                                                                                                              @{typ Perms}),
                                                                                                                                                          @{theory}),
                                                                                                                                                       @{typ
                                                                                                                                                       "Capability \<times>
                                                                                                                                                        state"}))),
                                                                                                                                              close
                                                                                                                                                (var_b"v",
                                                                                                                                                 mu(mop(Not,
                                                                                                                                                        var_b"v"),
                                                                                                                                                    @{typ
                                                                                                                                                    "Capability \<times>
                                                                                                                                                     state"}))),
                                                                                                                                           close
                                                                                                                                             (var_b"b",
                                                                                                                                              ite(var_b"b",
                                                                                                                                                  mb(mr(close
                                                                                                                                                          (var("s",
                                                                                                                                                               @{typ
                                                                                                                                                               "Capability \<times>
                                                                                                                                                                state"}),
                                                                                                                                                           mop(Fst,
                                                                                                                                                               var("s",
                                                                                                                                                                   @{typ
                                                                                                                                                                   "Capability \<times>
                                                                                                                                                                    state"})))),
                                                                                                                                                     close
                                                                                                                                                       (var("v",
                                                                                                                                                            @{typ Capability}),
                                                                                                                                                        mb(mb(mu(tp[var("v",
                                                                                                                                                                        @{typ Capability}),
                                                                                                                                                                    lf],
                                                                                                                                                                 @{typ
                                                                                                                                                                 "Capability \<times>
                                                                                                                                                                  state"}),
                                                                                                                                                              close
                                                                                                                                                                (var("v",
                                                                                                                                                                     @{typ
                                                                                                                                                                     "Capability \<times>
                                                                                                                                                                      bool"}),
                                                                                                                                                                 mu(call
                                                                                                                                                                      ("setTag",
                                                                                                                                                                       @{typ Capability},
                                                                                                                                                                       var("v",
                                                                                                                                                                           @{typ
                                                                                                                                                                           "Capability \<times>
                                                                                                                                                                            bool"}),
                                                                                                                                                                       @{theory}),
                                                                                                                                                                    @{typ
                                                                                                                                                                    "Capability \<times>
                                                                                                                                                                     state"}))),
                                                                                                                                                           close
                                                                                                                                                             (var("v",
                                                                                                                                                                  @{typ Capability}),
                                                                                                                                                              mw(close
                                                                                                                                                                   (var("s",
                                                                                                                                                                        @{typ
                                                                                                                                                                        "Capability \<times>
                                                                                                                                                                         state"}),
                                                                                                                                                                    tp[var("v",
                                                                                                                                                                           @{typ Capability}),
                                                                                                                                                                       mop(Snd,
                                                                                                                                                                           var("s",
                                                                                                                                                                               @{typ
                                                                                                                                                                               "Capability \<times>
                                                                                                                                                                                state"}))])))))),
                                                                                                                                                  mu(lu,
                                                                                                                                                     @{typ
                                                                                                                                                     "Capability \<times>
                                                                                                                                                      state"})))),
                                                                                                                                        close
                                                                                                                                          (var_a
                                                                                                                                             HOLogic.unitT,
                                                                                                                                           mb(md(const
                                                                                                                                                   ("exceptionSignalled",
                                                                                                                                                    @{typ
                                                                                                                                                    "state \<Rightarrow>
                                                                                                                                                     (bool \<times>
                                                                                                                                                      state)"},
                                                                                                                                                    @{theory}),
                                                                                                                                                 @{typ Capability}),
                                                                                                                                              close
                                                                                                                                                (var_b"v",
                                                                                                                                                 mb(mu(mop(Not,
                                                                                                                                                           var_b"v"),
                                                                                                                                                       @{typ
                                                                                                                                                       "Capability \<times>
                                                                                                                                                        state"}),
                                                                                                                                                    close
                                                                                                                                                      (var_b"b",
                                                                                                                                                       ite(var_b"b",
                                                                                                                                                           mb(mr(close
                                                                                                                                                                   (var("s",
                                                                                                                                                                        @{typ
                                                                                                                                                                        "Capability \<times>
                                                                                                                                                                         state"}),
                                                                                                                                                                    mop(Fst,
                                                                                                                                                                        var("s",
                                                                                                                                                                            @{typ
                                                                                                                                                                            "Capability \<times>
                                                                                                                                                                             state"})))),
                                                                                                                                                              close
                                                                                                                                                                (var("v",
                                                                                                                                                                     @{typ Capability}),
                                                                                                                                                                 mb(mu(tp[var("v",
                                                                                                                                                                              @{typ Capability}),
                                                                                                                                                                          var_w("cd",5)],
                                                                                                                                                                       @{typ
                                                                                                                                                                       "Capability \<times>
                                                                                                                                                                        state"}),
                                                                                                                                                                    close
                                                                                                                                                                      (var("v",
                                                                                                                                                                           @{typ
                                                                                                                                                                           "Capability \<times>
                                                                                                                                                                            5 word"}),
                                                                                                                                                                       md(call
                                                                                                                                                                            ("write'CAPR",
                                                                                                                                                                             @{typ
                                                                                                                                                                             "state \<Rightarrow>
                                                                                                                                                                              (unit \<times>
                                                                                                                                                                               state)"},
                                                                                                                                                                             var("v",
                                                                                                                                                                                 @{typ
                                                                                                                                                                                 "Capability \<times>
                                                                                                                                                                                  5 word"}),
                                                                                                                                                                             @{theory}),
                                                                                                                                                                          @{typ Capability}))))),
                                                                                                                                                           mu(lu,
                                                                                                                                                              @{typ
                                                                                                                                                              "Capability \<times>
                                                                                                                                                               state"}))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CLLx",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("stt",3)],
      let'
        (var_w("t",2),ex(var_w("stt",3),ln 1,ln 0,(Word_Lib.mk_wordT 2)),
         mb(call
              ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},var_w("cb",5),
               @{theory}),
            close
              (var("cap_cb",@{typ Capability}),
               let'
                 (var_w("addr",64),
                  bop(Add,call("getBase",w64,var("cap_cb",@{typ Capability}),@{theory}),
                      call("getOffset",w64,var("cap_cb",@{typ Capability}),@{theory})),
                  let'
                    (var_w("size",64),
                     mop(Cast w64,bop(Lsl,lw(1,64),mop(Cast HOLogic.natT,var_w("t",2)))),
                     mb(itb([(eq(var_w("t",2),lw(0,2)),
                              mb(const
                                   ("BigEndianCPU",
                                    @{typ "state \<Rightarrow> (1 word \<times> state)"},@{theory}),
                                 close
                                   (var_w("v",1),
                                    mb(mu(rep(var_w("v",1),ln 3,(Word_Lib.mk_wordT 3)),qTy),
                                       close
                                         (var_w("v",3),
                                          mu(bop(BXor,
                                                 ex(var_w("addr",64),ln 2,ln 0,(Word_Lib.mk_wordT 3)),
                                                 var_w("v",3)),qTy)))))),
                             (eq(var_w("t",2),lw(1,2)),
                              mb(const
                                   ("BigEndianCPU",
                                    @{typ "state \<Rightarrow> (1 word \<times> state)"},@{theory}),
                                 close
                                   (var_w("v",1),
                                    mb(mb(mu(rep(var_w("v",1),ln 2,(Word_Lib.mk_wordT 2)),qTy),
                                          close(var_w("v",2),mu(cc[var_w("v",2),lw(0,1)],qTy))),
                                       close
                                         (var_w("v",3),
                                          mu(bop(BXor,
                                                 ex(var_w("addr",64),ln 2,ln 0,(Word_Lib.mk_wordT 3)),
                                                 var_w("v",3)),qTy)))))),
                             (eq(var_w("t",2),lw(2,2)),
                              mb(const
                                   ("BigEndianCPU",
                                    @{typ "state \<Rightarrow> (1 word \<times> state)"},@{theory}),
                                 close
                                   (var_w("v",1),
                                    mb(mb(mu(rep(var_w("v",1),ln 1,w1),qTy),
                                          close(var_w("v",1),mu(cc[var_w("v",1),lw(0,2)],qTy))),
                                       close
                                         (var_w("v",3),
                                          mu(bop(BXor,
                                                 ex(var_w("addr",64),ln 2,ln 0,(Word_Lib.mk_wordT 3)),
                                                 var_w("v",3)),qTy)))))),
                             (eq(var_w("t",2),lw(3,2)),mu(lw(0,3),qTy))],
                            lx(@{typ "state \<Rightarrow> (3 word \<times> state)"})),
                        close
                          (var_w("bytesel",3),
                           mb(const
                                ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                              close
                                (var("v",@{typ CP0}),
                                 mb(mb(mb(mu(call
                                               ("CP0.Status",@{typ StatusRegister},
                                                var("v",@{typ CP0}),@{theory}),qTy),
                                          close
                                            (var("v",@{typ StatusRegister}),
                                             mu(call
                                                  ("StatusRegister.CU2",HOLogic.boolT,
                                                   var("v",@{typ StatusRegister}),@{theory}),qTy))),
                                       close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                    close
                                      (var_b"b",
                                       ite(var_b"b",
                                           const
                                             ("SignalCP2UnusableException",
                                              @{typ "state \<Rightarrow> (unit \<times> state)"},
                                              @{theory}),
                                           mb(call
                                                ("register_inaccessible",
                                                 @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                 var_w("cb",5),@{theory}),
                                              close
                                                (var_b"b",
                                                 itb([(var_b"b",
                                                       call
                                                         ("SignalCapException",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          tp[lc("capExcAccessSysReg",
                                                                "CapExceptionType",@{theory}),
                                                             var_w("cb",5)],@{theory})),
                                                      (mop(Not,
                                                           call
                                                             ("getTag",HOLogic.boolT,
                                                              var("cap_cb",@{typ Capability}),
                                                              @{theory})),
                                                       call
                                                         ("SignalCapException",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          tp[lc("capExcTag","CapExceptionType",
                                                                @{theory}),var_w("cb",5)],@{theory})),
                                                      (call
                                                         ("getSealed",HOLogic.boolT,
                                                          var("cap_cb",@{typ Capability}),@{theory}),
                                                       call
                                                         ("SignalCapException",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          tp[lc("capExcSeal","CapExceptionType",
                                                                @{theory}),var_w("cb",5)],@{theory})),
                                                      (mop(Not,
                                                           call
                                                             ("Perms.Permit_Load",HOLogic.boolT,
                                                              call
                                                                ("getPerms",@{typ Perms},
                                                                 var("cap_cb",@{typ Capability}),
                                                                 @{theory}),@{theory})),
                                                       call
                                                         ("SignalCapException",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          tp[lc("capExcPermLoad","CapExceptionType",
                                                                @{theory}),var_w("cb",5)],@{theory})),
                                                      (bop(Ugt,
                                                           bop(Add,cc[lw(0,1),var_w("addr",64)],
                                                               cc[lw(0,1),var_w("size",64)]),
                                                           bop(Add,
                                                               cc[lw(0,1),
                                                                  call
                                                                    ("getBase",w64,
                                                                     var("cap_cb",@{typ Capability}),
                                                                     @{theory})],
                                                               cc[lw(0,1),
                                                                  call
                                                                    ("getLength",w64,
                                                                     var("cap_cb",@{typ Capability}),
                                                                     @{theory})])),
                                                       call
                                                         ("SignalCapException",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          tp[lc("capExcLength","CapExceptionType",
                                                                @{theory}),var_w("cb",5)],@{theory}))],
                                                     mb(call
                                                          ("CAPR",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (Capability \<times> state)"},
                                                           var_w("cb",5),@{theory}),
                                                        close
                                                          (var("v",@{typ Capability}),
                                                           mb(mb(mu(call
                                                                      ("getBase",w64,
                                                                       var("v",@{typ Capability}),
                                                                       @{theory}),qTy),
                                                                 close
                                                                   (var_w("v",64),
                                                                    mu(bop(Ult,var_w("addr",64),
                                                                           var_w("v",64)),qTy))),
                                                              close
                                                                (var_b"b",
                                                                 ite(var_b"b",
                                                                     call
                                                                       ("SignalCapException",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        tp[lc("capExcLength",
                                                                              "CapExceptionType",
                                                                              @{theory}),
                                                                           var_w("cb",5)],@{theory}),
                                                                     mb(call
                                                                          ("LoadMemoryCap",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (64 word \<times> state)"},
                                                                           tp[ite(eq(var_w("t",2),
                                                                                     lw(0,2)),
                                                                                  lw(0,3),
                                                                                  rep(lw(1,1),
                                                                                      mop(Cast
                                                                                            HOLogic.natT,
                                                                                          var_w("t",2)),
                                                                                      (Word_Lib.mk_wordT 3))),
                                                                              lt,var_w("addr",64),lt],
                                                                           @{theory}),
                                                                        close
                                                                          (var_w("data",64),
                                                                           mb(const
                                                                                ("exceptionSignalled",
                                                                                 @{typ
                                                                                 "state \<Rightarrow>
                                                                                  (bool \<times>
                                                                                   state)"},
                                                                                 @{theory}),
                                                                              close
                                                                                (var_b"v",
                                                                                 mb(mu(mop(Not,
                                                                                           var_b"v"),
                                                                                       qTy),
                                                                                    close
                                                                                      (var_b"b",
                                                                                       ite(var_b"b",
                                                                                           let'
                                                                                             (var_v"final_data",
                                                                                              ex(mop(Cast
                                                                                                       (@{typ
                                                                                                        "bool list"}),
                                                                                                     var_w("data",64)),
                                                                                                 bop(Sub,
                                                                                                     bop(Add,
                                                                                                         bop(Mul,
                                                                                                             mop(Cast
                                                                                                                   HOLogic.natT,
                                                                                                                 var_w("bytesel",3)),
                                                                                                             ln
                                                                                                              8),
                                                                                                         bop(Mul,
                                                                                                             mop(Cast
                                                                                                                   HOLogic.natT,
                                                                                                                 var_w("size",64)),
                                                                                                             ln
                                                                                                              8)),
                                                                                                     ln
                                                                                                      1),
                                                                                                 bop(Mul,
                                                                                                     mop(Cast
                                                                                                           HOLogic.natT,
                                                                                                         var_w("bytesel",3)),
                                                                                                     ln
                                                                                                      8),
                                                                                                 @{typ
                                                                                                 "bool list"}),
                                                                                              ite(mop(Not,
                                                                                                      bop(Bit,
                                                                                                          var_w("stt",3),
                                                                                                          ln
                                                                                                           2)),
                                                                                                  call
                                                                                                    ("write'GPR",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (unit \<times>
                                                                                                       state)"},
                                                                                                     tp[mop(Cast
                                                                                                              w64,
                                                                                                            call
                                                                                                              ("ZeroExtendBitString",
                                                                                                               @{typ
                                                                                                               "bool list"},
                                                                                                               tp[ln
                                                                                                                   64,
                                                                                                                  var_v"final_data"],
                                                                                                               @{theory})),
                                                                                                        var_w("rd",5)],
                                                                                                     @{theory}),
                                                                                                  call
                                                                                                    ("write'GPR",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (unit \<times>
                                                                                                       state)"},
                                                                                                     tp[mop(Cast
                                                                                                              w64,
                                                                                                            call
                                                                                                              ("SignExtendBitString",
                                                                                                               @{typ
                                                                                                               "bool list"},
                                                                                                               tp[ln
                                                                                                                   64,
                                                                                                                  var_v"final_data"],
                                                                                                               @{theory})),
                                                                                                        var_w("rd",5)],
                                                                                                     @{theory}))),
                                                                                           mu(lu,qTy))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CSCC",
   close
     (tp[var_w("cs",5),var_w("cb",5),var_w("rd",5)],
      mb(call
           ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},var_w("cb",5),@{theory}),
         close
           (var("v",@{typ Capability}),
            mb(mb(mu(call("getBase",w64,var("v",@{typ Capability}),@{theory}),qTy),
                  close
                    (var_w("v",64),
                     mb(call
                          ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},
                           var_w("cb",5),@{theory}),
                        close
                          (var("v0",@{typ Capability}),
                           mb(mu(call("getOffset",w64,var("v0",@{typ Capability}),@{theory}),qTy),
                              close(var_w("v0",64),mu(bop(Add,var_w("v",64),var_w("v0",64)),qTy))))))),
               close
                 (var_w("addr",64),
                  mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                     close
                       (var("v",@{typ CP0}),
                        mb(mb(mb(mu(call
                                      ("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),
                                       @{theory}),qTy),
                                 close
                                   (var("v",@{typ StatusRegister}),
                                    mu(call
                                         ("StatusRegister.CU2",HOLogic.boolT,
                                          var("v",@{typ StatusRegister}),@{theory}),qTy))),
                              close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  const
                                    ("SignalCP2UnusableException",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                                  mb(call
                                       ("register_inaccessible",
                                        @{typ "state \<Rightarrow> (bool \<times> state)"},
                                        var_w("cs",5),@{theory}),
                                     close
                                       (var_b"b",
                                        ite(var_b"b",
                                            call
                                              ("SignalCapException",
                                               @{typ "state \<Rightarrow> (unit \<times> state)"},
                                               tp[lc("capExcAccessSysReg","CapExceptionType",
                                                     @{theory}),var_w("cs",5)],@{theory}),
                                            mb(call
                                                 ("register_inaccessible",
                                                  @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                  var_w("cb",5),@{theory}),
                                               close
                                                 (var_b"b",
                                                  ite(var_b"b",
                                                      call
                                                        ("SignalCapException",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[lc("capExcAccessSysReg",
                                                               "CapExceptionType",@{theory}),
                                                            var_w("cb",5)],@{theory}),
                                                      mb(call
                                                           ("CAPR",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (Capability \<times> state)"},
                                                            var_w("cb",5),@{theory}),
                                                         close
                                                           (var("v",@{typ Capability}),
                                                            mb(mb(mu(call
                                                                       ("getTag",HOLogic.boolT,
                                                                        var("v",@{typ Capability}),
                                                                        @{theory}),qTy),
                                                                  close
                                                                    (var_b"v",
                                                                     mu(mop(Not,var_b"v"),qTy))),
                                                               close
                                                                 (var_b"b",
                                                                  ite(var_b"b",
                                                                      call
                                                                        ("SignalCapException",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (unit \<times> state)"},
                                                                         tp[lc("capExcTag",
                                                                               "CapExceptionType",
                                                                               @{theory}),
                                                                            var_w("cb",5)],@{theory}),
                                                                      mb(call
                                                                           ("CAPR",
                                                                            @{typ
                                                                            "state \<Rightarrow>
                                                                             (Capability \<times>
                                                                              state)"},
                                                                            var_w("cb",5),@{theory}),
                                                                         close
                                                                           (var("v",
                                                                                @{typ Capability}),
                                                                            mb(mu(call
                                                                                    ("getSealed",
                                                                                     HOLogic.boolT,
                                                                                     var("v",
                                                                                         @{typ Capability}),
                                                                                     @{theory}),qTy),
                                                                               close
                                                                                 (var_b"b",
                                                                                  ite(var_b"b",
                                                                                      call
                                                                                        ("SignalCapException",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[lc("capExcSeal",
                                                                                               "CapExceptionType",
                                                                                               @{theory}),
                                                                                            var_w("cb",5)],
                                                                                         @{theory}),
                                                                                      mb(call
                                                                                           ("CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (Capability \<times>
                                                                                              state)"},
                                                                                            var_w("cb",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mb(mb(mb(mu(call
                                                                                                          ("getPerms",
                                                                                                           @{typ Perms},
                                                                                                           var("v",
                                                                                                               @{typ Capability}),
                                                                                                           @{theory}),
                                                                                                        qTy),
                                                                                                     close
                                                                                                       (var("v",
                                                                                                            @{typ Perms}),
                                                                                                        mu(call
                                                                                                             ("Perms.Permit_Store_Capability",
                                                                                                              HOLogic.boolT,
                                                                                                              var("v",
                                                                                                                  @{typ Perms}),
                                                                                                              @{theory}),
                                                                                                           qTy))),
                                                                                                  close
                                                                                                    (var_b"v",
                                                                                                     mu(mop(Not,
                                                                                                            var_b"v"),
                                                                                                        qTy))),
                                                                                               close
                                                                                                 (var_b"b",
                                                                                                  ite(var_b"b",
                                                                                                      call
                                                                                                        ("SignalCapException",
                                                                                                         @{typ
                                                                                                         "state \<Rightarrow>
                                                                                                          (unit \<times>
                                                                                                           state)"},
                                                                                                         tp[lc("capExcPermStoreCap",
                                                                                                               "CapExceptionType",
                                                                                                               @{theory}),
                                                                                                            var_w("cb",5)],
                                                                                                         @{theory}),
                                                                                                      mb(call
                                                                                                           ("CAPR",
                                                                                                            @{typ
                                                                                                            "state \<Rightarrow>
                                                                                                             (Capability \<times>
                                                                                                              state)"},
                                                                                                            var_w("cb",5),
                                                                                                            @{theory}),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ Capability}),
                                                                                                            mb(mb(mb(mb(mu(call
                                                                                                                             ("getPerms",
                                                                                                                              @{typ Perms},
                                                                                                                              var("v",
                                                                                                                                  @{typ Capability}),
                                                                                                                              @{theory}),
                                                                                                                           qTy),
                                                                                                                        close
                                                                                                                          (var("v",
                                                                                                                               @{typ Perms}),
                                                                                                                           mu(call
                                                                                                                                ("Perms.Permit_Store_Local_Capability",
                                                                                                                                 HOLogic.boolT,
                                                                                                                                 var("v",
                                                                                                                                     @{typ Perms}),
                                                                                                                                 @{theory}),
                                                                                                                              qTy))),
                                                                                                                     close
                                                                                                                       (var_b"v",
                                                                                                                        mu(mop(Not,
                                                                                                                               var_b"v"),
                                                                                                                           qTy))),
                                                                                                                  close
                                                                                                                    (var_b"b",
                                                                                                                     ite(var_b"b",
                                                                                                                         mb(call
                                                                                                                              ("CAPR",
                                                                                                                               @{typ
                                                                                                                               "state \<Rightarrow>
                                                                                                                                (Capability \<times>
                                                                                                                                 state)"},
                                                                                                                               var_w("cs",5),
                                                                                                                               @{theory}),
                                                                                                                            close
                                                                                                                              (var("v",
                                                                                                                                   @{typ Capability}),
                                                                                                                               mb(mu(call
                                                                                                                                       ("getTag",
                                                                                                                                        HOLogic.boolT,
                                                                                                                                        var("v",
                                                                                                                                            @{typ Capability}),
                                                                                                                                        @{theory}),
                                                                                                                                     qTy),
                                                                                                                                  close
                                                                                                                                    (var_b"b",
                                                                                                                                     ite(var_b"b",
                                                                                                                                         mb(call
                                                                                                                                              ("CAPR",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (Capability \<times>
                                                                                                                                                 state)"},
                                                                                                                                               var_w("cs",5),
                                                                                                                                               @{theory}),
                                                                                                                                            close
                                                                                                                                              (var("v",
                                                                                                                                                   @{typ Capability}),
                                                                                                                                               mb(mb(mu(call
                                                                                                                                                          ("getPerms",
                                                                                                                                                           @{typ Perms},
                                                                                                                                                           var("v",
                                                                                                                                                               @{typ Capability}),
                                                                                                                                                           @{theory}),
                                                                                                                                                        qTy),
                                                                                                                                                     close
                                                                                                                                                       (var("v",
                                                                                                                                                            @{typ Perms}),
                                                                                                                                                        mu(call
                                                                                                                                                             ("Perms.Global",
                                                                                                                                                              HOLogic.boolT,
                                                                                                                                                              var("v",
                                                                                                                                                                  @{typ Perms}),
                                                                                                                                                              @{theory}),
                                                                                                                                                           qTy))),
                                                                                                                                                  close
                                                                                                                                                    (var_b"v",
                                                                                                                                                     mu(mop(Not,
                                                                                                                                                            var_b"v"),
                                                                                                                                                        qTy))))),
                                                                                                                                         mu(lf,
                                                                                                                                            qTy)))))),
                                                                                                                         mu(lf,
                                                                                                                            qTy)))),
                                                                                                               close
                                                                                                                 (var_b"b",
                                                                                                                  ite(var_b"b",
                                                                                                                      call
                                                                                                                        ("SignalCapException",
                                                                                                                         @{typ
                                                                                                                         "state \<Rightarrow>
                                                                                                                          (unit \<times>
                                                                                                                           state)"},
                                                                                                                         tp[lc("capExcPermStoreLocalCap",
                                                                                                                               "CapExceptionType",
                                                                                                                               @{theory}),
                                                                                                                            var_w("cb",5)],
                                                                                                                         @{theory}),
                                                                                                                      mb(call
                                                                                                                           ("CAPR",
                                                                                                                            @{typ
                                                                                                                            "state \<Rightarrow>
                                                                                                                             (Capability \<times>
                                                                                                                              state)"},
                                                                                                                            var_w("cb",5),
                                                                                                                            @{theory}),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ Capability}),
                                                                                                                            mb(mb(mb(mb(mu(call
                                                                                                                                             ("getBase",
                                                                                                                                              w64,
                                                                                                                                              var("v",
                                                                                                                                                  @{typ Capability}),
                                                                                                                                              @{theory}),
                                                                                                                                           qTy),
                                                                                                                                        close
                                                                                                                                          (var_w("v",64),
                                                                                                                                           mu(cc[lw(0,
                                                                                                                                                    1),
                                                                                                                                                 var_w("v",64)],
                                                                                                                                              qTy))),
                                                                                                                                     close
                                                                                                                                       (var_w("v",65),
                                                                                                                                        mb(call
                                                                                                                                             ("CAPR",
                                                                                                                                              @{typ
                                                                                                                                              "state \<Rightarrow>
                                                                                                                                               (Capability \<times>
                                                                                                                                                state)"},
                                                                                                                                              var_w("cb",5),
                                                                                                                                              @{theory}),
                                                                                                                                           close
                                                                                                                                             (var("v0",
                                                                                                                                                  @{typ Capability}),
                                                                                                                                              mb(mb(mu(call
                                                                                                                                                         ("getLength",
                                                                                                                                                          w64,
                                                                                                                                                          var("v0",
                                                                                                                                                              @{typ Capability}),
                                                                                                                                                          @{theory}),
                                                                                                                                                       qTy),
                                                                                                                                                    close
                                                                                                                                                      (var_w("v",64),
                                                                                                                                                       mu(cc[lw(0,
                                                                                                                                                                1),
                                                                                                                                                             var_w("v",64)],
                                                                                                                                                          qTy))),
                                                                                                                                                 close
                                                                                                                                                   (var_w("v0",65),
                                                                                                                                                    mu(bop(Add,
                                                                                                                                                           var_w("v",65),
                                                                                                                                                           var_w("v0",65)),
                                                                                                                                                       qTy))))))),
                                                                                                                                  close
                                                                                                                                    (var_w("v",65),
                                                                                                                                     mu(bop(Ugt,
                                                                                                                                            bop(Add,
                                                                                                                                                cc[lw(0,
                                                                                                                                                      1),
                                                                                                                                                   var_w("addr",64)],
                                                                                                                                                mop(Cast
                                                                                                                                                      (Word_Lib.mk_wordT 65),
                                                                                                                                                    const
                                                                                                                                                      ("CAPBYTEWIDTH",
                                                                                                                                                       HOLogic.natT,
                                                                                                                                                       @{theory}))),
                                                                                                                                            var_w("v",65)),
                                                                                                                                        qTy))),
                                                                                                                               close
                                                                                                                                 (var_b"b",
                                                                                                                                  ite(var_b"b",
                                                                                                                                      call
                                                                                                                                        ("SignalCapException",
                                                                                                                                         @{typ
                                                                                                                                         "state \<Rightarrow>
                                                                                                                                          (unit \<times>
                                                                                                                                           state)"},
                                                                                                                                         tp[lc("capExcLength",
                                                                                                                                               "CapExceptionType",
                                                                                                                                               @{theory}),
                                                                                                                                            var_w("cb",5)],
                                                                                                                                         @{theory}),
                                                                                                                                      mb(call
                                                                                                                                           ("CAPR",
                                                                                                                                            @{typ
                                                                                                                                            "state \<Rightarrow>
                                                                                                                                             (Capability \<times>
                                                                                                                                              state)"},
                                                                                                                                            var_w("cb",5),
                                                                                                                                            @{theory}),
                                                                                                                                         close
                                                                                                                                           (var("v",
                                                                                                                                                @{typ Capability}),
                                                                                                                                            mb(mb(mu(call
                                                                                                                                                       ("getBase",
                                                                                                                                                        w64,
                                                                                                                                                        var("v",
                                                                                                                                                            @{typ Capability}),
                                                                                                                                                        @{theory}),
                                                                                                                                                     qTy),
                                                                                                                                                  close
                                                                                                                                                    (var_w("v",64),
                                                                                                                                                     mu(bop(Ult,
                                                                                                                                                            var_w("addr",64),
                                                                                                                                                            var_w("v",64)),
                                                                                                                                                        qTy))),
                                                                                                                                               close
                                                                                                                                                 (var_b"b",
                                                                                                                                                  itb([(var_b"b",
                                                                                                                                                        call
                                                                                                                                                          ("SignalCapException",
                                                                                                                                                           @{typ
                                                                                                                                                           "state \<Rightarrow>
                                                                                                                                                            (unit \<times>
                                                                                                                                                             state)"},
                                                                                                                                                           tp[lc("capExcLength",
                                                                                                                                                                 "CapExceptionType",
                                                                                                                                                                 @{theory}),
                                                                                                                                                              var_w("cb",5)],
                                                                                                                                                           @{theory})),
                                                                                                                                                       (mop(Not,
                                                                                                                                                            call
                                                                                                                                                              ("isCapAligned",
                                                                                                                                                               HOLogic.boolT,
                                                                                                                                                               var_w("addr",64),
                                                                                                                                                               @{theory})),
                                                                                                                                                        mb(const
                                                                                                                                                             ("CP0",
                                                                                                                                                              @{typ
                                                                                                                                                              "state \<Rightarrow>
                                                                                                                                                               (CP0 \<times>
                                                                                                                                                                state)"},
                                                                                                                                                              @{theory}),
                                                                                                                                                           close
                                                                                                                                                             (var("v",
                                                                                                                                                                  @{typ CP0}),
                                                                                                                                                              mb(call
                                                                                                                                                                   ("write'CP0",
                                                                                                                                                                    @{typ
                                                                                                                                                                    "state \<Rightarrow>
                                                                                                                                                                     (unit \<times>
                                                                                                                                                                      state)"},
                                                                                                                                                                    rupd
                                                                                                                                                                      ("CP0.BadVAddr",
                                                                                                                                                                       tp[var("v",
                                                                                                                                                                              @{typ CP0}),
                                                                                                                                                                          var_w("addr",64)],
                                                                                                                                                                       @{theory}),
                                                                                                                                                                    @{theory}),
                                                                                                                                                                 close
                                                                                                                                                                   (var_a
                                                                                                                                                                      HOLogic.unitT,
                                                                                                                                                                    call
                                                                                                                                                                      ("SignalException",
                                                                                                                                                                       @{typ
                                                                                                                                                                       "state \<Rightarrow>
                                                                                                                                                                        (unit \<times>
                                                                                                                                                                         state)"},
                                                                                                                                                                       lc("AdES",
                                                                                                                                                                          "ExceptionType",
                                                                                                                                                                          @{theory}),
                                                                                                                                                                       @{theory}))))))],
                                                                                                                                                      mb(call
                                                                                                                                                           ("CAPR",
                                                                                                                                                            @{typ
                                                                                                                                                            "state \<Rightarrow>
                                                                                                                                                             (Capability \<times>
                                                                                                                                                              state)"},
                                                                                                                                                            var_w("cs",5),
                                                                                                                                                            @{theory}),
                                                                                                                                                         close
                                                                                                                                                           (var("v",
                                                                                                                                                                @{typ Capability}),
                                                                                                                                                            mb(mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                  @{typ Capability}),
                                                                                                                                                                              lt],
                                                                                                                                                                           qTy),
                                                                                                                                                                        close
                                                                                                                                                                          (var("v",
                                                                                                                                                                               @{typ
                                                                                                                                                                               "Capability \<times>
                                                                                                                                                                                bool"}),
                                                                                                                                                                           mu(tp[var_w("addr",64),
                                                                                                                                                                                 var("v",
                                                                                                                                                                                     @{typ
                                                                                                                                                                                     "Capability \<times>
                                                                                                                                                                                      bool"})],
                                                                                                                                                                              qTy))),
                                                                                                                                                                     close
                                                                                                                                                                       (var("v",
                                                                                                                                                                            @{typ
                                                                                                                                                                            "64 word \<times>
                                                                                                                                                                             Capability \<times>
                                                                                                                                                                             bool"}),
                                                                                                                                                                        call
                                                                                                                                                                          ("StoreCap",
                                                                                                                                                                           @{typ
                                                                                                                                                                           "state \<Rightarrow>
                                                                                                                                                                            (bool \<times>
                                                                                                                                                                             state)"},
                                                                                                                                                                           var("v",
                                                                                                                                                                               @{typ
                                                                                                                                                                               "64 word \<times>
                                                                                                                                                                                Capability \<times>
                                                                                                                                                                                bool"}),
                                                                                                                                                                           @{theory}))),
                                                                                                                                                                  close
                                                                                                                                                                    (var_b"b",
                                                                                                                                                                     mu(ite(var_b"b",
                                                                                                                                                                            lw(1,
                                                                                                                                                                               64),
                                                                                                                                                                            lw(0,
                                                                                                                                                                               64)),
                                                                                                                                                                        qTy))),
                                                                                                                                                               close
                                                                                                                                                                 (var_w("ret",64),
                                                                                                                                                                  mb(const
                                                                                                                                                                       ("exceptionSignalled",
                                                                                                                                                                        @{typ
                                                                                                                                                                        "state \<Rightarrow>
                                                                                                                                                                         (bool \<times>
                                                                                                                                                                          state)"},
                                                                                                                                                                        @{theory}),
                                                                                                                                                                     close
                                                                                                                                                                       (var_b"v",
                                                                                                                                                                        mb(mu(mop(Not,
                                                                                                                                                                                  var_b"v"),
                                                                                                                                                                              qTy),
                                                                                                                                                                           close
                                                                                                                                                                             (var_b"b",
                                                                                                                                                                              ite(var_b"b",
                                                                                                                                                                                  call
                                                                                                                                                                                    ("write'GPR",
                                                                                                                                                                                     @{typ
                                                                                                                                                                                     "state \<Rightarrow>
                                                                                                                                                                                      (unit \<times>
                                                                                                                                                                                       state)"},
                                                                                                                                                                                     tp[var_w("ret",64),
                                                                                                                                                                                        var_w("rd",5)],
                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                  mu(lu,
                                                                                                                                                                                     qTy)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CSCx",
   close
     (tp[var_w("rs",5),var_w("cb",5),var_w("rd",5),var_w("t",2)],
      mb(call
           ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},var_w("cb",5),@{theory}),
         close
           (var("v",@{typ Capability}),
            mb(mb(mu(call("getBase",w64,var("v",@{typ Capability}),@{theory}),qTy),
                  close
                    (var_w("v",64),
                     mb(call
                          ("CAPR",@{typ "state \<Rightarrow> (Capability \<times> state)"},
                           var_w("cb",5),@{theory}),
                        close
                          (var("v0",@{typ Capability}),
                           mb(mu(call("getOffset",w64,var("v0",@{typ Capability}),@{theory}),qTy),
                              close(var_w("v0",64),mu(bop(Add,var_w("v",64),var_w("v0",64)),qTy))))))),
               close
                 (var_w("addr",64),
                  let'
                    (var_w("access_length",3),
                     ite(eq(var_w("t",2),lw(0,2)),lw(0,3),
                         rep(lw(1,1),mop(Cast HOLogic.natT,var_w("t",2)),(Word_Lib.mk_wordT 3))),
                     mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                        close
                          (var("v",@{typ CP0}),
                           mb(mb(mb(mu(call
                                         ("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),
                                          @{theory}),qTy),
                                    close
                                      (var("v",@{typ StatusRegister}),
                                       mu(call
                                            ("StatusRegister.CU2",HOLogic.boolT,
                                             var("v",@{typ StatusRegister}),@{theory}),qTy))),
                                 close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                              close
                                (var_b"b",
                                 ite(var_b"b",
                                     const
                                       ("SignalCP2UnusableException",
                                        @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                                     mb(call
                                          ("register_inaccessible",
                                           @{typ "state \<Rightarrow> (bool \<times> state)"},
                                           var_w("cb",5),@{theory}),
                                        close
                                          (var_b"b",
                                           ite(var_b"b",
                                               call
                                                 ("SignalCapException",
                                                  @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                  tp[lc("capExcAccessSysReg","CapExceptionType",
                                                        @{theory}),var_w("cb",5)],@{theory}),
                                               mb(call
                                                    ("CAPR",
                                                     @{typ
                                                     "state \<Rightarrow>
                                                      (Capability \<times> state)"},var_w("cb",5),
                                                     @{theory}),
                                                  close
                                                    (var("v",@{typ Capability}),
                                                     mb(mb(mu(call
                                                                ("getTag",HOLogic.boolT,
                                                                 var("v",@{typ Capability}),
                                                                 @{theory}),qTy),
                                                           close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                        close
                                                          (var_b"b",
                                                           ite(var_b"b",
                                                               call
                                                                 ("SignalCapException",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[lc("capExcTag",
                                                                        "CapExceptionType",@{theory}),
                                                                     var_w("cb",5)],@{theory}),
                                                               mb(call
                                                                    ("CAPR",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (Capability \<times> state)"},
                                                                     var_w("cb",5),@{theory}),
                                                                  close
                                                                    (var("v",@{typ Capability}),
                                                                     mb(mu(call
                                                                             ("getSealed",
                                                                              HOLogic.boolT,
                                                                              var("v",
                                                                                  @{typ Capability}),
                                                                              @{theory}),qTy),
                                                                        close
                                                                          (var_b"b",
                                                                           ite(var_b"b",
                                                                               call
                                                                                 ("SignalCapException",
                                                                                  @{typ
                                                                                  "state \<Rightarrow>
                                                                                   (unit \<times>
                                                                                    state)"},
                                                                                  tp[lc("capExcSeal",
                                                                                        "CapExceptionType",
                                                                                        @{theory}),
                                                                                     var_w("cb",5)],
                                                                                  @{theory}),
                                                                               mb(call
                                                                                    ("CAPR",
                                                                                     @{typ
                                                                                     "state \<Rightarrow>
                                                                                      (Capability \<times>
                                                                                       state)"},
                                                                                     var_w("cb",5),
                                                                                     @{theory}),
                                                                                  close
                                                                                    (var("v",
                                                                                         @{typ Capability}),
                                                                                     mb(mb(mb(mu(call
                                                                                                   ("getPerms",
                                                                                                    @{typ Perms},
                                                                                                    var("v",
                                                                                                        @{typ Capability}),
                                                                                                    @{theory}),
                                                                                                 qTy),
                                                                                              close
                                                                                                (var("v",
                                                                                                     @{typ Perms}),
                                                                                                 mu(call
                                                                                                      ("Perms.Permit_Store",
                                                                                                       HOLogic.boolT,
                                                                                                       var("v",
                                                                                                           @{typ Perms}),
                                                                                                       @{theory}),
                                                                                                    qTy))),
                                                                                           close
                                                                                             (var_b"v",
                                                                                              mu(mop(Not,
                                                                                                     var_b"v"),
                                                                                                 qTy))),
                                                                                        close
                                                                                          (var_b"b",
                                                                                           ite(var_b"b",
                                                                                               call
                                                                                                 ("SignalCapException",
                                                                                                  @{typ
                                                                                                  "state \<Rightarrow>
                                                                                                   (unit \<times>
                                                                                                    state)"},
                                                                                                  tp[lc("capExcPermStore",
                                                                                                        "CapExceptionType",
                                                                                                        @{theory}),
                                                                                                     var_w("cb",5)],
                                                                                                  @{theory}),
                                                                                               mb(call
                                                                                                    ("CAPR",
                                                                                                     @{typ
                                                                                                     "state \<Rightarrow>
                                                                                                      (Capability \<times>
                                                                                                       state)"},
                                                                                                     var_w("cb",5),
                                                                                                     @{theory}),
                                                                                                  close
                                                                                                    (var("v",
                                                                                                         @{typ Capability}),
                                                                                                     mb(mb(mb(mb(mu(call
                                                                                                                      ("getBase",
                                                                                                                       w64,
                                                                                                                       var("v",
                                                                                                                           @{typ Capability}),
                                                                                                                       @{theory}),
                                                                                                                    qTy),
                                                                                                                 close
                                                                                                                   (var_w("v",64),
                                                                                                                    mu(cc[lw(0,
                                                                                                                             1),
                                                                                                                          var_w("v",64)],
                                                                                                                       qTy))),
                                                                                                              close
                                                                                                                (var_w("v",65),
                                                                                                                 mb(call
                                                                                                                      ("CAPR",
                                                                                                                       @{typ
                                                                                                                       "state \<Rightarrow>
                                                                                                                        (Capability \<times>
                                                                                                                         state)"},
                                                                                                                       var_w("cb",5),
                                                                                                                       @{theory}),
                                                                                                                    close
                                                                                                                      (var("v0",
                                                                                                                           @{typ Capability}),
                                                                                                                       mb(mb(mu(call
                                                                                                                                  ("getLength",
                                                                                                                                   w64,
                                                                                                                                   var("v0",
                                                                                                                                       @{typ Capability}),
                                                                                                                                   @{theory}),
                                                                                                                                qTy),
                                                                                                                             close
                                                                                                                               (var_w("v",64),
                                                                                                                                mu(cc[lw(0,
                                                                                                                                         1),
                                                                                                                                      var_w("v",64)],
                                                                                                                                   qTy))),
                                                                                                                          close
                                                                                                                            (var_w("v0",65),
                                                                                                                             mu(bop(Add,
                                                                                                                                    var_w("v",65),
                                                                                                                                    var_w("v0",65)),
                                                                                                                                qTy))))))),
                                                                                                           close
                                                                                                             (var_w("v",65),
                                                                                                              mu(bop(Ugt,
                                                                                                                     bop(Add,
                                                                                                                         cc[lw(0,
                                                                                                                               1),
                                                                                                                            var_w("addr",64)],
                                                                                                                         cc[lw(0,
                                                                                                                               1),
                                                                                                                            mop(Cast
                                                                                                                                  w64,
                                                                                                                                bop(Lsl,
                                                                                                                                    lw(1,
                                                                                                                                       64),
                                                                                                                                    mop(Cast
                                                                                                                                          HOLogic.natT,
                                                                                                                                        var_w("t",2))))]),
                                                                                                                     var_w("v",65)),
                                                                                                                 qTy))),
                                                                                                        close
                                                                                                          (var_b"b",
                                                                                                           ite(var_b"b",
                                                                                                               call
                                                                                                                 ("SignalCapException",
                                                                                                                  @{typ
                                                                                                                  "state \<Rightarrow>
                                                                                                                   (unit \<times>
                                                                                                                    state)"},
                                                                                                                  tp[lc("capExcLength",
                                                                                                                        "CapExceptionType",
                                                                                                                        @{theory}),
                                                                                                                     var_w("cb",5)],
                                                                                                                  @{theory}),
                                                                                                               mb(call
                                                                                                                    ("CAPR",
                                                                                                                     @{typ
                                                                                                                     "state \<Rightarrow>
                                                                                                                      (Capability \<times>
                                                                                                                       state)"},
                                                                                                                     var_w("cb",5),
                                                                                                                     @{theory}),
                                                                                                                  close
                                                                                                                    (var("v",
                                                                                                                         @{typ Capability}),
                                                                                                                     mb(mb(mu(call
                                                                                                                                ("getBase",
                                                                                                                                 w64,
                                                                                                                                 var("v",
                                                                                                                                     @{typ Capability}),
                                                                                                                                 @{theory}),
                                                                                                                              qTy),
                                                                                                                           close
                                                                                                                             (var_w("v",64),
                                                                                                                              mu(bop(Ult,
                                                                                                                                     var_w("addr",64),
                                                                                                                                     var_w("v",64)),
                                                                                                                                 qTy))),
                                                                                                                        close
                                                                                                                          (var_b"b",
                                                                                                                           ite(var_b"b",
                                                                                                                               call
                                                                                                                                 ("SignalCapException",
                                                                                                                                  @{typ
                                                                                                                                  "state \<Rightarrow>
                                                                                                                                   (unit \<times>
                                                                                                                                    state)"},
                                                                                                                                  tp[lc("capExcLength",
                                                                                                                                        "CapExceptionType",
                                                                                                                                        @{theory}),
                                                                                                                                     var_w("cb",5)],
                                                                                                                                  @{theory}),
                                                                                                                               mb(call
                                                                                                                                    ("GPR",
                                                                                                                                     @{typ
                                                                                                                                     "state \<Rightarrow>
                                                                                                                                      (64 word \<times>
                                                                                                                                       state)"},
                                                                                                                                     var_w("rs",5),
                                                                                                                                     @{theory}),
                                                                                                                                  close
                                                                                                                                    (var_w("v",64),
                                                                                                                                     mb(mb(mb(mb(mb(mu(tp[var_w("v",64),
                                                                                                                                                          lt,
                                                                                                                                                          var_w("addr",64),
                                                                                                                                                          lt],
                                                                                                                                                       qTy),
                                                                                                                                                    close
                                                                                                                                                      (var("v",
                                                                                                                                                           @{typ
                                                                                                                                                           "64 word \<times>
                                                                                                                                                            bool \<times>
                                                                                                                                                            64 word \<times>
                                                                                                                                                            bool"}),
                                                                                                                                                       mu(tp[var_w("access_length",3),
                                                                                                                                                             var("v",
                                                                                                                                                                 @{typ
                                                                                                                                                                 "64 word \<times>
                                                                                                                                                                  bool \<times>
                                                                                                                                                                  64 word \<times>
                                                                                                                                                                  bool"})],
                                                                                                                                                          qTy))),
                                                                                                                                                 close
                                                                                                                                                   (var("v",
                                                                                                                                                        @{typ
                                                                                                                                                        "3 word \<times>
                                                                                                                                                         64 word \<times>
                                                                                                                                                         bool \<times>
                                                                                                                                                         64 word \<times>
                                                                                                                                                         bool"}),
                                                                                                                                                    mu(tp[var_w("access_length",3),
                                                                                                                                                          var("v",
                                                                                                                                                              @{typ
                                                                                                                                                              "3 word \<times>
                                                                                                                                                               64 word \<times>
                                                                                                                                                               bool \<times>
                                                                                                                                                               64 word \<times>
                                                                                                                                                               bool"})],
                                                                                                                                                       qTy))),
                                                                                                                                              close
                                                                                                                                                (var("v",
                                                                                                                                                     @{typ
                                                                                                                                                     "3 word \<times>
                                                                                                                                                      3 word \<times>
                                                                                                                                                      64 word \<times>
                                                                                                                                                      bool \<times>
                                                                                                                                                      64 word \<times>
                                                                                                                                                      bool"}),
                                                                                                                                                 call
                                                                                                                                                   ("StoreMemoryCap",
                                                                                                                                                    @{typ
                                                                                                                                                    "state \<Rightarrow>
                                                                                                                                                     (bool \<times>
                                                                                                                                                      state)"},
                                                                                                                                                    var("v",
                                                                                                                                                        @{typ
                                                                                                                                                        "3 word \<times>
                                                                                                                                                         3 word \<times>
                                                                                                                                                         64 word \<times>
                                                                                                                                                         bool \<times>
                                                                                                                                                         64 word \<times>
                                                                                                                                                         bool"}),
                                                                                                                                                    @{theory}))),
                                                                                                                                           close
                                                                                                                                             (var_b"b",
                                                                                                                                              mu(ite(var_b"b",
                                                                                                                                                     lw(1,
                                                                                                                                                        64),
                                                                                                                                                     lw(0,
                                                                                                                                                        64)),
                                                                                                                                                 qTy))),
                                                                                                                                        close
                                                                                                                                          (var_w("ret",64),
                                                                                                                                           mb(const
                                                                                                                                                ("exceptionSignalled",
                                                                                                                                                 @{typ
                                                                                                                                                 "state \<Rightarrow>
                                                                                                                                                  (bool \<times>
                                                                                                                                                   state)"},
                                                                                                                                                 @{theory}),
                                                                                                                                              close
                                                                                                                                                (var_b"v",
                                                                                                                                                 mb(mu(mop(Not,
                                                                                                                                                           var_b"v"),
                                                                                                                                                       qTy),
                                                                                                                                                    close
                                                                                                                                                      (var_b"b",
                                                                                                                                                       ite(var_b"b",
                                                                                                                                                           call
                                                                                                                                                             ("write'GPR",
                                                                                                                                                              @{typ
                                                                                                                                                              "state \<Rightarrow>
                                                                                                                                                               (unit \<times>
                                                                                                                                                                state)"},
                                                                                                                                                              tp[var_w("ret",64),
                                                                                                                                                                 var_w("rd",5)],
                                                                                                                                                              @{theory}),
                                                                                                                                                           mu(lu,
                                                                                                                                                              qTy))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CMOVN",
   close
     (tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("GPR",
                                                @{typ
                                                "state \<Rightarrow> (64 word \<times> state)"},
                                                var_w("rt",5),@{theory}),
                                             close
                                               (var_w("v",64),
                                                mb(mb(mu(eq(var_w("v",64),lw(0,64)),qTy),
                                                      close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mu(tp[var("v",@{typ Capability}),
                                                                         var_w("cd",5)],qTy),
                                                                   close
                                                                     (var("v",
                                                                          @{typ
                                                                          "Capability \<times>
                                                                           5 word"}),
                                                                      call
                                                                        ("write'CAPR",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (unit \<times> state)"},
                                                                         var("v",
                                                                             @{typ
                                                                             "Capability \<times>
                                                                              5 word"}),@{theory}))))),
                                                          mu(lu,qTy)))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CMOVZ",
   close
     (tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("GPR",
                                                @{typ
                                                "state \<Rightarrow> (64 word \<times> state)"},
                                                var_w("rt",5),@{theory}),
                                             close
                                               (var_w("v",64),
                                                mb(mu(eq(var_w("v",64),lw(0,64)),qTy),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mu(tp[var("v",@{typ Capability}),
                                                                         var_w("cd",5)],qTy),
                                                                   close
                                                                     (var("v",
                                                                          @{typ
                                                                          "Capability \<times>
                                                                           5 word"}),
                                                                      call
                                                                        ("write'CAPR",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (unit \<times> state)"},
                                                                         var("v",
                                                                             @{typ
                                                                             "Capability \<times>
                                                                              5 word"}),@{theory}))))),
                                                          mu(lu,qTy)))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CMove",
   close
     (tp[var_w("cd",5),var_w("cs",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cs",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cs",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cs",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mu(tp[var("v",@{typ Capability}),var_w("cd",5)],
                                                      qTy),
                                                   close
                                                     (var("v",@{typ "Capability \<times> 5 word"}),
                                                      call
                                                        ("write'CAPR",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         var("v",@{typ "Capability \<times> 5 word"}),
                                                         @{theory}))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CJR",
   close
     (var_w("cb",5),
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(const
                           ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            @{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(call
                                 ("register_inaccessible",
                                  @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cb",5),
                                  @{theory}),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      call
                                        ("SignalCapException",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                            var_w("cb",5)],@{theory}),
                                      mb(call
                                           ("CAPR",
                                            @{typ "state \<Rightarrow> (Capability \<times> state)"},
                                            var_w("cb",5),@{theory}),
                                         close
                                           (var("v",@{typ Capability}),
                                            mb(mb(mu(call
                                                       ("getTag",HOLogic.boolT,
                                                        var("v",@{typ Capability}),@{theory}),qTy),
                                                  close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                               close
                                                 (var_b"b",
                                                  ite(var_b"b",
                                                      call
                                                        ("SignalCapException",
                                                         @{typ
                                                         "state \<Rightarrow> (unit \<times> state)"},
                                                         tp[lc("capExcTag","CapExceptionType",
                                                               @{theory}),var_w("cb",5)],@{theory}),
                                                      mb(call
                                                           ("CAPR",
                                                            @{typ
                                                            "state \<Rightarrow>
                                                             (Capability \<times> state)"},
                                                            var_w("cb",5),@{theory}),
                                                         close
                                                           (var("v",@{typ Capability}),
                                                            mb(mu(call
                                                                    ("getSealed",HOLogic.boolT,
                                                                     var("v",@{typ Capability}),
                                                                     @{theory}),qTy),
                                                               close
                                                                 (var_b"b",
                                                                  ite(var_b"b",
                                                                      call
                                                                        ("SignalCapException",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (unit \<times> state)"},
                                                                         tp[lc("capExcSeal",
                                                                               "CapExceptionType",
                                                                               @{theory}),
                                                                            var_w("cb",5)],@{theory}),
                                                                      mb(call
                                                                           ("CAPR",
                                                                            @{typ
                                                                            "state \<Rightarrow>
                                                                             (Capability \<times>
                                                                              state)"},
                                                                            var_w("cb",5),@{theory}),
                                                                         close
                                                                           (var("v",
                                                                                @{typ Capability}),
                                                                            mb(mb(mb(mu(call
                                                                                          ("getPerms",
                                                                                           @{typ Perms},
                                                                                           var("v",
                                                                                               @{typ Capability}),
                                                                                           @{theory}),
                                                                                        qTy),
                                                                                     close
                                                                                       (var("v",
                                                                                            @{typ Perms}),
                                                                                        mu(call
                                                                                             ("Perms.Permit_Execute",
                                                                                              HOLogic.boolT,
                                                                                              var("v",
                                                                                                  @{typ Perms}),
                                                                                              @{theory}),
                                                                                           qTy))),
                                                                                  close
                                                                                    (var_b"v",
                                                                                     mu(mop(Not,
                                                                                            var_b"v"),
                                                                                        qTy))),
                                                                               close
                                                                                 (var_b"b",
                                                                                  ite(var_b"b",
                                                                                      call
                                                                                        ("SignalCapException",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (unit \<times>
                                                                                           state)"},
                                                                                         tp[lc("capExcPermExe",
                                                                                               "CapExceptionType",
                                                                                               @{theory}),
                                                                                            var_w("cb",5)],
                                                                                         @{theory}),
                                                                                      mb(call
                                                                                           ("CAPR",
                                                                                            @{typ
                                                                                            "state \<Rightarrow>
                                                                                             (Capability \<times>
                                                                                              state)"},
                                                                                            var_w("cb",5),
                                                                                            @{theory}),
                                                                                         close
                                                                                           (var("v",
                                                                                                @{typ Capability}),
                                                                                            mb(mb(mb(mb(mu(call
                                                                                                             ("getOffset",
                                                                                                              w64,
                                                                                                              var("v",
                                                                                                                  @{typ Capability}),
                                                                                                              @{theory}),
                                                                                                           qTy),
                                                                                                        close
                                                                                                          (var_w("v",64),
                                                                                                           mu(cc[lw(0,
                                                                                                                    1),
                                                                                                                 var_w("v",64)],
                                                                                                              qTy))),
                                                                                                     close
                                                                                                       (var_w("v",65),
                                                                                                        mu(bop(Add,
                                                                                                               var_w("v",65),
                                                                                                               lw(4,
                                                                                                                  65)),
                                                                                                           qTy))),
                                                                                                  close
                                                                                                    (var_w("v",65),
                                                                                                     mb(call
                                                                                                          ("CAPR",
                                                                                                           @{typ
                                                                                                           "state \<Rightarrow>
                                                                                                            (Capability \<times>
                                                                                                             state)"},
                                                                                                           var_w("cb",5),
                                                                                                           @{theory}),
                                                                                                        close
                                                                                                          (var("v0",
                                                                                                               @{typ Capability}),
                                                                                                           mb(mb(mu(call
                                                                                                                      ("getLength",
                                                                                                                       w64,
                                                                                                                       var("v0",
                                                                                                                           @{typ Capability}),
                                                                                                                       @{theory}),
                                                                                                                    qTy),
                                                                                                                 close
                                                                                                                   (var_w("v",64),
                                                                                                                    mu(cc[lw(0,
                                                                                                                             1),
                                                                                                                          var_w("v",64)],
                                                                                                                       qTy))),
                                                                                                              close
                                                                                                                (var_w("v0",65),
                                                                                                                 mu(bop(Ugt,
                                                                                                                        var_w("v",65),
                                                                                                                        var_w("v0",65)),
                                                                                                                    qTy))))))),
                                                                                               close
                                                                                                 (var_b"b",
                                                                                                  ite(var_b"b",
                                                                                                      call
                                                                                                        ("SignalCapException",
                                                                                                         @{typ
                                                                                                         "state \<Rightarrow>
                                                                                                          (unit \<times>
                                                                                                           state)"},
                                                                                                         tp[lc("capExcLength",
                                                                                                               "CapExceptionType",
                                                                                                               @{theory}),
                                                                                                            var_w("cb",5)],
                                                                                                         @{theory}),
                                                                                                      mb(call
                                                                                                           ("CAPR",
                                                                                                            @{typ
                                                                                                            "state \<Rightarrow>
                                                                                                             (Capability \<times>
                                                                                                              state)"},
                                                                                                            var_w("cb",5),
                                                                                                            @{theory}),
                                                                                                         close
                                                                                                           (var("v",
                                                                                                                @{typ Capability}),
                                                                                                            mb(mb(mb(mb(mb(mu(call
                                                                                                                                ("getBase",
                                                                                                                                 w64,
                                                                                                                                 var("v",
                                                                                                                                     @{typ Capability}),
                                                                                                                                 @{theory}),
                                                                                                                              qTy),
                                                                                                                           close
                                                                                                                             (var_w("v",64),
                                                                                                                              mb(call
                                                                                                                                   ("CAPR",
                                                                                                                                    @{typ
                                                                                                                                    "state \<Rightarrow>
                                                                                                                                     (Capability \<times>
                                                                                                                                      state)"},
                                                                                                                                    var_w("cb",5),
                                                                                                                                    @{theory}),
                                                                                                                                 close
                                                                                                                                   (var("v0",
                                                                                                                                        @{typ Capability}),
                                                                                                                                    mb(mu(call
                                                                                                                                            ("getOffset",
                                                                                                                                             w64,
                                                                                                                                             var("v0",
                                                                                                                                                 @{typ Capability}),
                                                                                                                                             @{theory}),
                                                                                                                                          qTy),
                                                                                                                                       close
                                                                                                                                         (var_w("v0",64),
                                                                                                                                          mu(bop(Add,
                                                                                                                                                 var_w("v",64),
                                                                                                                                                 var_w("v0",64)),
                                                                                                                                             qTy))))))),
                                                                                                                        close
                                                                                                                          (var_w("v",64),
                                                                                                                           mu(ex(var_w("v",64),
                                                                                                                                 ln
                                                                                                                                  1,
                                                                                                                                 ln
                                                                                                                                  0,
                                                                                                                                 (Word_Lib.mk_wordT 2)),
                                                                                                                              qTy))),
                                                                                                                     close
                                                                                                                       (var_w("v",2),
                                                                                                                        mu(eq(var_w("v",2),
                                                                                                                              lw(0,
                                                                                                                                 2)),
                                                                                                                           qTy))),
                                                                                                                  close
                                                                                                                    (var_b"v",
                                                                                                                     mu(mop(Not,
                                                                                                                            var_b"v"),
                                                                                                                        qTy))),
                                                                                                               close
                                                                                                                 (var_b"b",
                                                                                                                  ite(var_b"b",
                                                                                                                      mb(const
                                                                                                                           ("CP0",
                                                                                                                            @{typ
                                                                                                                            "state \<Rightarrow>
                                                                                                                             (CP0 \<times>
                                                                                                                              state)"},
                                                                                                                            @{theory}),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ CP0}),
                                                                                                                            mb(mb(call
                                                                                                                                    ("CAPR",
                                                                                                                                     @{typ
                                                                                                                                     "state \<Rightarrow>
                                                                                                                                      (Capability \<times>
                                                                                                                                       state)"},
                                                                                                                                     var_w("cb",5),
                                                                                                                                     @{theory}),
                                                                                                                                  close
                                                                                                                                    (var("v0",
                                                                                                                                         @{typ Capability}),
                                                                                                                                     mb(mb(mb(mb(mu(call
                                                                                                                                                      ("getBase",
                                                                                                                                                       w64,
                                                                                                                                                       var("v0",
                                                                                                                                                           @{typ Capability}),
                                                                                                                                                       @{theory}),
                                                                                                                                                    qTy),
                                                                                                                                                 close
                                                                                                                                                   (var_w("v",64),
                                                                                                                                                    mb(call
                                                                                                                                                         ("CAPR",
                                                                                                                                                          @{typ
                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                           (Capability \<times>
                                                                                                                                                            state)"},
                                                                                                                                                          var_w("cb",5),
                                                                                                                                                          @{theory}),
                                                                                                                                                       close
                                                                                                                                                         (var("v0",
                                                                                                                                                              @{typ Capability}),
                                                                                                                                                          mb(mu(call
                                                                                                                                                                  ("getOffset",
                                                                                                                                                                   w64,
                                                                                                                                                                   var("v0",
                                                                                                                                                                       @{typ Capability}),
                                                                                                                                                                   @{theory}),
                                                                                                                                                                qTy),
                                                                                                                                                             close
                                                                                                                                                               (var_w("v0",64),
                                                                                                                                                                mu(bop(Add,
                                                                                                                                                                       var_w("v",64),
                                                                                                                                                                       var_w("v0",64)),
                                                                                                                                                                   qTy))))))),
                                                                                                                                              close
                                                                                                                                                (var_w("v0",64),
                                                                                                                                                 mu(tp[var("v",
                                                                                                                                                           @{typ CP0}),
                                                                                                                                                       var_w("v0",64)],
                                                                                                                                                    qTy))),
                                                                                                                                           close
                                                                                                                                             (var("v",
                                                                                                                                                  @{typ
                                                                                                                                                  "CP0 \<times>
                                                                                                                                                   64 word"}),
                                                                                                                                              mu(rupd
                                                                                                                                                   ("CP0.BadVAddr",
                                                                                                                                                    var("v",
                                                                                                                                                        @{typ
                                                                                                                                                        "CP0 \<times>
                                                                                                                                                         64 word"}),
                                                                                                                                                    @{theory}),
                                                                                                                                                 qTy))),
                                                                                                                                        close
                                                                                                                                          (var("v",
                                                                                                                                               @{typ CP0}),
                                                                                                                                           call
                                                                                                                                             ("write'CP0",
                                                                                                                                              @{typ
                                                                                                                                              "state \<Rightarrow>
                                                                                                                                               (unit \<times>
                                                                                                                                                state)"},
                                                                                                                                              var("v",
                                                                                                                                                  @{typ CP0}),
                                                                                                                                              @{theory}))))),
                                                                                                                               close
                                                                                                                                 (var_a
                                                                                                                                    HOLogic.unitT,
                                                                                                                                  call
                                                                                                                                    ("SignalException",
                                                                                                                                     @{typ
                                                                                                                                     "state \<Rightarrow>
                                                                                                                                      (unit \<times>
                                                                                                                                       state)"},
                                                                                                                                     lc("AdEL",
                                                                                                                                        "ExceptionType",
                                                                                                                                        @{theory}),
                                                                                                                                     @{theory}))))),
                                                                                                                      mb(call
                                                                                                                           ("CAPR",
                                                                                                                            @{typ
                                                                                                                            "state \<Rightarrow>
                                                                                                                             (Capability \<times>
                                                                                                                              state)"},
                                                                                                                            var_w("cb",5),
                                                                                                                            @{theory}),
                                                                                                                         close
                                                                                                                           (var("v",
                                                                                                                                @{typ Capability}),
                                                                                                                            mb(mb(mb(mu(call
                                                                                                                                          ("getOffset",
                                                                                                                                           w64,
                                                                                                                                           var("v",
                                                                                                                                               @{typ Capability}),
                                                                                                                                           @{theory}),
                                                                                                                                        qTy),
                                                                                                                                     close
                                                                                                                                       (var_w("v",64),
                                                                                                                                        mb(call
                                                                                                                                             ("CAPR",
                                                                                                                                              @{typ
                                                                                                                                              "state \<Rightarrow>
                                                                                                                                               (Capability \<times>
                                                                                                                                                state)"},
                                                                                                                                              var_w("cb",5),
                                                                                                                                              @{theory}),
                                                                                                                                           close
                                                                                                                                             (var("v0",
                                                                                                                                                  @{typ Capability}),
                                                                                                                                              mu(tp[var_w("v",64),
                                                                                                                                                    var("v0",
                                                                                                                                                        @{typ Capability})],
                                                                                                                                                 qTy))))),
                                                                                                                                  close
                                                                                                                                    (var("v",
                                                                                                                                         @{typ
                                                                                                                                         "64 word \<times>
                                                                                                                                          Capability"}),
                                                                                                                                     mu(mop(Some,
                                                                                                                                            var("v",
                                                                                                                                                @{typ
                                                                                                                                                "64 word \<times>
                                                                                                                                                 Capability"})),
                                                                                                                                        qTy))),
                                                                                                                               close
                                                                                                                                 (var("v",
                                                                                                                                      @{typ
                                                                                                                                      "(64 word \<times>
                                                                                                                                         Capability)
                                                                                                                                          option"}),
                                                                                                                                  mw(close
                                                                                                                                       (var("s",
                                                                                                                                            qTy),
                                                                                                                                        rupd
                                                                                                                                          ("state.BranchToPCC",
                                                                                                                                           tp[var("s",
                                                                                                                                                  qTy),
                                                                                                                                              var("v",
                                                                                                                                                  @{typ
                                                                                                                                                  "(64 word \<times>
                                                                                                                                                     Capability)
                                                                                                                                                      option"})],
                                                                                                                                           @{theory}))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CJALR",
   close
     (tp[var_w("cd",5),var_w("cb",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(const
                           ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            @{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(call
                                 ("register_inaccessible",
                                  @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                                  @{theory}),
                               close
                                 (var_b"b",
                                  ite(var_b"b",
                                      call
                                        ("SignalCapException",
                                         @{typ "state \<Rightarrow> (unit \<times> state)"},
                                         tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                            var_w("cd",5)],@{theory}),
                                      mb(call
                                           ("register_inaccessible",
                                            @{typ "state \<Rightarrow> (bool \<times> state)"},
                                            var_w("cb",5),@{theory}),
                                         close
                                           (var_b"b",
                                            ite(var_b"b",
                                                call
                                                  ("SignalCapException",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},
                                                   tp[lc("capExcAccessSysReg","CapExceptionType",
                                                         @{theory}),var_w("cb",5)],@{theory}),
                                                mb(call
                                                     ("CAPR",
                                                      @{typ
                                                      "state \<Rightarrow>
                                                       (Capability \<times> state)"},var_w("cb",5),
                                                      @{theory}),
                                                   close
                                                     (var("v",@{typ Capability}),
                                                      mb(mb(mu(call
                                                                 ("getTag",HOLogic.boolT,
                                                                  var("v",@{typ Capability}),
                                                                  @{theory}),qTy),
                                                            close
                                                              (var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                         close
                                                           (var_b"b",
                                                            ite(var_b"b",
                                                                call
                                                                  ("SignalCapException",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (unit \<times> state)"},
                                                                   tp[lc("capExcTag",
                                                                         "CapExceptionType",
                                                                         @{theory}),var_w("cb",5)],
                                                                   @{theory}),
                                                                mb(call
                                                                     ("CAPR",
                                                                      @{typ
                                                                      "state \<Rightarrow>
                                                                       (Capability \<times> state)"},
                                                                      var_w("cb",5),@{theory}),
                                                                   close
                                                                     (var("v",@{typ Capability}),
                                                                      mb(mu(call
                                                                              ("getSealed",
                                                                               HOLogic.boolT,
                                                                               var("v",
                                                                                   @{typ Capability}),
                                                                               @{theory}),qTy),
                                                                         close
                                                                           (var_b"b",
                                                                            ite(var_b"b",
                                                                                call
                                                                                  ("SignalCapException",
                                                                                   @{typ
                                                                                   "state \<Rightarrow>
                                                                                    (unit \<times>
                                                                                     state)"},
                                                                                   tp[lc("capExcSeal",
                                                                                         "CapExceptionType",
                                                                                         @{theory}),
                                                                                      var_w("cb",5)],
                                                                                   @{theory}),
                                                                                mb(call
                                                                                     ("CAPR",
                                                                                      @{typ
                                                                                      "state \<Rightarrow>
                                                                                       (Capability \<times>
                                                                                        state)"},
                                                                                      var_w("cb",5),
                                                                                      @{theory}),
                                                                                   close
                                                                                     (var("v",
                                                                                          @{typ Capability}),
                                                                                      mb(mb(mb(mu(call
                                                                                                    ("getPerms",
                                                                                                     @{typ Perms},
                                                                                                     var("v",
                                                                                                         @{typ Capability}),
                                                                                                     @{theory}),
                                                                                                  qTy),
                                                                                               close
                                                                                                 (var("v",
                                                                                                      @{typ Perms}),
                                                                                                  mu(call
                                                                                                       ("Perms.Permit_Execute",
                                                                                                        HOLogic.boolT,
                                                                                                        var("v",
                                                                                                            @{typ Perms}),
                                                                                                        @{theory}),
                                                                                                     qTy))),
                                                                                            close
                                                                                              (var_b"v",
                                                                                               mu(mop(Not,
                                                                                                      var_b"v"),
                                                                                                  qTy))),
                                                                                         close
                                                                                           (var_b"b",
                                                                                            ite(var_b"b",
                                                                                                call
                                                                                                  ("SignalCapException",
                                                                                                   @{typ
                                                                                                   "state \<Rightarrow>
                                                                                                    (unit \<times>
                                                                                                     state)"},
                                                                                                   tp[lc("capExcPermExe",
                                                                                                         "CapExceptionType",
                                                                                                         @{theory}),
                                                                                                      var_w("cb",5)],
                                                                                                   @{theory}),
                                                                                                mb(call
                                                                                                     ("CAPR",
                                                                                                      @{typ
                                                                                                      "state \<Rightarrow>
                                                                                                       (Capability \<times>
                                                                                                        state)"},
                                                                                                      var_w("cb",5),
                                                                                                      @{theory}),
                                                                                                   close
                                                                                                     (var("v",
                                                                                                          @{typ Capability}),
                                                                                                      mb(mb(mb(mb(mu(call
                                                                                                                       ("getOffset",
                                                                                                                        w64,
                                                                                                                        var("v",
                                                                                                                            @{typ Capability}),
                                                                                                                        @{theory}),
                                                                                                                     qTy),
                                                                                                                  close
                                                                                                                    (var_w("v",64),
                                                                                                                     mu(cc[lw(0,
                                                                                                                              1),
                                                                                                                           var_w("v",64)],
                                                                                                                        qTy))),
                                                                                                               close
                                                                                                                 (var_w("v",65),
                                                                                                                  mu(bop(Add,
                                                                                                                         var_w("v",65),
                                                                                                                         lw(4,
                                                                                                                            65)),
                                                                                                                     qTy))),
                                                                                                            close
                                                                                                              (var_w("v",65),
                                                                                                               mb(call
                                                                                                                    ("CAPR",
                                                                                                                     @{typ
                                                                                                                     "state \<Rightarrow>
                                                                                                                      (Capability \<times>
                                                                                                                       state)"},
                                                                                                                     var_w("cb",5),
                                                                                                                     @{theory}),
                                                                                                                  close
                                                                                                                    (var("v0",
                                                                                                                         @{typ Capability}),
                                                                                                                     mb(mb(mu(call
                                                                                                                                ("getLength",
                                                                                                                                 w64,
                                                                                                                                 var("v0",
                                                                                                                                     @{typ Capability}),
                                                                                                                                 @{theory}),
                                                                                                                              qTy),
                                                                                                                           close
                                                                                                                             (var_w("v",64),
                                                                                                                              mu(cc[lw(0,
                                                                                                                                       1),
                                                                                                                                    var_w("v",64)],
                                                                                                                                 qTy))),
                                                                                                                        close
                                                                                                                          (var_w("v0",65),
                                                                                                                           mu(bop(Ugt,
                                                                                                                                  var_w("v",65),
                                                                                                                                  var_w("v0",65)),
                                                                                                                              qTy))))))),
                                                                                                         close
                                                                                                           (var_b"b",
                                                                                                            ite(var_b"b",
                                                                                                                call
                                                                                                                  ("SignalCapException",
                                                                                                                   @{typ
                                                                                                                   "state \<Rightarrow>
                                                                                                                    (unit \<times>
                                                                                                                     state)"},
                                                                                                                   tp[lc("capExcLength",
                                                                                                                         "CapExceptionType",
                                                                                                                         @{theory}),
                                                                                                                      var_w("cb",5)],
                                                                                                                   @{theory}),
                                                                                                                mb(call
                                                                                                                     ("CAPR",
                                                                                                                      @{typ
                                                                                                                      "state \<Rightarrow>
                                                                                                                       (Capability \<times>
                                                                                                                        state)"},
                                                                                                                      var_w("cb",5),
                                                                                                                      @{theory}),
                                                                                                                   close
                                                                                                                     (var("v",
                                                                                                                          @{typ Capability}),
                                                                                                                      mb(mb(mb(mb(mb(mu(call
                                                                                                                                          ("getBase",
                                                                                                                                           w64,
                                                                                                                                           var("v",
                                                                                                                                               @{typ Capability}),
                                                                                                                                           @{theory}),
                                                                                                                                        qTy),
                                                                                                                                     close
                                                                                                                                       (var_w("v",64),
                                                                                                                                        mb(call
                                                                                                                                             ("CAPR",
                                                                                                                                              @{typ
                                                                                                                                              "state \<Rightarrow>
                                                                                                                                               (Capability \<times>
                                                                                                                                                state)"},
                                                                                                                                              var_w("cb",5),
                                                                                                                                              @{theory}),
                                                                                                                                           close
                                                                                                                                             (var("v0",
                                                                                                                                                  @{typ Capability}),
                                                                                                                                              mb(mu(call
                                                                                                                                                      ("getOffset",
                                                                                                                                                       w64,
                                                                                                                                                       var("v0",
                                                                                                                                                           @{typ Capability}),
                                                                                                                                                       @{theory}),
                                                                                                                                                    qTy),
                                                                                                                                                 close
                                                                                                                                                   (var_w("v0",64),
                                                                                                                                                    mu(bop(Add,
                                                                                                                                                           var_w("v",64),
                                                                                                                                                           var_w("v0",64)),
                                                                                                                                                       qTy))))))),
                                                                                                                                  close
                                                                                                                                    (var_w("v",64),
                                                                                                                                     mu(ex(var_w("v",64),
                                                                                                                                           ln
                                                                                                                                            1,
                                                                                                                                           ln
                                                                                                                                            0,
                                                                                                                                           (Word_Lib.mk_wordT 2)),
                                                                                                                                        qTy))),
                                                                                                                               close
                                                                                                                                 (var_w("v",2),
                                                                                                                                  mu(eq(var_w("v",2),
                                                                                                                                        lw(0,
                                                                                                                                           2)),
                                                                                                                                     qTy))),
                                                                                                                            close
                                                                                                                              (var_b"v",
                                                                                                                               mu(mop(Not,
                                                                                                                                      var_b"v"),
                                                                                                                                  qTy))),
                                                                                                                         close
                                                                                                                           (var_b"b",
                                                                                                                            ite(var_b"b",
                                                                                                                                mb(const
                                                                                                                                     ("CP0",
                                                                                                                                      @{typ
                                                                                                                                      "state \<Rightarrow>
                                                                                                                                       (CP0 \<times>
                                                                                                                                        state)"},
                                                                                                                                      @{theory}),
                                                                                                                                   close
                                                                                                                                     (var("v",
                                                                                                                                          @{typ CP0}),
                                                                                                                                      mb(mb(call
                                                                                                                                              ("CAPR",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (Capability \<times>
                                                                                                                                                 state)"},
                                                                                                                                               var_w("cb",5),
                                                                                                                                               @{theory}),
                                                                                                                                            close
                                                                                                                                              (var("v0",
                                                                                                                                                   @{typ Capability}),
                                                                                                                                               mb(mb(mb(mb(mu(call
                                                                                                                                                                ("getBase",
                                                                                                                                                                 w64,
                                                                                                                                                                 var("v0",
                                                                                                                                                                     @{typ Capability}),
                                                                                                                                                                 @{theory}),
                                                                                                                                                              qTy),
                                                                                                                                                           close
                                                                                                                                                             (var_w("v",64),
                                                                                                                                                              mb(call
                                                                                                                                                                   ("CAPR",
                                                                                                                                                                    @{typ
                                                                                                                                                                    "state \<Rightarrow>
                                                                                                                                                                     (Capability \<times>
                                                                                                                                                                      state)"},
                                                                                                                                                                    var_w("cb",5),
                                                                                                                                                                    @{theory}),
                                                                                                                                                                 close
                                                                                                                                                                   (var("v0",
                                                                                                                                                                        @{typ Capability}),
                                                                                                                                                                    mb(mu(call
                                                                                                                                                                            ("getOffset",
                                                                                                                                                                             w64,
                                                                                                                                                                             var("v0",
                                                                                                                                                                                 @{typ Capability}),
                                                                                                                                                                             @{theory}),
                                                                                                                                                                          qTy),
                                                                                                                                                                       close
                                                                                                                                                                         (var_w("v0",64),
                                                                                                                                                                          mu(bop(Add,
                                                                                                                                                                                 var_w("v",64),
                                                                                                                                                                                 var_w("v0",64)),
                                                                                                                                                                             qTy))))))),
                                                                                                                                                        close
                                                                                                                                                          (var_w("v0",64),
                                                                                                                                                           mu(tp[var("v",
                                                                                                                                                                     @{typ CP0}),
                                                                                                                                                                 var_w("v0",64)],
                                                                                                                                                              qTy))),
                                                                                                                                                     close
                                                                                                                                                       (var("v",
                                                                                                                                                            @{typ
                                                                                                                                                            "CP0 \<times>
                                                                                                                                                             64 word"}),
                                                                                                                                                        mu(rupd
                                                                                                                                                             ("CP0.BadVAddr",
                                                                                                                                                              var("v",
                                                                                                                                                                  @{typ
                                                                                                                                                                  "CP0 \<times>
                                                                                                                                                                   64 word"}),
                                                                                                                                                              @{theory}),
                                                                                                                                                           qTy))),
                                                                                                                                                  close
                                                                                                                                                    (var("v",
                                                                                                                                                         @{typ CP0}),
                                                                                                                                                     call
                                                                                                                                                       ("write'CP0",
                                                                                                                                                        @{typ
                                                                                                                                                        "state \<Rightarrow>
                                                                                                                                                         (unit \<times>
                                                                                                                                                          state)"},
                                                                                                                                                        var("v",
                                                                                                                                                            @{typ CP0}),
                                                                                                                                                        @{theory}))))),
                                                                                                                                         close
                                                                                                                                           (var_a
                                                                                                                                              HOLogic.unitT,
                                                                                                                                            call
                                                                                                                                              ("SignalException",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (unit \<times>
                                                                                                                                                 state)"},
                                                                                                                                               lc("AdEL",
                                                                                                                                                  "ExceptionType",
                                                                                                                                                  @{theory}),
                                                                                                                                               @{theory}))))),
                                                                                                                                mb(const
                                                                                                                                     ("PCC",
                                                                                                                                      @{typ
                                                                                                                                      "state \<Rightarrow>
                                                                                                                                       (Capability \<times>
                                                                                                                                        state)"},
                                                                                                                                      @{theory}),
                                                                                                                                   close
                                                                                                                                     (var("v",
                                                                                                                                          @{typ Capability}),
                                                                                                                                      mb(mb(mb(mb(mb(const
                                                                                                                                                       ("PC",
                                                                                                                                                        @{typ
                                                                                                                                                        "state \<Rightarrow>
                                                                                                                                                         (64 word \<times>
                                                                                                                                                          state)"},
                                                                                                                                                        @{theory}),
                                                                                                                                                     close
                                                                                                                                                       (var_w("v0",64),
                                                                                                                                                        mb(mu(bop(Add,
                                                                                                                                                                  var_w("v0",64),
                                                                                                                                                                  lw(8,
                                                                                                                                                                     64)),
                                                                                                                                                              qTy),
                                                                                                                                                           close
                                                                                                                                                             (var_w("v0",64),
                                                                                                                                                              mu(tp[var("v",
                                                                                                                                                                        @{typ Capability}),
                                                                                                                                                                    var_w("v0",64)],
                                                                                                                                                                 qTy))))),
                                                                                                                                                  close
                                                                                                                                                    (var("v",
                                                                                                                                                         @{typ
                                                                                                                                                         "Capability \<times>
                                                                                                                                                          64 word"}),
                                                                                                                                                     mu(call
                                                                                                                                                          ("setOffset",
                                                                                                                                                           @{typ Capability},
                                                                                                                                                           var("v",
                                                                                                                                                               @{typ
                                                                                                                                                               "Capability \<times>
                                                                                                                                                                64 word"}),
                                                                                                                                                           @{theory}),
                                                                                                                                                        qTy))),
                                                                                                                                               close
                                                                                                                                                 (var("v",
                                                                                                                                                      @{typ Capability}),
                                                                                                                                                  mu(tp[var("v",
                                                                                                                                                            @{typ Capability}),
                                                                                                                                                        var_w("cd",5)],
                                                                                                                                                     qTy))),
                                                                                                                                            close
                                                                                                                                              (var("v",
                                                                                                                                                   @{typ
                                                                                                                                                   "Capability \<times>
                                                                                                                                                    5 word"}),
                                                                                                                                               call
                                                                                                                                                 ("write'CAPR",
                                                                                                                                                  @{typ
                                                                                                                                                  "state \<Rightarrow>
                                                                                                                                                   (unit \<times>
                                                                                                                                                    state)"},
                                                                                                                                                  var("v",
                                                                                                                                                      @{typ
                                                                                                                                                      "Capability \<times>
                                                                                                                                                       5 word"}),
                                                                                                                                                  @{theory}))),
                                                                                                                                         close
                                                                                                                                           (var_a
                                                                                                                                              HOLogic.unitT,
                                                                                                                                            mb(call
                                                                                                                                                 ("CAPR",
                                                                                                                                                  @{typ
                                                                                                                                                  "state \<Rightarrow>
                                                                                                                                                   (Capability \<times>
                                                                                                                                                    state)"},
                                                                                                                                                  var_w("cd",5),
                                                                                                                                                  @{theory}),
                                                                                                                                               close
                                                                                                                                                 (var("v",
                                                                                                                                                      @{typ Capability}),
                                                                                                                                                  mb(mb(mb(const
                                                                                                                                                             ("PC",
                                                                                                                                                              @{typ
                                                                                                                                                              "state \<Rightarrow>
                                                                                                                                                               (64 word \<times>
                                                                                                                                                                state)"},
                                                                                                                                                              @{theory}),
                                                                                                                                                           close
                                                                                                                                                             (var_w("v0",64),
                                                                                                                                                              mu(tp[var("v",
                                                                                                                                                                        @{typ Capability}),
                                                                                                                                                                    var_w("v0",64)],
                                                                                                                                                                 qTy))),
                                                                                                                                                        close
                                                                                                                                                          (var("v",
                                                                                                                                                               @{typ
                                                                                                                                                               "Capability \<times>
                                                                                                                                                                64 word"}),
                                                                                                                                                           call
                                                                                                                                                             ("watchOOB",
                                                                                                                                                              @{typ
                                                                                                                                                              "state \<Rightarrow>
                                                                                                                                                               (unit \<times>
                                                                                                                                                                state)"},
                                                                                                                                                              var("v",
                                                                                                                                                                  @{typ
                                                                                                                                                                  "Capability \<times>
                                                                                                                                                                   64 word"}),
                                                                                                                                                              @{theory}))),
                                                                                                                                                     close
                                                                                                                                                       (var_a
                                                                                                                                                          HOLogic.unitT,
                                                                                                                                                        mb(call
                                                                                                                                                             ("CAPR",
                                                                                                                                                              @{typ
                                                                                                                                                              "state \<Rightarrow>
                                                                                                                                                               (Capability \<times>
                                                                                                                                                                state)"},
                                                                                                                                                              var_w("cb",5),
                                                                                                                                                              @{theory}),
                                                                                                                                                           close
                                                                                                                                                             (var("v",
                                                                                                                                                                  @{typ Capability}),
                                                                                                                                                              mb(mb(mb(mu(call
                                                                                                                                                                            ("getOffset",
                                                                                                                                                                             w64,
                                                                                                                                                                             var("v",
                                                                                                                                                                                 @{typ Capability}),
                                                                                                                                                                             @{theory}),
                                                                                                                                                                          qTy),
                                                                                                                                                                       close
                                                                                                                                                                         (var_w("v",64),
                                                                                                                                                                          mb(call
                                                                                                                                                                               ("CAPR",
                                                                                                                                                                                @{typ
                                                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                                                 (Capability \<times>
                                                                                                                                                                                  state)"},
                                                                                                                                                                                var_w("cb",5),
                                                                                                                                                                                @{theory}),
                                                                                                                                                                             close
                                                                                                                                                                               (var("v0",
                                                                                                                                                                                    @{typ Capability}),
                                                                                                                                                                                mu(tp[var_w("v",64),
                                                                                                                                                                                      var("v0",
                                                                                                                                                                                          @{typ Capability})],
                                                                                                                                                                                   qTy))))),
                                                                                                                                                                    close
                                                                                                                                                                      (var("v",
                                                                                                                                                                           @{typ
                                                                                                                                                                           "64 word \<times>
                                                                                                                                                                            Capability"}),
                                                                                                                                                                       mu(mop(Some,
                                                                                                                                                                              var("v",
                                                                                                                                                                                  @{typ
                                                                                                                                                                                  "64 word \<times>
                                                                                                                                                                                   Capability"})),
                                                                                                                                                                          qTy))),
                                                                                                                                                                 close
                                                                                                                                                                   (var("v",
                                                                                                                                                                        @{typ
                                                                                                                                                                        "(64 word \<times>
                                                                                                                                                                           Capability)
                                                                                                                                                                            option"}),
                                                                                                                                                                    mw(close
                                                                                                                                                                         (var("s",
                                                                                                                                                                              qTy),
                                                                                                                                                                          rupd
                                                                                                                                                                            ("state.BranchToPCC",
                                                                                                                                                                             tp[var("s",
                                                                                                                                                                                    qTy),
                                                                                                                                                                                var("v",
                                                                                                                                                                                    @{typ
                                                                                                                                                                                    "(64 word \<times>
                                                                                                                                                                                       Capability)
                                                                                                                                                                                        option"})],
                                                                                                                                                                             @{theory})))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CSeal",
   close
     (tp[var_w("cd",5),var_w("cs",5),var_w("ct",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cs",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cs",5)],@{theory}),
                                          mb(call
                                               ("register_inaccessible",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var_w("ct",5),@{theory}),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    call
                                                      ("SignalCapException",
                                                       @{typ
                                                       "state \<Rightarrow> (unit \<times> state)"},
                                                       tp[lc("capExcAccessSysReg",
                                                             "CapExceptionType",@{theory}),
                                                          var_w("ct",5)],@{theory}),
                                                    mb(call
                                                         ("CAPR",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (Capability \<times> state)"},
                                                          var_w("cs",5),@{theory}),
                                                       close
                                                         (var("v",@{typ Capability}),
                                                          mb(mb(mu(call
                                                                     ("getTag",HOLogic.boolT,
                                                                      var("v",@{typ Capability}),
                                                                      @{theory}),qTy),
                                                                close
                                                                  (var_b"v",
                                                                   mu(mop(Not,var_b"v"),qTy))),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    call
                                                                      ("SignalCapException",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       tp[lc("capExcTag",
                                                                             "CapExceptionType",
                                                                             @{theory}),
                                                                          var_w("cs",5)],@{theory}),
                                                                    mb(call
                                                                         ("CAPR",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (Capability \<times>
                                                                            state)"},var_w("ct",5),
                                                                          @{theory}),
                                                                       close
                                                                         (var("v",@{typ Capability}),
                                                                          mb(mb(mu(call
                                                                                     ("getTag",
                                                                                      HOLogic.boolT,
                                                                                      var("v",
                                                                                          @{typ Capability}),
                                                                                      @{theory}),qTy),
                                                                                close
                                                                                  (var_b"v",
                                                                                   mu(mop(Not,
                                                                                          var_b"v"),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"b",
                                                                                ite(var_b"b",
                                                                                    call
                                                                                      ("SignalCapException",
                                                                                       @{typ
                                                                                       "state \<Rightarrow>
                                                                                        (unit \<times>
                                                                                         state)"},
                                                                                       tp[lc("capExcTag",
                                                                                             "CapExceptionType",
                                                                                             @{theory}),
                                                                                          var_w("ct",5)],
                                                                                       @{theory}),
                                                                                    mb(call
                                                                                         ("CAPR",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (Capability \<times>
                                                                                            state)"},
                                                                                          var_w("cs",5),
                                                                                          @{theory}),
                                                                                       close
                                                                                         (var("v",
                                                                                              @{typ Capability}),
                                                                                          mb(mu(call
                                                                                                  ("getSealed",
                                                                                                   HOLogic.boolT,
                                                                                                   var("v",
                                                                                                       @{typ Capability}),
                                                                                                   @{theory}),
                                                                                                qTy),
                                                                                             close
                                                                                               (var_b"b",
                                                                                                ite(var_b"b",
                                                                                                    call
                                                                                                      ("SignalCapException",
                                                                                                       @{typ
                                                                                                       "state \<Rightarrow>
                                                                                                        (unit \<times>
                                                                                                         state)"},
                                                                                                       tp[lc("capExcSeal",
                                                                                                             "CapExceptionType",
                                                                                                             @{theory}),
                                                                                                          var_w("cs",5)],
                                                                                                       @{theory}),
                                                                                                    mb(call
                                                                                                         ("CAPR",
                                                                                                          @{typ
                                                                                                          "state \<Rightarrow>
                                                                                                           (Capability \<times>
                                                                                                            state)"},
                                                                                                          var_w("ct",5),
                                                                                                          @{theory}),
                                                                                                       close
                                                                                                         (var("v",
                                                                                                              @{typ Capability}),
                                                                                                          mb(mu(call
                                                                                                                  ("getSealed",
                                                                                                                   HOLogic.boolT,
                                                                                                                   var("v",
                                                                                                                       @{typ Capability}),
                                                                                                                   @{theory}),
                                                                                                                qTy),
                                                                                                             close
                                                                                                               (var_b"b",
                                                                                                                ite(var_b"b",
                                                                                                                    call
                                                                                                                      ("SignalCapException",
                                                                                                                       @{typ
                                                                                                                       "state \<Rightarrow>
                                                                                                                        (unit \<times>
                                                                                                                         state)"},
                                                                                                                       tp[lc("capExcSeal",
                                                                                                                             "CapExceptionType",
                                                                                                                             @{theory}),
                                                                                                                          var_w("ct",5)],
                                                                                                                       @{theory}),
                                                                                                                    mb(call
                                                                                                                         ("CAPR",
                                                                                                                          @{typ
                                                                                                                          "state \<Rightarrow>
                                                                                                                           (Capability \<times>
                                                                                                                            state)"},
                                                                                                                          var_w("ct",5),
                                                                                                                          @{theory}),
                                                                                                                       close
                                                                                                                         (var("v",
                                                                                                                              @{typ Capability}),
                                                                                                                          mb(mb(mb(mu(call
                                                                                                                                        ("getPerms",
                                                                                                                                         @{typ Perms},
                                                                                                                                         var("v",
                                                                                                                                             @{typ Capability}),
                                                                                                                                         @{theory}),
                                                                                                                                      qTy),
                                                                                                                                   close
                                                                                                                                     (var("v",
                                                                                                                                          @{typ Perms}),
                                                                                                                                      mu(call
                                                                                                                                           ("Perms.Permit_Seal",
                                                                                                                                            HOLogic.boolT,
                                                                                                                                            var("v",
                                                                                                                                                @{typ Perms}),
                                                                                                                                            @{theory}),
                                                                                                                                         qTy))),
                                                                                                                                close
                                                                                                                                  (var_b"v",
                                                                                                                                   mu(mop(Not,
                                                                                                                                          var_b"v"),
                                                                                                                                      qTy))),
                                                                                                                             close
                                                                                                                               (var_b"b",
                                                                                                                                ite(var_b"b",
                                                                                                                                    call
                                                                                                                                      ("SignalCapException",
                                                                                                                                       @{typ
                                                                                                                                       "state \<Rightarrow>
                                                                                                                                        (unit \<times>
                                                                                                                                         state)"},
                                                                                                                                       tp[lc("capExcPermSeal",
                                                                                                                                             "CapExceptionType",
                                                                                                                                             @{theory}),
                                                                                                                                          var_w("ct",5)],
                                                                                                                                       @{theory}),
                                                                                                                                    mb(call
                                                                                                                                         ("CAPR",
                                                                                                                                          @{typ
                                                                                                                                          "state \<Rightarrow>
                                                                                                                                           (Capability \<times>
                                                                                                                                            state)"},
                                                                                                                                          var_w("ct",5),
                                                                                                                                          @{theory}),
                                                                                                                                       close
                                                                                                                                         (var("v",
                                                                                                                                              @{typ Capability}),
                                                                                                                                          mb(mb(mu(call
                                                                                                                                                     ("getOffset",
                                                                                                                                                      w64,
                                                                                                                                                      var("v",
                                                                                                                                                          @{typ Capability}),
                                                                                                                                                      @{theory}),
                                                                                                                                                   qTy),
                                                                                                                                                close
                                                                                                                                                  (var_w("v",64),
                                                                                                                                                   mb(call
                                                                                                                                                        ("CAPR",
                                                                                                                                                         @{typ
                                                                                                                                                         "state \<Rightarrow>
                                                                                                                                                          (Capability \<times>
                                                                                                                                                           state)"},
                                                                                                                                                         var_w("ct",5),
                                                                                                                                                         @{theory}),
                                                                                                                                                      close
                                                                                                                                                        (var("v0",
                                                                                                                                                             @{typ Capability}),
                                                                                                                                                         mb(mu(call
                                                                                                                                                                 ("getLength",
                                                                                                                                                                  w64,
                                                                                                                                                                  var("v0",
                                                                                                                                                                      @{typ Capability}),
                                                                                                                                                                  @{theory}),
                                                                                                                                                               qTy),
                                                                                                                                                            close
                                                                                                                                                              (var_w("v0",64),
                                                                                                                                                               mu(bop(Uge,
                                                                                                                                                                      var_w("v",64),
                                                                                                                                                                      var_w("v0",64)),
                                                                                                                                                                  qTy))))))),
                                                                                                                                             close
                                                                                                                                               (var_b"b",
                                                                                                                                                ite(var_b"b",
                                                                                                                                                    call
                                                                                                                                                      ("SignalCapException",
                                                                                                                                                       @{typ
                                                                                                                                                       "state \<Rightarrow>
                                                                                                                                                        (unit \<times>
                                                                                                                                                         state)"},
                                                                                                                                                       tp[lc("capExcLength",
                                                                                                                                                             "CapExceptionType",
                                                                                                                                                             @{theory}),
                                                                                                                                                          var_w("ct",5)],
                                                                                                                                                       @{theory}),
                                                                                                                                                    mb(call
                                                                                                                                                         ("CAPR",
                                                                                                                                                          @{typ
                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                           (Capability \<times>
                                                                                                                                                            state)"},
                                                                                                                                                          var_w("ct",5),
                                                                                                                                                          @{theory}),
                                                                                                                                                       close
                                                                                                                                                         (var("v",
                                                                                                                                                              @{typ Capability}),
                                                                                                                                                          mb(mb(mb(mu(call
                                                                                                                                                                        ("getBase",
                                                                                                                                                                         w64,
                                                                                                                                                                         var("v",
                                                                                                                                                                             @{typ Capability}),
                                                                                                                                                                         @{theory}),
                                                                                                                                                                      qTy),
                                                                                                                                                                   close
                                                                                                                                                                     (var_w("v",64),
                                                                                                                                                                      mb(call
                                                                                                                                                                           ("CAPR",
                                                                                                                                                                            @{typ
                                                                                                                                                                            "state \<Rightarrow>
                                                                                                                                                                             (Capability \<times>
                                                                                                                                                                              state)"},
                                                                                                                                                                            var_w("ct",5),
                                                                                                                                                                            @{theory}),
                                                                                                                                                                         close
                                                                                                                                                                           (var("v0",
                                                                                                                                                                                @{typ Capability}),
                                                                                                                                                                            mb(mu(call
                                                                                                                                                                                    ("getOffset",
                                                                                                                                                                                     w64,
                                                                                                                                                                                     var("v0",
                                                                                                                                                                                         @{typ Capability}),
                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                  qTy),
                                                                                                                                                                               close
                                                                                                                                                                                 (var_w("v0",64),
                                                                                                                                                                                  mu(bop(Add,
                                                                                                                                                                                         var_w("v",64),
                                                                                                                                                                                         var_w("v0",64)),
                                                                                                                                                                                     qTy))))))),
                                                                                                                                                                close
                                                                                                                                                                  (var_w("v",64),
                                                                                                                                                                   mu(bop(Uge,
                                                                                                                                                                          var_w("v",64),
                                                                                                                                                                          mop(Cast
                                                                                                                                                                                w64,
                                                                                                                                                                              bop(Exp,
                                                                                                                                                                                  ln
                                                                                                                                                                                   2,
                                                                                                                                                                                  const
                                                                                                                                                                                    ("OTYPEWIDTH",
                                                                                                                                                                                     HOLogic.natT,
                                                                                                                                                                                     @{theory})))),
                                                                                                                                                                      qTy))),
                                                                                                                                                             close
                                                                                                                                                               (var_b"b",
                                                                                                                                                                ite(var_b"b",
                                                                                                                                                                    call
                                                                                                                                                                      ("SignalCapException",
                                                                                                                                                                       @{typ
                                                                                                                                                                       "state \<Rightarrow>
                                                                                                                                                                        (unit \<times>
                                                                                                                                                                         state)"},
                                                                                                                                                                       tp[lc("capExcLength",
                                                                                                                                                                             "CapExceptionType",
                                                                                                                                                                             @{theory}),
                                                                                                                                                                          var_w("ct",5)],
                                                                                                                                                                       @{theory}),
                                                                                                                                                                    mb(call
                                                                                                                                                                         ("CAPR",
                                                                                                                                                                          @{typ
                                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                                           (Capability \<times>
                                                                                                                                                                            state)"},
                                                                                                                                                                          var_w("cs",5),
                                                                                                                                                                          @{theory}),
                                                                                                                                                                       close
                                                                                                                                                                         (var("v",
                                                                                                                                                                              @{typ Capability}),
                                                                                                                                                                          mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                             @{typ Capability}),
                                                                                                                                                                                         lt],
                                                                                                                                                                                      qTy),
                                                                                                                                                                                   close
                                                                                                                                                                                     (var("v",
                                                                                                                                                                                          @{typ
                                                                                                                                                                                          "Capability \<times>
                                                                                                                                                                                           bool"}),
                                                                                                                                                                                      mu(call
                                                                                                                                                                                           ("canRepSeal",
                                                                                                                                                                                            HOLogic.boolT,
                                                                                                                                                                                            var("v",
                                                                                                                                                                                                @{typ
                                                                                                                                                                                                "Capability \<times>
                                                                                                                                                                                                 bool"}),
                                                                                                                                                                                            @{theory}),
                                                                                                                                                                                         qTy))),
                                                                                                                                                                                close
                                                                                                                                                                                  (var_b"v",
                                                                                                                                                                                   mu(mop(Not,
                                                                                                                                                                                          var_b"v"),
                                                                                                                                                                                      qTy))),
                                                                                                                                                                             close
                                                                                                                                                                               (var_b"b",
                                                                                                                                                                                ite(var_b"b",
                                                                                                                                                                                    call
                                                                                                                                                                                      ("SignalCapException",
                                                                                                                                                                                       @{typ
                                                                                                                                                                                       "state \<Rightarrow>
                                                                                                                                                                                        (unit \<times>
                                                                                                                                                                                         state)"},
                                                                                                                                                                                       tp[lc("capExcInexact",
                                                                                                                                                                                             "CapExceptionType",
                                                                                                                                                                                             @{theory}),
                                                                                                                                                                                          var_w("cs",5)],
                                                                                                                                                                                       @{theory}),
                                                                                                                                                                                    mb(call
                                                                                                                                                                                         ("CAPR",
                                                                                                                                                                                          @{typ
                                                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                                                           (Capability \<times>
                                                                                                                                                                                            state)"},
                                                                                                                                                                                          var_w("cs",5),
                                                                                                                                                                                          @{theory}),
                                                                                                                                                                                       close
                                                                                                                                                                                         (var("v",
                                                                                                                                                                                              @{typ Capability}),
                                                                                                                                                                                          mn(var("v",
                                                                                                                                                                                                 @{typ Capability}),
                                                                                                                                                                                             mb(mr(close
                                                                                                                                                                                                     (var("s",
                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                          "Capability \<times>
                                                                                                                                                                                                           state"}),
                                                                                                                                                                                                      mop(Fst,
                                                                                                                                                                                                          var("s",
                                                                                                                                                                                                              @{typ
                                                                                                                                                                                                              "Capability \<times>
                                                                                                                                                                                                               state"})))),
                                                                                                                                                                                                close
                                                                                                                                                                                                  (var("v",
                                                                                                                                                                                                       @{typ Capability}),
                                                                                                                                                                                                   mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                                                      @{typ Capability}),
                                                                                                                                                                                                                  lt],
                                                                                                                                                                                                               @{typ
                                                                                                                                                                                                               "Capability \<times>
                                                                                                                                                                                                                state"}),
                                                                                                                                                                                                            close
                                                                                                                                                                                                              (var("v",
                                                                                                                                                                                                                   @{typ
                                                                                                                                                                                                                   "Capability \<times>
                                                                                                                                                                                                                    bool"}),
                                                                                                                                                                                                               mu(call
                                                                                                                                                                                                                    ("setSealed",
                                                                                                                                                                                                                     @{typ Capability},
                                                                                                                                                                                                                     var("v",
                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                         "Capability \<times>
                                                                                                                                                                                                                          bool"}),
                                                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                  "Capability \<times>
                                                                                                                                                                                                                   state"}))),
                                                                                                                                                                                                         close
                                                                                                                                                                                                           (var("v",
                                                                                                                                                                                                                @{typ Capability}),
                                                                                                                                                                                                            mw(close
                                                                                                                                                                                                                 (var("s",
                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                      "Capability \<times>
                                                                                                                                                                                                                       state"}),
                                                                                                                                                                                                                  tp[var("v",
                                                                                                                                                                                                                         @{typ Capability}),
                                                                                                                                                                                                                     mop(Snd,
                                                                                                                                                                                                                         var("s",
                                                                                                                                                                                                                             @{typ
                                                                                                                                                                                                                             "Capability \<times>
                                                                                                                                                                                                                              state"}))])))),
                                                                                                                                                                                                      close
                                                                                                                                                                                                        (var_a
                                                                                                                                                                                                           HOLogic.unitT,
                                                                                                                                                                                                         mb(mr(close
                                                                                                                                                                                                                 (var("s",
                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                      "Capability \<times>
                                                                                                                                                                                                                       state"}),
                                                                                                                                                                                                                  mop(Fst,
                                                                                                                                                                                                                      var("s",
                                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                                          "Capability \<times>
                                                                                                                                                                                                                           state"})))),
                                                                                                                                                                                                            close
                                                                                                                                                                                                              (var("v",
                                                                                                                                                                                                                   @{typ Capability}),
                                                                                                                                                                                                               mb(mb(mb(mb(md(call
                                                                                                                                                                                                                                ("CAPR",
                                                                                                                                                                                                                                 @{typ
                                                                                                                                                                                                                                 "state \<Rightarrow>
                                                                                                                                                                                                                                  (Capability \<times>
                                                                                                                                                                                                                                   state)"},
                                                                                                                                                                                                                                 var_w("ct",5),
                                                                                                                                                                                                                                 @{theory}),
                                                                                                                                                                                                                              @{typ Capability}),
                                                                                                                                                                                                                           close
                                                                                                                                                                                                                             (var("v0",
                                                                                                                                                                                                                                  @{typ Capability}),
                                                                                                                                                                                                                              mb(mb(mb(mu(call
                                                                                                                                                                                                                                            ("getBase",
                                                                                                                                                                                                                                             w64,
                                                                                                                                                                                                                                             var("v0",
                                                                                                                                                                                                                                                 @{typ Capability}),
                                                                                                                                                                                                                                             @{theory}),
                                                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                                                          "Capability \<times>
                                                                                                                                                                                                                                           state"}),
                                                                                                                                                                                                                                       close
                                                                                                                                                                                                                                         (var_w("v",64),
                                                                                                                                                                                                                                          mb(md(call
                                                                                                                                                                                                                                                  ("CAPR",
                                                                                                                                                                                                                                                   @{typ
                                                                                                                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                                                                                                                    (Capability \<times>
                                                                                                                                                                                                                                                     state)"},
                                                                                                                                                                                                                                                   var_w("ct",5),
                                                                                                                                                                                                                                                   @{theory}),
                                                                                                                                                                                                                                                @{typ Capability}),
                                                                                                                                                                                                                                             close
                                                                                                                                                                                                                                               (var("v0",
                                                                                                                                                                                                                                                    @{typ Capability}),
                                                                                                                                                                                                                                                mb(mu(call
                                                                                                                                                                                                                                                        ("getOffset",
                                                                                                                                                                                                                                                         w64,
                                                                                                                                                                                                                                                         var("v0",
                                                                                                                                                                                                                                                             @{typ Capability}),
                                                                                                                                                                                                                                                         @{theory}),
                                                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                                                      "Capability \<times>
                                                                                                                                                                                                                                                       state"}),
                                                                                                                                                                                                                                                   close
                                                                                                                                                                                                                                                     (var_w("v0",64),
                                                                                                                                                                                                                                                      mu(bop(Add,
                                                                                                                                                                                                                                                             var_w("v",64),
                                                                                                                                                                                                                                                             var_w("v0",64)),
                                                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                                                         "Capability \<times>
                                                                                                                                                                                                                                                          state"}))))))),
                                                                                                                                                                                                                                    close
                                                                                                                                                                                                                                      (var_w("v",64),
                                                                                                                                                                                                                                       mu(ex(var_w("v",64),
                                                                                                                                                                                                                                             bop(Sub,
                                                                                                                                                                                                                                                 const
                                                                                                                                                                                                                                                   ("OTYPEWIDTH",
                                                                                                                                                                                                                                                    HOLogic.natT,
                                                                                                                                                                                                                                                    @{theory}),
                                                                                                                                                                                                                                                 ln
                                                                                                                                                                                                                                                  1),
                                                                                                                                                                                                                                             ln
                                                                                                                                                                                                                                              0,
                                                                                                                                                                                                                                             (Word_Lib.mk_wordT 24)),
                                                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                                                          "Capability \<times>
                                                                                                                                                                                                                                           state"}))),
                                                                                                                                                                                                                                 close
                                                                                                                                                                                                                                   (var_w("v0",24),
                                                                                                                                                                                                                                    mu(tp[var("v",
                                                                                                                                                                                                                                              @{typ Capability}),
                                                                                                                                                                                                                                          var_w("v0",24)],
                                                                                                                                                                                                                                       @{typ
                                                                                                                                                                                                                                       "Capability \<times>
                                                                                                                                                                                                                                        state"}))))),
                                                                                                                                                                                                                        close
                                                                                                                                                                                                                          (var("v",
                                                                                                                                                                                                                               @{typ
                                                                                                                                                                                                                               "Capability \<times>
                                                                                                                                                                                                                                24 word"}),
                                                                                                                                                                                                                           mu(call
                                                                                                                                                                                                                                ("setType",
                                                                                                                                                                                                                                 @{typ Capability},
                                                                                                                                                                                                                                 var("v",
                                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                                     "Capability \<times>
                                                                                                                                                                                                                                      24 word"}),
                                                                                                                                                                                                                                 @{theory}),
                                                                                                                                                                                                                              @{typ
                                                                                                                                                                                                                              "Capability \<times>
                                                                                                                                                                                                                               state"}))),
                                                                                                                                                                                                                     close
                                                                                                                                                                                                                       (var("v",
                                                                                                                                                                                                                            @{typ Capability}),
                                                                                                                                                                                                                        mw(close
                                                                                                                                                                                                                             (var("s",
                                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                                  "Capability \<times>
                                                                                                                                                                                                                                   state"}),
                                                                                                                                                                                                                              tp[var("v",
                                                                                                                                                                                                                                     @{typ Capability}),
                                                                                                                                                                                                                                 mop(Snd,
                                                                                                                                                                                                                                     var("s",
                                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                                         "Capability \<times>
                                                                                                                                                                                                                                          state"}))])))),
                                                                                                                                                                                                                  close
                                                                                                                                                                                                                    (var_a
                                                                                                                                                                                                                       HOLogic.unitT,
                                                                                                                                                                                                                     mb(mr(close
                                                                                                                                                                                                                             (var("s",
                                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                                  "Capability \<times>
                                                                                                                                                                                                                                   state"}),
                                                                                                                                                                                                                              mop(Fst,
                                                                                                                                                                                                                                  var("s",
                                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                                      "Capability \<times>
                                                                                                                                                                                                                                       state"})))),
                                                                                                                                                                                                                        close
                                                                                                                                                                                                                          (var("v",
                                                                                                                                                                                                                               @{typ Capability}),
                                                                                                                                                                                                                           mb(mu(tp[var("v",
                                                                                                                                                                                                                                        @{typ Capability}),
                                                                                                                                                                                                                                    var_w("cd",5)],
                                                                                                                                                                                                                                 @{typ
                                                                                                                                                                                                                                 "Capability \<times>
                                                                                                                                                                                                                                  state"}),
                                                                                                                                                                                                                              close
                                                                                                                                                                                                                                (var("v",
                                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                                     "Capability \<times>
                                                                                                                                                                                                                                      5 word"}),
                                                                                                                                                                                                                                 md(call
                                                                                                                                                                                                                                      ("write'CAPR",
                                                                                                                                                                                                                                       @{typ
                                                                                                                                                                                                                                       "state \<Rightarrow>
                                                                                                                                                                                                                                        (unit \<times>
                                                                                                                                                                                                                                         state)"},
                                                                                                                                                                                                                                       var("v",
                                                                                                                                                                                                                                           @{typ
                                                                                                                                                                                                                                           "Capability \<times>
                                                                                                                                                                                                                                            5 word"}),
                                                                                                                                                                                                                                       @{theory}),
                                                                                                                                                                                                                                    @{typ Capability}))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CUnseal",
   close
     (tp[var_w("cd",5),var_w("cs",5),var_w("ct",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cd",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cd",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cs",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cs",5)],@{theory}),
                                          mb(call
                                               ("register_inaccessible",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                var_w("ct",5),@{theory}),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    call
                                                      ("SignalCapException",
                                                       @{typ
                                                       "state \<Rightarrow> (unit \<times> state)"},
                                                       tp[lc("capExcAccessSysReg",
                                                             "CapExceptionType",@{theory}),
                                                          var_w("ct",5)],@{theory}),
                                                    mb(call
                                                         ("CAPR",
                                                          @{typ
                                                          "state \<Rightarrow>
                                                           (Capability \<times> state)"},
                                                          var_w("cs",5),@{theory}),
                                                       close
                                                         (var("v",@{typ Capability}),
                                                          mb(mb(mu(call
                                                                     ("getTag",HOLogic.boolT,
                                                                      var("v",@{typ Capability}),
                                                                      @{theory}),qTy),
                                                                close
                                                                  (var_b"v",
                                                                   mu(mop(Not,var_b"v"),qTy))),
                                                             close
                                                               (var_b"b",
                                                                ite(var_b"b",
                                                                    call
                                                                      ("SignalCapException",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       tp[lc("capExcTag",
                                                                             "CapExceptionType",
                                                                             @{theory}),
                                                                          var_w("cs",5)],@{theory}),
                                                                    mb(call
                                                                         ("CAPR",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (Capability \<times>
                                                                            state)"},var_w("ct",5),
                                                                          @{theory}),
                                                                       close
                                                                         (var("v",@{typ Capability}),
                                                                          mb(mb(mu(call
                                                                                     ("getTag",
                                                                                      HOLogic.boolT,
                                                                                      var("v",
                                                                                          @{typ Capability}),
                                                                                      @{theory}),qTy),
                                                                                close
                                                                                  (var_b"v",
                                                                                   mu(mop(Not,
                                                                                          var_b"v"),
                                                                                      qTy))),
                                                                             close
                                                                               (var_b"b",
                                                                                ite(var_b"b",
                                                                                    call
                                                                                      ("SignalCapException",
                                                                                       @{typ
                                                                                       "state \<Rightarrow>
                                                                                        (unit \<times>
                                                                                         state)"},
                                                                                       tp[lc("capExcTag",
                                                                                             "CapExceptionType",
                                                                                             @{theory}),
                                                                                          var_w("ct",5)],
                                                                                       @{theory}),
                                                                                    mb(call
                                                                                         ("CAPR",
                                                                                          @{typ
                                                                                          "state \<Rightarrow>
                                                                                           (Capability \<times>
                                                                                            state)"},
                                                                                          var_w("cs",5),
                                                                                          @{theory}),
                                                                                       close
                                                                                         (var("v",
                                                                                              @{typ Capability}),
                                                                                          mb(mb(mu(call
                                                                                                     ("getSealed",
                                                                                                      HOLogic.boolT,
                                                                                                      var("v",
                                                                                                          @{typ Capability}),
                                                                                                      @{theory}),
                                                                                                   qTy),
                                                                                                close
                                                                                                  (var_b"v",
                                                                                                   mu(mop(Not,
                                                                                                          var_b"v"),
                                                                                                      qTy))),
                                                                                             close
                                                                                               (var_b"b",
                                                                                                ite(var_b"b",
                                                                                                    call
                                                                                                      ("SignalCapException",
                                                                                                       @{typ
                                                                                                       "state \<Rightarrow>
                                                                                                        (unit \<times>
                                                                                                         state)"},
                                                                                                       tp[lc("capExcSeal",
                                                                                                             "CapExceptionType",
                                                                                                             @{theory}),
                                                                                                          var_w("cs",5)],
                                                                                                       @{theory}),
                                                                                                    mb(call
                                                                                                         ("CAPR",
                                                                                                          @{typ
                                                                                                          "state \<Rightarrow>
                                                                                                           (Capability \<times>
                                                                                                            state)"},
                                                                                                          var_w("ct",5),
                                                                                                          @{theory}),
                                                                                                       close
                                                                                                         (var("v",
                                                                                                              @{typ Capability}),
                                                                                                          mb(mu(call
                                                                                                                  ("getSealed",
                                                                                                                   HOLogic.boolT,
                                                                                                                   var("v",
                                                                                                                       @{typ Capability}),
                                                                                                                   @{theory}),
                                                                                                                qTy),
                                                                                                             close
                                                                                                               (var_b"b",
                                                                                                                ite(var_b"b",
                                                                                                                    call
                                                                                                                      ("SignalCapException",
                                                                                                                       @{typ
                                                                                                                       "state \<Rightarrow>
                                                                                                                        (unit \<times>
                                                                                                                         state)"},
                                                                                                                       tp[lc("capExcSeal",
                                                                                                                             "CapExceptionType",
                                                                                                                             @{theory}),
                                                                                                                          var_w("ct",5)],
                                                                                                                       @{theory}),
                                                                                                                    mb(call
                                                                                                                         ("CAPR",
                                                                                                                          @{typ
                                                                                                                          "state \<Rightarrow>
                                                                                                                           (Capability \<times>
                                                                                                                            state)"},
                                                                                                                          var_w("ct",5),
                                                                                                                          @{theory}),
                                                                                                                       close
                                                                                                                         (var("v",
                                                                                                                              @{typ Capability}),
                                                                                                                          mb(mb(mb(mb(mu(call
                                                                                                                                           ("getBase",
                                                                                                                                            w64,
                                                                                                                                            var("v",
                                                                                                                                                @{typ Capability}),
                                                                                                                                            @{theory}),
                                                                                                                                         qTy),
                                                                                                                                      close
                                                                                                                                        (var_w("v",64),
                                                                                                                                         mb(call
                                                                                                                                              ("CAPR",
                                                                                                                                               @{typ
                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                (Capability \<times>
                                                                                                                                                 state)"},
                                                                                                                                               var_w("ct",5),
                                                                                                                                               @{theory}),
                                                                                                                                            close
                                                                                                                                              (var("v0",
                                                                                                                                                   @{typ Capability}),
                                                                                                                                               mb(mu(call
                                                                                                                                                       ("getOffset",
                                                                                                                                                        w64,
                                                                                                                                                        var("v0",
                                                                                                                                                            @{typ Capability}),
                                                                                                                                                        @{theory}),
                                                                                                                                                     qTy),
                                                                                                                                                  close
                                                                                                                                                    (var_w("v0",64),
                                                                                                                                                     mu(bop(Add,
                                                                                                                                                            var_w("v",64),
                                                                                                                                                            var_w("v0",64)),
                                                                                                                                                        qTy))))))),
                                                                                                                                   close
                                                                                                                                     (var_w("v",64),
                                                                                                                                      mb(call
                                                                                                                                           ("CAPR",
                                                                                                                                            @{typ
                                                                                                                                            "state \<Rightarrow>
                                                                                                                                             (Capability \<times>
                                                                                                                                              state)"},
                                                                                                                                            var_w("cs",5),
                                                                                                                                            @{theory}),
                                                                                                                                         close
                                                                                                                                           (var("v0",
                                                                                                                                                @{typ Capability}),
                                                                                                                                            mb(mb(mu(call
                                                                                                                                                       ("getType",
                                                                                                                                                        (Word_Lib.mk_wordT 24),
                                                                                                                                                        var("v0",
                                                                                                                                                            @{typ Capability}),
                                                                                                                                                        @{theory}),
                                                                                                                                                     qTy),
                                                                                                                                                  close
                                                                                                                                                    (var_w("v",24),
                                                                                                                                                     mu(mop(Cast
                                                                                                                                                              w64,
                                                                                                                                                            var_w("v",24)),
                                                                                                                                                        qTy))),
                                                                                                                                               close
                                                                                                                                                 (var_w("v0",64),
                                                                                                                                                  mu(eq(var_w("v",64),
                                                                                                                                                        var_w("v0",64)),
                                                                                                                                                     qTy))))))),
                                                                                                                                close
                                                                                                                                  (var_b"v",
                                                                                                                                   mu(mop(Not,
                                                                                                                                          var_b"v"),
                                                                                                                                      qTy))),
                                                                                                                             close
                                                                                                                               (var_b"b",
                                                                                                                                ite(var_b"b",
                                                                                                                                    call
                                                                                                                                      ("SignalCapException",
                                                                                                                                       @{typ
                                                                                                                                       "state \<Rightarrow>
                                                                                                                                        (unit \<times>
                                                                                                                                         state)"},
                                                                                                                                       tp[lc("capExcType",
                                                                                                                                             "CapExceptionType",
                                                                                                                                             @{theory}),
                                                                                                                                          var_w("ct",5)],
                                                                                                                                       @{theory}),
                                                                                                                                    mb(call
                                                                                                                                         ("CAPR",
                                                                                                                                          @{typ
                                                                                                                                          "state \<Rightarrow>
                                                                                                                                           (Capability \<times>
                                                                                                                                            state)"},
                                                                                                                                          var_w("ct",5),
                                                                                                                                          @{theory}),
                                                                                                                                       close
                                                                                                                                         (var("v",
                                                                                                                                              @{typ Capability}),
                                                                                                                                          mb(mb(mb(mu(call
                                                                                                                                                        ("getPerms",
                                                                                                                                                         @{typ Perms},
                                                                                                                                                         var("v",
                                                                                                                                                             @{typ Capability}),
                                                                                                                                                         @{theory}),
                                                                                                                                                      qTy),
                                                                                                                                                   close
                                                                                                                                                     (var("v",
                                                                                                                                                          @{typ Perms}),
                                                                                                                                                      mu(call
                                                                                                                                                           ("Perms.Permit_Seal",
                                                                                                                                                            HOLogic.boolT,
                                                                                                                                                            var("v",
                                                                                                                                                                @{typ Perms}),
                                                                                                                                                            @{theory}),
                                                                                                                                                         qTy))),
                                                                                                                                                close
                                                                                                                                                  (var_b"v",
                                                                                                                                                   mu(mop(Not,
                                                                                                                                                          var_b"v"),
                                                                                                                                                      qTy))),
                                                                                                                                             close
                                                                                                                                               (var_b"b",
                                                                                                                                                ite(var_b"b",
                                                                                                                                                    call
                                                                                                                                                      ("SignalCapException",
                                                                                                                                                       @{typ
                                                                                                                                                       "state \<Rightarrow>
                                                                                                                                                        (unit \<times>
                                                                                                                                                         state)"},
                                                                                                                                                       tp[lc("capExcPermSeal",
                                                                                                                                                             "CapExceptionType",
                                                                                                                                                             @{theory}),
                                                                                                                                                          var_w("ct",5)],
                                                                                                                                                       @{theory}),
                                                                                                                                                    mb(call
                                                                                                                                                         ("CAPR",
                                                                                                                                                          @{typ
                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                           (Capability \<times>
                                                                                                                                                            state)"},
                                                                                                                                                          var_w("ct",5),
                                                                                                                                                          @{theory}),
                                                                                                                                                       close
                                                                                                                                                         (var("v",
                                                                                                                                                              @{typ Capability}),
                                                                                                                                                          mb(mb(mu(call
                                                                                                                                                                     ("getOffset",
                                                                                                                                                                      w64,
                                                                                                                                                                      var("v",
                                                                                                                                                                          @{typ Capability}),
                                                                                                                                                                      @{theory}),
                                                                                                                                                                   qTy),
                                                                                                                                                                close
                                                                                                                                                                  (var_w("v",64),
                                                                                                                                                                   mb(call
                                                                                                                                                                        ("CAPR",
                                                                                                                                                                         @{typ
                                                                                                                                                                         "state \<Rightarrow>
                                                                                                                                                                          (Capability \<times>
                                                                                                                                                                           state)"},
                                                                                                                                                                         var_w("ct",5),
                                                                                                                                                                         @{theory}),
                                                                                                                                                                      close
                                                                                                                                                                        (var("v0",
                                                                                                                                                                             @{typ Capability}),
                                                                                                                                                                         mb(mu(call
                                                                                                                                                                                 ("getLength",
                                                                                                                                                                                  w64,
                                                                                                                                                                                  var("v0",
                                                                                                                                                                                      @{typ Capability}),
                                                                                                                                                                                  @{theory}),
                                                                                                                                                                               qTy),
                                                                                                                                                                            close
                                                                                                                                                                              (var_w("v0",64),
                                                                                                                                                                               mu(bop(Uge,
                                                                                                                                                                                      var_w("v",64),
                                                                                                                                                                                      var_w("v0",64)),
                                                                                                                                                                                  qTy))))))),
                                                                                                                                                             close
                                                                                                                                                               (var_b"b",
                                                                                                                                                                ite(var_b"b",
                                                                                                                                                                    call
                                                                                                                                                                      ("SignalCapException",
                                                                                                                                                                       @{typ
                                                                                                                                                                       "state \<Rightarrow>
                                                                                                                                                                        (unit \<times>
                                                                                                                                                                         state)"},
                                                                                                                                                                       tp[lc("capExcLength",
                                                                                                                                                                             "CapExceptionType",
                                                                                                                                                                             @{theory}),
                                                                                                                                                                          var_w("ct",5)],
                                                                                                                                                                       @{theory}),
                                                                                                                                                                    mb(call
                                                                                                                                                                         ("CAPR",
                                                                                                                                                                          @{typ
                                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                                           (Capability \<times>
                                                                                                                                                                            state)"},
                                                                                                                                                                          var_w("cs",5),
                                                                                                                                                                          @{theory}),
                                                                                                                                                                       close
                                                                                                                                                                         (var("v",
                                                                                                                                                                              @{typ Capability}),
                                                                                                                                                                          mn(var("v",
                                                                                                                                                                                 @{typ Capability}),
                                                                                                                                                                             mb(mr(close
                                                                                                                                                                                     (var("s",
                                                                                                                                                                                          @{typ
                                                                                                                                                                                          "Capability \<times>
                                                                                                                                                                                           state"}),
                                                                                                                                                                                      mop(Fst,
                                                                                                                                                                                          var("s",
                                                                                                                                                                                              @{typ
                                                                                                                                                                                              "Capability \<times>
                                                                                                                                                                                               state"})))),
                                                                                                                                                                                close
                                                                                                                                                                                  (var("v",
                                                                                                                                                                                       @{typ Capability}),
                                                                                                                                                                                   mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                                      @{typ Capability}),
                                                                                                                                                                                                  lf],
                                                                                                                                                                                               @{typ
                                                                                                                                                                                               "Capability \<times>
                                                                                                                                                                                                state"}),
                                                                                                                                                                                            close
                                                                                                                                                                                              (var("v",
                                                                                                                                                                                                   @{typ
                                                                                                                                                                                                   "Capability \<times>
                                                                                                                                                                                                    bool"}),
                                                                                                                                                                                               mu(call
                                                                                                                                                                                                    ("setSealed",
                                                                                                                                                                                                     @{typ Capability},
                                                                                                                                                                                                     var("v",
                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                         "Capability \<times>
                                                                                                                                                                                                          bool"}),
                                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                  "Capability \<times>
                                                                                                                                                                                                   state"}))),
                                                                                                                                                                                         close
                                                                                                                                                                                           (var("v",
                                                                                                                                                                                                @{typ Capability}),
                                                                                                                                                                                            mw(close
                                                                                                                                                                                                 (var("s",
                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                      "Capability \<times>
                                                                                                                                                                                                       state"}),
                                                                                                                                                                                                  tp[var("v",
                                                                                                                                                                                                         @{typ Capability}),
                                                                                                                                                                                                     mop(Snd,
                                                                                                                                                                                                         var("s",
                                                                                                                                                                                                             @{typ
                                                                                                                                                                                                             "Capability \<times>
                                                                                                                                                                                                              state"}))])))),
                                                                                                                                                                                      close
                                                                                                                                                                                        (var_a
                                                                                                                                                                                           HOLogic.unitT,
                                                                                                                                                                                         mb(mr(close
                                                                                                                                                                                                 (var("s",
                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                      "Capability \<times>
                                                                                                                                                                                                       state"}),
                                                                                                                                                                                                  mop(Fst,
                                                                                                                                                                                                      var("s",
                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                          "Capability \<times>
                                                                                                                                                                                                           state"})))),
                                                                                                                                                                                            close
                                                                                                                                                                                              (var("v",
                                                                                                                                                                                                   @{typ Capability}),
                                                                                                                                                                                               mb(mb(mb(mu(tp[var("v",
                                                                                                                                                                                                                  @{typ Capability}),
                                                                                                                                                                                                              lw(0,
                                                                                                                                                                                                                 24)],
                                                                                                                                                                                                           @{typ
                                                                                                                                                                                                           "Capability \<times>
                                                                                                                                                                                                            state"}),
                                                                                                                                                                                                        close
                                                                                                                                                                                                          (var("v",
                                                                                                                                                                                                               @{typ
                                                                                                                                                                                                               "Capability \<times>
                                                                                                                                                                                                                24 word"}),
                                                                                                                                                                                                           mu(call
                                                                                                                                                                                                                ("setType",
                                                                                                                                                                                                                 @{typ Capability},
                                                                                                                                                                                                                 var("v",
                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                     "Capability \<times>
                                                                                                                                                                                                                      24 word"}),
                                                                                                                                                                                                                 @{theory}),
                                                                                                                                                                                                              @{typ
                                                                                                                                                                                                              "Capability \<times>
                                                                                                                                                                                                               state"}))),
                                                                                                                                                                                                     close
                                                                                                                                                                                                       (var("v",
                                                                                                                                                                                                            @{typ Capability}),
                                                                                                                                                                                                        mw(close
                                                                                                                                                                                                             (var("s",
                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                  "Capability \<times>
                                                                                                                                                                                                                   state"}),
                                                                                                                                                                                                              tp[var("v",
                                                                                                                                                                                                                     @{typ Capability}),
                                                                                                                                                                                                                 mop(Snd,
                                                                                                                                                                                                                     var("s",
                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                         "Capability \<times>
                                                                                                                                                                                                                          state"}))])))),
                                                                                                                                                                                                  close
                                                                                                                                                                                                    (var_a
                                                                                                                                                                                                       HOLogic.unitT,
                                                                                                                                                                                                     mb(mr(close
                                                                                                                                                                                                             (var("s",
                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                  "Capability \<times>
                                                                                                                                                                                                                   state"}),
                                                                                                                                                                                                              mop(Fst,
                                                                                                                                                                                                                  var("s",
                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                      "Capability \<times>
                                                                                                                                                                                                                       state"})))),
                                                                                                                                                                                                        close
                                                                                                                                                                                                          (var("v",
                                                                                                                                                                                                               @{typ Capability}),
                                                                                                                                                                                                           mb(mu(call
                                                                                                                                                                                                                   ("getPerms",
                                                                                                                                                                                                                    @{typ Perms},
                                                                                                                                                                                                                    var("v",
                                                                                                                                                                                                                        @{typ Capability}),
                                                                                                                                                                                                                    @{theory}),
                                                                                                                                                                                                                 @{typ
                                                                                                                                                                                                                 "Capability \<times>
                                                                                                                                                                                                                  state"}),
                                                                                                                                                                                                              close
                                                                                                                                                                                                                (var("v",
                                                                                                                                                                                                                     @{typ Perms}),
                                                                                                                                                                                                                 mn(var("v",
                                                                                                                                                                                                                        @{typ Perms}),
                                                                                                                                                                                                                    mb(mr(close
                                                                                                                                                                                                                            (var("s",
                                                                                                                                                                                                                                 @{typ
                                                                                                                                                                                                                                 "Perms \<times>
                                                                                                                                                                                                                                  Capability \<times>
                                                                                                                                                                                                                                  state"}),
                                                                                                                                                                                                                             mop(Fst,
                                                                                                                                                                                                                                 var("s",
                                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                                     "Perms \<times>
                                                                                                                                                                                                                                      Capability \<times>
                                                                                                                                                                                                                                      state"})))),
                                                                                                                                                                                                                       close
                                                                                                                                                                                                                         (var("v",
                                                                                                                                                                                                                              @{typ Perms}),
                                                                                                                                                                                                                          mb(mb(mb(mb(md(md(call
                                                                                                                                                                                                                                              ("CAPR",
                                                                                                                                                                                                                                               @{typ
                                                                                                                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                                                                                                                (Capability \<times>
                                                                                                                                                                                                                                                 state)"},
                                                                                                                                                                                                                                               var_w("cs",5),
                                                                                                                                                                                                                                               @{theory}),
                                                                                                                                                                                                                                            @{typ Capability}),
                                                                                                                                                                                                                                         @{typ Perms}),
                                                                                                                                                                                                                                      close
                                                                                                                                                                                                                                        (var("v0",
                                                                                                                                                                                                                                             @{typ Capability}),
                                                                                                                                                                                                                                         mb(mb(mb(mu(call
                                                                                                                                                                                                                                                       ("getPerms",
                                                                                                                                                                                                                                                        @{typ Perms},
                                                                                                                                                                                                                                                        var("v0",
                                                                                                                                                                                                                                                            @{typ Capability}),
                                                                                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                                                     "Perms \<times>
                                                                                                                                                                                                                                                      Capability \<times>
                                                                                                                                                                                                                                                      state"}),
                                                                                                                                                                                                                                                  close
                                                                                                                                                                                                                                                    (var("v",
                                                                                                                                                                                                                                                         @{typ Perms}),
                                                                                                                                                                                                                                                     mu(call
                                                                                                                                                                                                                                                          ("Perms.Global",
                                                                                                                                                                                                                                                           HOLogic.boolT,
                                                                                                                                                                                                                                                           var("v",
                                                                                                                                                                                                                                                               @{typ Perms}),
                                                                                                                                                                                                                                                           @{theory}),
                                                                                                                                                                                                                                                        @{typ
                                                                                                                                                                                                                                                        "Perms \<times>
                                                                                                                                                                                                                                                         Capability \<times>
                                                                                                                                                                                                                                                         state"}))),
                                                                                                                                                                                                                                               close
                                                                                                                                                                                                                                                 (var_b"b",
                                                                                                                                                                                                                                                  ite(var_b"b",
                                                                                                                                                                                                                                                      mb(md(md(call
                                                                                                                                                                                                                                                                 ("CAPR",
                                                                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                                                                  "state \<Rightarrow>
                                                                                                                                                                                                                                                                   (Capability \<times>
                                                                                                                                                                                                                                                                    state)"},
                                                                                                                                                                                                                                                                  var_w("ct",5),
                                                                                                                                                                                                                                                                  @{theory}),
                                                                                                                                                                                                                                                               @{typ Capability}),
                                                                                                                                                                                                                                                            @{typ Perms}),
                                                                                                                                                                                                                                                         close
                                                                                                                                                                                                                                                           (var("v",
                                                                                                                                                                                                                                                                @{typ Capability}),
                                                                                                                                                                                                                                                            mb(mu(call
                                                                                                                                                                                                                                                                    ("getPerms",
                                                                                                                                                                                                                                                                     @{typ Perms},
                                                                                                                                                                                                                                                                     var("v",
                                                                                                                                                                                                                                                                         @{typ Capability}),
                                                                                                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                                                                  "Perms \<times>
                                                                                                                                                                                                                                                                   Capability \<times>
                                                                                                                                                                                                                                                                   state"}),
                                                                                                                                                                                                                                                               close
                                                                                                                                                                                                                                                                 (var("v",
                                                                                                                                                                                                                                                                      @{typ Perms}),
                                                                                                                                                                                                                                                                  mu(call
                                                                                                                                                                                                                                                                       ("Perms.Global",
                                                                                                                                                                                                                                                                        HOLogic.boolT,
                                                                                                                                                                                                                                                                        var("v",
                                                                                                                                                                                                                                                                            @{typ Perms}),
                                                                                                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                                                                     "Perms \<times>
                                                                                                                                                                                                                                                                      Capability \<times>
                                                                                                                                                                                                                                                                      state"}))))),
                                                                                                                                                                                                                                                      mu(lf,
                                                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                                                         "Perms \<times>
                                                                                                                                                                                                                                                          Capability \<times>
                                                                                                                                                                                                                                                          state"})))),
                                                                                                                                                                                                                                            close
                                                                                                                                                                                                                                              (var_b"v0",
                                                                                                                                                                                                                                               mu(tp[var("v",
                                                                                                                                                                                                                                                         @{typ Perms}),
                                                                                                                                                                                                                                                     var_b"v0"],
                                                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                                                  "Perms \<times>
                                                                                                                                                                                                                                                   Capability \<times>
                                                                                                                                                                                                                                                   state"}))))),
                                                                                                                                                                                                                                   close
                                                                                                                                                                                                                                     (var("v",
                                                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                                                          "Perms \<times>
                                                                                                                                                                                                                                           bool"}),
                                                                                                                                                                                                                                      mu(rupd
                                                                                                                                                                                                                                           ("Perms.Global",
                                                                                                                                                                                                                                            var("v",
                                                                                                                                                                                                                                                @{typ
                                                                                                                                                                                                                                                "Perms \<times>
                                                                                                                                                                                                                                                 bool"}),
                                                                                                                                                                                                                                            @{theory}),
                                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                                         "Perms \<times>
                                                                                                                                                                                                                                          Capability \<times>
                                                                                                                                                                                                                                          state"}))),
                                                                                                                                                                                                                                close
                                                                                                                                                                                                                                  (var("v",
                                                                                                                                                                                                                                       @{typ Perms}),
                                                                                                                                                                                                                                   mw(close
                                                                                                                                                                                                                                        (var("s",
                                                                                                                                                                                                                                             @{typ
                                                                                                                                                                                                                                             "Perms \<times>
                                                                                                                                                                                                                                              Capability \<times>
                                                                                                                                                                                                                                              state"}),
                                                                                                                                                                                                                                         tp[var("v",
                                                                                                                                                                                                                                                @{typ Perms}),
                                                                                                                                                                                                                                            mop(Snd,
                                                                                                                                                                                                                                                var("s",
                                                                                                                                                                                                                                                    @{typ
                                                                                                                                                                                                                                                    "Perms \<times>
                                                                                                                                                                                                                                                     Capability \<times>
                                                                                                                                                                                                                                                     state"}))])))),
                                                                                                                                                                                                                             close
                                                                                                                                                                                                                               (var_a
                                                                                                                                                                                                                                  HOLogic.unitT,
                                                                                                                                                                                                                                mb(mr(close
                                                                                                                                                                                                                                        (var("s",
                                                                                                                                                                                                                                             @{typ
                                                                                                                                                                                                                                             "Perms \<times>
                                                                                                                                                                                                                                              Capability \<times>
                                                                                                                                                                                                                                              state"}),
                                                                                                                                                                                                                                         mop(Fst,
                                                                                                                                                                                                                                             mop(Snd,
                                                                                                                                                                                                                                                 var("s",
                                                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                                                     "Perms \<times>
                                                                                                                                                                                                                                                      Capability \<times>
                                                                                                                                                                                                                                                      state"}))))),
                                                                                                                                                                                                                                   close
                                                                                                                                                                                                                                     (var("v",
                                                                                                                                                                                                                                          @{typ Capability}),
                                                                                                                                                                                                                                      mb(mb(mb(mb(mr(close
                                                                                                                                                                                                                                                       (var("s",
                                                                                                                                                                                                                                                            @{typ
                                                                                                                                                                                                                                                            "Perms \<times>
                                                                                                                                                                                                                                                             Capability \<times>
                                                                                                                                                                                                                                                             state"}),
                                                                                                                                                                                                                                                        mop(Fst,
                                                                                                                                                                                                                                                            var("s",
                                                                                                                                                                                                                                                                @{typ
                                                                                                                                                                                                                                                                "Perms \<times>
                                                                                                                                                                                                                                                                 Capability \<times>
                                                                                                                                                                                                                                                                 state"})))),
                                                                                                                                                                                                                                                  close
                                                                                                                                                                                                                                                    (var("v0",
                                                                                                                                                                                                                                                         @{typ Perms}),
                                                                                                                                                                                                                                                     mu(tp[var("v",
                                                                                                                                                                                                                                                               @{typ Capability}),
                                                                                                                                                                                                                                                           var("v0",
                                                                                                                                                                                                                                                               @{typ Perms})],
                                                                                                                                                                                                                                                        @{typ
                                                                                                                                                                                                                                                        "Perms \<times>
                                                                                                                                                                                                                                                         Capability \<times>
                                                                                                                                                                                                                                                         state"}))),
                                                                                                                                                                                                                                               close
                                                                                                                                                                                                                                                 (var("v",
                                                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                                                      "Capability \<times>
                                                                                                                                                                                                                                                       Perms"}),
                                                                                                                                                                                                                                                  mu(call
                                                                                                                                                                                                                                                       ("setPerms",
                                                                                                                                                                                                                                                        @{typ Capability},
                                                                                                                                                                                                                                                        var("v",
                                                                                                                                                                                                                                                            @{typ
                                                                                                                                                                                                                                                            "Capability \<times>
                                                                                                                                                                                                                                                             Perms"}),
                                                                                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                                                     "Perms \<times>
                                                                                                                                                                                                                                                      Capability \<times>
                                                                                                                                                                                                                                                      state"}))),
                                                                                                                                                                                                                                            close
                                                                                                                                                                                                                                              (var("v",
                                                                                                                                                                                                                                                   @{typ Capability}),
                                                                                                                                                                                                                                               mw(close
                                                                                                                                                                                                                                                    (var("s",
                                                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                                                         "Perms \<times>
                                                                                                                                                                                                                                                          Capability \<times>
                                                                                                                                                                                                                                                          state"}),
                                                                                                                                                                                                                                                     tp[mop(Fst,
                                                                                                                                                                                                                                                            var("s",
                                                                                                                                                                                                                                                                @{typ
                                                                                                                                                                                                                                                                "Perms \<times>
                                                                                                                                                                                                                                                                 Capability \<times>
                                                                                                                                                                                                                                                                 state"})),
                                                                                                                                                                                                                                                        var("v",
                                                                                                                                                                                                                                                            @{typ Capability}),
                                                                                                                                                                                                                                                        mop(Snd,
                                                                                                                                                                                                                                                            mop(Snd,
                                                                                                                                                                                                                                                                var("s",
                                                                                                                                                                                                                                                                    @{typ
                                                                                                                                                                                                                                                                    "Perms \<times>
                                                                                                                                                                                                                                                                     Capability \<times>
                                                                                                                                                                                                                                                                     state"})))])))),
                                                                                                                                                                                                                                         close
                                                                                                                                                                                                                                           (var_a
                                                                                                                                                                                                                                              HOLogic.unitT,
                                                                                                                                                                                                                                            mb(mr(close
                                                                                                                                                                                                                                                    (var("s",
                                                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                                                         "Perms \<times>
                                                                                                                                                                                                                                                          Capability \<times>
                                                                                                                                                                                                                                                          state"}),
                                                                                                                                                                                                                                                     mop(Fst,
                                                                                                                                                                                                                                                         mop(Snd,
                                                                                                                                                                                                                                                             var("s",
                                                                                                                                                                                                                                                                 @{typ
                                                                                                                                                                                                                                                                 "Perms \<times>
                                                                                                                                                                                                                                                                  Capability \<times>
                                                                                                                                                                                                                                                                  state"}))))),
                                                                                                                                                                                                                                               close
                                                                                                                                                                                                                                                 (var("v",
                                                                                                                                                                                                                                                      @{typ Capability}),
                                                                                                                                                                                                                                                  mb(mu(tp[var("v",
                                                                                                                                                                                                                                                               @{typ Capability}),
                                                                                                                                                                                                                                                           var_w("cd",5)],
                                                                                                                                                                                                                                                        @{typ
                                                                                                                                                                                                                                                        "Perms \<times>
                                                                                                                                                                                                                                                         Capability \<times>
                                                                                                                                                                                                                                                         state"}),
                                                                                                                                                                                                                                                     close
                                                                                                                                                                                                                                                       (var("v",
                                                                                                                                                                                                                                                            @{typ
                                                                                                                                                                                                                                                            "Capability \<times>
                                                                                                                                                                                                                                                             5 word"}),
                                                                                                                                                                                                                                                        md(md(call
                                                                                                                                                                                                                                                                ("write'CAPR",
                                                                                                                                                                                                                                                                 @{typ
                                                                                                                                                                                                                                                                 "state \<Rightarrow>
                                                                                                                                                                                                                                                                  (unit \<times>
                                                                                                                                                                                                                                                                   state)"},
                                                                                                                                                                                                                                                                 var("v",
                                                                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                                                                     "Capability \<times>
                                                                                                                                                                                                                                                                      5 word"}),
                                                                                                                                                                                                                                                                 @{theory}),
                                                                                                                                                                                                                                                              @{typ Capability}),
                                                                                                                                                                                                                                                           @{typ Perms}))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CCall",
   close
     (tp[var_w("cs",5),var_w("cb",5),var_w("selector",11)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cs",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cs",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cs",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mu(call
                                                           ("getTag",HOLogic.boolT,
                                                            var("v",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          call
                                                            ("SignalCapException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[lc("capExcTag","CapExceptionType",
                                                                   @{theory}),var_w("cs",5)],
                                                             @{theory}),
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mb(mu(call
                                                                           ("getTag",HOLogic.boolT,
                                                                            var("v",
                                                                                @{typ Capability}),
                                                                            @{theory}),qTy),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(mop(Not,var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("SignalCapException",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[lc("capExcTag",
                                                                                   "CapExceptionType",
                                                                                   @{theory}),
                                                                                var_w("cb",5)],
                                                                             @{theory}),
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cs",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mu(call
                                                                                           ("getSealed",
                                                                                            HOLogic.boolT,
                                                                                            var("v",
                                                                                                @{typ Capability}),
                                                                                            @{theory}),
                                                                                         qTy),
                                                                                      close
                                                                                        (var_b"v",
                                                                                         mu(mop(Not,
                                                                                                var_b"v"),
                                                                                            qTy))),
                                                                                   close
                                                                                     (var_b"b",
                                                                                      ite(var_b"b",
                                                                                          call
                                                                                            ("SignalCapException",
                                                                                             @{typ
                                                                                             "state \<Rightarrow>
                                                                                              (unit \<times>
                                                                                               state)"},
                                                                                             tp[lc("capExcSeal",
                                                                                                   "CapExceptionType",
                                                                                                   @{theory}),
                                                                                                var_w("cs",5)],
                                                                                             @{theory}),
                                                                                          mb(call
                                                                                               ("CAPR",
                                                                                                @{typ
                                                                                                "state \<Rightarrow>
                                                                                                 (Capability \<times>
                                                                                                  state)"},
                                                                                                var_w("cb",5),
                                                                                                @{theory}),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ Capability}),
                                                                                                mb(mb(mu(call
                                                                                                           ("getSealed",
                                                                                                            HOLogic.boolT,
                                                                                                            var("v",
                                                                                                                @{typ Capability}),
                                                                                                            @{theory}),
                                                                                                         qTy),
                                                                                                      close
                                                                                                        (var_b"v",
                                                                                                         mu(mop(Not,
                                                                                                                var_b"v"),
                                                                                                            qTy))),
                                                                                                   close
                                                                                                     (var_b"b",
                                                                                                      ite(var_b"b",
                                                                                                          call
                                                                                                            ("SignalCapException",
                                                                                                             @{typ
                                                                                                             "state \<Rightarrow>
                                                                                                              (unit \<times>
                                                                                                               state)"},
                                                                                                             tp[lc("capExcSeal",
                                                                                                                   "CapExceptionType",
                                                                                                                   @{theory}),
                                                                                                                var_w("cb",5)],
                                                                                                             @{theory}),
                                                                                                          mb(call
                                                                                                               ("CAPR",
                                                                                                                @{typ
                                                                                                                "state \<Rightarrow>
                                                                                                                 (Capability \<times>
                                                                                                                  state)"},
                                                                                                                var_w("cs",5),
                                                                                                                @{theory}),
                                                                                                             close
                                                                                                               (var("v",
                                                                                                                    @{typ Capability}),
                                                                                                                mb(mb(mb(mu(call
                                                                                                                              ("getType",
                                                                                                                               (Word_Lib.mk_wordT 24),
                                                                                                                               var("v",
                                                                                                                                   @{typ Capability}),
                                                                                                                               @{theory}),
                                                                                                                            qTy),
                                                                                                                         close
                                                                                                                           (var_w("v",24),
                                                                                                                            mb(call
                                                                                                                                 ("CAPR",
                                                                                                                                  @{typ
                                                                                                                                  "state \<Rightarrow>
                                                                                                                                   (Capability \<times>
                                                                                                                                    state)"},
                                                                                                                                  var_w("cb",5),
                                                                                                                                  @{theory}),
                                                                                                                               close
                                                                                                                                 (var("v0",
                                                                                                                                      @{typ Capability}),
                                                                                                                                  mb(mu(call
                                                                                                                                          ("getType",
                                                                                                                                           (Word_Lib.mk_wordT 24),
                                                                                                                                           var("v0",
                                                                                                                                               @{typ Capability}),
                                                                                                                                           @{theory}),
                                                                                                                                        qTy),
                                                                                                                                     close
                                                                                                                                       (var_w("v0",24),
                                                                                                                                        mu(eq(var_w("v",24),
                                                                                                                                              var_w("v0",24)),
                                                                                                                                           qTy))))))),
                                                                                                                      close
                                                                                                                        (var_b"v",
                                                                                                                         mu(mop(Not,
                                                                                                                                var_b"v"),
                                                                                                                            qTy))),
                                                                                                                   close
                                                                                                                     (var_b"b",
                                                                                                                      ite(var_b"b",
                                                                                                                          call
                                                                                                                            ("SignalCapException",
                                                                                                                             @{typ
                                                                                                                             "state \<Rightarrow>
                                                                                                                              (unit \<times>
                                                                                                                               state)"},
                                                                                                                             tp[lc("capExcType",
                                                                                                                                   "CapExceptionType",
                                                                                                                                   @{theory}),
                                                                                                                                var_w("cs",5)],
                                                                                                                             @{theory}),
                                                                                                                          mb(call
                                                                                                                               ("CAPR",
                                                                                                                                @{typ
                                                                                                                                "state \<Rightarrow>
                                                                                                                                 (Capability \<times>
                                                                                                                                  state)"},
                                                                                                                                var_w("cs",5),
                                                                                                                                @{theory}),
                                                                                                                             close
                                                                                                                               (var("v",
                                                                                                                                    @{typ Capability}),
                                                                                                                                mb(mb(mb(mu(call
                                                                                                                                              ("getPerms",
                                                                                                                                               @{typ Perms},
                                                                                                                                               var("v",
                                                                                                                                                   @{typ Capability}),
                                                                                                                                               @{theory}),
                                                                                                                                            qTy),
                                                                                                                                         close
                                                                                                                                           (var("v",
                                                                                                                                                @{typ Perms}),
                                                                                                                                            mu(call
                                                                                                                                                 ("Perms.Permit_Execute",
                                                                                                                                                  HOLogic.boolT,
                                                                                                                                                  var("v",
                                                                                                                                                      @{typ Perms}),
                                                                                                                                                  @{theory}),
                                                                                                                                               qTy))),
                                                                                                                                      close
                                                                                                                                        (var_b"v",
                                                                                                                                         mu(mop(Not,
                                                                                                                                                var_b"v"),
                                                                                                                                            qTy))),
                                                                                                                                   close
                                                                                                                                     (var_b"b",
                                                                                                                                      ite(var_b"b",
                                                                                                                                          call
                                                                                                                                            ("SignalCapException",
                                                                                                                                             @{typ
                                                                                                                                             "state \<Rightarrow>
                                                                                                                                              (unit \<times>
                                                                                                                                               state)"},
                                                                                                                                             tp[lc("capExcPermExe",
                                                                                                                                                   "CapExceptionType",
                                                                                                                                                   @{theory}),
                                                                                                                                                var_w("cs",5)],
                                                                                                                                             @{theory}),
                                                                                                                                          mb(call
                                                                                                                                               ("CAPR",
                                                                                                                                                @{typ
                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                 (Capability \<times>
                                                                                                                                                  state)"},
                                                                                                                                                var_w("cb",5),
                                                                                                                                                @{theory}),
                                                                                                                                             close
                                                                                                                                               (var("v",
                                                                                                                                                    @{typ Capability}),
                                                                                                                                                mb(mb(mu(call
                                                                                                                                                           ("getPerms",
                                                                                                                                                            @{typ Perms},
                                                                                                                                                            var("v",
                                                                                                                                                                @{typ Capability}),
                                                                                                                                                            @{theory}),
                                                                                                                                                         qTy),
                                                                                                                                                      close
                                                                                                                                                        (var("v",
                                                                                                                                                             @{typ Perms}),
                                                                                                                                                         mu(call
                                                                                                                                                              ("Perms.Permit_Execute",
                                                                                                                                                               HOLogic.boolT,
                                                                                                                                                               var("v",
                                                                                                                                                                   @{typ Perms}),
                                                                                                                                                               @{theory}),
                                                                                                                                                            qTy))),
                                                                                                                                                   close
                                                                                                                                                     (var_b"b",
                                                                                                                                                      ite(var_b"b",
                                                                                                                                                          call
                                                                                                                                                            ("SignalCapException",
                                                                                                                                                             @{typ
                                                                                                                                                             "state \<Rightarrow>
                                                                                                                                                              (unit \<times>
                                                                                                                                                               state)"},
                                                                                                                                                             tp[lc("capExcPermExe",
                                                                                                                                                                   "CapExceptionType",
                                                                                                                                                                   @{theory}),
                                                                                                                                                                var_w("cb",5)],
                                                                                                                                                             @{theory}),
                                                                                                                                                          mb(call
                                                                                                                                                               ("CAPR",
                                                                                                                                                                @{typ
                                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                                 (Capability \<times>
                                                                                                                                                                  state)"},
                                                                                                                                                                var_w("cs",5),
                                                                                                                                                                @{theory}),
                                                                                                                                                             close
                                                                                                                                                               (var("v",
                                                                                                                                                                    @{typ Capability}),
                                                                                                                                                                mb(mb(mu(call
                                                                                                                                                                           ("getOffset",
                                                                                                                                                                            w64,
                                                                                                                                                                            var("v",
                                                                                                                                                                                @{typ Capability}),
                                                                                                                                                                            @{theory}),
                                                                                                                                                                         qTy),
                                                                                                                                                                      close
                                                                                                                                                                        (var_w("v",64),
                                                                                                                                                                         mb(call
                                                                                                                                                                              ("CAPR",
                                                                                                                                                                               @{typ
                                                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                                                (Capability \<times>
                                                                                                                                                                                 state)"},
                                                                                                                                                                               var_w("cs",5),
                                                                                                                                                                               @{theory}),
                                                                                                                                                                            close
                                                                                                                                                                              (var("v0",
                                                                                                                                                                                   @{typ Capability}),
                                                                                                                                                                               mb(mu(call
                                                                                                                                                                                       ("getLength",
                                                                                                                                                                                        w64,
                                                                                                                                                                                        var("v0",
                                                                                                                                                                                            @{typ Capability}),
                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                     qTy),
                                                                                                                                                                                  close
                                                                                                                                                                                    (var_w("v0",64),
                                                                                                                                                                                     mu(bop(Uge,
                                                                                                                                                                                            var_w("v",64),
                                                                                                                                                                                            var_w("v0",64)),
                                                                                                                                                                                        qTy))))))),
                                                                                                                                                                   close
                                                                                                                                                                     (var_b"b",
                                                                                                                                                                      ite(var_b"b",
                                                                                                                                                                          call
                                                                                                                                                                            ("SignalCapException",
                                                                                                                                                                             @{typ
                                                                                                                                                                             "state \<Rightarrow>
                                                                                                                                                                              (unit \<times>
                                                                                                                                                                               state)"},
                                                                                                                                                                             tp[lc("capExcLength",
                                                                                                                                                                                   "CapExceptionType",
                                                                                                                                                                                   @{theory}),
                                                                                                                                                                                var_w("cs",5)],
                                                                                                                                                                             @{theory}),
                                                                                                                                                                          call
                                                                                                                                                                            ("SignalCapException",
                                                                                                                                                                             @{typ
                                                                                                                                                                             "state \<Rightarrow>
                                                                                                                                                                              (unit \<times>
                                                                                                                                                                               state)"},
                                                                                                                                                                             tp[lc("capExcCall",
                                                                                                                                                                                   "CapExceptionType",
                                                                                                                                                                                   @{theory}),
                                                                                                                                                                                var_w("cs",5)],
                                                                                                                                                                             @{theory}))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CCallFast",
   close
     (tp[var_w("cs",5),var_w("cb",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      const
                        ("SignalCP2UnusableException",
                         @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                      mb(call
                           ("register_inaccessible",
                            @{typ "state \<Rightarrow> (bool \<times> state)"},var_w("cs",5),
                            @{theory}),
                         close
                           (var_b"b",
                            ite(var_b"b",
                                call
                                  ("SignalCapException",
                                   @{typ "state \<Rightarrow> (unit \<times> state)"},
                                   tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                      var_w("cs",5)],@{theory}),
                                mb(call
                                     ("register_inaccessible",
                                      @{typ "state \<Rightarrow> (bool \<times> state)"},
                                      var_w("cb",5),@{theory}),
                                   close
                                     (var_b"b",
                                      ite(var_b"b",
                                          call
                                            ("SignalCapException",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             tp[lc("capExcAccessSysReg","CapExceptionType",@{theory}),
                                                var_w("cb",5)],@{theory}),
                                          mb(call
                                               ("CAPR",
                                                @{typ
                                                "state \<Rightarrow> (Capability \<times> state)"},
                                                var_w("cs",5),@{theory}),
                                             close
                                               (var("v",@{typ Capability}),
                                                mb(mb(mu(call
                                                           ("getTag",HOLogic.boolT,
                                                            var("v",@{typ Capability}),@{theory}),
                                                         qTy),
                                                      close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                                                   close
                                                     (var_b"b",
                                                      ite(var_b"b",
                                                          call
                                                            ("SignalCapException",
                                                             @{typ
                                                             "state \<Rightarrow>
                                                              (unit \<times> state)"},
                                                             tp[lc("capExcTag","CapExceptionType",
                                                                   @{theory}),var_w("cs",5)],
                                                             @{theory}),
                                                          mb(call
                                                               ("CAPR",
                                                                @{typ
                                                                "state \<Rightarrow>
                                                                 (Capability \<times> state)"},
                                                                var_w("cb",5),@{theory}),
                                                             close
                                                               (var("v",@{typ Capability}),
                                                                mb(mb(mu(call
                                                                           ("getTag",HOLogic.boolT,
                                                                            var("v",
                                                                                @{typ Capability}),
                                                                            @{theory}),qTy),
                                                                      close
                                                                        (var_b"v",
                                                                         mu(mop(Not,var_b"v"),qTy))),
                                                                   close
                                                                     (var_b"b",
                                                                      ite(var_b"b",
                                                                          call
                                                                            ("SignalCapException",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             tp[lc("capExcTag",
                                                                                   "CapExceptionType",
                                                                                   @{theory}),
                                                                                var_w("cb",5)],
                                                                             @{theory}),
                                                                          mb(call
                                                                               ("CAPR",
                                                                                @{typ
                                                                                "state \<Rightarrow>
                                                                                 (Capability \<times>
                                                                                  state)"},
                                                                                var_w("cs",5),
                                                                                @{theory}),
                                                                             close
                                                                               (var("v",
                                                                                    @{typ Capability}),
                                                                                mb(mb(mu(call
                                                                                           ("getSealed",
                                                                                            HOLogic.boolT,
                                                                                            var("v",
                                                                                                @{typ Capability}),
                                                                                            @{theory}),
                                                                                         qTy),
                                                                                      close
                                                                                        (var_b"v",
                                                                                         mu(mop(Not,
                                                                                                var_b"v"),
                                                                                            qTy))),
                                                                                   close
                                                                                     (var_b"b",
                                                                                      ite(var_b"b",
                                                                                          call
                                                                                            ("SignalCapException",
                                                                                             @{typ
                                                                                             "state \<Rightarrow>
                                                                                              (unit \<times>
                                                                                               state)"},
                                                                                             tp[lc("capExcSeal",
                                                                                                   "CapExceptionType",
                                                                                                   @{theory}),
                                                                                                var_w("cs",5)],
                                                                                             @{theory}),
                                                                                          mb(call
                                                                                               ("CAPR",
                                                                                                @{typ
                                                                                                "state \<Rightarrow>
                                                                                                 (Capability \<times>
                                                                                                  state)"},
                                                                                                var_w("cb",5),
                                                                                                @{theory}),
                                                                                             close
                                                                                               (var("v",
                                                                                                    @{typ Capability}),
                                                                                                mb(mb(mu(call
                                                                                                           ("getSealed",
                                                                                                            HOLogic.boolT,
                                                                                                            var("v",
                                                                                                                @{typ Capability}),
                                                                                                            @{theory}),
                                                                                                         qTy),
                                                                                                      close
                                                                                                        (var_b"v",
                                                                                                         mu(mop(Not,
                                                                                                                var_b"v"),
                                                                                                            qTy))),
                                                                                                   close
                                                                                                     (var_b"b",
                                                                                                      ite(var_b"b",
                                                                                                          call
                                                                                                            ("SignalCapException",
                                                                                                             @{typ
                                                                                                             "state \<Rightarrow>
                                                                                                              (unit \<times>
                                                                                                               state)"},
                                                                                                             tp[lc("capExcSeal",
                                                                                                                   "CapExceptionType",
                                                                                                                   @{theory}),
                                                                                                                var_w("cb",5)],
                                                                                                             @{theory}),
                                                                                                          mb(call
                                                                                                               ("CAPR",
                                                                                                                @{typ
                                                                                                                "state \<Rightarrow>
                                                                                                                 (Capability \<times>
                                                                                                                  state)"},
                                                                                                                var_w("cs",5),
                                                                                                                @{theory}),
                                                                                                             close
                                                                                                               (var("v",
                                                                                                                    @{typ Capability}),
                                                                                                                mb(mb(mb(mu(call
                                                                                                                              ("getType",
                                                                                                                               (Word_Lib.mk_wordT 24),
                                                                                                                               var("v",
                                                                                                                                   @{typ Capability}),
                                                                                                                               @{theory}),
                                                                                                                            qTy),
                                                                                                                         close
                                                                                                                           (var_w("v",24),
                                                                                                                            mb(call
                                                                                                                                 ("CAPR",
                                                                                                                                  @{typ
                                                                                                                                  "state \<Rightarrow>
                                                                                                                                   (Capability \<times>
                                                                                                                                    state)"},
                                                                                                                                  var_w("cb",5),
                                                                                                                                  @{theory}),
                                                                                                                               close
                                                                                                                                 (var("v0",
                                                                                                                                      @{typ Capability}),
                                                                                                                                  mb(mu(call
                                                                                                                                          ("getType",
                                                                                                                                           (Word_Lib.mk_wordT 24),
                                                                                                                                           var("v0",
                                                                                                                                               @{typ Capability}),
                                                                                                                                           @{theory}),
                                                                                                                                        qTy),
                                                                                                                                     close
                                                                                                                                       (var_w("v0",24),
                                                                                                                                        mu(eq(var_w("v",24),
                                                                                                                                              var_w("v0",24)),
                                                                                                                                           qTy))))))),
                                                                                                                      close
                                                                                                                        (var_b"v",
                                                                                                                         mu(mop(Not,
                                                                                                                                var_b"v"),
                                                                                                                            qTy))),
                                                                                                                   close
                                                                                                                     (var_b"b",
                                                                                                                      ite(var_b"b",
                                                                                                                          call
                                                                                                                            ("SignalCapException",
                                                                                                                             @{typ
                                                                                                                             "state \<Rightarrow>
                                                                                                                              (unit \<times>
                                                                                                                               state)"},
                                                                                                                             tp[lc("capExcType",
                                                                                                                                   "CapExceptionType",
                                                                                                                                   @{theory}),
                                                                                                                                var_w("cs",5)],
                                                                                                                             @{theory}),
                                                                                                                          mb(call
                                                                                                                               ("CAPR",
                                                                                                                                @{typ
                                                                                                                                "state \<Rightarrow>
                                                                                                                                 (Capability \<times>
                                                                                                                                  state)"},
                                                                                                                                var_w("cs",5),
                                                                                                                                @{theory}),
                                                                                                                             close
                                                                                                                               (var("v",
                                                                                                                                    @{typ Capability}),
                                                                                                                                mb(mb(mb(mu(call
                                                                                                                                              ("getPerms",
                                                                                                                                               @{typ Perms},
                                                                                                                                               var("v",
                                                                                                                                                   @{typ Capability}),
                                                                                                                                               @{theory}),
                                                                                                                                            qTy),
                                                                                                                                         close
                                                                                                                                           (var("v",
                                                                                                                                                @{typ Perms}),
                                                                                                                                            mu(call
                                                                                                                                                 ("Perms.Permit_CCall",
                                                                                                                                                  HOLogic.boolT,
                                                                                                                                                  var("v",
                                                                                                                                                      @{typ Perms}),
                                                                                                                                                  @{theory}),
                                                                                                                                               qTy))),
                                                                                                                                      close
                                                                                                                                        (var_b"v",
                                                                                                                                         mu(mop(Not,
                                                                                                                                                var_b"v"),
                                                                                                                                            qTy))),
                                                                                                                                   close
                                                                                                                                     (var_b"b",
                                                                                                                                      ite(var_b"b",
                                                                                                                                          call
                                                                                                                                            ("SignalCapException",
                                                                                                                                             @{typ
                                                                                                                                             "state \<Rightarrow>
                                                                                                                                              (unit \<times>
                                                                                                                                               state)"},
                                                                                                                                             tp[lc("capExcPermCCall",
                                                                                                                                                   "CapExceptionType",
                                                                                                                                                   @{theory}),
                                                                                                                                                var_w("cs",5)],
                                                                                                                                             @{theory}),
                                                                                                                                          mb(call
                                                                                                                                               ("CAPR",
                                                                                                                                                @{typ
                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                 (Capability \<times>
                                                                                                                                                  state)"},
                                                                                                                                                var_w("cb",5),
                                                                                                                                                @{theory}),
                                                                                                                                             close
                                                                                                                                               (var("v",
                                                                                                                                                    @{typ Capability}),
                                                                                                                                                mb(mb(mb(mu(call
                                                                                                                                                              ("getPerms",
                                                                                                                                                               @{typ Perms},
                                                                                                                                                               var("v",
                                                                                                                                                                   @{typ Capability}),
                                                                                                                                                               @{theory}),
                                                                                                                                                            qTy),
                                                                                                                                                         close
                                                                                                                                                           (var("v",
                                                                                                                                                                @{typ Perms}),
                                                                                                                                                            mu(call
                                                                                                                                                                 ("Perms.Permit_CCall",
                                                                                                                                                                  HOLogic.boolT,
                                                                                                                                                                  var("v",
                                                                                                                                                                      @{typ Perms}),
                                                                                                                                                                  @{theory}),
                                                                                                                                                               qTy))),
                                                                                                                                                      close
                                                                                                                                                        (var_b"v",
                                                                                                                                                         mu(mop(Not,
                                                                                                                                                                var_b"v"),
                                                                                                                                                            qTy))),
                                                                                                                                                   close
                                                                                                                                                     (var_b"b",
                                                                                                                                                      ite(var_b"b",
                                                                                                                                                          call
                                                                                                                                                            ("SignalCapException",
                                                                                                                                                             @{typ
                                                                                                                                                             "state \<Rightarrow>
                                                                                                                                                              (unit \<times>
                                                                                                                                                               state)"},
                                                                                                                                                             tp[lc("capExcPermCCall",
                                                                                                                                                                   "CapExceptionType",
                                                                                                                                                                   @{theory}),
                                                                                                                                                                var_w("cb",5)],
                                                                                                                                                             @{theory}),
                                                                                                                                                          mb(call
                                                                                                                                                               ("CAPR",
                                                                                                                                                                @{typ
                                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                                 (Capability \<times>
                                                                                                                                                                  state)"},
                                                                                                                                                                var_w("cs",5),
                                                                                                                                                                @{theory}),
                                                                                                                                                             close
                                                                                                                                                               (var("v",
                                                                                                                                                                    @{typ Capability}),
                                                                                                                                                                mb(mb(mb(mu(call
                                                                                                                                                                              ("getPerms",
                                                                                                                                                                               @{typ Perms},
                                                                                                                                                                               var("v",
                                                                                                                                                                                   @{typ Capability}),
                                                                                                                                                                               @{theory}),
                                                                                                                                                                            qTy),
                                                                                                                                                                         close
                                                                                                                                                                           (var("v",
                                                                                                                                                                                @{typ Perms}),
                                                                                                                                                                            mu(call
                                                                                                                                                                                 ("Perms.Permit_Execute",
                                                                                                                                                                                  HOLogic.boolT,
                                                                                                                                                                                  var("v",
                                                                                                                                                                                      @{typ Perms}),
                                                                                                                                                                                  @{theory}),
                                                                                                                                                                               qTy))),
                                                                                                                                                                      close
                                                                                                                                                                        (var_b"v",
                                                                                                                                                                         mu(mop(Not,
                                                                                                                                                                                var_b"v"),
                                                                                                                                                                            qTy))),
                                                                                                                                                                   close
                                                                                                                                                                     (var_b"b",
                                                                                                                                                                      ite(var_b"b",
                                                                                                                                                                          call
                                                                                                                                                                            ("SignalCapException",
                                                                                                                                                                             @{typ
                                                                                                                                                                             "state \<Rightarrow>
                                                                                                                                                                              (unit \<times>
                                                                                                                                                                               state)"},
                                                                                                                                                                             tp[lc("capExcPermExe",
                                                                                                                                                                                   "CapExceptionType",
                                                                                                                                                                                   @{theory}),
                                                                                                                                                                                var_w("cs",5)],
                                                                                                                                                                             @{theory}),
                                                                                                                                                                          mb(call
                                                                                                                                                                               ("CAPR",
                                                                                                                                                                                @{typ
                                                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                                                 (Capability \<times>
                                                                                                                                                                                  state)"},
                                                                                                                                                                                var_w("cb",5),
                                                                                                                                                                                @{theory}),
                                                                                                                                                                             close
                                                                                                                                                                               (var("v",
                                                                                                                                                                                    @{typ Capability}),
                                                                                                                                                                                mb(mb(mu(call
                                                                                                                                                                                           ("getPerms",
                                                                                                                                                                                            @{typ Perms},
                                                                                                                                                                                            var("v",
                                                                                                                                                                                                @{typ Capability}),
                                                                                                                                                                                            @{theory}),
                                                                                                                                                                                         qTy),
                                                                                                                                                                                      close
                                                                                                                                                                                        (var("v",
                                                                                                                                                                                             @{typ Perms}),
                                                                                                                                                                                         mu(call
                                                                                                                                                                                              ("Perms.Permit_Execute",
                                                                                                                                                                                               HOLogic.boolT,
                                                                                                                                                                                               var("v",
                                                                                                                                                                                                   @{typ Perms}),
                                                                                                                                                                                               @{theory}),
                                                                                                                                                                                            qTy))),
                                                                                                                                                                                   close
                                                                                                                                                                                     (var_b"b",
                                                                                                                                                                                      ite(var_b"b",
                                                                                                                                                                                          call
                                                                                                                                                                                            ("SignalCapException",
                                                                                                                                                                                             @{typ
                                                                                                                                                                                             "state \<Rightarrow>
                                                                                                                                                                                              (unit \<times>
                                                                                                                                                                                               state)"},
                                                                                                                                                                                             tp[lc("capExcPermExe",
                                                                                                                                                                                                   "CapExceptionType",
                                                                                                                                                                                                   @{theory}),
                                                                                                                                                                                                var_w("cb",5)],
                                                                                                                                                                                             @{theory}),
                                                                                                                                                                                          mb(call
                                                                                                                                                                                               ("CAPR",
                                                                                                                                                                                                @{typ
                                                                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                                                                 (Capability \<times>
                                                                                                                                                                                                  state)"},
                                                                                                                                                                                                var_w("cs",5),
                                                                                                                                                                                                @{theory}),
                                                                                                                                                                                             close
                                                                                                                                                                                               (var("v",
                                                                                                                                                                                                    @{typ Capability}),
                                                                                                                                                                                                mb(mb(mu(call
                                                                                                                                                                                                           ("getOffset",
                                                                                                                                                                                                            w64,
                                                                                                                                                                                                            var("v",
                                                                                                                                                                                                                @{typ Capability}),
                                                                                                                                                                                                            @{theory}),
                                                                                                                                                                                                         qTy),
                                                                                                                                                                                                      close
                                                                                                                                                                                                        (var_w("v",64),
                                                                                                                                                                                                         mb(call
                                                                                                                                                                                                              ("CAPR",
                                                                                                                                                                                                               @{typ
                                                                                                                                                                                                               "state \<Rightarrow>
                                                                                                                                                                                                                (Capability \<times>
                                                                                                                                                                                                                 state)"},
                                                                                                                                                                                                               var_w("cs",5),
                                                                                                                                                                                                               @{theory}),
                                                                                                                                                                                                            close
                                                                                                                                                                                                              (var("v0",
                                                                                                                                                                                                                   @{typ Capability}),
                                                                                                                                                                                                               mb(mu(call
                                                                                                                                                                                                                       ("getLength",
                                                                                                                                                                                                                        w64,
                                                                                                                                                                                                                        var("v0",
                                                                                                                                                                                                                            @{typ Capability}),
                                                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                                                     qTy),
                                                                                                                                                                                                                  close
                                                                                                                                                                                                                    (var_w("v0",64),
                                                                                                                                                                                                                     mu(bop(Uge,
                                                                                                                                                                                                                            var_w("v",64),
                                                                                                                                                                                                                            var_w("v0",64)),
                                                                                                                                                                                                                        qTy))))))),
                                                                                                                                                                                                   close
                                                                                                                                                                                                     (var_b"b",
                                                                                                                                                                                                      ite(var_b"b",
                                                                                                                                                                                                          call
                                                                                                                                                                                                            ("SignalCapException",
                                                                                                                                                                                                             @{typ
                                                                                                                                                                                                             "state \<Rightarrow>
                                                                                                                                                                                                              (unit \<times>
                                                                                                                                                                                                               state)"},
                                                                                                                                                                                                             tp[lc("capExcLength",
                                                                                                                                                                                                                   "CapExceptionType",
                                                                                                                                                                                                                   @{theory}),
                                                                                                                                                                                                                var_w("cs",5)],
                                                                                                                                                                                                             @{theory}),
                                                                                                                                                                                                          mb(const
                                                                                                                                                                                                               ("CheckBranch",
                                                                                                                                                                                                                @{typ
                                                                                                                                                                                                                "state \<Rightarrow>
                                                                                                                                                                                                                 (unit \<times>
                                                                                                                                                                                                                  state)"},
                                                                                                                                                                                                                @{theory}),
                                                                                                                                                                                                             close
                                                                                                                                                                                                               (var_a
                                                                                                                                                                                                                  HOLogic.unitT,
                                                                                                                                                                                                                mb(call
                                                                                                                                                                                                                     ("CAPR",
                                                                                                                                                                                                                      @{typ
                                                                                                                                                                                                                      "state \<Rightarrow>
                                                                                                                                                                                                                       (Capability \<times>
                                                                                                                                                                                                                        state)"},
                                                                                                                                                                                                                      var_w("cs",5),
                                                                                                                                                                                                                      @{theory}),
                                                                                                                                                                                                                   close
                                                                                                                                                                                                                     (var("v",
                                                                                                                                                                                                                          @{typ Capability}),
                                                                                                                                                                                                                      mb(mb(mu(tp[var("v",
                                                                                                                                                                                                                                      @{typ Capability}),
                                                                                                                                                                                                                                  lf],
                                                                                                                                                                                                                               qTy),
                                                                                                                                                                                                                            close
                                                                                                                                                                                                                              (var("v",
                                                                                                                                                                                                                                   @{typ
                                                                                                                                                                                                                                   "Capability \<times>
                                                                                                                                                                                                                                    bool"}),
                                                                                                                                                                                                                               mu(call
                                                                                                                                                                                                                                    ("setSealed",
                                                                                                                                                                                                                                     @{typ Capability},
                                                                                                                                                                                                                                     var("v",
                                                                                                                                                                                                                                         @{typ
                                                                                                                                                                                                                                         "Capability \<times>
                                                                                                                                                                                                                                          bool"}),
                                                                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                                                                  qTy))),
                                                                                                                                                                                                                         close
                                                                                                                                                                                                                           (var("new_PCC",
                                                                                                                                                                                                                                @{typ Capability}),
                                                                                                                                                                                                                            mb(call
                                                                                                                                                                                                                                 ("write'PCC",
                                                                                                                                                                                                                                  @{typ
                                                                                                                                                                                                                                  "state \<Rightarrow>
                                                                                                                                                                                                                                   (unit \<times>
                                                                                                                                                                                                                                    state)"},
                                                                                                                                                                                                                                  call
                                                                                                                                                                                                                                    ("setType",
                                                                                                                                                                                                                                     @{typ Capability},
                                                                                                                                                                                                                                     tp[var("new_PCC",
                                                                                                                                                                                                                                            @{typ Capability}),
                                                                                                                                                                                                                                        lw(0,
                                                                                                                                                                                                                                           24)],
                                                                                                                                                                                                                                     @{theory}),
                                                                                                                                                                                                                                  @{theory}),
                                                                                                                                                                                                                               close
                                                                                                                                                                                                                                 (var_a
                                                                                                                                                                                                                                    HOLogic.unitT,
                                                                                                                                                                                                                                  mb(call
                                                                                                                                                                                                                                       ("CAPR",
                                                                                                                                                                                                                                        @{typ
                                                                                                                                                                                                                                        "state \<Rightarrow>
                                                                                                                                                                                                                                         (Capability \<times>
                                                                                                                                                                                                                                          state)"},
                                                                                                                                                                                                                                        var_w("cs",5),
                                                                                                                                                                                                                                        @{theory}),
                                                                                                                                                                                                                                     close
                                                                                                                                                                                                                                       (var("v",
                                                                                                                                                                                                                                            @{typ Capability}),
                                                                                                                                                                                                                                        mb(mb(mb(mu(call
                                                                                                                                                                                                                                                      ("getOffset",
                                                                                                                                                                                                                                                       w64,
                                                                                                                                                                                                                                                       var("v",
                                                                                                                                                                                                                                                           @{typ Capability}),
                                                                                                                                                                                                                                                       @{theory}),
                                                                                                                                                                                                                                                    qTy),
                                                                                                                                                                                                                                                 close
                                                                                                                                                                                                                                                   (var_w("v",64),
                                                                                                                                                                                                                                                    mu(mop(Some,
                                                                                                                                                                                                                                                           var_w("v",64)),
                                                                                                                                                                                                                                                       qTy))),
                                                                                                                                                                                                                                              close
                                                                                                                                                                                                                                                (var("v",
                                                                                                                                                                                                                                                     @{typ
                                                                                                                                                                                                                                                     "64 word
                                                                                                                                                                                                                                                         option"}),
                                                                                                                                                                                                                                                 call
                                                                                                                                                                                                                                                   ("write'BranchTo",
                                                                                                                                                                                                                                                    @{typ
                                                                                                                                                                                                                                                    "state \<Rightarrow>
                                                                                                                                                                                                                                                     (unit \<times>
                                                                                                                                                                                                                                                      state)"},
                                                                                                                                                                                                                                                    var("v",
                                                                                                                                                                                                                                                        @{typ
                                                                                                                                                                                                                                                        "64 word
                                                                                                                                                                                                                                                            option"}),
                                                                                                                                                                                                                                                    @{theory}))),
                                                                                                                                                                                                                                           close
                                                                                                                                                                                                                                             (var_a
                                                                                                                                                                                                                                                HOLogic.unitT,
                                                                                                                                                                                                                                              mb(mw(close
                                                                                                                                                                                                                                                      (var("s",
                                                                                                                                                                                                                                                           qTy),
                                                                                                                                                                                                                                                       rupd
                                                                                                                                                                                                                                                         ("state.CCallBranch",
                                                                                                                                                                                                                                                          tp[var("s",
                                                                                                                                                                                                                                                                 qTy),
                                                                                                                                                                                                                                                             lt],
                                                                                                                                                                                                                                                          @{theory}))),
                                                                                                                                                                                                                                                 close
                                                                                                                                                                                                                                                   (var_a
                                                                                                                                                                                                                                                      HOLogic.unitT,
                                                                                                                                                                                                                                                    mb(call
                                                                                                                                                                                                                                                         ("CAPR",
                                                                                                                                                                                                                                                          @{typ
                                                                                                                                                                                                                                                          "state \<Rightarrow>
                                                                                                                                                                                                                                                           (Capability \<times>
                                                                                                                                                                                                                                                            state)"},
                                                                                                                                                                                                                                                          var_w("cb",5),
                                                                                                                                                                                                                                                          @{theory}),
                                                                                                                                                                                                                                                       close
                                                                                                                                                                                                                                                         (var("v",
                                                                                                                                                                                                                                                              @{typ Capability}),
                                                                                                                                                                                                                                                          mb(mb(mu(tp[var("v",
                                                                                                                                                                                                                                                                          @{typ Capability}),
                                                                                                                                                                                                                                                                      lf],
                                                                                                                                                                                                                                                                   qTy),
                                                                                                                                                                                                                                                                close
                                                                                                                                                                                                                                                                  (var("v",
                                                                                                                                                                                                                                                                       @{typ
                                                                                                                                                                                                                                                                       "Capability \<times>
                                                                                                                                                                                                                                                                        bool"}),
                                                                                                                                                                                                                                                                   mu(call
                                                                                                                                                                                                                                                                        ("setSealed",
                                                                                                                                                                                                                                                                         @{typ Capability},
                                                                                                                                                                                                                                                                         var("v",
                                                                                                                                                                                                                                                                             @{typ
                                                                                                                                                                                                                                                                             "Capability \<times>
                                                                                                                                                                                                                                                                              bool"}),
                                                                                                                                                                                                                                                                         @{theory}),
                                                                                                                                                                                                                                                                      qTy))),
                                                                                                                                                                                                                                                             close
                                                                                                                                                                                                                                                               (var("new_IDC",
                                                                                                                                                                                                                                                                    @{typ Capability}),
                                                                                                                                                                                                                                                                call
                                                                                                                                                                                                                                                                  ("write'IDC",
                                                                                                                                                                                                                                                                   @{typ
                                                                                                                                                                                                                                                                   "state \<Rightarrow>
                                                                                                                                                                                                                                                                    (unit \<times>
                                                                                                                                                                                                                                                                     state)"},
                                                                                                                                                                                                                                                                   call
                                                                                                                                                                                                                                                                     ("setType",
                                                                                                                                                                                                                                                                      @{typ Capability},
                                                                                                                                                                                                                                                                      tp[var("new_IDC",
                                                                                                                                                                                                                                                                             @{typ Capability}),
                                                                                                                                                                                                                                                                         lw(0,
                                                                                                                                                                                                                                                                            24)],
                                                                                                                                                                                                                                                                      @{theory}),
                                                                                                                                                                                                                                                                   @{theory}))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CReturn",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                  close
                    (var("v",@{typ StatusRegister}),
                     mu(call
                          ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                           @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
            close
              (var_b"b",
               ite(var_b"b",
                   const
                     ("SignalCP2UnusableException",
                      @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                   call
                     ("SignalCapException_noReg",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      lc("capExcRet","CapExceptionType",@{theory}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'UnknownCapInstruction",
   mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
      close
        (var("v",@{typ CP0}),
         mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                  close
                    (var("v",@{typ StatusRegister}),
                     mu(call
                          ("StatusRegister.CU2",HOLogic.boolT,var("v",@{typ StatusRegister}),
                           @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
            close
              (var_b"b",
               ite(var_b"b",
                   const
                     ("SignalCP2UnusableException",
                      @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}),
                   call
                     ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                      lc("ResI","ExceptionType",@{theory}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ADDI",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"ADDI: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mu(ex(var_w("v",64),ln 32,ln 0,(Word_Lib.mk_wordT 33)),qTy),
                              close
                                (var_w("v",33),
                                 mu(bop(Add,var_w("v",33),
                                        mop(SE (Word_Lib.mk_wordT 33),var_w("immediate",16))),qTy))),
                           close
                             (var_w("temp",33),
                              ite(mop(Not,
                                      eq(bop(Bit,var_w("temp",33),ln 32),
                                         bop(Bit,var_w("temp",33),ln 31))),
                                  call
                                    ("SignalException",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     lc("Ov","ExceptionType",@{theory}),@{theory}),
                                  call
                                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     tp[mop(SE w64,ex(var_w("temp",33),ln 31,ln 0,w32)),
                                        var_w("rt",5)],@{theory}))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ADDIU",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"ADDIU: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                              close
                                (var_w("v",32),
                                 mu(bop(Add,var_w("v",32),mop(SE w32,var_w("immediate",16))),qTy))),
                           close
                             (var_w("temp",32),
                              call
                                ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 tp[mop(SE w64,var_w("temp",32)),var_w("rt",5)],@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DADDI",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(mop(SE (Word_Lib.mk_wordT 65),var_w("v",64)),qTy),
                  close
                    (var_w("v",65),
                     mu(bop(Add,var_w("v",65),mop(SE (Word_Lib.mk_wordT 65),var_w("immediate",16))),
                        qTy))),
               close
                 (var_w("temp",65),
                  ite(mop(Not,eq(bop(Bit,var_w("temp",65),ln 64),bop(Bit,var_w("temp",65),ln 63))),
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Ov","ExceptionType",@{theory}),@{theory}),
                      call
                        ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         tp[ex(var_w("temp",65),ln 63,ln 0,w64),var_w("rt",5)],@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DADDIU",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,var_w("v",64),mop(SE w64,var_w("immediate",16))),qTy),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rt",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SLTI",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(bop(Lt,var_w("v",64),mop(SE w64,var_w("immediate",16))),qTy),
                     close(var_b"v",mu(mop(Cast w64,var_b"v"),qTy))),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rt",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SLTIU",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(bop(Ult,var_w("v",64),mop(SE w64,var_w("immediate",16))),qTy),
                     close(var_b"v",mu(mop(Cast w64,var_b"v"),qTy))),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rt",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ANDI",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(BAnd,var_w("v",64),mop(Cast w64,var_w("immediate",16))),qTy),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rt",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ORI",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(BOr,var_w("v",64),mop(Cast w64,var_w("immediate",16))),qTy),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rt",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'XORI",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(BXor,var_w("v",64),mop(Cast w64,var_w("immediate",16))),qTy),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rt",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'LUI",
   close
     (tp[var_w("rt",5),var_w("immediate",16)],
      call
        ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[mop(SE w64,cc[var_w("immediate",16),lw(0,16)]),var_w("rt",5)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ADD",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            mb(call
                                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("rt",5),@{theory}),
                               close
                                 (var_w("v",64),
                                  mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy)))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"ADD: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mu(ex(var_w("v",64),ln 32,ln 0,(Word_Lib.mk_wordT 33)),qTy),
                              close
                                (var_w("v",33),
                                 mb(call
                                      ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                       var_w("rt",5),@{theory}),
                                    close
                                      (var_w("v0",64),
                                       mb(mu(ex(var_w("v0",64),ln 32,ln 0,(Word_Lib.mk_wordT 33)),
                                             qTy),
                                          close
                                            (var_w("v0",33),
                                             mu(bop(Add,var_w("v",33),var_w("v0",33)),qTy))))))),
                           close
                             (var_w("temp",33),
                              ite(mop(Not,
                                      eq(bop(Bit,var_w("temp",33),ln 32),
                                         bop(Bit,var_w("temp",33),ln 31))),
                                  call
                                    ("SignalException",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     lc("Ov","ExceptionType",@{theory}),@{theory}),
                                  call
                                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     tp[mop(SE w64,ex(var_w("temp",33),ln 31,ln 0,w32)),
                                        var_w("rd",5)],@{theory}))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'ADDU",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            mb(call
                                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("rt",5),@{theory}),
                               close
                                 (var_w("v",64),
                                  mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy)))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"ADDU: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                              close
                                (var_w("v",32),
                                 mb(call
                                      ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                       var_w("rt",5),@{theory}),
                                    close
                                      (var_w("v0",64),
                                       mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                          close
                                            (var_w("v0",32),
                                             mu(bop(Add,var_w("v",32),var_w("v0",32)),qTy))))))),
                           close
                             (var_w("temp",32),
                              call
                                ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 tp[mop(SE w64,var_w("temp",32)),var_w("rd",5)],@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SUB",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            mb(call
                                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("rt",5),@{theory}),
                               close
                                 (var_w("v",64),
                                  mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy)))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"SUB: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mu(ex(var_w("v",64),ln 32,ln 0,(Word_Lib.mk_wordT 33)),qTy),
                              close
                                (var_w("v",33),
                                 mb(call
                                      ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                       var_w("rt",5),@{theory}),
                                    close
                                      (var_w("v0",64),
                                       mb(mu(ex(var_w("v0",64),ln 32,ln 0,(Word_Lib.mk_wordT 33)),
                                             qTy),
                                          close
                                            (var_w("v0",33),
                                             mu(bop(Sub,var_w("v",33),var_w("v0",33)),qTy))))))),
                           close
                             (var_w("temp",33),
                              ite(mop(Not,
                                      eq(bop(Bit,var_w("temp",33),ln 32),
                                         bop(Bit,var_w("temp",33),ln 31))),
                                  call
                                    ("SignalException",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     lc("Ov","ExceptionType",@{theory}),@{theory}),
                                  call
                                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     tp[mop(SE w64,ex(var_w("temp",33),ln 31,ln 0,w32)),
                                        var_w("rd",5)],@{theory}))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SUBU",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            mb(call
                                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("rt",5),@{theory}),
                               close
                                 (var_w("v",64),
                                  mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy)))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"SUBU: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                              close
                                (var_w("v",32),
                                 mb(call
                                      ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                       var_w("rt",5),@{theory}),
                                    close
                                      (var_w("v0",64),
                                       mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                          close
                                            (var_w("v0",32),
                                             mu(bop(Sub,var_w("v",32),var_w("v0",32)),qTy))))))),
                           close
                             (var_w("temp",32),
                              call
                                ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 tp[mop(SE w64,var_w("temp",32)),var_w("rd",5)],@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DADD",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(mop(SE (Word_Lib.mk_wordT 65),var_w("v",64)),qTy),
                  close
                    (var_w("v",65),
                     mb(call
                          ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                           var_w("rt",5),@{theory}),
                        close
                          (var_w("v0",64),
                           mb(mu(mop(SE (Word_Lib.mk_wordT 65),var_w("v0",64)),qTy),
                              close(var_w("v0",65),mu(bop(Add,var_w("v",65),var_w("v0",65)),qTy))))))),
               close
                 (var_w("temp",65),
                  ite(mop(Not,eq(bop(Bit,var_w("temp",65),ln 64),bop(Bit,var_w("temp",65),ln 63))),
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Ov","ExceptionType",@{theory}),@{theory}),
                      call
                        ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         tp[ex(var_w("temp",65),ln 63,ln 0,w64),var_w("rd",5)],@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DADDU",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close(var_w("v0",64),mu(bop(Add,var_w("v",64),var_w("v0",64)),qTy))),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DSUB",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(mop(SE (Word_Lib.mk_wordT 65),var_w("v",64)),qTy),
                  close
                    (var_w("v",65),
                     mb(call
                          ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                           var_w("rt",5),@{theory}),
                        close
                          (var_w("v0",64),
                           mb(mu(mop(SE (Word_Lib.mk_wordT 65),var_w("v0",64)),qTy),
                              close(var_w("v0",65),mu(bop(Sub,var_w("v",65),var_w("v0",65)),qTy))))))),
               close
                 (var_w("temp",65),
                  ite(mop(Not,eq(bop(Bit,var_w("temp",65),ln 64),bop(Bit,var_w("temp",65),ln 63))),
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Ov","ExceptionType",@{theory}),@{theory}),
                      call
                        ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         tp[ex(var_w("temp",65),ln 63,ln 0,w64),var_w("rd",5)],@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DSUBU",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close(var_w("v0",64),mu(bop(Sub,var_w("v",64),var_w("v0",64)),qTy))),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SLT",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mb(call
                          ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                           var_w("rt",5),@{theory}),
                        close(var_w("v0",64),mu(bop(Lt,var_w("v",64),var_w("v0",64)),qTy))),
                     close(var_b"v",mu(mop(Cast w64,var_b"v"),qTy))),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SLTU",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mb(call
                          ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                           var_w("rt",5),@{theory}),
                        close(var_w("v0",64),mu(bop(Ult,var_w("v",64),var_w("v0",64)),qTy))),
                     close(var_b"v",mu(mop(Cast w64,var_b"v"),qTy))),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'AND",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close(var_w("v0",64),mu(bop(BAnd,var_w("v",64),var_w("v0",64)),qTy))),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'OR",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close(var_w("v0",64),mu(bop(BOr,var_w("v",64),var_w("v0",64)),qTy))),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'XOR",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close(var_w("v0",64),mu(bop(BXor,var_w("v",64),var_w("v0",64)),qTy))),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'NOR",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mb(call
                          ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                           var_w("rt",5),@{theory}),
                        close(var_w("v0",64),mu(bop(BOr,var_w("v",64),var_w("v0",64)),qTy))),
                     close(var_w("v",64),mu(mop(BNot,var_w("v",64)),qTy))),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MOVN",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(eq(var_w("v",64),lw(0,64)),qTy),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(call
                           ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                            var_w("rs",5),@{theory}),
                         close
                           (var_w("v",64),
                            mb(mu(tp[var_w("v",64),var_w("rd",5)],qTy),
                               close
                                 (var("v",@{typ "64 word \<times> 5 word"}),
                                  call
                                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word \<times> 5 word"}),@{theory}))))),
                      mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MOVZ",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(eq(var_w("v",64),lw(0,64)),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(call
                           ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                            var_w("rs",5),@{theory}),
                         close
                           (var_w("v",64),
                            mb(mu(tp[var_w("v",64),var_w("rd",5)],qTy),
                               close
                                 (var("v",@{typ "64 word \<times> 5 word"}),
                                  call
                                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word \<times> 5 word"}),@{theory}))))),
                      mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MADD",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            mb(call
                                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("rt",5),@{theory}),
                               close
                                 (var_w("v",64),
                                  mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy)))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"MADD: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(const("HI",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                 close
                                   (var_w("v",32),
                                    mb(const
                                         ("LO",
                                          @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                          @{theory}),
                                       close
                                         (var_w("v0",64),
                                          mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                             close
                                               (var_w("v0",32),
                                                mu(cc[var_w("v",32),var_w("v0",32)],qTy))))))),
                              close
                                (var_w("v",64),
                                 mb(call
                                      ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                       var_w("rs",5),@{theory}),
                                    close
                                      (var_w("v0",64),
                                       mb(mb(mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                                close
                                                  (var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                                             close
                                               (var_w("v",64),
                                                mb(call
                                                     ("GPR",
                                                      @{typ
                                                      "state \<Rightarrow> (64 word \<times> state)"},
                                                      var_w("rt",5),@{theory}),
                                                   close
                                                     (var_w("v0",64),
                                                      mb(mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                                            close
                                                              (var_w("v",32),
                                                               mu(mop(SE w64,var_w("v",32)),qTy))),
                                                         close
                                                           (var_w("v0",64),
                                                            mu(bop(Mul,var_w("v",64),var_w("v0",64)),
                                                               qTy))))))),
                                          close
                                            (var_w("v0",64),
                                             mu(bop(Add,var_w("v",64),var_w("v0",64)),qTy))))))),
                           close
                             (var_w("temp",64),
                              mb(call
                                   ("write'HI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    mop(SE w64,ex(var_w("temp",64),ln 63,ln 32,w32)),@{theory}),
                                 close
                                   (var_a HOLogic.unitT,
                                    call
                                      ("write'LO",
                                       @{typ "state \<Rightarrow> (unit \<times> state)"},
                                       mop(SE w64,ex(var_w("temp",64),ln 31,ln 0,w32)),@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MADDU",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            mb(call
                                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("rt",5),@{theory}),
                               close
                                 (var_w("v",64),
                                  mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy)))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"MADDU: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(const("HI",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                 close
                                   (var_w("v",32),
                                    mb(const
                                         ("LO",
                                          @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                          @{theory}),
                                       close
                                         (var_w("v0",64),
                                          mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                             close
                                               (var_w("v0",32),
                                                mu(cc[var_w("v",32),var_w("v0",32)],qTy))))))),
                              close
                                (var_w("v",64),
                                 mb(call
                                      ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                       var_w("rs",5),@{theory}),
                                    close
                                      (var_w("v0",64),
                                       mb(mb(mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                                close
                                                  (var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy))),
                                             close
                                               (var_w("v",64),
                                                mb(call
                                                     ("GPR",
                                                      @{typ
                                                      "state \<Rightarrow> (64 word \<times> state)"},
                                                      var_w("rt",5),@{theory}),
                                                   close
                                                     (var_w("v0",64),
                                                      mb(mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                                            close
                                                              (var_w("v",32),
                                                               mu(mop(Cast w64,var_w("v",32)),qTy))),
                                                         close
                                                           (var_w("v0",64),
                                                            mu(bop(Mul,var_w("v",64),var_w("v0",64)),
                                                               qTy))))))),
                                          close
                                            (var_w("v0",64),
                                             mu(bop(Add,var_w("v",64),var_w("v0",64)),qTy))))))),
                           close
                             (var_w("temp",64),
                              mb(call
                                   ("write'HI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    mop(SE w64,ex(var_w("temp",64),ln 63,ln 32,w32)),@{theory}),
                                 close
                                   (var_a HOLogic.unitT,
                                    call
                                      ("write'LO",
                                       @{typ "state \<Rightarrow> (unit \<times> state)"},
                                       mop(SE w64,ex(var_w("temp",64),ln 31,ln 0,w32)),@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MSUB",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            mb(call
                                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("rt",5),@{theory}),
                               close
                                 (var_w("v",64),
                                  mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy)))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"MSUB: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(const("HI",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                 close
                                   (var_w("v",32),
                                    mb(const
                                         ("LO",
                                          @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                          @{theory}),
                                       close
                                         (var_w("v0",64),
                                          mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                             close
                                               (var_w("v0",32),
                                                mu(cc[var_w("v",32),var_w("v0",32)],qTy))))))),
                              close
                                (var_w("v",64),
                                 mb(call
                                      ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                       var_w("rs",5),@{theory}),
                                    close
                                      (var_w("v0",64),
                                       mb(mb(mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                                close
                                                  (var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                                             close
                                               (var_w("v",64),
                                                mb(call
                                                     ("GPR",
                                                      @{typ
                                                      "state \<Rightarrow> (64 word \<times> state)"},
                                                      var_w("rt",5),@{theory}),
                                                   close
                                                     (var_w("v0",64),
                                                      mb(mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                                            close
                                                              (var_w("v",32),
                                                               mu(mop(SE w64,var_w("v",32)),qTy))),
                                                         close
                                                           (var_w("v0",64),
                                                            mu(bop(Mul,var_w("v",64),var_w("v0",64)),
                                                               qTy))))))),
                                          close
                                            (var_w("v0",64),
                                             mu(bop(Sub,var_w("v",64),var_w("v0",64)),qTy))))))),
                           close
                             (var_w("temp",64),
                              mb(call
                                   ("write'HI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    mop(SE w64,ex(var_w("temp",64),ln 63,ln 32,w32)),@{theory}),
                                 close
                                   (var_a HOLogic.unitT,
                                    call
                                      ("write'LO",
                                       @{typ "state \<Rightarrow> (unit \<times> state)"},
                                       mop(SE w64,ex(var_w("temp",64),ln 31,ln 0,w32)),@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MSUBU",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            mb(call
                                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("rt",5),@{theory}),
                               close
                                 (var_w("v",64),
                                  mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy)))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"MSUBU: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(const("HI",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                 close
                                   (var_w("v",32),
                                    mb(const
                                         ("LO",
                                          @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                          @{theory}),
                                       close
                                         (var_w("v0",64),
                                          mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                             close
                                               (var_w("v0",32),
                                                mu(cc[var_w("v",32),var_w("v0",32)],qTy))))))),
                              close
                                (var_w("v",64),
                                 mb(call
                                      ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                       var_w("rs",5),@{theory}),
                                    close
                                      (var_w("v0",64),
                                       mb(mb(mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                                close
                                                  (var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy))),
                                             close
                                               (var_w("v",64),
                                                mb(call
                                                     ("GPR",
                                                      @{typ
                                                      "state \<Rightarrow> (64 word \<times> state)"},
                                                      var_w("rt",5),@{theory}),
                                                   close
                                                     (var_w("v0",64),
                                                      mb(mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                                            close
                                                              (var_w("v",32),
                                                               mu(mop(Cast w64,var_w("v",32)),qTy))),
                                                         close
                                                           (var_w("v0",64),
                                                            mu(bop(Mul,var_w("v",64),var_w("v0",64)),
                                                               qTy))))))),
                                          close
                                            (var_w("v0",64),
                                             mu(bop(Sub,var_w("v",64),var_w("v0",64)),qTy))))))),
                           close
                             (var_w("temp",64),
                              mb(call
                                   ("write'HI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    mop(SE w64,ex(var_w("temp",64),ln 63,ln 32,w32)),@{theory}),
                                 close
                                   (var_a HOLogic.unitT,
                                    call
                                      ("write'LO",
                                       @{typ "state \<Rightarrow> (unit \<times> state)"},
                                       mop(SE w64,ex(var_w("temp",64),ln 31,ln 0,w32)),@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MUL",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            mb(call
                                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("rt",5),@{theory}),
                               close
                                 (var_w("v",64),
                                  mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy)))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"MUL: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                       close
                                         (var_w("v",32),
                                          mb(call
                                               ("GPR",
                                                @{typ
                                                "state \<Rightarrow> (64 word \<times> state)"},
                                                var_w("rt",5),@{theory}),
                                             close
                                               (var_w("v0",64),
                                                mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                                   close
                                                     (var_w("v0",32),
                                                      mu(bop(Mul,var_w("v",32),var_w("v0",32)),qTy))))))),
                                    close(var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                                 close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                              close
                                (var("v",@{typ "64 word \<times> 5 word"}),
                                 call
                                   ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    var("v",@{typ "64 word \<times> 5 word"}),@{theory}))),
                           close
                             (var_a HOLogic.unitT,
                              mb(call
                                   ("write'lo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    lo w64,@{theory}),
                                 close
                                   (var_a HOLogic.unitT,
                                    call
                                      ("write'hi",
                                       @{typ "state \<Rightarrow> (unit \<times> state)"},lo w64,
                                       @{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MULT",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            mb(call
                                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("rt",5),@{theory}),
                               close
                                 (var_w("v",64),
                                  mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy)))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"MULT: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                 close(var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                              close
                                (var_w("v",64),
                                 mb(call
                                      ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                       var_w("rt",5),@{theory}),
                                    close
                                      (var_w("v0",64),
                                       mb(mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                             close(var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                                          close
                                            (var_w("v0",64),
                                             mu(bop(Mul,var_w("v",64),var_w("v0",64)),qTy))))))),
                           close
                             (var_w("prod",64),
                              mb(call
                                   ("write'LO",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    mop(SE w64,ex(var_w("prod",64),ln 31,ln 0,w32)),@{theory}),
                                 close
                                   (var_a HOLogic.unitT,
                                    call
                                      ("write'HI",
                                       @{typ "state \<Rightarrow> (unit \<times> state)"},
                                       mop(SE w64,ex(var_w("prod",64),ln 63,ln 32,w32)),@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MULTU",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                     close
                       (var_b"b",
                        ite(var_b"b",mu(lt,qTy),
                            mb(call
                                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  var_w("rt",5),@{theory}),
                               close
                                 (var_w("v",64),
                                  mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy)))))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"MULTU: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                 close(var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy))),
                              close
                                (var_w("v",64),
                                 mb(call
                                      ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                       var_w("rt",5),@{theory}),
                                    close
                                      (var_w("v0",64),
                                       mb(mb(mu(ex(var_w("v0",64),ln 31,ln 0,w32),qTy),
                                             close
                                               (var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy))),
                                          close
                                            (var_w("v0",64),
                                             mu(bop(Mul,var_w("v",64),var_w("v0",64)),qTy))))))),
                           close
                             (var_w("prod",64),
                              mb(call
                                   ("write'LO",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                    mop(SE w64,ex(var_w("prod",64),ln 31,ln 0,w32)),@{theory}),
                                 close
                                   (var_a HOLogic.unitT,
                                    call
                                      ("write'HI",
                                       @{typ "state \<Rightarrow> (unit \<times> state)"},
                                       mop(SE w64,ex(var_w("prod",64),ln 63,ln 32,w32)),@{theory})))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DMULT",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(mop(SE (Word_Lib.mk_wordT 128),var_w("v",64)),qTy),
                  close
                    (var_w("v",128),
                     mb(call
                          ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                           var_w("rt",5),@{theory}),
                        close
                          (var_w("v0",64),
                           mb(mu(mop(SE (Word_Lib.mk_wordT 128),var_w("v0",64)),qTy),
                              close(var_w("v0",128),mu(bop(Mul,var_w("v",128),var_w("v0",128)),qTy))))))),
               close
                 (var_w("prod",128),
                  mb(call
                       ("write'LO",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        ex(var_w("prod",128),ln 63,ln 0,w64),@{theory}),
                     close
                       (var_a HOLogic.unitT,
                        call
                          ("write'HI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           ex(var_w("prod",128),ln 127,ln 64,w64),@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DMULTU",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(mop(Cast (Word_Lib.mk_wordT 128),var_w("v",64)),qTy),
                  close
                    (var_w("v",128),
                     mb(call
                          ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                           var_w("rt",5),@{theory}),
                        close
                          (var_w("v0",64),
                           mb(mu(mop(Cast (Word_Lib.mk_wordT 128),var_w("v0",64)),qTy),
                              close(var_w("v0",128),mu(bop(Mul,var_w("v",128),var_w("v0",128)),qTy))))))),
               close
                 (var_w("prod",128),
                  mb(call
                       ("write'LO",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        ex(var_w("prod",128),ln 63,ln 0,w64),@{theory}),
                     close
                       (var_a HOLogic.unitT,
                        call
                          ("write'HI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           ex(var_w("prod",128),ln 127,ln 64,w64),@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DIV",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("s",64),
            mb(call
                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                  @{theory}),
               close
                 (var_w("t",64),
                  mb(ite(bop(Or,call("NotWordValue",HOLogic.boolT,var_w("s",64),@{theory}),
                             call("NotWordValue",HOLogic.boolT,var_w("t",64),@{theory})),
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"DIV: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)),
                     close
                       (var_a HOLogic.unitT,
                        ite(eq(var_w("t",64),lw(0,64)),
                            mb(call
                                 ("write'lo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                  lo w64,@{theory}),
                               close
                                 (var_a HOLogic.unitT,
                                  call
                                    ("write'hi",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     lo w64,@{theory}))),
                            mb(call
                                 ("write'LO",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                  mop(SE w64,
                                      bop(Quot,ex(var_w("s",64),ln 31,ln 0,w32),
                                          ex(var_w("t",64),ln 31,ln 0,w32))),@{theory}),
                               close
                                 (var_a HOLogic.unitT,
                                  call
                                    ("write'HI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     mop(SE w64,
                                         bop(Rem,ex(var_w("s",64),ln 31,ln 0,w32),
                                             ex(var_w("t",64),ln 31,ln 0,w32))),@{theory}))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DIVU",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("s",64),
            mb(call
                 ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                  @{theory}),
               close
                 (var_w("t",64),
                  mb(ite(bop(Or,call("NotWordValue",HOLogic.boolT,var_w("s",64),@{theory}),
                             call("NotWordValue",HOLogic.boolT,var_w("t",64),@{theory})),
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"DIVU: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)),
                     close
                       (var_a HOLogic.unitT,
                        ite(eq(var_w("t",64),lw(0,64)),
                            mb(call
                                 ("write'lo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                  lo w64,@{theory}),
                               close
                                 (var_a HOLogic.unitT,
                                  call
                                    ("write'hi",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     lo w64,@{theory}))),
                            mb(call
                                 ("write'LO",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                  mop(SE w64,
                                      bop(Div,ex(var_w("s",64),ln 31,ln 0,w32),
                                          ex(var_w("t",64),ln 31,ln 0,w32))),@{theory}),
                               close
                                 (var_a HOLogic.unitT,
                                  call
                                    ("write'HI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     mop(SE w64,
                                         bop(Mod,ex(var_w("s",64),ln 31,ln 0,w32),
                                             ex(var_w("t",64),ln 31,ln 0,w32))),@{theory}))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'DDIV",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("t",64),
            ite(eq(var_w("t",64),lw(0,64)),
                mb(call
                     ("write'lo",@{typ "state \<Rightarrow> (unit \<times> state)"},lo w64,@{theory}),
                   close
                     (var_a HOLogic.unitT,
                      call
                        ("write'hi",@{typ "state \<Rightarrow> (unit \<times> state)"},lo w64,
                         @{theory}))),
                mb(call
                     ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                      @{theory}),
                   close
                     (var_w("s",64),
                      mb(call
                           ("write'LO",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            bop(Quot,var_w("s",64),var_w("t",64)),@{theory}),
                         close
                           (var_a HOLogic.unitT,
                            call
                              ("write'HI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                               bop(Rem,var_w("s",64),var_w("t",64)),@{theory}))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'DDIVU",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("t",64),
            ite(eq(var_w("t",64),lw(0,64)),
                mb(call
                     ("write'lo",@{typ "state \<Rightarrow> (unit \<times> state)"},lo w64,@{theory}),
                   close
                     (var_a HOLogic.unitT,
                      call
                        ("write'hi",@{typ "state \<Rightarrow> (unit \<times> state)"},lo w64,
                         @{theory}))),
                mb(call
                     ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                      @{theory}),
                   close
                     (var_w("s",64),
                      mb(call
                           ("write'LO",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            bop(Div,var_w("s",64),var_w("t",64)),@{theory}),
                         close
                           (var_a HOLogic.unitT,
                            call
                              ("write'HI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                               bop(Mod,var_w("s",64),var_w("t",64)),@{theory}))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MFHI",
   close
     (var_w("rd",5),
      mb(const("HI",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
         close
           (var_w("v",64),
            mb(mu(tp[var_w("v",64),var_w("rd",5)],qTy),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MFLO",
   close
     (var_w("rd",5),
      mb(const("LO",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
         close
           (var_w("v",64),
            mb(mu(tp[var_w("v",64),var_w("rd",5)],qTy),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'MTHI",
   close
     (var_w("rs",5),
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            call
              ("write'HI",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v",64),@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'MTLO",
   close
     (var_w("rs",5),
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            call
              ("write'LO",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v",64),@{theory})))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SLL",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sa",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                        close
                          (var_w("v",32),
                           mu(bop(Lsl,var_w("v",32),mop(Cast HOLogic.natT,var_w("sa",5))),qTy))),
                     close(var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SRL",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sa",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"SRL: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                    close
                                      (var_w("v",32),
                                       mu(bop(Lsr,var_w("v",32),mop(Cast HOLogic.natT,var_w("sa",5))),
                                          qTy))),
                                 close(var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                              close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                           close
                             (var("v",@{typ "64 word \<times> 5 word"}),
                              call
                                ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SRA",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sa",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"SRA: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                    close
                                      (var_w("v",32),
                                       mu(bop(Asr,var_w("v",32),mop(Cast HOLogic.natT,var_w("sa",5))),
                                          qTy))),
                                 close(var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                              close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                           close
                             (var("v",@{typ "64 word \<times> 5 word"}),
                              call
                                ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SLLV",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(ex(var_w("v",64),ln 4,ln 0,(Word_Lib.mk_wordT 5)),qTy),
               close
                 (var_w("sa",5),
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                    close
                                      (var_w("v",32),
                                       mu(bop(Lsl,var_w("v",32),mop(Cast HOLogic.natT,var_w("sa",5))),
                                          qTy))),
                                 close(var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                              close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                           close
                             (var("v",@{typ "64 word \<times> 5 word"}),
                              call
                                ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SRLV",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"SRLV: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mu(ex(var_w("v",64),ln 4,ln 0,(Word_Lib.mk_wordT 5)),qTy),
                           close
                             (var_w("sa",5),
                              mb(call
                                   ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                    var_w("rt",5),@{theory}),
                                 close
                                   (var_w("v",64),
                                    mb(mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                                close
                                                  (var_w("v",32),
                                                   mu(bop(Lsr,var_w("v",32),
                                                          mop(Cast HOLogic.natT,var_w("sa",5))),qTy))),
                                             close(var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                                          close
                                            (var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                                       close
                                         (var("v",@{typ "64 word \<times> 5 word"}),
                                          call
                                            ("write'GPR",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SRAV",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(call("NotWordValue",HOLogic.boolT,var_w("v",64),@{theory}),qTy),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         call
                           ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            call
                              ("exception.UNPREDICTABLE",@{typ exception},ls"SRAV: NotWordValue",
                               @{theory}),@{theory}),mu(lu,qTy)))),
               close
                 (var_a HOLogic.unitT,
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mu(ex(var_w("v",64),ln 4,ln 0,(Word_Lib.mk_wordT 5)),qTy),
                           close
                             (var_w("sa",5),
                              mb(call
                                   ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                    var_w("rt",5),@{theory}),
                                 close
                                   (var_w("v",64),
                                    mb(mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                                close
                                                  (var_w("v",32),
                                                   mu(bop(Asr,var_w("v",32),
                                                          mop(Cast HOLogic.natT,var_w("sa",5))),qTy))),
                                             close(var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                                          close
                                            (var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                                       close
                                         (var("v",@{typ "64 word \<times> 5 word"}),
                                          call
                                            ("write'GPR",
                                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                                             var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DSLL",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sa",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Lsl,var_w("v",64),mop(Cast HOLogic.natT,var_w("sa",5))),qTy),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DSRL",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sa",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Lsr,var_w("v",64),mop(Cast HOLogic.natT,var_w("sa",5))),qTy),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DSRA",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sa",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Asr,var_w("v",64),mop(Cast HOLogic.natT,var_w("sa",5))),qTy),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DSLLV",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(ex(var_w("v",64),ln 5,ln 0,(Word_Lib.mk_wordT 6)),qTy),
               close
                 (var_w("sa",6),
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mu(bop(Lsl,var_w("v",64),mop(Cast HOLogic.natT,var_w("sa",6))),qTy),
                              close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                           close
                             (var("v",@{typ "64 word \<times> 5 word"}),
                              call
                                ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DSRLV",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(ex(var_w("v",64),ln 5,ln 0,(Word_Lib.mk_wordT 6)),qTy),
               close
                 (var_w("sa",6),
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mu(bop(Lsr,var_w("v",64),mop(Cast HOLogic.natT,var_w("sa",6))),qTy),
                              close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                           close
                             (var("v",@{typ "64 word \<times> 5 word"}),
                              call
                                ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DSRAV",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(ex(var_w("v",64),ln 5,ln 0,(Word_Lib.mk_wordT 6)),qTy),
               close
                 (var_w("sa",6),
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mu(bop(Asr,var_w("v",64),mop(Cast HOLogic.natT,var_w("sa",6))),qTy),
                              close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                           close
                             (var("v",@{typ "64 word \<times> 5 word"}),
                              call
                                ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                 var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DSLL32",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sa",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Lsl,var_w("v",64),bop(Add,mop(Cast HOLogic.natT,var_w("sa",5)),ln 32)),qTy),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DSRL32",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sa",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Lsr,var_w("v",64),bop(Add,mop(Cast HOLogic.natT,var_w("sa",5)),ln 32)),qTy),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DSRA32",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sa",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Asr,var_w("v",64),bop(Add,mop(Cast HOLogic.natT,var_w("sa",5)),ln 32)),qTy),
                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
               close
                 (var("v",@{typ "64 word \<times> 5 word"}),
                  call
                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TGE",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(call
                    ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                     @{theory}),close(var_w("v0",64),mu(bop(Ge,var_w("v",64),var_w("v0",64)),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TGEU",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(call
                    ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                     @{theory}),close(var_w("v0",64),mu(bop(Uge,var_w("v",64),var_w("v0",64)),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TLT",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(call
                    ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                     @{theory}),close(var_w("v0",64),mu(bop(Lt,var_w("v",64),var_w("v0",64)),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TLTU",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(call
                    ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                     @{theory}),close(var_w("v0",64),mu(bop(Ult,var_w("v",64),var_w("v0",64)),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TEQ",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(call
                    ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                     @{theory}),close(var_w("v0",64),mu(eq(var_w("v",64),var_w("v0",64)),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TNE",
   close
     (tp[var_w("rs",5),var_w("rt",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),close(var_w("v0",64),mu(eq(var_w("v",64),var_w("v0",64)),qTy))),
                  close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TGEI",
   close
     (tp[var_w("rs",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Ge,var_w("v",64),mop(SE w64,var_w("immediate",16))),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TGEIU",
   close
     (tp[var_w("rs",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Uge,var_w("v",64),mop(SE w64,var_w("immediate",16))),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TLTI",
   close
     (tp[var_w("rs",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Lt,var_w("v",64),mop(SE w64,var_w("immediate",16))),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TLTIU",
   close
     (tp[var_w("rs",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Ult,var_w("v",64),mop(SE w64,var_w("immediate",16))),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TEQI",
   close
     (tp[var_w("rs",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(eq(var_w("v",64),mop(SE w64,var_w("immediate",16))),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'TNEI",
   close
     (tp[var_w("rs",5),var_w("immediate",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(eq(var_w("v",64),mop(SE w64,var_w("immediate",16))),qTy),
                  close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("Tr","ExceptionType",@{theory}),@{theory}),mu(lu,qTy))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("loadByte",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16),var_b"unsigned"],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(call
                       ("LoadMemory",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        tp[const("BYTE",(Word_Lib.mk_wordT 3),@{theory}),
                           const("BYTE",(Word_Lib.mk_wordT 3),@{theory}),lf,var_w("vAddr",64),lf],
                        @{theory}),
                     close
                       (var_w("memdoubleword",64),
                        mb(const
                             ("exceptionSignalled",
                              @{typ "state \<Rightarrow> (bool \<times> state)"},@{theory}),
                           close
                             (var_b"v",
                              mb(mu(mop(Not,var_b"v"),qTy),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        mb(const
                                             ("BigEndianCPU",
                                              @{typ "state \<Rightarrow> (1 word \<times> state)"},
                                              @{theory}),
                                           close
                                             (var_w("v",1),
                                              mb(mb(mu(rep(var_w("v",1),ln 3,(Word_Lib.mk_wordT 3)),
                                                       qTy),
                                                    close
                                                      (var_w("v",3),
                                                       mu(bop(BXor,
                                                              ex(var_w("vAddr",64),ln 2,ln 0,
                                                                 (Word_Lib.mk_wordT 3)),var_w("v",3)),
                                                          qTy))),
                                                 close
                                                   (var_w("byte",3),
                                                    let'
                                                      (var_w("membyte",8),
                                                       ex(var_w("memdoubleword",64),
                                                          bop(Add,ln 7,
                                                              bop(Mul,ln 8,
                                                                  mop(Cast HOLogic.natT,
                                                                      var_w("byte",3)))),
                                                          bop(Mul,ln 8,
                                                              mop(Cast HOLogic.natT,var_w("byte",3))),
                                                          w8),
                                                       call
                                                         ("write'GPR",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          tp[ite(var_b"unsigned",
                                                                 mop(Cast w64,var_w("membyte",8)),
                                                                 mop(SE w64,var_w("membyte",8))),
                                                             var_w("rt",5)],@{theory})))))),
                                        mu(lu,qTy))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("loadHalf",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16),var_b"unsigned"],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(call
                       ("LoadMemory",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        tp[const("HALFWORD",(Word_Lib.mk_wordT 3),@{theory}),
                           const("HALFWORD",(Word_Lib.mk_wordT 3),@{theory}),lt,var_w("vAddr",64),lf],
                        @{theory}),
                     close
                       (var_w("memdoubleword",64),
                        mb(const
                             ("exceptionSignalled",
                              @{typ "state \<Rightarrow> (bool \<times> state)"},@{theory}),
                           close
                             (var_b"v",
                              mb(mu(mop(Not,var_b"v"),qTy),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        mb(const
                                             ("BigEndianCPU",
                                              @{typ "state \<Rightarrow> (1 word \<times> state)"},
                                              @{theory}),
                                           close
                                             (var_w("v",1),
                                              mb(mb(mb(mu(rep(var_w("v",1),ln 2,
                                                              (Word_Lib.mk_wordT 2)),qTy),
                                                       close
                                                         (var_w("v",2),
                                                          mu(cc[var_w("v",2),lw(0,1)],qTy))),
                                                    close
                                                      (var_w("v",3),
                                                       mu(bop(BXor,
                                                              ex(var_w("vAddr",64),ln 2,ln 0,
                                                                 (Word_Lib.mk_wordT 3)),var_w("v",3)),
                                                          qTy))),
                                                 close
                                                   (var_w("byte",3),
                                                    let'
                                                      (var_w("memhalf",16),
                                                       ex(var_w("memdoubleword",64),
                                                          bop(Add,ln 15,
                                                              bop(Mul,ln 8,
                                                                  mop(Cast HOLogic.natT,
                                                                      var_w("byte",3)))),
                                                          bop(Mul,ln 8,
                                                              mop(Cast HOLogic.natT,var_w("byte",3))),
                                                          w16),
                                                       call
                                                         ("write'GPR",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          tp[ite(var_b"unsigned",
                                                                 mop(Cast w64,var_w("memhalf",16)),
                                                                 mop(SE w64,var_w("memhalf",16))),
                                                             var_w("rt",5)],@{theory})))))),
                                        mu(lu,qTy))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("loadWord",
   close
     (tp[var_b"link",var_w("base",5),var_w("rt",5),var_w("offset",16),var_b"unsigned"],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(call
                       ("LoadMemory",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        tp[const("WORD",(Word_Lib.mk_wordT 3),@{theory}),
                           const("WORD",(Word_Lib.mk_wordT 3),@{theory}),lt,var_w("vAddr",64),
                           var_b"link"],@{theory}),
                     close
                       (var_w("memdoubleword",64),
                        mb(const
                             ("exceptionSignalled",
                              @{typ "state \<Rightarrow> (bool \<times> state)"},@{theory}),
                           close
                             (var_b"v",
                              mb(mu(mop(Not,var_b"v"),qTy),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        mb(const
                                             ("BigEndianCPU",
                                              @{typ "state \<Rightarrow> (1 word \<times> state)"},
                                              @{theory}),
                                           close
                                             (var_w("v",1),
                                              mb(mb(mu(cc[var_w("v",1),lw(0,2)],qTy),
                                                    close
                                                      (var_w("v",3),
                                                       mu(bop(BXor,
                                                              ex(var_w("vAddr",64),ln 2,ln 0,
                                                                 (Word_Lib.mk_wordT 3)),var_w("v",3)),
                                                          qTy))),
                                                 close
                                                   (var_w("byte",3),
                                                    let'
                                                      (var_w("memword",32),
                                                       ex(var_w("memdoubleword",64),
                                                          bop(Add,ln 31,
                                                              bop(Mul,ln 8,
                                                                  mop(Cast HOLogic.natT,
                                                                      var_w("byte",3)))),
                                                          bop(Mul,ln 8,
                                                              mop(Cast HOLogic.natT,var_w("byte",3))),
                                                          w32),
                                                       call
                                                         ("write'GPR",
                                                          @{typ
                                                          "state \<Rightarrow> (unit \<times> state)"},
                                                          tp[ite(var_b"unsigned",
                                                                 mop(Cast w64,var_w("memword",32)),
                                                                 mop(SE w64,var_w("memword",32))),
                                                             var_w("rt",5)],@{theory})))))),
                                        mu(lu,qTy))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("loadDoubleword",
   close
     (tp[var_b"link",var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(call
                       ("LoadMemory",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        tp[const("DOUBLEWORD",(Word_Lib.mk_wordT 3),@{theory}),
                           const("DOUBLEWORD",(Word_Lib.mk_wordT 3),@{theory}),lt,var_w("vAddr",64),
                           var_b"link"],@{theory}),
                     close
                       (var_w("memdoubleword",64),
                        mb(const
                             ("exceptionSignalled",
                              @{typ "state \<Rightarrow> (bool \<times> state)"},@{theory}),
                           close
                             (var_b"v",
                              mb(mu(mop(Not,var_b"v"),qTy),
                                 close
                                   (var_b"b",
                                    ite(var_b"b",
                                        call
                                          ("write'GPR",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           tp[var_w("memdoubleword",64),var_w("rt",5)],@{theory}),
                                        mu(lu,qTy))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'LB",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      call
        ("loadByte",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("base",5),var_w("rt",5),var_w("offset",16),lf],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'LBU",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      call
        ("loadByte",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("base",5),var_w("rt",5),var_w("offset",16),lt],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'LH",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      call
        ("loadHalf",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("base",5),var_w("rt",5),var_w("offset",16),lf],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'LHU",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      call
        ("loadHalf",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[var_w("base",5),var_w("rt",5),var_w("offset",16),lt],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'LW",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      call
        ("loadWord",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[lf,var_w("base",5),var_w("rt",5),var_w("offset",16),lf],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'LWU",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      call
        ("loadWord",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[lf,var_w("base",5),var_w("rt",5),var_w("offset",16),lt],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'LL",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      call
        ("loadWord",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[lt,var_w("base",5),var_w("rt",5),var_w("offset",16),lf],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'LD",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      call
        ("loadDoubleword",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[lf,var_w("base",5),var_w("rt",5),var_w("offset",16)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'LLD",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      call
        ("loadDoubleword",@{typ "state \<Rightarrow> (unit \<times> state)"},
         tp[lt,var_w("base",5),var_w("rt",5),var_w("offset",16)],@{theory})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LWL",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(const
                       ("BigEndianCPU",@{typ "state \<Rightarrow> (1 word \<times> state)"},
                        @{theory}),
                     close
                       (var_w("v",1),
                        mb(mb(mu(rep(var_w("v",1),ln 2,(Word_Lib.mk_wordT 2)),qTy),
                              close
                                (var_w("v",2),
                                 mu(bop(BXor,ex(var_w("vAddr",64),ln 1,ln 0,(Word_Lib.mk_wordT 2)),
                                        var_w("v",2)),qTy))),
                           close
                             (var_w("byte",2),
                              mb(const
                                   ("BigEndianCPU",
                                    @{typ "state \<Rightarrow> (1 word \<times> state)"},@{theory}),
                                 close
                                   (var_w("v",1),
                                    mb(mu(bop(BXor,ex(var_w("vAddr",64),ln 2,ln 2,w1),var_w("v",1)),
                                          qTy),
                                       close
                                         (var_w("word",1),
                                          mb(call
                                               ("LoadMemory",
                                                @{typ
                                                "state \<Rightarrow> (64 word \<times> state)"},
                                                tp[const("WORD",(Word_Lib.mk_wordT 3),@{theory}),
                                                   cc[lw(0,1),var_w("byte",2)],lf,var_w("vAddr",64),
                                                   lf],@{theory}),
                                             close
                                               (var_w("memdoubleword",64),
                                                mb(const
                                                     ("exceptionSignalled",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      @{theory}),
                                                   close
                                                     (var_b"v",
                                                      mb(mu(mop(Not,var_b"v"),qTy),
                                                         close
                                                           (var_b"b",
                                                            ite(var_b"b",
                                                                mb(itb([(bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(0,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(0,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 23,ln 0,
                                                                                        (Word_Lib.mk_wordT 24)),
                                                                                     qTy),
                                                                                  close
                                                                                    (var_w("v",24),
                                                                                     mu(cc[ex(var_w("memdoubleword",64),
                                                                                              ln 7,
                                                                                              ln 0,
                                                                                              w8),
                                                                                           var_w("v",24)],
                                                                                        qTy)))))),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(0,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(1,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 15,ln 0,
                                                                                        w16),qTy),
                                                                                  close
                                                                                    (var_w("v",16),
                                                                                     mu(cc[ex(var_w("memdoubleword",64),
                                                                                              ln 15,
                                                                                              ln 0,
                                                                                              w16),
                                                                                           var_w("v",16)],
                                                                                        qTy)))))),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(0,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(2,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 7,ln 0,w8),
                                                                                     qTy),
                                                                                  close
                                                                                    (var_w("v",8),
                                                                                     mu(cc[ex(var_w("memdoubleword",64),
                                                                                              ln 23,
                                                                                              ln 0,
                                                                                              (Word_Lib.mk_wordT 24)),
                                                                                           var_w("v",8)],
                                                                                        qTy)))))),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(0,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(3,2))),
                                                                         mu(ex(var_w("memdoubleword",64),
                                                                               ln 31,ln 0,w32),qTy)),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(1,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(0,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 23,ln 0,
                                                                                        (Word_Lib.mk_wordT 24)),
                                                                                     qTy),
                                                                                  close
                                                                                    (var_w("v",24),
                                                                                     mu(cc[ex(var_w("memdoubleword",64),
                                                                                              ln 39,
                                                                                              ln 32,
                                                                                              w8),
                                                                                           var_w("v",24)],
                                                                                        qTy)))))),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(1,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(1,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 15,ln 0,
                                                                                        w16),qTy),
                                                                                  close
                                                                                    (var_w("v",16),
                                                                                     mu(cc[ex(var_w("memdoubleword",64),
                                                                                              ln 47,
                                                                                              ln 32,
                                                                                              w16),
                                                                                           var_w("v",16)],
                                                                                        qTy)))))),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(1,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(2,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 7,ln 0,w8),
                                                                                     qTy),
                                                                                  close
                                                                                    (var_w("v",8),
                                                                                     mu(cc[ex(var_w("memdoubleword",64),
                                                                                              ln 55,
                                                                                              ln 32,
                                                                                              (Word_Lib.mk_wordT 24)),
                                                                                           var_w("v",8)],
                                                                                        qTy)))))),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(1,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(3,2))),
                                                                         mu(ex(var_w("memdoubleword",64),
                                                                               ln 63,ln 32,w32),qTy))],
                                                                       lx(@{typ
                                                                          "state \<Rightarrow>
                                                                           (32 word \<times> state)"})),
                                                                   close
                                                                     (var_w("temp",32),
                                                                      call
                                                                        ("write'GPR",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (unit \<times> state)"},
                                                                         tp[mop(SE w64,
                                                                                var_w("temp",32)),
                                                                            var_w("rt",5)],@{theory}))),
                                                                mu(lu,qTy))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LWR",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(const
                       ("BigEndianCPU",@{typ "state \<Rightarrow> (1 word \<times> state)"},
                        @{theory}),
                     close
                       (var_w("v",1),
                        mb(mb(mu(rep(var_w("v",1),ln 2,(Word_Lib.mk_wordT 2)),qTy),
                              close
                                (var_w("v",2),
                                 mu(bop(BXor,ex(var_w("vAddr",64),ln 1,ln 0,(Word_Lib.mk_wordT 2)),
                                        var_w("v",2)),qTy))),
                           close
                             (var_w("byte",2),
                              mb(const
                                   ("BigEndianCPU",
                                    @{typ "state \<Rightarrow> (1 word \<times> state)"},@{theory}),
                                 close
                                   (var_w("v",1),
                                    mb(mu(bop(BXor,ex(var_w("vAddr",64),ln 2,ln 2,w1),var_w("v",1)),
                                          qTy),
                                       close
                                         (var_w("word",1),
                                          mb(call
                                               ("LoadMemory",
                                                @{typ
                                                "state \<Rightarrow> (64 word \<times> state)"},
                                                tp[const("WORD",(Word_Lib.mk_wordT 3),@{theory}),
                                                   bop(Sub,
                                                       const("WORD",(Word_Lib.mk_wordT 3),@{theory}),
                                                       cc[lw(0,1),var_w("byte",2)]),lf,
                                                   var_w("vAddr",64),lf],@{theory}),
                                             close
                                               (var_w("memdoubleword",64),
                                                mb(const
                                                     ("exceptionSignalled",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      @{theory}),
                                                   close
                                                     (var_b"v",
                                                      mb(mu(mop(Not,var_b"v"),qTy),
                                                         close
                                                           (var_b"b",
                                                            ite(var_b"b",
                                                                mb(itb([(bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(0,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(0,2))),
                                                                         mu(ex(var_w("memdoubleword",64),
                                                                               ln 31,ln 0,w32),qTy)),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(0,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(1,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 31,ln 24,
                                                                                        w8),qTy),
                                                                                  close
                                                                                    (var_w("v",8),
                                                                                     mu(cc[var_w("v",8),
                                                                                           ex(var_w("memdoubleword",64),
                                                                                              ln 31,
                                                                                              ln 8,
                                                                                              (Word_Lib.mk_wordT 24))],
                                                                                        qTy)))))),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(0,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(2,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 31,ln 16,
                                                                                        w16),qTy),
                                                                                  close
                                                                                    (var_w("v",16),
                                                                                     mu(cc[var_w("v",16),
                                                                                           ex(var_w("memdoubleword",64),
                                                                                              ln 31,
                                                                                              ln 16,
                                                                                              w16)],
                                                                                        qTy)))))),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(0,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(3,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 31,ln 8,
                                                                                        (Word_Lib.mk_wordT 24)),
                                                                                     qTy),
                                                                                  close
                                                                                    (var_w("v",24),
                                                                                     mu(cc[var_w("v",24),
                                                                                           ex(var_w("memdoubleword",64),
                                                                                              ln 31,
                                                                                              ln 24,
                                                                                              w8)],
                                                                                        qTy)))))),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(1,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(0,2))),
                                                                         mu(ex(var_w("memdoubleword",64),
                                                                               ln 63,ln 32,w32),qTy)),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(1,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(1,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 31,ln 24,
                                                                                        w8),qTy),
                                                                                  close
                                                                                    (var_w("v",8),
                                                                                     mu(cc[var_w("v",8),
                                                                                           ex(var_w("memdoubleword",64),
                                                                                              ln 63,
                                                                                              ln 40,
                                                                                              (Word_Lib.mk_wordT 24))],
                                                                                        qTy)))))),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(1,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(2,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 31,ln 16,
                                                                                        w16),qTy),
                                                                                  close
                                                                                    (var_w("v",16),
                                                                                     mu(cc[var_w("v",16),
                                                                                           ex(var_w("memdoubleword",64),
                                                                                              ln 63,
                                                                                              ln 48,
                                                                                              w16)],
                                                                                        qTy)))))),
                                                                        (bop(And,
                                                                             eq(var_w("word",1),
                                                                                lw(1,1)),
                                                                             eq(var_w("byte",2),
                                                                                lw(3,2))),
                                                                         mb(call
                                                                              ("GPR",
                                                                               @{typ
                                                                               "state \<Rightarrow>
                                                                                (64 word \<times>
                                                                                 state)"},
                                                                               var_w("rt",5),
                                                                               @{theory}),
                                                                            close
                                                                              (var_w("v",64),
                                                                               mb(mu(ex(var_w("v",64),
                                                                                        ln 31,ln 8,
                                                                                        (Word_Lib.mk_wordT 24)),
                                                                                     qTy),
                                                                                  close
                                                                                    (var_w("v",24),
                                                                                     mu(cc[var_w("v",24),
                                                                                           ex(var_w("memdoubleword",64),
                                                                                              ln 63,
                                                                                              ln 56,
                                                                                              w8)],
                                                                                        qTy))))))],
                                                                       lx(@{typ
                                                                          "state \<Rightarrow>
                                                                           (32 word \<times> state)"})),
                                                                   close
                                                                     (var_w("temp",32),
                                                                      call
                                                                        ("write'GPR",
                                                                         @{typ
                                                                         "state \<Rightarrow>
                                                                          (unit \<times> state)"},
                                                                         tp[mop(SE w64,
                                                                                var_w("temp",32)),
                                                                            var_w("rt",5)],@{theory}))),
                                                                mu(lu,qTy))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LDL",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(const
                       ("BigEndianCPU",@{typ "state \<Rightarrow> (1 word \<times> state)"},
                        @{theory}),
                     close
                       (var_w("v",1),
                        mb(mb(mu(rep(var_w("v",1),ln 3,(Word_Lib.mk_wordT 3)),qTy),
                              close
                                (var_w("v",3),
                                 mu(bop(BXor,ex(var_w("vAddr",64),ln 2,ln 0,(Word_Lib.mk_wordT 3)),
                                        var_w("v",3)),qTy))),
                           close
                             (var_w("byte",3),
                              mb(call
                                   ("LoadMemory",
                                    @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                    tp[const("DOUBLEWORD",(Word_Lib.mk_wordT 3),@{theory}),
                                       var_w("byte",3),lf,var_w("vAddr",64),lf],@{theory}),
                                 close
                                   (var_w("memdoubleword",64),
                                    mb(const
                                         ("exceptionSignalled",
                                          @{typ "state \<Rightarrow> (bool \<times> state)"},
                                          @{theory}),
                                       close
                                         (var_b"v",
                                          mb(mu(mop(Not,var_b"v"),qTy),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    mb(itb([(eq(var_w("byte",3),lw(0,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 55,
                                                                            ln 0,
                                                                            (Word_Lib.mk_wordT 56)),
                                                                         qTy),
                                                                      close
                                                                        (var_w("v",56),
                                                                         mu(cc[ex(var_w("memdoubleword",64),
                                                                                  ln 7,ln 0,w8),
                                                                               var_w("v",56)],qTy)))))),
                                                            (eq(var_w("byte",3),lw(1,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 47,
                                                                            ln 0,
                                                                            (Word_Lib.mk_wordT 48)),
                                                                         qTy),
                                                                      close
                                                                        (var_w("v",48),
                                                                         mu(cc[ex(var_w("memdoubleword",64),
                                                                                  ln 15,ln 0,w16),
                                                                               var_w("v",48)],qTy)))))),
                                                            (eq(var_w("byte",3),lw(2,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 39,
                                                                            ln 0,
                                                                            (Word_Lib.mk_wordT 40)),
                                                                         qTy),
                                                                      close
                                                                        (var_w("v",40),
                                                                         mu(cc[ex(var_w("memdoubleword",64),
                                                                                  ln 23,ln 0,
                                                                                  (Word_Lib.mk_wordT 24)),
                                                                               var_w("v",40)],qTy)))))),
                                                            (eq(var_w("byte",3),lw(3,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 31,
                                                                            ln 0,w32),qTy),
                                                                      close
                                                                        (var_w("v",32),
                                                                         mu(cc[ex(var_w("memdoubleword",64),
                                                                                  ln 31,ln 0,w32),
                                                                               var_w("v",32)],qTy)))))),
                                                            (eq(var_w("byte",3),lw(4,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 23,
                                                                            ln 0,
                                                                            (Word_Lib.mk_wordT 24)),
                                                                         qTy),
                                                                      close
                                                                        (var_w("v",24),
                                                                         mu(cc[ex(var_w("memdoubleword",64),
                                                                                  ln 39,ln 0,
                                                                                  (Word_Lib.mk_wordT 40)),
                                                                               var_w("v",24)],qTy)))))),
                                                            (eq(var_w("byte",3),lw(5,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 15,
                                                                            ln 0,w16),qTy),
                                                                      close
                                                                        (var_w("v",16),
                                                                         mu(cc[ex(var_w("memdoubleword",64),
                                                                                  ln 47,ln 0,
                                                                                  (Word_Lib.mk_wordT 48)),
                                                                               var_w("v",16)],qTy)))))),
                                                            (eq(var_w("byte",3),lw(6,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 7,ln 0,
                                                                            w8),qTy),
                                                                      close
                                                                        (var_w("v",8),
                                                                         mu(cc[ex(var_w("memdoubleword",64),
                                                                                  ln 55,ln 0,
                                                                                  (Word_Lib.mk_wordT 56)),
                                                                               var_w("v",8)],qTy)))))),
                                                            (eq(var_w("byte",3),lw(7,3)),
                                                             mu(ex(var_w("memdoubleword",64),ln 63,
                                                                   ln 0,w64),qTy))],
                                                           lx(@{typ
                                                              "state \<Rightarrow>
                                                               (64 word \<times> state)"})),
                                                       close
                                                         (var_w("v",64),
                                                          mb(mu(tp[var_w("v",64),var_w("rt",5)],qTy),
                                                             close
                                                               (var("v",
                                                                    @{typ "64 word \<times> 5 word"}),
                                                                call
                                                                  ("write'GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (unit \<times> state)"},
                                                                   var("v",
                                                                       @{typ
                                                                       "64 word \<times> 5 word"}),
                                                                   @{theory}))))),mu(lu,qTy))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'LDR",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(const
                       ("BigEndianCPU",@{typ "state \<Rightarrow> (1 word \<times> state)"},
                        @{theory}),
                     close
                       (var_w("v",1),
                        mb(mb(mu(rep(var_w("v",1),ln 3,(Word_Lib.mk_wordT 3)),qTy),
                              close
                                (var_w("v",3),
                                 mu(bop(BXor,ex(var_w("vAddr",64),ln 2,ln 0,(Word_Lib.mk_wordT 3)),
                                        var_w("v",3)),qTy))),
                           close
                             (var_w("byte",3),
                              mb(call
                                   ("LoadMemory",
                                    @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                    tp[const("DOUBLEWORD",(Word_Lib.mk_wordT 3),@{theory}),
                                       bop(Sub,const("DOUBLEWORD",(Word_Lib.mk_wordT 3),@{theory}),
                                           var_w("byte",3)),lf,var_w("vAddr",64),lf],@{theory}),
                                 close
                                   (var_w("memdoubleword",64),
                                    mb(const
                                         ("exceptionSignalled",
                                          @{typ "state \<Rightarrow> (bool \<times> state)"},
                                          @{theory}),
                                       close
                                         (var_b"v",
                                          mb(mu(mop(Not,var_b"v"),qTy),
                                             close
                                               (var_b"b",
                                                ite(var_b"b",
                                                    mb(itb([(eq(var_w("byte",3),lw(0,3)),
                                                             mu(ex(var_w("memdoubleword",64),ln 63,
                                                                   ln 0,w64),qTy)),
                                                            (eq(var_w("byte",3),lw(1,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 63,
                                                                            ln 56,w8),qTy),
                                                                      close
                                                                        (var_w("v",8),
                                                                         mu(cc[var_w("v",8),
                                                                               ex(var_w("memdoubleword",64),
                                                                                  ln 63,ln 8,
                                                                                  (Word_Lib.mk_wordT 56))],
                                                                            qTy)))))),
                                                            (eq(var_w("byte",3),lw(2,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 63,
                                                                            ln 48,w16),qTy),
                                                                      close
                                                                        (var_w("v",16),
                                                                         mu(cc[var_w("v",16),
                                                                               ex(var_w("memdoubleword",64),
                                                                                  ln 63,ln 16,
                                                                                  (Word_Lib.mk_wordT 48))],
                                                                            qTy)))))),
                                                            (eq(var_w("byte",3),lw(3,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 63,
                                                                            ln 40,
                                                                            (Word_Lib.mk_wordT 24)),
                                                                         qTy),
                                                                      close
                                                                        (var_w("v",24),
                                                                         mu(cc[var_w("v",24),
                                                                               ex(var_w("memdoubleword",64),
                                                                                  ln 63,ln 24,
                                                                                  (Word_Lib.mk_wordT 40))],
                                                                            qTy)))))),
                                                            (eq(var_w("byte",3),lw(4,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 63,
                                                                            ln 32,w32),qTy),
                                                                      close
                                                                        (var_w("v",32),
                                                                         mu(cc[var_w("v",32),
                                                                               ex(var_w("memdoubleword",64),
                                                                                  ln 63,ln 32,w32)],
                                                                            qTy)))))),
                                                            (eq(var_w("byte",3),lw(5,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 63,
                                                                            ln 24,
                                                                            (Word_Lib.mk_wordT 40)),
                                                                         qTy),
                                                                      close
                                                                        (var_w("v",40),
                                                                         mu(cc[var_w("v",40),
                                                                               ex(var_w("memdoubleword",64),
                                                                                  ln 63,ln 40,
                                                                                  (Word_Lib.mk_wordT 24))],
                                                                            qTy)))))),
                                                            (eq(var_w("byte",3),lw(6,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 63,
                                                                            ln 16,
                                                                            (Word_Lib.mk_wordT 48)),
                                                                         qTy),
                                                                      close
                                                                        (var_w("v",48),
                                                                         mu(cc[var_w("v",48),
                                                                               ex(var_w("memdoubleword",64),
                                                                                  ln 63,ln 48,w16)],
                                                                            qTy)))))),
                                                            (eq(var_w("byte",3),lw(7,3)),
                                                             mb(call
                                                                  ("GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (64 word \<times> state)"},
                                                                   var_w("rt",5),@{theory}),
                                                                close
                                                                  (var_w("v",64),
                                                                   mb(mu(ex(var_w("v",64),ln 63,
                                                                            ln 8,
                                                                            (Word_Lib.mk_wordT 56)),
                                                                         qTy),
                                                                      close
                                                                        (var_w("v",56),
                                                                         mu(cc[var_w("v",56),
                                                                               ex(var_w("memdoubleword",64),
                                                                                  ln 63,ln 56,w8)],
                                                                            qTy))))))],
                                                           lx(@{typ
                                                              "state \<Rightarrow>
                                                               (64 word \<times> state)"})),
                                                       close
                                                         (var_w("v",64),
                                                          mb(mu(tp[var_w("v",64),var_w("rt",5)],qTy),
                                                             close
                                                               (var("v",
                                                                    @{typ "64 word \<times> 5 word"}),
                                                                call
                                                                  ("write'GPR",
                                                                   @{typ
                                                                   "state \<Rightarrow>
                                                                    (unit \<times> state)"},
                                                                   var("v",
                                                                       @{typ
                                                                       "64 word \<times> 5 word"}),
                                                                   @{theory}))))),mu(lu,qTy))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SB",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(const
                       ("BigEndianCPU",@{typ "state \<Rightarrow> (1 word \<times> state)"},
                        @{theory}),
                     close
                       (var_w("v",1),
                        mb(mb(mu(rep(var_w("v",1),ln 3,(Word_Lib.mk_wordT 3)),qTy),
                              close
                                (var_w("v",3),
                                 mu(bop(BXor,ex(var_w("vAddr",64),ln 2,ln 0,(Word_Lib.mk_wordT 3)),
                                        var_w("v",3)),qTy))),
                           close
                             (var_w("bytesel",3),
                              mb(call
                                   ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                    var_w("rt",5),@{theory}),
                                 close
                                   (var_w("v",64),
                                    mb(mu(bop(Lsl,var_w("v",64),
                                              bop(Mul,ln 8,mop(Cast HOLogic.natT,var_w("bytesel",3)))),
                                          qTy),
                                       close
                                         (var_w("datadoubleword",64),
                                          mb(call
                                               ("StoreMemory",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                tp[const("BYTE",(Word_Lib.mk_wordT 3),@{theory}),
                                                   const("BYTE",(Word_Lib.mk_wordT 3),@{theory}),lf,
                                                   var_w("datadoubleword",64),var_w("vAddr",64),lf],
                                                @{theory}),close(var_a HOLogic.boolT,mu(lu,qTy)))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SH",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(const
                       ("BigEndianCPU",@{typ "state \<Rightarrow> (1 word \<times> state)"},
                        @{theory}),
                     close
                       (var_w("v",1),
                        mb(mb(mb(mu(rep(var_w("v",1),ln 2,(Word_Lib.mk_wordT 2)),qTy),
                                 close(var_w("v",2),mu(cc[var_w("v",2),lw(0,1)],qTy))),
                              close
                                (var_w("v",3),
                                 mu(bop(BXor,ex(var_w("vAddr",64),ln 2,ln 0,(Word_Lib.mk_wordT 3)),
                                        var_w("v",3)),qTy))),
                           close
                             (var_w("bytesel",3),
                              mb(call
                                   ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                    var_w("rt",5),@{theory}),
                                 close
                                   (var_w("v",64),
                                    mb(mu(bop(Lsl,var_w("v",64),
                                              bop(Mul,ln 8,mop(Cast HOLogic.natT,var_w("bytesel",3)))),
                                          qTy),
                                       close
                                         (var_w("datadoubleword",64),
                                          mb(call
                                               ("StoreMemory",
                                                @{typ "state \<Rightarrow> (bool \<times> state)"},
                                                tp[const("HALFWORD",(Word_Lib.mk_wordT 3),@{theory}),
                                                   const("HALFWORD",(Word_Lib.mk_wordT 3),@{theory}),
                                                   lt,var_w("datadoubleword",64),var_w("vAddr",64),
                                                   lf],@{theory}),
                                             close(var_a HOLogic.boolT,mu(lu,qTy)))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("storeWord",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16),var_b"cond"],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(const
                       ("BigEndianCPU",@{typ "state \<Rightarrow> (1 word \<times> state)"},
                        @{theory}),
                     close
                       (var_w("v",1),
                        mb(mb(mu(cc[var_w("v",1),lw(0,2)],qTy),
                              close
                                (var_w("v",3),
                                 mu(bop(BXor,ex(var_w("vAddr",64),ln 2,ln 0,(Word_Lib.mk_wordT 3)),
                                        var_w("v",3)),qTy))),
                           close
                             (var_w("bytesel",3),
                              mb(call
                                   ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                    var_w("rt",5),@{theory}),
                                 close
                                   (var_w("v",64),
                                    mb(mu(bop(Lsl,var_w("v",64),
                                              bop(Mul,ln 8,mop(Cast HOLogic.natT,var_w("bytesel",3)))),
                                          qTy),
                                       close
                                         (var_w("datadoubleword",64),
                                          call
                                            ("StoreMemory",
                                             @{typ "state \<Rightarrow> (bool \<times> state)"},
                                             tp[const("WORD",(Word_Lib.mk_wordT 3),@{theory}),
                                                const("WORD",(Word_Lib.mk_wordT 3),@{theory}),lt,
                                                var_w("datadoubleword",64),var_w("vAddr",64),
                                                var_b"cond"],@{theory})))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("storeDoubleword",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16),var_b"cond"],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),
                     close
                       (var_w("datadoubleword",64),
                        call
                          ("StoreMemory",@{typ "state \<Rightarrow> (bool \<times> state)"},
                           tp[const("DOUBLEWORD",(Word_Lib.mk_wordT 3),@{theory}),
                              const("DOUBLEWORD",(Word_Lib.mk_wordT 3),@{theory}),lt,
                              var_w("datadoubleword",64),var_w("vAddr",64),var_b"cond"],@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SW",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call
           ("storeWord",@{typ "state \<Rightarrow> (bool \<times> state)"},
            tp[var_w("base",5),var_w("rt",5),var_w("offset",16),lf],@{theory}),
         close(var_a HOLogic.boolT,mu(lu,qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SD",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call
           ("storeDoubleword",@{typ "state \<Rightarrow> (bool \<times> state)"},
            tp[var_w("base",5),var_w("rt",5),var_w("offset",16),lf],@{theory}),
         close(var_a HOLogic.boolT,mu(lu,qTy)))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SC",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call
           ("storeWord",@{typ "state \<Rightarrow> (bool \<times> state)"},
            tp[var_w("base",5),var_w("rt",5),var_w("offset",16),lt],@{theory}),
         close
           (var_b"v",
            mb(mu(ite(var_b"v",lw(1,64),lw(0,64)),qTy),
               close
                 (var_w("ret",64),
                  mb(const
                       ("exceptionSignalled",@{typ "state \<Rightarrow> (bool \<times> state)"},
                        @{theory}),
                     close
                       (var_b"v",
                        mb(mu(mop(Not,var_b"v"),qTy),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  call
                                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     tp[var_w("ret",64),var_w("rt",5)],@{theory}),mu(lu,qTy))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SCD",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call
           ("storeDoubleword",@{typ "state \<Rightarrow> (bool \<times> state)"},
            tp[var_w("base",5),var_w("rt",5),var_w("offset",16),lt],@{theory}),
         close
           (var_b"v",
            mb(mu(ite(var_b"v",lw(1,64),lw(0,64)),qTy),
               close
                 (var_w("ret",64),
                  mb(const
                       ("exceptionSignalled",@{typ "state \<Rightarrow> (bool \<times> state)"},
                        @{theory}),
                     close
                       (var_b"v",
                        mb(mu(mop(Not,var_b"v"),qTy),
                           close
                             (var_b"b",
                              ite(var_b"b",
                                  call
                                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     tp[var_w("ret",64),var_w("rt",5)],@{theory}),mu(lu,qTy))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SWL",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(const
                       ("BigEndianCPU",@{typ "state \<Rightarrow> (1 word \<times> state)"},
                        @{theory}),
                     close
                       (var_w("v",1),
                        mb(mb(mu(rep(var_w("v",1),ln 2,(Word_Lib.mk_wordT 2)),qTy),
                              close
                                (var_w("v",2),
                                 mu(bop(BXor,ex(var_w("vAddr",64),ln 1,ln 0,(Word_Lib.mk_wordT 2)),
                                        var_w("v",2)),qTy))),
                           close
                             (var_w("byte",2),
                              mb(const
                                   ("BigEndianCPU",
                                    @{typ "state \<Rightarrow> (1 word \<times> state)"},@{theory}),
                                 close
                                   (var_w("v",1),
                                    mb(mu(bop(BXor,ex(var_w("vAddr",64),ln 2,ln 2,w1),var_w("v",1)),
                                          qTy),
                                       close
                                         (var_w("word",1),
                                          mb(itb([(eq(var_w("byte",2),lw(0,2)),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mu(ex(var_w("v",64),ln 31,ln 24,w8),qTy),
                                                            close
                                                              (var_w("v",8),
                                                               mu(mop(Cast w64,var_w("v",8)),qTy)))))),
                                                  (eq(var_w("byte",2),lw(1,2)),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mu(ex(var_w("v",64),ln 31,ln 16,w16),qTy),
                                                            close
                                                              (var_w("v",16),
                                                               mu(mop(Cast w64,var_w("v",16)),qTy)))))),
                                                  (eq(var_w("byte",2),lw(2,2)),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mu(ex(var_w("v",64),ln 31,ln 8,
                                                                  (Word_Lib.mk_wordT 24)),qTy),
                                                            close
                                                              (var_w("v",24),
                                                               mu(mop(Cast w64,var_w("v",24)),qTy)))))),
                                                  (eq(var_w("byte",2),lw(3,2)),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                                            close
                                                              (var_w("v",32),
                                                               mu(mop(Cast w64,var_w("v",32)),qTy))))))],
                                                 lx(@{typ
                                                    "state \<Rightarrow> (64 word \<times> state)"})),
                                             close
                                               (var_w("datadoubleword",64),
                                                mb(const
                                                     ("BigEndianMem",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      @{theory}),
                                                   close
                                                     (var_b"v",
                                                      mb(mu(ite(var_b"v",var_w("vAddr",64),
                                                                bop(BAnd,var_w("vAddr",64),
                                                                    mop(BNot,lw(3,64)))),qTy),
                                                         close
                                                           (var_w("vAddr",64),
                                                            mb(call
                                                                 ("StoreMemory",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (bool \<times> state)"},
                                                                  tp[const
                                                                       ("WORD",
                                                                        (Word_Lib.mk_wordT 3),
                                                                        @{theory}),
                                                                     mop(Cast (Word_Lib.mk_wordT 3),
                                                                         var_w("byte",2)),lf,
                                                                     ite(eq(var_w("word",1),lw(1,1)),
                                                                         bop(Lsl,
                                                                             var_w("datadoubleword",64),
                                                                             ln 32),
                                                                         var_w("datadoubleword",64)),
                                                                     var_w("vAddr",64),lf],@{theory}),
                                                               close(var_a HOLogic.boolT,mu(lu,qTy)))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SWR",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(const
                       ("BigEndianCPU",@{typ "state \<Rightarrow> (1 word \<times> state)"},
                        @{theory}),
                     close
                       (var_w("v",1),
                        mb(mb(mu(rep(var_w("v",1),ln 2,(Word_Lib.mk_wordT 2)),qTy),
                              close
                                (var_w("v",2),
                                 mu(bop(BXor,ex(var_w("vAddr",64),ln 1,ln 0,(Word_Lib.mk_wordT 2)),
                                        var_w("v",2)),qTy))),
                           close
                             (var_w("byte",2),
                              mb(const
                                   ("BigEndianCPU",
                                    @{typ "state \<Rightarrow> (1 word \<times> state)"},@{theory}),
                                 close
                                   (var_w("v",1),
                                    mb(mu(bop(BXor,ex(var_w("vAddr",64),ln 2,ln 2,w1),var_w("v",1)),
                                          qTy),
                                       close
                                         (var_w("word",1),
                                          mb(itb([(bop(And,eq(var_w("word",1),lw(0,1)),
                                                       eq(var_w("byte",2),lw(0,2))),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                                            close
                                                              (var_w("v",32),
                                                               mu(mop(Cast w64,var_w("v",32)),qTy)))))),
                                                  (bop(And,eq(var_w("word",1),lw(0,1)),
                                                       eq(var_w("byte",2),lw(1,2))),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mb(mu(ex(var_w("v",64),ln 23,ln 0,
                                                                     (Word_Lib.mk_wordT 24)),qTy),
                                                               close
                                                                 (var_w("v",24),
                                                                  mu(mop(Cast w64,var_w("v",24)),qTy))),
                                                            close
                                                              (var_w("v",64),
                                                               mu(bop(Lsl,var_w("v",64),ln 8),qTy)))))),
                                                  (bop(And,eq(var_w("word",1),lw(0,1)),
                                                       eq(var_w("byte",2),lw(2,2))),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mb(mu(ex(var_w("v",64),ln 15,ln 0,w16),
                                                                  qTy),
                                                               close
                                                                 (var_w("v",16),
                                                                  mu(mop(Cast w64,var_w("v",16)),qTy))),
                                                            close
                                                              (var_w("v",64),
                                                               mu(bop(Lsl,var_w("v",64),ln 16),qTy)))))),
                                                  (bop(And,eq(var_w("word",1),lw(0,1)),
                                                       eq(var_w("byte",2),lw(3,2))),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mb(mu(ex(var_w("v",64),ln 7,ln 0,w8),qTy),
                                                               close
                                                                 (var_w("v",8),
                                                                  mu(mop(Cast w64,var_w("v",8)),qTy))),
                                                            close
                                                              (var_w("v",64),
                                                               mu(bop(Lsl,var_w("v",64),ln 24),qTy)))))),
                                                  (bop(And,eq(var_w("word",1),lw(1,1)),
                                                       eq(var_w("byte",2),lw(0,2))),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),
                                                                  qTy),
                                                               close
                                                                 (var_w("v",32),
                                                                  mu(mop(Cast w64,var_w("v",32)),qTy))),
                                                            close
                                                              (var_w("v",64),
                                                               mu(bop(Lsl,var_w("v",64),ln 32),qTy)))))),
                                                  (bop(And,eq(var_w("word",1),lw(1,1)),
                                                       eq(var_w("byte",2),lw(1,2))),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mb(mu(ex(var_w("v",64),ln 23,ln 0,
                                                                     (Word_Lib.mk_wordT 24)),qTy),
                                                               close
                                                                 (var_w("v",24),
                                                                  mu(mop(Cast w64,var_w("v",24)),qTy))),
                                                            close
                                                              (var_w("v",64),
                                                               mu(bop(Lsl,var_w("v",64),ln 40),qTy)))))),
                                                  (bop(And,eq(var_w("word",1),lw(1,1)),
                                                       eq(var_w("byte",2),lw(2,2))),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mb(mu(ex(var_w("v",64),ln 15,ln 0,w16),
                                                                  qTy),
                                                               close
                                                                 (var_w("v",16),
                                                                  mu(mop(Cast w64,var_w("v",16)),qTy))),
                                                            close
                                                              (var_w("v",64),
                                                               mu(bop(Lsl,var_w("v",64),ln 48),qTy)))))),
                                                  (bop(And,eq(var_w("word",1),lw(1,1)),
                                                       eq(var_w("byte",2),lw(3,2))),
                                                   mb(call
                                                        ("GPR",
                                                         @{typ
                                                         "state \<Rightarrow>
                                                          (64 word \<times> state)"},var_w("rt",5),
                                                         @{theory}),
                                                      close
                                                        (var_w("v",64),
                                                         mb(mb(mu(ex(var_w("v",64),ln 7,ln 0,w8),qTy),
                                                               close
                                                                 (var_w("v",8),
                                                                  mu(mop(Cast w64,var_w("v",8)),qTy))),
                                                            close
                                                              (var_w("v",64),
                                                               mu(bop(Lsl,var_w("v",64),ln 56),qTy))))))],
                                                 lx(@{typ
                                                    "state \<Rightarrow> (64 word \<times> state)"})),
                                             close
                                               (var_w("datadoubleword",64),
                                                mb(const
                                                     ("BigEndianMem",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      @{theory}),
                                                   close
                                                     (var_b"v",
                                                      mb(mu(ite(var_b"v",
                                                                bop(BAnd,var_w("vAddr",64),
                                                                    mop(BNot,lw(3,64))),
                                                                var_w("vAddr",64)),qTy),
                                                         close
                                                           (var_w("vAddr",64),
                                                            mb(call
                                                                 ("StoreMemory",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (bool \<times> state)"},
                                                                  tp[const
                                                                       ("WORD",
                                                                        (Word_Lib.mk_wordT 3),
                                                                        @{theory}),
                                                                     bop(Sub,
                                                                         const
                                                                           ("WORD",
                                                                            (Word_Lib.mk_wordT 3),
                                                                            @{theory}),
                                                                         mop(Cast
                                                                               (Word_Lib.mk_wordT 3),
                                                                             var_w("byte",2))),lf,
                                                                     var_w("datadoubleword",64),
                                                                     var_w("vAddr",64),lf],@{theory}),
                                                               close(var_a HOLogic.boolT,mu(lu,qTy)))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SDL",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(const
                       ("BigEndianCPU",@{typ "state \<Rightarrow> (1 word \<times> state)"},
                        @{theory}),
                     close
                       (var_w("v",1),
                        mb(mb(mu(rep(var_w("v",1),ln 3,(Word_Lib.mk_wordT 3)),qTy),
                              close
                                (var_w("v",3),
                                 mu(bop(BXor,ex(var_w("vAddr",64),ln 2,ln 0,(Word_Lib.mk_wordT 3)),
                                        var_w("v",3)),qTy))),
                           close
                             (var_w("byte",3),
                              mb(itb([(eq(var_w("byte",3),lw(0,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mu(ex(var_w("v",64),ln 63,ln 56,w8),qTy),
                                                close
                                                  (var_w("v",8),mu(mop(Cast w64,var_w("v",8)),qTy)))))),
                                      (eq(var_w("byte",3),lw(1,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mu(ex(var_w("v",64),ln 63,ln 48,w16),qTy),
                                                close
                                                  (var_w("v",16),mu(mop(Cast w64,var_w("v",16)),qTy)))))),
                                      (eq(var_w("byte",3),lw(2,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mu(ex(var_w("v",64),ln 63,ln 40,
                                                      (Word_Lib.mk_wordT 24)),qTy),
                                                close
                                                  (var_w("v",24),mu(mop(Cast w64,var_w("v",24)),qTy)))))),
                                      (eq(var_w("byte",3),lw(3,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mu(ex(var_w("v",64),ln 63,ln 32,w32),qTy),
                                                close
                                                  (var_w("v",32),mu(mop(Cast w64,var_w("v",32)),qTy)))))),
                                      (eq(var_w("byte",3),lw(4,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mu(ex(var_w("v",64),ln 63,ln 24,
                                                      (Word_Lib.mk_wordT 40)),qTy),
                                                close
                                                  (var_w("v",40),mu(mop(Cast w64,var_w("v",40)),qTy)))))),
                                      (eq(var_w("byte",3),lw(5,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mu(ex(var_w("v",64),ln 63,ln 16,
                                                      (Word_Lib.mk_wordT 48)),qTy),
                                                close
                                                  (var_w("v",48),mu(mop(Cast w64,var_w("v",48)),qTy)))))),
                                      (eq(var_w("byte",3),lw(6,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mu(ex(var_w("v",64),ln 63,ln 8,
                                                      (Word_Lib.mk_wordT 56)),qTy),
                                                close
                                                  (var_w("v",56),mu(mop(Cast w64,var_w("v",56)),qTy)))))),
                                      (eq(var_w("byte",3),lw(7,3)),
                                       call
                                         ("GPR",
                                          @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                          var_w("rt",5),@{theory}))],
                                     lx(@{typ "state \<Rightarrow> (64 word \<times> state)"})),
                                 close
                                   (var_w("datadoubleword",64),
                                    mb(const
                                         ("BigEndianMem",
                                          @{typ "state \<Rightarrow> (bool \<times> state)"},
                                          @{theory}),
                                       close
                                         (var_b"v",
                                          mb(mu(ite(var_b"v",var_w("vAddr",64),
                                                    bop(BAnd,var_w("vAddr",64),mop(BNot,lw(7,64)))),
                                                qTy),
                                             close
                                               (var_w("vAddr",64),
                                                mb(call
                                                     ("StoreMemory",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      tp[const
                                                           ("DOUBLEWORD",(Word_Lib.mk_wordT 3),
                                                            @{theory}),var_w("byte",3),lf,
                                                         var_w("datadoubleword",64),
                                                         var_w("vAddr",64),lf],@{theory}),
                                                   close(var_a HOLogic.boolT,mu(lu,qTy)))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'SDR",
   close
     (tp[var_w("base",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("base",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mu(bop(Add,mop(SE w64,var_w("offset",16)),var_w("v",64)),qTy),
                  close
                    (var_w("v",64),
                     call
                       ("getVirtualAddress",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                        var_w("v",64),@{theory}))),
               close
                 (var_w("vAddr",64),
                  mb(const
                       ("BigEndianCPU",@{typ "state \<Rightarrow> (1 word \<times> state)"},
                        @{theory}),
                     close
                       (var_w("v",1),
                        mb(mb(mu(rep(var_w("v",1),ln 3,(Word_Lib.mk_wordT 3)),qTy),
                              close
                                (var_w("v",3),
                                 mu(bop(BXor,ex(var_w("vAddr",64),ln 2,ln 0,(Word_Lib.mk_wordT 3)),
                                        var_w("v",3)),qTy))),
                           close
                             (var_w("byte",3),
                              mb(itb([(eq(var_w("byte",3),lw(0,3)),
                                       call
                                         ("GPR",
                                          @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                          var_w("rt",5),@{theory})),
                                      (eq(var_w("byte",3),lw(1,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mb(mu(ex(var_w("v",64),ln 55,ln 0,
                                                         (Word_Lib.mk_wordT 56)),qTy),
                                                   close
                                                     (var_w("v",56),
                                                      mu(mop(Cast w64,var_w("v",56)),qTy))),
                                                close
                                                  (var_w("v",64),mu(bop(Lsl,var_w("v",64),ln 8),qTy)))))),
                                      (eq(var_w("byte",3),lw(2,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mb(mu(ex(var_w("v",64),ln 47,ln 0,
                                                         (Word_Lib.mk_wordT 48)),qTy),
                                                   close
                                                     (var_w("v",48),
                                                      mu(mop(Cast w64,var_w("v",48)),qTy))),
                                                close
                                                  (var_w("v",64),
                                                   mu(bop(Lsl,var_w("v",64),ln 16),qTy)))))),
                                      (eq(var_w("byte",3),lw(3,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mb(mu(ex(var_w("v",64),ln 39,ln 0,
                                                         (Word_Lib.mk_wordT 40)),qTy),
                                                   close
                                                     (var_w("v",40),
                                                      mu(mop(Cast w64,var_w("v",40)),qTy))),
                                                close
                                                  (var_w("v",64),
                                                   mu(bop(Lsl,var_w("v",64),ln 24),qTy)))))),
                                      (eq(var_w("byte",3),lw(4,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                                   close
                                                     (var_w("v",32),
                                                      mu(mop(Cast w64,var_w("v",32)),qTy))),
                                                close
                                                  (var_w("v",64),
                                                   mu(bop(Lsl,var_w("v",64),ln 32),qTy)))))),
                                      (eq(var_w("byte",3),lw(5,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mb(mu(ex(var_w("v",64),ln 23,ln 0,
                                                         (Word_Lib.mk_wordT 24)),qTy),
                                                   close
                                                     (var_w("v",24),
                                                      mu(mop(Cast w64,var_w("v",24)),qTy))),
                                                close
                                                  (var_w("v",64),
                                                   mu(bop(Lsl,var_w("v",64),ln 40),qTy)))))),
                                      (eq(var_w("byte",3),lw(6,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mb(mu(ex(var_w("v",64),ln 15,ln 0,w16),qTy),
                                                   close
                                                     (var_w("v",16),
                                                      mu(mop(Cast w64,var_w("v",16)),qTy))),
                                                close
                                                  (var_w("v",64),
                                                   mu(bop(Lsl,var_w("v",64),ln 48),qTy)))))),
                                      (eq(var_w("byte",3),lw(7,3)),
                                       mb(call
                                            ("GPR",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             var_w("rt",5),@{theory}),
                                          close
                                            (var_w("v",64),
                                             mb(mb(mu(ex(var_w("v",64),ln 7,ln 0,w8),qTy),
                                                   close
                                                     (var_w("v",8),
                                                      mu(mop(Cast w64,var_w("v",8)),qTy))),
                                                close
                                                  (var_w("v",64),
                                                   mu(bop(Lsl,var_w("v",64),ln 56),qTy))))))],
                                     lx(@{typ "state \<Rightarrow> (64 word \<times> state)"})),
                                 close
                                   (var_w("datadoubleword",64),
                                    mb(const
                                         ("BigEndianMem",
                                          @{typ "state \<Rightarrow> (bool \<times> state)"},
                                          @{theory}),
                                       close
                                         (var_b"v",
                                          mb(mu(ite(var_b"v",
                                                    bop(BAnd,var_w("vAddr",64),mop(BNot,lw(7,64))),
                                                    var_w("vAddr",64)),qTy),
                                             close
                                               (var_w("vAddr",64),
                                                mb(call
                                                     ("StoreMemory",
                                                      @{typ
                                                      "state \<Rightarrow> (bool \<times> state)"},
                                                      tp[const
                                                           ("DOUBLEWORD",(Word_Lib.mk_wordT 3),
                                                            @{theory}),
                                                         bop(Sub,
                                                             const
                                                               ("DOUBLEWORD",(Word_Lib.mk_wordT 3),
                                                                @{theory}),var_w("byte",3)),lf,
                                                         var_w("datadoubleword",64),
                                                         var_w("vAddr",64),lf],@{theory}),
                                                   close(var_a HOLogic.boolT,mu(lu,qTy)))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("dfn'SYNC",close(var_w("stype",5),lu))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'BREAK",
   call
     ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
      lc("Bp","ExceptionType",@{theory}),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'SYSCALL",
   call
     ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
      lc("Sys","ExceptionType",@{theory}),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MTC0",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU0",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),
                  close
                    (var_b"b",
                     ite(var_b"b",mu(lt,qTy),
                         const
                           ("KernelMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                            @{theory})))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(call
                           ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                            var_w("rt",5),@{theory}),
                         close
                           (var_w("v",64),
                            mb(mu(tp[var_w("v",64),ln 0,var_w("rd",5),var_w("sel",3)],qTy),
                               close
                                 (var("v",
                                      @{typ "64 word \<times> nat \<times> 5 word \<times> 3 word"}),
                                  call
                                    ("write'CPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",
                                         @{typ
                                         "64 word \<times> nat \<times> 5 word \<times> 3 word"}),
                                     @{theory}))))),
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("CpU","ExceptionType",@{theory}),@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DMTC0",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU0",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),
                  close
                    (var_b"b",
                     ite(var_b"b",mu(lt,qTy),
                         const
                           ("KernelMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                            @{theory})))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(call
                           ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                            var_w("rt",5),@{theory}),
                         close
                           (var_w("v",64),
                            mb(mu(tp[var_w("v",64),ln 0,var_w("rd",5),var_w("sel",3)],qTy),
                               close
                                 (var("v",
                                      @{typ "64 word \<times> nat \<times> 5 word \<times> 3 word"}),
                                  call
                                    ("write'CPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",
                                         @{typ
                                         "64 word \<times> nat \<times> 5 word \<times> 3 word"}),
                                     @{theory}))))),
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("CpU","ExceptionType",@{theory}),@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'MFC0",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU0",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),
                  close
                    (var_b"b",
                     ite(var_b"b",mu(lt,qTy),
                         const
                           ("KernelMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                            @{theory})))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(call
                           ("CPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                            tp[ln 0,var_w("rd",5),var_w("sel",3)],@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(ex(var_w("v",64),ln 31,ln 0,w32),qTy),
                                     close(var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                                  close(var_w("v",64),mu(tp[var_w("v",64),var_w("rt",5)],qTy))),
                               close
                                 (var("v",@{typ "64 word \<times> 5 word"}),
                                  call
                                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word \<times> 5 word"}),@{theory}))))),
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("CpU","ExceptionType",@{theory}),@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'DMFC0",
   close
     (tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU0",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),
                  close
                    (var_b"b",
                     ite(var_b"b",mu(lt,qTy),
                         const
                           ("KernelMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                            @{theory})))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(call
                           ("CPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                            tp[ln 0,var_w("rd",5),var_w("sel",3)],@{theory}),
                         close
                           (var_w("v",64),
                            mb(mu(tp[var_w("v",64),var_w("rt",5)],qTy),
                               close
                                 (var("v",@{typ "64 word \<times> 5 word"}),
                                  call
                                    ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word \<times> 5 word"}),@{theory}))))),
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("CpU","ExceptionType",@{theory}),@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'J",
   close
     (var_w("instr_index",26),
      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(ex(var_w("v",64),ln 63,ln 28,(Word_Lib.mk_wordT 36)),qTy),
                     close(var_w("v",36),mu(cc[var_w("v",36),var_w("instr_index",26),lw(0,2)],qTy))),
                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
               close
                 (var("v",@{typ "64 word option"}),
                  call
                    ("write'BranchTo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word option"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'JAL",
   close
     (var_w("instr_index",26),
      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(8,64)),qTy),
                     close(var_w("v",64),mu(tp[var_w("v",64),lw(31,5)],qTy))),
                  close
                    (var("v",@{typ "64 word \<times> 5 word"}),
                     call
                       ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v",@{typ "64 word \<times> 5 word"}),@{theory}))),
               close
                 (var_a HOLogic.unitT,
                  mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                     close
                       (var_w("v",64),
                        mb(mb(mb(mu(ex(var_w("v",64),ln 63,ln 28,(Word_Lib.mk_wordT 36)),qTy),
                                 close
                                   (var_w("v",36),
                                    mu(cc[var_w("v",36),var_w("instr_index",26),lw(0,2)],qTy))),
                              close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                           close
                             (var("v",@{typ "64 word option"}),
                              call
                                ("write'BranchTo",
                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                 var("v",@{typ "64 word option"}),@{theory})))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'JALR",
   close
     (tp[var_w("rs",5),var_w("rd",5)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("temp",64),
            mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
               close
                 (var_w("v",64),
                  mb(mb(mb(mu(bop(Add,var_w("v",64),lw(8,64)),qTy),
                           close(var_w("v",64),mu(tp[var_w("v",64),var_w("rd",5)],qTy))),
                        close
                          (var("v",@{typ "64 word \<times> 5 word"}),
                           call
                             ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              var("v",@{typ "64 word \<times> 5 word"}),@{theory}))),
                     close
                       (var_a HOLogic.unitT,
                        call
                          ("write'BranchTo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                           mop(Some,var_w("temp",64)),@{theory})))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'JR",
   close
     (var_w("rs",5),
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(mop(Some,var_w("v",64)),qTy),
               close
                 (var("v",@{typ "64 word option"}),
                  call
                    ("write'BranchTo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                     var("v",@{typ "64 word option"}),@{theory})))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BEQ",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(call
                    ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                     @{theory}),close(var_w("v0",64),mu(eq(var_w("v",64),var_w("v0",64)),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      const
                        ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BNE",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),close(var_w("v0",64),mu(eq(var_w("v",64),var_w("v0",64)),qTy))),
                  close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      const
                        ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BLEZ",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Le,var_w("v",64),lw(0,64)),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      const
                        ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BGTZ",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Gt,var_w("v",64),lw(0,64)),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      const
                        ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BLTZ",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Lt,var_w("v",64),lw(0,64)),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      const
                        ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BGEZ",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Ge,var_w("v",64),lw(0,64)),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      const
                        ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BLTZAL",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("temp",64),
            mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
               close
                 (var_w("v",64),
                  mb(mb(mb(mu(bop(Add,var_w("v",64),lw(8,64)),qTy),
                           close(var_w("v",64),mu(tp[var_w("v",64),lw(31,5)],qTy))),
                        close
                          (var("v",@{typ "64 word \<times> 5 word"}),
                           call
                             ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              var("v",@{typ "64 word \<times> 5 word"}),@{theory}))),
                     close
                       (var_a HOLogic.unitT,
                        ite(bop(Lt,var_w("temp",64),lw(0,64)),
                            mb(const
                                 ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  @{theory}),
                               close
                                 (var_w("v",64),
                                  mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                           close
                                             (var_w("v",64),
                                              mu(bop(Add,var_w("v",64),
                                                     bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),
                                                 qTy))),
                                        close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                                     close
                                       (var("v",@{typ "64 word option"}),
                                        call
                                          ("write'BranchTo",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var("v",@{typ "64 word option"}),@{theory}))))),
                            const
                              ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                               @{theory}))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BGEZAL",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("temp",64),
            mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
               close
                 (var_w("v",64),
                  mb(mb(mb(mu(bop(Add,var_w("v",64),lw(8,64)),qTy),
                           close(var_w("v",64),mu(tp[var_w("v",64),lw(31,5)],qTy))),
                        close
                          (var("v",@{typ "64 word \<times> 5 word"}),
                           call
                             ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              var("v",@{typ "64 word \<times> 5 word"}),@{theory}))),
                     close
                       (var_a HOLogic.unitT,
                        ite(bop(Ge,var_w("temp",64),lw(0,64)),
                            mb(const
                                 ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  @{theory}),
                               close
                                 (var_w("v",64),
                                  mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                           close
                                             (var_w("v",64),
                                              mu(bop(Add,var_w("v",64),
                                                     bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),
                                                 qTy))),
                                        close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                                     close
                                       (var("v",@{typ "64 word option"}),
                                        call
                                          ("write'BranchTo",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var("v",@{typ "64 word option"}),@{theory}))))),
                            const
                              ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                               @{theory}))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BEQL",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(call
                    ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                     @{theory}),close(var_w("v0",64),mu(eq(var_w("v",64),var_w("v0",64)),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      mb(const
                           ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            @{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(const
                                 ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  @{theory}),
                               close
                                 (var_w("v",64),
                                  mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        call
                                          ("write'PC",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var_w("v",64),@{theory}))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BNEL",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mb(mb(call
                       ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rt",5),
                        @{theory}),close(var_w("v0",64),mu(eq(var_w("v",64),var_w("v0",64)),qTy))),
                  close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      mb(const
                           ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            @{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(const
                                 ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  @{theory}),
                               close
                                 (var_w("v",64),
                                  mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        call
                                          ("write'PC",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var_w("v",64),@{theory}))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BLEZL",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Le,var_w("v",64),lw(0,64)),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      mb(const
                           ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            @{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(const
                                 ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  @{theory}),
                               close
                                 (var_w("v",64),
                                  mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        call
                                          ("write'PC",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var_w("v",64),@{theory}))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BGTZL",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Gt,var_w("v",64),lw(0,64)),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      mb(const
                           ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            @{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(const
                                 ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  @{theory}),
                               close
                                 (var_w("v",64),
                                  mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        call
                                          ("write'PC",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var_w("v",64),@{theory}))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BLTZL",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Lt,var_w("v",64),lw(0,64)),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      mb(const
                           ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            @{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(const
                                 ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  @{theory}),
                               close
                                 (var_w("v",64),
                                  mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        call
                                          ("write'PC",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var_w("v",64),@{theory}))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BGEZL",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("v",64),
            mb(mu(bop(Ge,var_w("v",64),lw(0,64)),qTy),
               close
                 (var_b"b",
                  ite(var_b"b",
                      mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
                         close
                           (var_w("v",64),
                            mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        mu(bop(Add,var_w("v",64),
                                               bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),qTy))),
                                  close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                               close
                                 (var("v",@{typ "64 word option"}),
                                  call
                                    ("write'BranchTo",
                                     @{typ "state \<Rightarrow> (unit \<times> state)"},
                                     var("v",@{typ "64 word option"}),@{theory}))))),
                      mb(const
                           ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                            @{theory}),
                         close
                           (var_a HOLogic.unitT,
                            mb(const
                                 ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  @{theory}),
                               close
                                 (var_w("v",64),
                                  mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                     close
                                       (var_w("v",64),
                                        call
                                          ("write'PC",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var_w("v",64),@{theory}))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BLTZALL",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("temp",64),
            mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
               close
                 (var_w("v",64),
                  mb(mb(mb(mu(bop(Add,var_w("v",64),lw(8,64)),qTy),
                           close(var_w("v",64),mu(tp[var_w("v",64),lw(31,5)],qTy))),
                        close
                          (var("v",@{typ "64 word \<times> 5 word"}),
                           call
                             ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              var("v",@{typ "64 word \<times> 5 word"}),@{theory}))),
                     close
                       (var_a HOLogic.unitT,
                        ite(bop(Lt,var_w("temp",64),lw(0,64)),
                            mb(const
                                 ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  @{theory}),
                               close
                                 (var_w("v",64),
                                  mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                           close
                                             (var_w("v",64),
                                              mu(bop(Add,var_w("v",64),
                                                     bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),
                                                 qTy))),
                                        close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                                     close
                                       (var("v",@{typ "64 word option"}),
                                        call
                                          ("write'BranchTo",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var("v",@{typ "64 word option"}),@{theory}))))),
                            mb(const
                                 ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                  @{theory}),
                               close
                                 (var_a HOLogic.unitT,
                                  mb(const
                                       ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                        @{theory}),
                                     close
                                       (var_w("v",64),
                                        mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                           close
                                             (var_w("v",64),
                                              call
                                                ("write'PC",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 var_w("v",64),@{theory}))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'BGEZALL",
   close
     (tp[var_w("rs",5),var_w("offset",16)],
      mb(call("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},var_w("rs",5),@{theory}),
         close
           (var_w("temp",64),
            mb(const("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},@{theory}),
               close
                 (var_w("v",64),
                  mb(mb(mb(mu(bop(Add,var_w("v",64),lw(8,64)),qTy),
                           close(var_w("v",64),mu(tp[var_w("v",64),lw(31,5)],qTy))),
                        close
                          (var("v",@{typ "64 word \<times> 5 word"}),
                           call
                             ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                              var("v",@{typ "64 word \<times> 5 word"}),@{theory}))),
                     close
                       (var_a HOLogic.unitT,
                        ite(bop(Ge,var_w("temp",64),lw(0,64)),
                            mb(const
                                 ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                  @{theory}),
                               close
                                 (var_w("v",64),
                                  mb(mb(mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                           close
                                             (var_w("v",64),
                                              mu(bop(Add,var_w("v",64),
                                                     bop(Lsl,mop(SE w64,var_w("offset",16)),ln 2)),
                                                 qTy))),
                                        close(var_w("v",64),mu(mop(Some,var_w("v",64)),qTy))),
                                     close
                                       (var("v",@{typ "64 word option"}),
                                        call
                                          ("write'BranchTo",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var("v",@{typ "64 word option"}),@{theory}))))),
                            mb(const
                                 ("CheckBranch",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                  @{theory}),
                               close
                                 (var_a HOLogic.unitT,
                                  mb(const
                                       ("PC",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                                        @{theory}),
                                     close
                                       (var_w("v",64),
                                        mb(mu(bop(Add,var_w("v",64),lw(4,64)),qTy),
                                           close
                                             (var_w("v",64),
                                              call
                                                ("write'PC",
                                                 @{typ "state \<Rightarrow> (unit \<times> state)"},
                                                 var_w("v",64),@{theory}))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'RDHWR",
   close
     (tp[var_w("rt",5),var_w("rd",5)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),qTy),
                     close
                       (var("v",@{typ StatusRegister}),
                        mu(call
                             ("StatusRegister.CU0",HOLogic.boolT,var("v",@{typ StatusRegister}),
                              @{theory}),qTy))),
                  close
                    (var_b"b",
                     ite(var_b"b",mu(lt,qTy),
                         mb(const
                              ("KernelMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                               @{theory}),
                            close
                              (var_b"b",
                               ite(var_b"b",mu(lt,qTy),
                                   mb(const
                                        ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},
                                         @{theory}),
                                      close
                                        (var("v",@{typ CP0}),
                                         mb(mb(mu(call
                                                    ("CP0.HWREna",@{typ HWREna},var("v",@{typ CP0}),
                                                     @{theory}),qTy),
                                               close
                                                 (var("v",@{typ HWREna}),
                                                  mu(call
                                                       ("reg'HWREna",w32,var("v",@{typ HWREna}),
                                                        @{theory}),qTy))),
                                            close
                                              (var_w("v",32),
                                               mu(bop(Bit,var_w("v",32),
                                                      mop(Cast HOLogic.natT,var_w("rd",5))),qTy))))))))))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      itb([(eq(var_w("rd",5),lw(0,5)),
                            mb(mr(close(var("s",qTy),call("state.procID",w8,var("s",qTy),@{theory}))),
                               close
                                 (var_w("v",8),
                                  mb(mb(mu(mop(Cast w64,var_w("v",8)),qTy),
                                        close(var_w("v",64),mu(tp[var_w("v",64),var_w("rt",5)],qTy))),
                                     close
                                       (var("v",@{typ "64 word \<times> 5 word"}),
                                        call
                                          ("write'GPR",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))),
                           (eq(var_w("rd",5),lw(2,5)),
                            mb(const
                                 ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                               close
                                 (var("v",@{typ CP0}),
                                  mb(mb(mb(mu(call("CP0.Count",w32,var("v",@{typ CP0}),@{theory}),
                                              qTy),
                                           close(var_w("v",32),mu(mop(SE w64,var_w("v",32)),qTy))),
                                        close(var_w("v",64),mu(tp[var_w("v",64),var_w("rt",5)],qTy))),
                                     close
                                       (var("v",@{typ "64 word \<times> 5 word"}),
                                        call
                                          ("write'GPR",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))),
                           (eq(var_w("rd",5),lw(3,5)),
                            call
                              ("write'GPR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                               tp[lw(1,64),var_w("rt",5)],@{theory})),
                           (eq(var_w("rd",5),lw(26,5)),
                            mw(close(var("s",qTy),rupd("state.done",tp[var("s",qTy),lt],@{theory})))),
                           (eq(var_w("rd",5),lw(27,5)),
                            const
                              ("resetStats",@{typ "state \<Rightarrow> (unit \<times> state)"},
                               @{theory})),
                           (eq(var_w("rd",5),lw(28,5)),
                            mb(mr(close
                                    (var("s",qTy),
                                     call
                                       ("state.print",@{typ "string \<Rightarrow> unit"},
                                        var("s",qTy),@{theory}))),
                               close
                                 (var("v",@{typ "string \<Rightarrow> unit"}),
                                  mb(mr(close
                                          (var("s",qTy),
                                           call("state.instCnt",HOLogic.natT,var("s",qTy),@{theory}))),
                                     close
                                       (var_n"v0",
                                        mb(mb(mu(tp[var_n"v0",ls"unavailable",
                                                    mop(Some,ls"human_readable")],qTy),
                                              close
                                                (var("v",
                                                     @{typ
                                                     "nat \<times> string \<times> string option"}),
                                                 mu(call
                                                      ("dumpStats",@{typ string},
                                                       var("v",
                                                           @{typ
                                                           "nat \<times>
                                                            string \<times> string option"}),
                                                       @{theory}),qTy))),close(var_s"v0",mu(lu,qTy)))))))),
                           (eq(var_w("rd",5),lw(29,5)),
                            mb(const
                                 ("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
                               close
                                 (var("v",@{typ CP0}),
                                  mb(mb(mu(call("CP0.UsrLocal",w64,var("v",@{typ CP0}),@{theory}),
                                           qTy),
                                        close(var_w("v",64),mu(tp[var_w("v",64),var_w("rt",5)],qTy))),
                                     close
                                       (var("v",@{typ "64 word \<times> 5 word"}),
                                        call
                                          ("write'GPR",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var("v",@{typ "64 word \<times> 5 word"}),@{theory})))))),
                           (eq(var_w("rd",5),lw(30,5)),
                            mb(mr(close
                                    (var("s",qTy),
                                     call("state.totalCore",HOLogic.natT,var("s",qTy),@{theory}))),
                               close
                                 (var_n"v",
                                  mb(mb(mb(mu(bop(Sub,var_n"v",ln 1),qTy),
                                           close(var_n"v",mu(mop(Cast w64,var_n"v"),qTy))),
                                        close(var_w("v",64),mu(tp[var_w("v",64),var_w("rt",5)],qTy))),
                                     close
                                       (var("v",@{typ "64 word \<times> 5 word"}),
                                        call
                                          ("write'GPR",
                                           @{typ "state \<Rightarrow> (unit \<times> state)"},
                                           var("v",@{typ "64 word \<times> 5 word"}),@{theory}))))))],
                          call
                            ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             lc("ResI","ExceptionType",@{theory}),@{theory})),
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("ResI","ExceptionType",@{theory}),@{theory}))))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("dfn'CACHE",
   close
     (tp[var_w("base",5),var_w("opn",5),var_w("offset",16)],
      mb(const("CP0",@{typ "state \<Rightarrow> (CP0 \<times> state)"},@{theory}),
         close
           (var("v",@{typ CP0}),
            mb(mb(mb(mb(mu(call("CP0.Status",@{typ StatusRegister},var("v",@{typ CP0}),@{theory}),
                           qTy),
                        close
                          (var("v",@{typ StatusRegister}),
                           mu(call
                                ("StatusRegister.CU0",HOLogic.boolT,var("v",@{typ StatusRegister}),
                                 @{theory}),qTy))),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),
                  close
                    (var_b"b",
                     ite(var_b"b",
                         mb(const
                              ("KernelMode",@{typ "state \<Rightarrow> (bool \<times> state)"},
                               @{theory}),close(var_b"v",mu(mop(Not,var_b"v"),qTy))),mu(lf,qTy)))),
               close
                 (var_b"b",
                  ite(var_b"b",
                      call
                        ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
                         lc("CpU","ExceptionType",@{theory}),@{theory}),
                      mb(call
                           ("GPR",@{typ "state \<Rightarrow> (64 word \<times> state)"},
                            var_w("base",5),@{theory}),
                         close
                           (var_w("v",64),
                            mb(mu(bop(Add,var_w("v",64),mop(SE w64,var_w("offset",16))),qTy),
                               close
                                 (var_w("vAddr",64),
                                  mb(call
                                       ("AddressTranslation",
                                        @{typ
                                        "state \<Rightarrow>
                                         ((40 word \<times> 3 word \<times> bool \<times> bool) \<times>
                                          state)"},
                                        tp[var_w("vAddr",64),lc("LOAD","AccessType",@{theory})],
                                        @{theory}),
                                     close
                                       (var_a
                                          (@{typ
                                           "40 word \<times> 3 word \<times> bool \<times> bool"}),
                                        mu(lu,qTy))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("dfn'WAIT",lu)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'ReservedInstruction",
   call
     ("SignalException",@{typ "state \<Rightarrow> (unit \<times> state)"},
      lc("ResI","ExceptionType",@{theory}),@{theory}))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("dfn'Unpredictable",
   call
     ("raise'exception",@{typ "state \<Rightarrow> (unit \<times> state)"},
      call("exception.UNPREDICTABLE",@{typ exception},ls"Unpredictable instruction",@{theory}),
      @{theory}))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("Run",
   close
     (var("v0",@{typ instruction}),
      cs(var("v0",@{typ instruction}),
         [(Term.Const(@{const_name "BREAK"},@{typ instruction}),
           const("dfn'BREAK",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
          (Term.Const(@{const_name "ERET"},@{typ instruction}),
           const("dfn'ERET",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
          (Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}),
           const
             ("dfn'ReservedInstruction",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
          (Term.Const(@{const_name "SYSCALL"},@{typ instruction}),
           const("dfn'SYSCALL",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
          (Term.Const(@{const_name "TLBP"},@{typ instruction}),
           const("dfn'TLBP",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
          (Term.Const(@{const_name "TLBR"},@{typ instruction}),
           const("dfn'TLBR",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
          (Term.Const(@{const_name "TLBWI"},@{typ instruction}),
           const("dfn'TLBWI",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
          (Term.Const(@{const_name "TLBWR"},@{typ instruction}),
           const("dfn'TLBWR",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
          (Term.Const(@{const_name "Unpredictable"},@{typ instruction}),
           const("dfn'Unpredictable",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
          (Term.Const(@{const_name "WAIT"},@{typ instruction}),mu(lu,qTy)),
          (call
             ("instruction.CACHE",@{typ instruction},
              var("v195",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
           call
             ("dfn'CACHE",@{typ "state \<Rightarrow> (unit \<times> state)"},
              var("v195",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
          (call("instruction.COP1",@{typ instruction},var_u"v196",@{theory}),
           call("dfn'COP1",@{typ "state \<Rightarrow> (unit \<times> state)"},var_u"v196",@{theory})),
          (call
             ("instruction.RDHWR",@{typ instruction},var("v197",@{typ "5 word \<times> 5 word"}),
              @{theory}),
           call
             ("dfn'RDHWR",@{typ "state \<Rightarrow> (unit \<times> state)"},
              var("v197",@{typ "5 word \<times> 5 word"}),@{theory})),
          (call("instruction.SYNC",@{typ instruction},var_w("v198",5),@{theory}),mu(lu,qTy)),
          (call("instruction.ArithI",@{typ instruction},var("v1",@{typ ArithI}),@{theory}),
           cs(var("v1",@{typ ArithI}),
              [(call
                  ("ArithI.ADDI",@{typ ArithI},
                   var("v2",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'ADDI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v2",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("ArithI.ADDIU",@{typ ArithI},
                   var("v3",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'ADDIU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v3",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("ArithI.ANDI",@{typ ArithI},
                   var("v4",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'ANDI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v4",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("ArithI.DADDI",@{typ ArithI},
                   var("v5",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'DADDI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v5",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("ArithI.DADDIU",@{typ ArithI},
                   var("v6",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'DADDIU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v6",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("ArithI.LUI",@{typ ArithI},var("v7",@{typ "5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LUI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v7",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("ArithI.ORI",@{typ ArithI},
                   var("v8",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'ORI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v8",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("ArithI.SLTI",@{typ ArithI},
                   var("v9",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SLTI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v9",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("ArithI.SLTIU",@{typ ArithI},
                   var("v10",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SLTIU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v10",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("ArithI.XORI",@{typ ArithI},
                   var("v11",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'XORI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v11",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}))],
              @{context})),
          (call("instruction.ArithR",@{typ instruction},var("v12",@{typ ArithR}),@{theory}),
           cs(var("v12",@{typ ArithR}),
              [(call
                  ("ArithR.ADD",@{typ ArithR},
                   var("v13",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'ADD",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v13",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.ADDU",@{typ ArithR},
                   var("v14",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'ADDU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v14",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.AND",@{typ ArithR},
                   var("v15",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'AND",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v15",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.DADD",@{typ ArithR},
                   var("v16",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DADD",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v16",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.DADDU",@{typ ArithR},
                   var("v17",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DADDU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v17",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.DSUB",@{typ ArithR},
                   var("v18",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DSUB",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v18",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.DSUBU",@{typ ArithR},
                   var("v19",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DSUBU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v19",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.MOVN",@{typ ArithR},
                   var("v20",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'MOVN",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v20",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.MOVZ",@{typ ArithR},
                   var("v21",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'MOVZ",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v21",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.NOR",@{typ ArithR},
                   var("v22",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'NOR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v22",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.OR",@{typ ArithR},
                   var("v23",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'OR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v23",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.SLT",@{typ ArithR},
                   var("v24",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'SLT",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v24",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.SLTU",@{typ ArithR},
                   var("v25",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'SLTU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v25",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.SUB",@{typ ArithR},
                   var("v26",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'SUB",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v26",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.SUBU",@{typ ArithR},
                   var("v27",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'SUBU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v27",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("ArithR.XOR",@{typ ArithR},
                   var("v28",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'XOR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v28",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}))],
              @{context})),
          (call("instruction.Branch",@{typ instruction},var("v29",@{typ Branch}),@{theory}),
           cs(var("v29",@{typ Branch}),
              [(call
                  ("Branch.BEQ",@{typ Branch},
                   var("v30",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'BEQ",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v30",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BEQL",@{typ Branch},
                   var("v31",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'BEQL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v31",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BGEZ",@{typ Branch},var("v32",@{typ "5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'BGEZ",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v32",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BGEZAL",@{typ Branch},var("v33",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                call
                  ("dfn'BGEZAL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v33",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BGEZALL",@{typ Branch},var("v34",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                call
                  ("dfn'BGEZALL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v34",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BGEZL",@{typ Branch},var("v35",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                call
                  ("dfn'BGEZL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v35",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BGTZ",@{typ Branch},var("v36",@{typ "5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'BGTZ",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v36",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BGTZL",@{typ Branch},var("v37",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                call
                  ("dfn'BGTZL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v37",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BLEZ",@{typ Branch},var("v38",@{typ "5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'BLEZ",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v38",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BLEZL",@{typ Branch},var("v39",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                call
                  ("dfn'BLEZL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v39",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BLTZ",@{typ Branch},var("v40",@{typ "5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'BLTZ",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v40",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BLTZAL",@{typ Branch},var("v41",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                call
                  ("dfn'BLTZAL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v41",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BLTZALL",@{typ Branch},var("v42",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                call
                  ("dfn'BLTZALL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v42",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BLTZL",@{typ Branch},var("v43",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                call
                  ("dfn'BLTZL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v43",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BNE",@{typ Branch},
                   var("v44",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'BNE",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v44",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Branch.BNEL",@{typ Branch},
                   var("v45",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'BNEL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v45",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call("Branch.J",@{typ Branch},var_w("v46",26),@{theory}),
                call
                  ("dfn'J",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v46",26),
                   @{theory})),
               (call("Branch.JAL",@{typ Branch},var_w("v47",26),@{theory}),
                call
                  ("dfn'JAL",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v47",26),
                   @{theory})),
               (call
                  ("Branch.JALR",@{typ Branch},var("v48",@{typ "5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'JALR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v48",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call("Branch.JR",@{typ Branch},var_w("v49",5),@{theory}),
                call
                  ("dfn'JR",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v49",5),
                   @{theory}))],@{context})),
          (call("instruction.COP2",@{typ instruction},var("v50",@{typ COP2}),@{theory}),
           cs(var("v50",@{typ COP2}),
              [(call("COP2.CHERICOP2",@{typ COP2},var("v51",@{typ CHERICOP2}),@{theory}),
                cs(var("v51",@{typ CHERICOP2}),
                   [(Term.Const(@{const_name "CReturn"},@{typ CHERICOP2}),
                     const
                       ("dfn'CReturn",@{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
                    (Term.Const(@{const_name "DumpCapReg"},@{typ CHERICOP2}),mu(lu,qTy)),
                    (Term.Const(@{const_name "UnknownCapInstruction"},@{typ CHERICOP2}),
                     const
                       ("dfn'UnknownCapInstruction",
                        @{typ "state \<Rightarrow> (unit \<times> state)"},@{theory})),
                    (call
                       ("CHERICOP2.CBTS",@{typ CHERICOP2},
                        var("v78",@{typ "5 word \<times> 16 word"}),@{theory}),
                     call
                       ("dfn'CBTS",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v78",@{typ "5 word \<times> 16 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CBTU",@{typ CHERICOP2},
                        var("v79",@{typ "5 word \<times> 16 word"}),@{theory}),
                     call
                       ("dfn'CBTU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v79",@{typ "5 word \<times> 16 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CCall",@{typ CHERICOP2},
                        var("v80",@{typ "5 word \<times> 5 word \<times> 11 word"}),@{theory}),
                     call
                       ("dfn'CCall",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v80",@{typ "5 word \<times> 5 word \<times> 11 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CCallFast",@{typ CHERICOP2},
                        var("v81",@{typ "5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CCallFast",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v81",@{typ "5 word \<times> 5 word"}),@{theory})),
                    (call("CHERICOP2.CClearHi",@{typ CHERICOP2},var_w("v82",16),@{theory}),
                     call
                       ("dfn'CClearHi",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var_w("v82",16),@{theory})),
                    (call("CHERICOP2.CClearLo",@{typ CHERICOP2},var_w("v83",16),@{theory}),
                     call
                       ("dfn'CClearLo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var_w("v83",16),@{theory})),
                    (call
                       ("CHERICOP2.CEQ",@{typ CHERICOP2},
                        var("v84",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CEQ",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v84",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CEXEQ",@{typ CHERICOP2},
                        var("v85",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CEXEQ",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v85",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CJALR",@{typ CHERICOP2},
                        var("v86",@{typ "5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CJALR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v86",@{typ "5 word \<times> 5 word"}),@{theory})),
                    (call("CHERICOP2.CJR",@{typ CHERICOP2},var_w("v87",5),@{theory}),
                     call
                       ("dfn'CJR",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v87",5),
                        @{theory})),
                    (call
                       ("CHERICOP2.CLE",@{typ CHERICOP2},
                        var("v88",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CLE",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v88",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CLEU",@{typ CHERICOP2},
                        var("v89",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CLEU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v89",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CLLC",@{typ CHERICOP2},
                        var("v90",@{typ "5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CLLC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v90",@{typ "5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CLLx",@{typ CHERICOP2},
                        var("v91",@{typ "5 word \<times> 5 word \<times> 3 word"}),@{theory}),
                     call
                       ("dfn'CLLx",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v91",@{typ "5 word \<times> 5 word \<times> 3 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CLT",@{typ CHERICOP2},
                        var("v92",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CLT",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v92",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CLTU",@{typ CHERICOP2},
                        var("v93",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CLTU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v93",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CMOVN",@{typ CHERICOP2},
                        var("v94",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CMOVN",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v94",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CMOVZ",@{typ CHERICOP2},
                        var("v95",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CMOVZ",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v95",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CMove",@{typ CHERICOP2},
                        var("v96",@{typ "5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CMove",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v96",@{typ "5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CNE",@{typ CHERICOP2},
                        var("v97",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CNE",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v97",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CNEXEQ",@{typ CHERICOP2},
                        var("v98",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CNEXEQ",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v98",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CSCC",@{typ CHERICOP2},
                        var("v99",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CSCC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v99",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CSCx",@{typ CHERICOP2},
                        var("v100",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 2 word"}),
                        @{theory}),
                     call
                       ("dfn'CSCx",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v100",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 2 word"}),
                        @{theory})),
                    (call
                       ("CHERICOP2.CSeal",@{typ CHERICOP2},
                        var("v101",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CSeal",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v101",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CSub",@{typ CHERICOP2},
                        var("v102",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CSub",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v102",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call
                       ("CHERICOP2.CUnseal",@{typ CHERICOP2},
                        var("v103",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                     call
                       ("dfn'CUnseal",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v103",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                    (call("CHERICOP2.ClearHi",@{typ CHERICOP2},var_w("v104",16),@{theory}),
                     call
                       ("dfn'ClearHi",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var_w("v104",16),@{theory})),
                    (call("CHERICOP2.ClearLo",@{typ CHERICOP2},var_w("v105",16),@{theory}),
                     call
                       ("dfn'ClearLo",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var_w("v105",16),@{theory})),
                    (call("CHERICOP2.CCheck",@{typ CHERICOP2},var("v52",@{typ CCheck}),@{theory}),
                     cs(var("v52",@{typ CCheck}),
                        [(call
                            ("CCheck.CCheckPerm",@{typ CCheck},
                             var("v53",@{typ "5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CCheckPerm",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v53",@{typ "5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CCheck.CCheckType",@{typ CCheck},
                             var("v54",@{typ "5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CCheckType",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v54",@{typ "5 word \<times> 5 word"}),@{theory}))],@{context})),
                    (call("CHERICOP2.CGet",@{typ CHERICOP2},var("v55",@{typ CGet}),@{theory}),
                     cs(var("v55",@{typ CGet}),
                        [(call
                            ("CGet.CGetBase",@{typ CGet},var("v56",@{typ "5 word \<times> 5 word"}),
                             @{theory}),
                          call
                            ("dfn'CGetBase",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v56",@{typ "5 word \<times> 5 word"}),@{theory})),
                         (call("CGet.CGetCause",@{typ CGet},var_w("v57",5),@{theory}),
                          call
                            ("dfn'CGetCause",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var_w("v57",5),@{theory})),
                         (call
                            ("CGet.CGetLen",@{typ CGet},var("v58",@{typ "5 word \<times> 5 word"}),
                             @{theory}),
                          call
                            ("dfn'CGetLen",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v58",@{typ "5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CGet.CGetOffset",@{typ CGet},
                             var("v59",@{typ "5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CGetOffset",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v59",@{typ "5 word \<times> 5 word"}),@{theory})),
                         (call("CGet.CGetPCC",@{typ CGet},var_w("v60",5),@{theory}),
                          call
                            ("dfn'CGetPCC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var_w("v60",5),@{theory})),
                         (call
                            ("CGet.CGetPCCSetOffset",@{typ CGet},
                             var("v61",@{typ "5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CGetPCCSetOffset",
                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v61",@{typ "5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CGet.CGetPerm",@{typ CGet},var("v62",@{typ "5 word \<times> 5 word"}),
                             @{theory}),
                          call
                            ("dfn'CGetPerm",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v62",@{typ "5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CGet.CGetSealed",@{typ CGet},
                             var("v63",@{typ "5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CGetSealed",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v63",@{typ "5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CGet.CGetTag",@{typ CGet},var("v64",@{typ "5 word \<times> 5 word"}),
                             @{theory}),
                          call
                            ("dfn'CGetTag",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v64",@{typ "5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CGet.CGetType",@{typ CGet},var("v65",@{typ "5 word \<times> 5 word"}),
                             @{theory}),
                          call
                            ("dfn'CGetType",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v65",@{typ "5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CGet.CToPtr",@{typ CGet},
                             var("v66",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CToPtr",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v66",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}))],
                        @{context})),
                    (call("CHERICOP2.CSet",@{typ CHERICOP2},var("v67",@{typ CSet}),@{theory}),
                     cs(var("v67",@{typ CSet}),
                        [(call
                            ("CSet.CAndPerm",@{typ CSet},
                             var("v68",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CAndPerm",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v68",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CSet.CClearTag",@{typ CSet},
                             var("v69",@{typ "5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CClearTag",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v69",@{typ "5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CSet.CFromPtr",@{typ CSet},
                             var("v70",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CFromPtr",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v70",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CSet.CIncOffset",@{typ CSet},
                             var("v71",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CIncOffset",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v71",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CSet.CIncOffsetImmediate",@{typ CSet},
                             var("v72",@{typ "5 word \<times> 5 word \<times> 11 word"}),@{theory}),
                          call
                            ("dfn'CIncOffsetImmediate",
                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v72",@{typ "5 word \<times> 5 word \<times> 11 word"}),@{theory})),
                         (call
                            ("CSet.CSetBounds",@{typ CSet},
                             var("v73",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CSetBounds",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v73",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CSet.CSetBoundsExact",@{typ CSet},
                             var("v74",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CSetBoundsExact",
                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v74",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
                         (call
                            ("CSet.CSetBoundsImmediate",@{typ CSet},
                             var("v75",@{typ "5 word \<times> 5 word \<times> 11 word"}),@{theory}),
                          call
                            ("dfn'CSetBoundsImmediate",
                             @{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v75",@{typ "5 word \<times> 5 word \<times> 11 word"}),@{theory})),
                         (call("CSet.CSetCause",@{typ CSet},var_w("v76",5),@{theory}),
                          call
                            ("dfn'CSetCause",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var_w("v76",5),@{theory})),
                         (call
                            ("CSet.CSetOffset",@{typ CSet},
                             var("v77",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                          call
                            ("dfn'CSetOffset",@{typ "state \<Rightarrow> (unit \<times> state)"},
                             var("v77",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}))],
                        @{context}))],@{context}))],@{context})),
          (call("instruction.CP",@{typ instruction},var("v106",@{typ CP}),@{theory}),
           cs(var("v106",@{typ CP}),
              [(call
                  ("CP.DMFC0",@{typ CP},var("v107",@{typ "5 word \<times> 5 word \<times> 3 word"}),
                   @{theory}),
                call
                  ("dfn'DMFC0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v107",@{typ "5 word \<times> 5 word \<times> 3 word"}),@{theory})),
               (call
                  ("CP.DMTC0",@{typ CP},var("v108",@{typ "5 word \<times> 5 word \<times> 3 word"}),
                   @{theory}),
                call
                  ("dfn'DMTC0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v108",@{typ "5 word \<times> 5 word \<times> 3 word"}),@{theory})),
               (call
                  ("CP.MFC0",@{typ CP},var("v109",@{typ "5 word \<times> 5 word \<times> 3 word"}),
                   @{theory}),
                call
                  ("dfn'MFC0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v109",@{typ "5 word \<times> 5 word \<times> 3 word"}),@{theory})),
               (call
                  ("CP.MTC0",@{typ CP},var("v110",@{typ "5 word \<times> 5 word \<times> 3 word"}),
                   @{theory}),
                call
                  ("dfn'MTC0",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v110",@{typ "5 word \<times> 5 word \<times> 3 word"}),@{theory}))],
              @{context})),
          (call("instruction.LDC2",@{typ instruction},var("v111",@{typ LDC2}),@{theory}),
           cs(var("v111",@{typ LDC2}),
              [(call("LDC2.CHERILDC2",@{typ LDC2},var("v112",@{typ CHERILDC2}),@{theory}),
                cs(var("v112",@{typ CHERILDC2}),
                   [(call
                       ("CHERILDC2.CLC",@{typ CHERILDC2},
                        var("v113",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 11 word"}),
                        @{theory}),
                     call
                       ("dfn'CLC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v113",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 11 word"}),
                        @{theory}))],@{context}))],@{context})),
          (call("instruction.LWC2",@{typ instruction},var("v114",@{typ LWC2}),@{theory}),
           cs(var("v114",@{typ LWC2}),
              [(call("LWC2.CHERILWC2",@{typ LWC2},var("v115",@{typ CHERILWC2}),@{theory}),
                cs(var("v115",@{typ CHERILWC2}),
                   [(call
                       ("CHERILWC2.CLoad",@{typ CHERILWC2},
                        var("v116",
                            @{typ
                            "5 word \<times>
                             5 word \<times> 5 word \<times> 8 word \<times> 1 word \<times> 2 word"}),
                        @{theory}),
                     call
                       ("dfn'CLoad",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v116",
                            @{typ
                            "5 word \<times>
                             5 word \<times> 5 word \<times> 8 word \<times> 1 word \<times> 2 word"}),
                        @{theory}))],@{context}))],@{context})),
          (call("instruction.Load",@{typ instruction},var("v117",@{typ Load}),@{theory}),
           cs(var("v117",@{typ Load}),
              [(call
                  ("Load.LB",@{typ Load},
                   var("v118",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LB",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v118",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LBU",@{typ Load},
                   var("v119",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LBU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v119",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LD",@{typ Load},
                   var("v120",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LD",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v120",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LDL",@{typ Load},
                   var("v121",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LDL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v121",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LDR",@{typ Load},
                   var("v122",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LDR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v122",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LH",@{typ Load},
                   var("v123",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LH",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v123",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LHU",@{typ Load},
                   var("v124",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LHU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v124",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LL",@{typ Load},
                   var("v125",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v125",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LLD",@{typ Load},
                   var("v126",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LLD",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v126",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LW",@{typ Load},
                   var("v127",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LW",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v127",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LWL",@{typ Load},
                   var("v128",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LWL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v128",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LWR",@{typ Load},
                   var("v129",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LWR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v129",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Load.LWU",@{typ Load},
                   var("v130",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'LWU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v130",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}))],
              @{context})),
          (call("instruction.MultDiv",@{typ instruction},var("v131",@{typ MultDiv}),@{theory}),
           cs(var("v131",@{typ MultDiv}),
              [(call
                  ("MultDiv.DDIV",@{typ MultDiv},var("v132",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'DDIV",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v132",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call
                  ("MultDiv.DDIVU",@{typ MultDiv},var("v133",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'DDIVU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v133",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call
                  ("MultDiv.DIV",@{typ MultDiv},var("v134",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'DIV",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v134",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call
                  ("MultDiv.DIVU",@{typ MultDiv},var("v135",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'DIVU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v135",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call
                  ("MultDiv.DMULT",@{typ MultDiv},var("v136",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'DMULT",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v136",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call
                  ("MultDiv.DMULTU",@{typ MultDiv},var("v137",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'DMULTU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v137",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call
                  ("MultDiv.MADD",@{typ MultDiv},var("v138",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'MADD",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v138",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call
                  ("MultDiv.MADDU",@{typ MultDiv},var("v139",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'MADDU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v139",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call("MultDiv.MFHI",@{typ MultDiv},var_w("v140",5),@{theory}),
                call
                  ("dfn'MFHI",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v140",5),
                   @{theory})),
               (call("MultDiv.MFLO",@{typ MultDiv},var_w("v141",5),@{theory}),
                call
                  ("dfn'MFLO",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v141",5),
                   @{theory})),
               (call
                  ("MultDiv.MSUB",@{typ MultDiv},var("v142",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'MSUB",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v142",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call
                  ("MultDiv.MSUBU",@{typ MultDiv},var("v143",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'MSUBU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v143",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call("MultDiv.MTHI",@{typ MultDiv},var_w("v144",5),@{theory}),
                call
                  ("dfn'MTHI",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v144",5),
                   @{theory})),
               (call("MultDiv.MTLO",@{typ MultDiv},var_w("v145",5),@{theory}),
                call
                  ("dfn'MTLO",@{typ "state \<Rightarrow> (unit \<times> state)"},var_w("v145",5),
                   @{theory})),
               (call
                  ("MultDiv.MUL",@{typ MultDiv},
                   var("v146",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'MUL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v146",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("MultDiv.MULT",@{typ MultDiv},var("v147",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'MULT",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v147",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call
                  ("MultDiv.MULTU",@{typ MultDiv},var("v148",@{typ "5 word \<times> 5 word"}),
                   @{theory}),
                call
                  ("dfn'MULTU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v148",@{typ "5 word \<times> 5 word"}),@{theory}))],@{context})),
          (call("instruction.SDC2",@{typ instruction},var("v149",@{typ SDC2}),@{theory}),
           cs(var("v149",@{typ SDC2}),
              [(call("SDC2.CHERISDC2",@{typ SDC2},var("v150",@{typ CHERISDC2}),@{theory}),
                cs(var("v150",@{typ CHERISDC2}),
                   [(call
                       ("CHERISDC2.CSC",@{typ CHERISDC2},
                        var("v151",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 11 word"}),
                        @{theory}),
                     call
                       ("dfn'CSC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v151",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 11 word"}),
                        @{theory}))],@{context}))],@{context})),
          (call("instruction.SWC2",@{typ instruction},var("v152",@{typ SWC2}),@{theory}),
           cs(var("v152",@{typ SWC2}),
              [(call("SWC2.CHERISWC2",@{typ SWC2},var("v153",@{typ CHERISWC2}),@{theory}),
                cs(var("v153",@{typ CHERISWC2}),
                   [(call
                       ("CHERISWC2.CStore",@{typ CHERISWC2},
                        var("v154",
                            @{typ
                            "5 word \<times> 5 word \<times> 5 word \<times> 8 word \<times> 2 word"}),
                        @{theory}),
                     call
                       ("dfn'CStore",@{typ "state \<Rightarrow> (unit \<times> state)"},
                        var("v154",
                            @{typ
                            "5 word \<times> 5 word \<times> 5 word \<times> 8 word \<times> 2 word"}),
                        @{theory}))],@{context}))],@{context})),
          (call("instruction.Shift",@{typ instruction},var("v155",@{typ Shift}),@{theory}),
           cs(var("v155",@{typ Shift}),
              [(call
                  ("Shift.DSLL",@{typ Shift},
                   var("v156",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DSLL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v156",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.DSLL32",@{typ Shift},
                   var("v157",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DSLL32",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v157",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.DSLLV",@{typ Shift},
                   var("v158",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DSLLV",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v158",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.DSRA",@{typ Shift},
                   var("v159",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DSRA",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v159",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.DSRA32",@{typ Shift},
                   var("v160",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DSRA32",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v160",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.DSRAV",@{typ Shift},
                   var("v161",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DSRAV",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v161",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.DSRL",@{typ Shift},
                   var("v162",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DSRL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v162",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.DSRL32",@{typ Shift},
                   var("v163",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DSRL32",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v163",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.DSRLV",@{typ Shift},
                   var("v164",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'DSRLV",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v164",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.SLL",@{typ Shift},
                   var("v165",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'SLL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v165",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.SLLV",@{typ Shift},
                   var("v166",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'SLLV",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v166",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.SRA",@{typ Shift},
                   var("v167",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'SRA",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v167",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.SRAV",@{typ Shift},
                   var("v168",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'SRAV",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v168",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.SRL",@{typ Shift},
                   var("v169",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'SRL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v169",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory})),
               (call
                  ("Shift.SRLV",@{typ Shift},
                   var("v170",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'SRLV",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v170",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}))],
              @{context})),
          (call("instruction.Store",@{typ instruction},var("v171",@{typ Store}),@{theory}),
           cs(var("v171",@{typ Store}),
              [(call
                  ("Store.SB",@{typ Store},
                   var("v172",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SB",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v172",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Store.SC",@{typ Store},
                   var("v173",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SC",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v173",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Store.SCD",@{typ Store},
                   var("v174",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SCD",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v174",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Store.SD",@{typ Store},
                   var("v175",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SD",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v175",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Store.SDL",@{typ Store},
                   var("v176",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SDL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v176",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Store.SDR",@{typ Store},
                   var("v177",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SDR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v177",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Store.SH",@{typ Store},
                   var("v178",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SH",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v178",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Store.SW",@{typ Store},
                   var("v179",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SW",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v179",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Store.SWL",@{typ Store},
                   var("v180",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SWL",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v180",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Store.SWR",@{typ Store},
                   var("v181",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'SWR",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v181",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}))],
              @{context})),
          (call("instruction.Trap",@{typ instruction},var("v182",@{typ Trap}),@{theory}),
           cs(var("v182",@{typ Trap}),
              [(call("Trap.TEQ",@{typ Trap},var("v183",@{typ "5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'TEQ",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v183",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call("Trap.TEQI",@{typ Trap},var("v184",@{typ "5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'TEQI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v184",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call("Trap.TGE",@{typ Trap},var("v185",@{typ "5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'TGE",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v185",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call("Trap.TGEI",@{typ Trap},var("v186",@{typ "5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'TGEI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v186",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Trap.TGEIU",@{typ Trap},var("v187",@{typ "5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'TGEIU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v187",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call("Trap.TGEU",@{typ Trap},var("v188",@{typ "5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'TGEU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v188",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call("Trap.TLT",@{typ Trap},var("v189",@{typ "5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'TLT",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v189",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call("Trap.TLTI",@{typ Trap},var("v190",@{typ "5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'TLTI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v190",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call
                  ("Trap.TLTIU",@{typ Trap},var("v191",@{typ "5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'TLTIU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v191",@{typ "5 word \<times> 16 word"}),@{theory})),
               (call("Trap.TLTU",@{typ Trap},var("v192",@{typ "5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'TLTU",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v192",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call("Trap.TNE",@{typ Trap},var("v193",@{typ "5 word \<times> 5 word"}),@{theory}),
                call
                  ("dfn'TNE",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v193",@{typ "5 word \<times> 5 word"}),@{theory})),
               (call("Trap.TNEI",@{typ Trap},var("v194",@{typ "5 word \<times> 16 word"}),@{theory}),
                call
                  ("dfn'TNEI",@{typ "state \<Rightarrow> (unit \<times> state)"},
                   var("v194",@{typ "5 word \<times> 16 word"}),@{theory}))],@{context}))],
         @{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("COP1Decode",close(var_w("v",26),call("instruction.COP1",@{typ instruction},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("COP3Decode",close(var_w("v",26),call("instruction.COP1",@{typ instruction},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("LDC1Decode",
   close
     (tp[var_w("base",5),var_w("offset",16),var_w("ft",5)],
      call("instruction.COP1",@{typ instruction},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("LWC1Decode",
   close
     (tp[var_w("base",5),var_w("offset",16),var_w("ft",5)],
      call("instruction.COP1",@{typ instruction},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SDC1Decode",
   close
     (tp[var_w("base",5),var_w("offset",16),var_w("ft",5)],
      call("instruction.COP1",@{typ instruction},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SWC1Decode",
   close
     (tp[var_w("base",5),var_w("offset",16),var_w("ft",5)],
      call("instruction.COP1",@{typ instruction},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("MOVCIDecode",
   close
     (tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
      call("instruction.COP1",@{typ instruction},lu,@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("COP2Decode",
   close
     (var_w("v",26),
      call
        ("instruction.COP2",@{typ instruction},
         call
           ("COP2.CHERICOP2",@{typ COP2},
            let'
              (tp[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21",var_b"b'20",
                  var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16",var_b"b'15",var_b"b'14",
                  var_b"b'13",var_b"b'12",var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                  var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"],
               call
                 ("boolify'26",
                  @{typ
                  "bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times>
                   bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool"},
                  var_w("v",26),@{theory}),
               itb([(var_b"b'25",
                     ite(bop(And,mop(Not,var_b"b'24"),mop(Not,var_b"b'23")),
                         itb([(bop(And,var_b"b'22",mop(Not,var_b"b'21")),
                               call
                                 ("CHERICOP2.CSet",@{typ CHERICOP2},
                                  call
                                    ("CSet.CSetBoundsImmediate",@{typ CSet},
                                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                               var_b"b'16"]),
                                        mop(Cast (Word_Lib.mk_wordT 5),
                                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                               var_b"b'11"]),
                                        mop(Cast (Word_Lib.mk_wordT 11),
                                            ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                               var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",
                                               var_b"b'2",var_b"b'1",var_b"b'0"])],@{theory}),
                                  @{theory})),
                              (bop(And,mop(Not,var_b"b'22"),var_b"b'21"),
                               call
                                 ("CHERICOP2.CSet",@{typ CHERICOP2},
                                  call
                                    ("CSet.CIncOffsetImmediate",@{typ CSet},
                                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                               var_b"b'16"]),
                                        mop(Cast (Word_Lib.mk_wordT 5),
                                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                               var_b"b'11"]),
                                        mop(Cast (Word_Lib.mk_wordT 11),
                                            ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                               var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",
                                               var_b"b'2",var_b"b'1",var_b"b'0"])],@{theory}),
                                  @{theory})),
                              (bop(And,mop(Not,var_b"b'22"),
                                   bop(And,mop(Not,var_b"b'21"),
                                       bop(And,var_b"b'3",
                                           bop(And,mop(Not,var_b"b'1"),mop(Not,var_b"b'0"))))),
                               call
                                 ("CHERICOP2.CLLx",@{typ CHERICOP2},
                                  tp[mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                            var_b"b'16"]),
                                     mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                            var_b"b'11"]),cc[mop(Cast w1,ll[var_b"b'2"]),lw(0,2)]],
                                  @{theory})),
                              (bop(And,mop(Not,var_b"b'22"),
                                   bop(And,mop(Not,var_b"b'21"),
                                       bop(And,var_b"b'3",bop(And,mop(Not,var_b"b'1"),var_b"b'0")))),
                               call
                                 ("CHERICOP2.CLLx",@{typ CHERICOP2},
                                  tp[mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                            var_b"b'16"]),
                                     mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                            var_b"b'11"]),cc[mop(Cast w1,ll[var_b"b'2"]),lw(1,2)]],
                                  @{theory})),
                              (bop(And,mop(Not,var_b"b'22"),
                                   bop(And,mop(Not,var_b"b'21"),
                                       bop(And,var_b"b'3",bop(And,var_b"b'1",mop(Not,var_b"b'0"))))),
                               call
                                 ("CHERICOP2.CLLx",@{typ CHERICOP2},
                                  tp[mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                            var_b"b'16"]),
                                     mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                            var_b"b'11"]),cc[mop(Cast w1,ll[var_b"b'2"]),lw(2,2)]],
                                  @{theory})),
                              (bop(And,mop(Not,var_b"b'22"),
                                   bop(And,mop(Not,var_b"b'21"),
                                       bop(And,var_b"b'3",
                                           bop(And,mop(Not,var_b"b'2"),
                                               bop(And,var_b"b'1",var_b"b'0"))))),
                               call
                                 ("CHERICOP2.CLLx",@{typ CHERICOP2},
                                  tp[mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                            var_b"b'16"]),
                                     mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                            var_b"b'11"]),lw(3,3)],@{theory})),
                              (bop(And,mop(Not,var_b"b'22"),
                                   bop(And,mop(Not,var_b"b'21"),
                                       bop(And,var_b"b'3",
                                           bop(And,var_b"b'2",bop(And,var_b"b'1",var_b"b'0"))))),
                               call
                                 ("CHERICOP2.CLLC",@{typ CHERICOP2},
                                  tp[mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                            var_b"b'16"]),
                                     mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                            var_b"b'11"])],@{theory})),
                              (bop(And,mop(Not,var_b"b'22"),
                                   bop(And,mop(Not,var_b"b'21"),
                                       bop(And,mop(Not,var_b"b'3"),mop(Not,var_b"b'2")))),
                               call
                                 ("CHERICOP2.CSCx",@{typ CHERICOP2},
                                  tp[mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                            var_b"b'16"]),
                                     mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                            var_b"b'11"]),
                                     mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"]),
                                     mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"b'1",var_b"b'0"])],
                                  @{theory})),
                              (bop(And,mop(Not,var_b"b'22"),
                                   bop(And,mop(Not,var_b"b'21"),
                                       bop(And,mop(Not,var_b"b'3"),
                                           bop(And,var_b"b'2",bop(And,var_b"b'1",var_b"b'0"))))),
                               call
                                 ("CHERICOP2.CSCC",@{typ CHERICOP2},
                                  tp[mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                            var_b"b'16"]),
                                     mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                            var_b"b'11"]),
                                     mop(Cast (Word_Lib.mk_wordT 5),
                                         ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                                  @{theory}))],
                             Term.Const(@{const_name "UnknownCapInstruction"},@{typ CHERICOP2})),
                         Term.Const(@{const_name "UnknownCapInstruction"},@{typ CHERICOP2}))),
                    (var_b"b'23",
                     itb([(var_b"b'24",
                           ite(bop(And,var_b"b'22",
                                   bop(And,var_b"b'21",
                                       bop(And,mop(Not,var_b"b'20"),
                                           bop(And,mop(Not,var_b"b'19"),mop(Not,var_b"b'18"))))),
                               itb([(bop(And,mop(Not,var_b"b'17"),mop(Not,var_b"b'16")),
                                     call
                                       ("CHERICOP2.ClearLo",@{typ CHERICOP2},
                                        mop(Cast w16,
                                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                               var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                                               var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                               var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                        @{theory})),
                                    (bop(And,mop(Not,var_b"b'17"),var_b"b'16"),
                                     call
                                       ("CHERICOP2.ClearHi",@{typ CHERICOP2},
                                        mop(Cast w16,
                                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                               var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                                               var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                               var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                        @{theory})),
                                    (bop(And,var_b"b'17",mop(Not,var_b"b'16")),
                                     call
                                       ("CHERICOP2.CClearLo",@{typ CHERICOP2},
                                        mop(Cast w16,
                                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                               var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                                               var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                               var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                        @{theory})),
                                    (bop(And,var_b"b'17",var_b"b'16"),
                                     call
                                       ("CHERICOP2.CClearHi",@{typ CHERICOP2},
                                        mop(Cast w16,
                                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                               var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                                               var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                               var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                        @{theory}))],
                                   Term.Const
                                     (@{const_name "UnknownCapInstruction"},@{typ CHERICOP2})),
                               Term.Const(@{const_name "UnknownCapInstruction"},@{typ CHERICOP2}))),
                          (mop(Not,var_b"b'22"),
                           itb([(bop(And,mop(Not,var_b"b'21"),
                                     bop(And,var_b"b'2",bop(And,var_b"b'1",mop(Not,var_b"b'0")))),
                                 Term.Const(@{const_name "DumpCapReg"},@{typ CHERICOP2})),
                                (bop(And,var_b"b'21",
                                     bop(And,mop(Not,var_b"b'10"),
                                         bop(And,mop(Not,var_b"b'9"),
                                             bop(And,mop(Not,var_b"b'8"),
                                                 bop(And,mop(Not,var_b"b'7"),
                                                     bop(And,mop(Not,var_b"b'6"),
                                                         bop(And,mop(Not,var_b"b'5"),
                                                             bop(And,mop(Not,var_b"b'4"),
                                                                 bop(And,mop(Not,var_b"b'3"),
                                                                     bop(And,mop(Not,var_b"b'2"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'1"),
                                                                             var_b"b'0"))))))))))),
                                 call
                                   ("CHERICOP2.CCallFast",@{typ CHERICOP2},
                                    tp[mop(Cast (Word_Lib.mk_wordT 5),
                                           ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                              var_b"b'16"]),
                                       mop(Cast (Word_Lib.mk_wordT 5),
                                           ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                              var_b"b'11"])],@{theory})),
                                (bop(And,var_b"b'21",
                                     bop(And,mop(Not,var_b"b'20"),
                                         bop(And,mop(Not,var_b"b'19"),
                                             bop(And,mop(Not,var_b"b'18"),
                                                 bop(And,mop(Not,var_b"b'17"),
                                                     bop(And,mop(Not,var_b"b'16"),
                                                         bop(And,mop(Not,var_b"b'15"),
                                                             bop(And,mop(Not,var_b"b'14"),
                                                                 bop(And,mop(Not,var_b"b'13"),
                                                                     bop(And,mop(Not,var_b"b'12"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'11"),
                                                                             bop(And,var_b"b'10",
                                                                                 bop(And,var_b"b'9",
                                                                                     bop(And,
                                                                                         var_b"b'8",
                                                                                         bop(And,
                                                                                             var_b"b'7",
                                                                                             bop(And,
                                                                                                 var_b"b'6",
                                                                                                 bop(And,
                                                                                                     var_b"b'5",
                                                                                                     bop(And,
                                                                                                         var_b"b'4",
                                                                                                         bop(And,
                                                                                                             var_b"b'3",
                                                                                                             bop(And,
                                                                                                                 var_b"b'2",
                                                                                                                 bop(And,
                                                                                                                     var_b"b'1",
                                                                                                                     var_b"b'0"))))))))))))))))))))),
                                 Term.Const(@{const_name "CReturn"},@{typ CHERICOP2})),
                                (var_b"b'21",
                                 call
                                   ("CHERICOP2.CCall",@{typ CHERICOP2},
                                    tp[mop(Cast (Word_Lib.mk_wordT 5),
                                           ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                              var_b"b'16"]),
                                       mop(Cast (Word_Lib.mk_wordT 5),
                                           ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                              var_b"b'11"]),
                                       mop(Cast (Word_Lib.mk_wordT 11),
                                           ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                              var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",
                                              var_b"b'2",var_b"b'1",var_b"b'0"])],@{theory}))],
                               Term.Const(@{const_name "UnknownCapInstruction"},@{typ CHERICOP2})))],
                         Term.Const(@{const_name "UnknownCapInstruction"},@{typ CHERICOP2}))),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,mop(Not,var_b"b'9"),
                                         bop(And,mop(Not,var_b"b'8"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CGet",@{typ CHERICOP2},
                        call
                          ("CGet.CGetPerm",@{typ CGet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,mop(Not,var_b"b'9"),
                                         bop(And,mop(Not,var_b"b'8"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,var_b"b'6",
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CGet",@{typ CHERICOP2},
                        call
                          ("CGet.CGetType",@{typ CGet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,mop(Not,var_b"b'9"),
                                         bop(And,mop(Not,var_b"b'8"),
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CGet",@{typ CHERICOP2},
                        call
                          ("CGet.CGetBase",@{typ CGet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,mop(Not,var_b"b'9"),
                                         bop(And,mop(Not,var_b"b'8"),
                                             bop(And,var_b"b'7",
                                                 bop(And,var_b"b'6",
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CGet",@{typ CHERICOP2},
                        call
                          ("CGet.CGetLen",@{typ CGet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,mop(Not,var_b"b'9"),
                                         bop(And,var_b"b'8",
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CGet",@{typ CHERICOP2},
                        call
                          ("CGet.CGetTag",@{typ CGet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,mop(Not,var_b"b'9"),
                                         bop(And,var_b"b'8",
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,var_b"b'6",
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CGet",@{typ CHERICOP2},
                        call
                          ("CGet.CGetSealed",@{typ CGet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,mop(Not,var_b"b'9"),
                                         bop(And,var_b"b'8",
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CGet",@{typ CHERICOP2},
                        call
                          ("CGet.CGetOffset",@{typ CGet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'15"),
                                     bop(And,mop(Not,var_b"b'14"),
                                         bop(And,mop(Not,var_b"b'13"),
                                             bop(And,mop(Not,var_b"b'12"),
                                                 bop(And,mop(Not,var_b"b'11"),
                                                     bop(And,var_b"b'10",
                                                         bop(And,var_b"b'9",
                                                             bop(And,var_b"b'8",
                                                                 bop(And,var_b"b'7",
                                                                     bop(And,var_b"b'6",
                                                                         bop(And,var_b"b'5",
                                                                             bop(And,var_b"b'4",
                                                                                 bop(And,var_b"b'3",
                                                                                     bop(And,
                                                                                         var_b"b'2",
                                                                                         bop(And,
                                                                                             var_b"b'1",
                                                                                             var_b"b'0")))))))))))))))))),
                     call
                       ("CHERICOP2.CGet",@{typ CHERICOP2},
                        call
                          ("CGet.CGetPCC",@{typ CGet},
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,mop(Not,var_b"b'9"),
                                         bop(And,var_b"b'8",
                                             bop(And,var_b"b'7",
                                                 bop(And,var_b"b'6",
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CGet",@{typ CHERICOP2},
                        call
                          ("CGet.CGetPCCSetOffset",@{typ CGet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,mop(Not,var_b"b'4"),
                                         bop(And,var_b"b'3",
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,var_b"b'1",var_b"b'0")))))))),
                     call
                       ("CHERICOP2.CSeal",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,mop(Not,var_b"b'4"),
                                         bop(And,var_b"b'3",
                                             bop(And,var_b"b'2",
                                                 bop(And,mop(Not,var_b"b'1"),mop(Not,var_b"b'0"))))))))),
                     call
                       ("CHERICOP2.CUnseal",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,mop(Not,var_b"b'4"),
                                         bop(And,var_b"b'3",
                                             bop(And,var_b"b'2",
                                                 bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))),
                     call
                       ("CHERICOP2.CSet",@{typ CHERICOP2},
                        call
                          ("CSet.CAndPerm",@{typ CSet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,mop(Not,var_b"b'4"),
                                         bop(And,var_b"b'3",
                                             bop(And,var_b"b'2",bop(And,var_b"b'1",var_b"b'0")))))))),
                     call
                       ("CHERICOP2.CSet",@{typ CHERICOP2},
                        call
                          ("CSet.CSetOffset",@{typ CSet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,mop(Not,var_b"b'4"),
                                         bop(And,var_b"b'3",
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,mop(Not,var_b"b'1"),mop(Not,var_b"b'0"))))))))),
                     call
                       ("CHERICOP2.CSet",@{typ CHERICOP2},
                        call
                          ("CSet.CSetBounds",@{typ CSet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,mop(Not,var_b"b'4"),
                                         bop(And,var_b"b'3",
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))),
                     call
                       ("CHERICOP2.CSet",@{typ CHERICOP2},
                        call
                          ("CSet.CSetBoundsExact",@{typ CSet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,var_b"b'9",
                                         bop(And,mop(Not,var_b"b'8"),
                                             bop(And,var_b"b'7",
                                                 bop(And,var_b"b'6",
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CSet",@{typ CHERICOP2},
                        call
                          ("CSet.CClearTag",@{typ CSet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,mop(Not,var_b"b'3"),
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))),
                     call
                       ("CHERICOP2.CSet",@{typ CHERICOP2},
                        call
                          ("CSet.CIncOffset",@{typ CSet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,mop(Not,var_b"b'3"),
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))),
                     call
                       ("CHERICOP2.CGet",@{typ CHERICOP2},
                        call
                          ("CGet.CToPtr",@{typ CGet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,mop(Not,var_b"b'3"),
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,var_b"b'1",var_b"b'0")))))))),
                     call
                       ("CHERICOP2.CSet",@{typ CHERICOP2},
                        call
                          ("CSet.CFromPtr",@{typ CSet},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,mop(Not,var_b"b'4"),
                                         bop(And,var_b"b'3",
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))),
                     call
                       ("CHERICOP2.CSub",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,var_b"b'9",
                                         bop(And,mop(Not,var_b"b'8"),
                                             bop(And,var_b"b'7",
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CMove",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,var_b"b'3",
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,var_b"b'1",var_b"b'0")))))))),
                     call
                       ("CHERICOP2.CMOVZ",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,var_b"b'3",
                                             bop(And,var_b"b'2",
                                                 bop(And,mop(Not,var_b"b'1"),mop(Not,var_b"b'0"))))))))),
                     call
                       ("CHERICOP2.CMOVN",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,mop(Not,var_b"b'3"),
                                             bop(And,var_b"b'2",
                                                 bop(And,mop(Not,var_b"b'1"),mop(Not,var_b"b'0"))))))))),
                     call
                       ("CHERICOP2.CEQ",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,mop(Not,var_b"b'3"),
                                             bop(And,var_b"b'2",
                                                 bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))),
                     call
                       ("CHERICOP2.CNE",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,mop(Not,var_b"b'3"),
                                             bop(And,var_b"b'2",
                                                 bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))),
                     call
                       ("CHERICOP2.CLT",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,mop(Not,var_b"b'3"),
                                             bop(And,var_b"b'2",bop(And,var_b"b'1",var_b"b'0")))))))),
                     call
                       ("CHERICOP2.CLE",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,var_b"b'3",
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,mop(Not,var_b"b'1"),mop(Not,var_b"b'0"))))))))),
                     call
                       ("CHERICOP2.CLTU",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,var_b"b'3",
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))),
                     call
                       ("CHERICOP2.CLEU",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'5"),
                                     bop(And,var_b"b'4",
                                         bop(And,var_b"b'3",
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))),
                     call
                       ("CHERICOP2.CEXEQ",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,var_b"b'5",
                                     bop(And,mop(Not,var_b"b'4"),
                                         bop(And,mop(Not,var_b"b'3"),
                                             bop(And,mop(Not,var_b"b'2"),
                                                 bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))),
                     call
                       ("CHERICOP2.CNEXEQ",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'15"),
                                     bop(And,mop(Not,var_b"b'14"),
                                         bop(And,mop(Not,var_b"b'13"),
                                             bop(And,mop(Not,var_b"b'12"),
                                                 bop(And,var_b"b'11",
                                                     bop(And,var_b"b'10",
                                                         bop(And,var_b"b'9",
                                                             bop(And,var_b"b'8",
                                                                 bop(And,var_b"b'7",
                                                                     bop(And,var_b"b'6",
                                                                         bop(And,var_b"b'5",
                                                                             bop(And,var_b"b'4",
                                                                                 bop(And,var_b"b'3",
                                                                                     bop(And,
                                                                                         var_b"b'2",
                                                                                         bop(And,
                                                                                             var_b"b'1",
                                                                                             var_b"b'0")))))))))))))))))),
                     call
                       ("CHERICOP2.CGet",@{typ CHERICOP2},
                        call
                          ("CGet.CGetCause",@{typ CGet},
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'15"),
                                     bop(And,mop(Not,var_b"b'14"),
                                         bop(And,mop(Not,var_b"b'13"),
                                             bop(And,var_b"b'12",
                                                 bop(And,mop(Not,var_b"b'11"),
                                                     bop(And,var_b"b'10",
                                                         bop(And,var_b"b'9",
                                                             bop(And,var_b"b'8",
                                                                 bop(And,var_b"b'7",
                                                                     bop(And,var_b"b'6",
                                                                         bop(And,var_b"b'5",
                                                                             bop(And,var_b"b'4",
                                                                                 bop(And,var_b"b'3",
                                                                                     bop(And,
                                                                                         var_b"b'2",
                                                                                         bop(And,
                                                                                             var_b"b'1",
                                                                                             var_b"b'0")))))))))))))))))),
                     call
                       ("CHERICOP2.CSet",@{typ CHERICOP2},
                        call
                          ("CSet.CSetCause",@{typ CSet},
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           @{theory}),@{theory})),
                    (bop(And,var_b"b'24",bop(And,mop(Not,var_b"b'22"),var_b"b'21")),
                     call
                       ("CHERICOP2.CBTU",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast w16,
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                  var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                  var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])],
                        @{theory})),
                    (bop(And,var_b"b'24",bop(And,var_b"b'22",mop(Not,var_b"b'21"))),
                     call
                       ("CHERICOP2.CBTS",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast w16,
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                  var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                  var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'15"),
                                     bop(And,mop(Not,var_b"b'14"),
                                         bop(And,mop(Not,var_b"b'13"),
                                             bop(And,var_b"b'12",
                                                 bop(And,var_b"b'11",
                                                     bop(And,var_b"b'10",
                                                         bop(And,var_b"b'9",
                                                             bop(And,var_b"b'8",
                                                                 bop(And,var_b"b'7",
                                                                     bop(And,var_b"b'6",
                                                                         bop(And,var_b"b'5",
                                                                             bop(And,var_b"b'4",
                                                                                 bop(And,var_b"b'3",
                                                                                     bop(And,
                                                                                         var_b"b'2",
                                                                                         bop(And,
                                                                                             var_b"b'1",
                                                                                             var_b"b'0")))))))))))))))))),
                     call
                       ("CHERICOP2.CJR",@{typ CHERICOP2},
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,var_b"b'9",
                                         bop(And,var_b"b'8",
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CJALR",@{typ CHERICOP2},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                        @{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,var_b"b'9",
                                         bop(And,mop(Not,var_b"b'8"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,mop(Not,var_b"b'6"),
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CCheck",@{typ CHERICOP2},
                        call
                          ("CCheck.CCheckPerm",@{typ CCheck},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'24"),
                         bop(And,mop(Not,var_b"b'22"),
                             bop(And,mop(Not,var_b"b'21"),
                                 bop(And,mop(Not,var_b"b'10"),
                                     bop(And,var_b"b'9",
                                         bop(And,mop(Not,var_b"b'8"),
                                             bop(And,mop(Not,var_b"b'7"),
                                                 bop(And,var_b"b'6",
                                                     bop(And,var_b"b'5",
                                                         bop(And,var_b"b'4",
                                                             bop(And,var_b"b'3",
                                                                 bop(And,var_b"b'2",
                                                                     bop(And,var_b"b'1",var_b"b'0"))))))))))))),
                     call
                       ("CHERICOP2.CCheck",@{typ CHERICOP2},
                        call
                          ("CCheck.CCheckType",@{typ CCheck},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                           @{theory}),@{theory}))],
                   Term.Const(@{const_name "UnknownCapInstruction"},@{typ CHERICOP2}))),@{theory}),
         @{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("LWC2Decode",
   close
     (tp[var_w("rd",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),var_w("v",3)],
      cs(call("boolify'3",@{typ "bool \<times> bool \<times> bool"},var_w("v",3),@{theory}),
         [(tp[lf,var_b"t'1",var_b"t'0"],
           call
             ("instruction.LWC2",@{typ instruction},
              call
                ("LWC2.CHERILWC2",@{typ LWC2},
                 call
                   ("CHERILWC2.CLoad",@{typ CHERILWC2},
                    tp[var_w("rd",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),lw(0,1),
                       mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"t'1",var_b"t'0"])],@{theory}),
                 @{theory}),@{theory})),
          (tp[lt,lf,lf],
           call
             ("instruction.LWC2",@{typ instruction},
              call
                ("LWC2.CHERILWC2",@{typ LWC2},
                 call
                   ("CHERILWC2.CLoad",@{typ CHERILWC2},
                    tp[var_w("rd",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),lw(1,1),lw(0,2)],
                    @{theory}),@{theory}),@{theory})),
          (tp[lt,lf,lt],
           call
             ("instruction.LWC2",@{typ instruction},
              call
                ("LWC2.CHERILWC2",@{typ LWC2},
                 call
                   ("CHERILWC2.CLoad",@{typ CHERILWC2},
                    tp[var_w("rd",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),lw(1,1),lw(1,2)],
                    @{theory}),@{theory}),@{theory})),
          (tp[lt,lt,lf],
           call
             ("instruction.LWC2",@{typ instruction},
              call
                ("LWC2.CHERILWC2",@{typ LWC2},
                 call
                   ("CHERILWC2.CLoad",@{typ CHERILWC2},
                    tp[var_w("rd",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),lw(1,1),lw(2,2)],
                    @{theory}),@{theory}),@{theory})),
          (tp[var_a HOLogic.boolT,var_a HOLogic.boolT,var_a HOLogic.boolT],
           call
             ("instruction.COP2",@{typ instruction},
              call
                ("COP2.CHERICOP2",@{typ COP2},
                 Term.Const(@{const_name "UnknownCapInstruction"},@{typ CHERICOP2}),@{theory}),
              @{theory}))],@{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SWC2Decode",
   close
     (tp[var_w("rs",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),var_w("v",3)],
      cs(call("boolify'3",@{typ "bool \<times> bool \<times> bool"},var_w("v",3),@{theory}),
         [(tp[lf,var_b"t'1",var_b"t'0"],
           call
             ("instruction.SWC2",@{typ instruction},
              call
                ("SWC2.CHERISWC2",@{typ SWC2},
                 call
                   ("CHERISWC2.CStore",@{typ CHERISWC2},
                    tp[var_w("rs",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),
                       mop(Cast (Word_Lib.mk_wordT 2),ll[var_b"t'1",var_b"t'0"])],@{theory}),
                 @{theory}),@{theory})),
          (tp[var_a HOLogic.boolT,var_a HOLogic.boolT,var_a HOLogic.boolT],
           call
             ("instruction.COP2",@{typ instruction},
              call
                ("COP2.CHERICOP2",@{typ COP2},
                 Term.Const(@{const_name "UnknownCapInstruction"},@{typ CHERICOP2}),@{theory}),
              @{theory}))],@{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("LDC2Decode",
   close
     (var("a",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 11 word"}),
      call
        ("instruction.LDC2",@{typ instruction},
         call
           ("LDC2.CHERILDC2",@{typ LDC2},
            call
              ("CHERILDC2.CLC",@{typ CHERILDC2},
               var("a",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 11 word"}),@{theory}),
            @{theory}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SDC2Decode",
   close
     (var("a",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 11 word"}),
      call
        ("instruction.SDC2",@{typ instruction},
         call
           ("SDC2.CHERISDC2",@{typ SDC2},
            call
              ("CHERISDC2.CSC",@{typ CHERISDC2},
               var("a",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 11 word"}),@{theory}),
            @{theory}),@{theory})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("Decode",
   close
     (var_w("w",32),
      let'
        (tp[var_b"b'31",var_b"b'30",var_b"b'29",var_b"b'28",var_b"b'27",var_b"b'26",var_b"b'25",
            var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21",var_b"b'20",var_b"b'19",var_b"b'18",
            var_b"b'17",var_b"b'16",var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
            var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
            var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"],
         call
           ("boolify'32",
            @{typ
            "bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times>
             bool \<times> bool \<times> bool \<times> bool \<times> bool \<times> bool"},
            var_w("w",32),@{theory}),
         itb([(var_b"b'26",
               itb([(var_b"b'28",
                     itb([(var_b"b'31",
                           itb([(var_b"b'30",
                                 itb([(bop(And,mop(Not,var_b"b'29"),var_b"b'27"),
                                       call
                                         ("instruction.Load",@{typ instruction},
                                          call
                                            ("Load.LD",@{typ Load},
                                             tp[mop(Cast (Word_Lib.mk_wordT 5),
                                                    ll[var_b"b'25",var_b"b'24",var_b"b'23",
                                                       var_b"b'22",var_b"b'21"]),
                                                mop(Cast (Word_Lib.mk_wordT 5),
                                                    ll[var_b"b'20",var_b"b'19",var_b"b'18",
                                                       var_b"b'17",var_b"b'16"]),
                                                mop(Cast w16,
                                                    ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                       var_b"b'12",var_b"b'11",var_b"b'10",
                                                       var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                                       var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                                       var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                                      (bop(And,var_b"b'29",var_b"b'27"),
                                       call
                                         ("instruction.Store",@{typ instruction},
                                          call
                                            ("Store.SD",@{typ Store},
                                             tp[mop(Cast (Word_Lib.mk_wordT 5),
                                                    ll[var_b"b'25",var_b"b'24",var_b"b'23",
                                                       var_b"b'22",var_b"b'21"]),
                                                mop(Cast (Word_Lib.mk_wordT 5),
                                                    ll[var_b"b'20",var_b"b'19",var_b"b'18",
                                                       var_b"b'17",var_b"b'16"]),
                                                mop(Cast w16,
                                                    ll[var_b"b'15",var_b"b'14",var_b"b'13",
                                                       var_b"b'12",var_b"b'11",var_b"b'10",
                                                       var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                                       var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                                       var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                                      (bop(And,mop(Not,var_b"b'29"),mop(Not,var_b"b'27")),
                                       call
                                         ("LDC1Decode",@{typ instruction},
                                          tp[mop(Cast (Word_Lib.mk_wordT 5),
                                                 ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                                    var_b"b'16"]),
                                             mop(Cast w16,
                                                 ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                                    var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                                                    var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                                    var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                             mop(Cast (Word_Lib.mk_wordT 5),
                                                 ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                                    var_b"b'21"])],@{theory})),
                                      (bop(And,var_b"b'29",mop(Not,var_b"b'27")),
                                       call
                                         ("SDC1Decode",@{typ instruction},
                                          tp[mop(Cast (Word_Lib.mk_wordT 5),
                                                 ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                                    var_b"b'16"]),
                                             mop(Cast w16,
                                                 ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                                    var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                                                    var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                                    var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                                             mop(Cast (Word_Lib.mk_wordT 5),
                                                 ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                                    var_b"b'21"])],@{theory}))],
                                     Term.Const
                                       (@{const_name "ReservedInstruction"},@{typ instruction}))),
                                (bop(And,mop(Not,var_b"b'29"),mop(Not,var_b"b'27")),
                                 call
                                   ("instruction.Load",@{typ instruction},
                                    call
                                      ("Load.LHU",@{typ Load},
                                       tp[mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                                 var_b"b'21"]),
                                          mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                                 var_b"b'16"]),
                                          mop(Cast w16,
                                              ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                                 var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                                                 var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                                 var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])],
                                       @{theory}),@{theory})),
                                (bop(And,mop(Not,var_b"b'29"),var_b"b'27"),
                                 call
                                   ("instruction.Load",@{typ instruction},
                                    call
                                      ("Load.LWU",@{typ Load},
                                       tp[mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                                 var_b"b'21"]),
                                          mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                                 var_b"b'16"]),
                                          mop(Cast w16,
                                              ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                                 var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                                                 var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                                 var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])],
                                       @{theory}),@{theory})),
                                (bop(And,var_b"b'29",mop(Not,var_b"b'27")),
                                 call
                                   ("instruction.Store",@{typ instruction},
                                    call
                                      ("Store.SDR",@{typ Store},
                                       tp[mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                                 var_b"b'21"]),
                                          mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                                 var_b"b'16"]),
                                          mop(Cast w16,
                                              ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                                 var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                                                 var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                                 var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])],
                                       @{theory}),@{theory})),
                                (bop(And,var_b"b'29",var_b"b'27"),
                                 call
                                   ("instruction.CACHE",@{typ instruction},
                                    tp[mop(Cast (Word_Lib.mk_wordT 5),
                                           ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                              var_b"b'21"]),
                                       mop(Cast (Word_Lib.mk_wordT 5),
                                           ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                              var_b"b'16"]),
                                       mop(Cast w16,
                                           ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                              var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                                              var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                              var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])],
                                    @{theory}))],
                               Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}))),
                          (bop(And,mop(Not,var_b"b'30"),
                               bop(And,mop(Not,var_b"b'29"),
                                   bop(And,var_b"b'27",
                                       bop(And,mop(Not,var_b"b'20"),
                                           bop(And,mop(Not,var_b"b'19"),
                                               bop(And,mop(Not,var_b"b'18"),
                                                   bop(And,mop(Not,var_b"b'17"),mop(Not,var_b"b'16")))))))),
                           call
                             ("instruction.Branch",@{typ instruction},
                              call
                                ("Branch.BGTZ",@{typ Branch},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,mop(Not,var_b"b'30"),
                               bop(And,var_b"b'29",
                                   bop(And,var_b"b'27",
                                       bop(And,mop(Not,var_b"b'25"),
                                           bop(And,mop(Not,var_b"b'24"),
                                               bop(And,mop(Not,var_b"b'23"),
                                                   bop(And,mop(Not,var_b"b'22"),mop(Not,var_b"b'21")))))))),
                           call
                             ("instruction.ArithI",@{typ instruction},
                              call
                                ("ArithI.LUI",@{typ ArithI},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,var_b"b'30",
                               bop(And,mop(Not,var_b"b'29"),
                                   bop(And,var_b"b'27",
                                       bop(And,mop(Not,var_b"b'20"),
                                           bop(And,mop(Not,var_b"b'19"),
                                               bop(And,mop(Not,var_b"b'18"),
                                                   bop(And,mop(Not,var_b"b'17"),mop(Not,var_b"b'16")))))))),
                           call
                             ("instruction.Branch",@{typ instruction},
                              call
                                ("Branch.BGTZL",@{typ Branch},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,mop(Not,var_b"b'30"),
                               bop(And,mop(Not,var_b"b'29"),mop(Not,var_b"b'27"))),
                           call
                             ("instruction.Branch",@{typ instruction},
                              call
                                ("Branch.BNE",@{typ Branch},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,mop(Not,var_b"b'30"),bop(And,var_b"b'29",mop(Not,var_b"b'27"))),
                           call
                             ("instruction.ArithI",@{typ instruction},
                              call
                                ("ArithI.ORI",@{typ ArithI},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,var_b"b'30",bop(And,mop(Not,var_b"b'29"),mop(Not,var_b"b'27"))),
                           call
                             ("instruction.Branch",@{typ instruction},
                              call
                                ("Branch.BNEL",@{typ Branch},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,var_b"b'30",
                               bop(And,var_b"b'29",
                                   bop(And,var_b"b'27",
                                       bop(And,mop(Not,var_b"b'25"),
                                           bop(And,mop(Not,var_b"b'24"),
                                               bop(And,mop(Not,var_b"b'23"),
                                                   bop(And,mop(Not,var_b"b'22"),
                                                       bop(And,mop(Not,var_b"b'21"),
                                                           bop(And,mop(Not,var_b"b'10"),
                                                               bop(And,mop(Not,var_b"b'9"),
                                                                   bop(And,mop(Not,var_b"b'8"),
                                                                       bop(And,mop(Not,var_b"b'7"),
                                                                           bop(And,
                                                                               mop(Not,var_b"b'6"),
                                                                               bop(And,var_b"b'5",
                                                                                   bop(And,
                                                                                       var_b"b'4",
                                                                                       bop(And,
                                                                                           var_b"b'3",
                                                                                           bop(And,
                                                                                               mop(Not,
                                                                                                   var_b"b'2"),
                                                                                               bop(And,
                                                                                                   var_b"b'1",
                                                                                                   var_b"b'0")))))))))))))))))),
                           call
                             ("instruction.RDHWR",@{typ instruction},
                              tp[mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                              @{theory}))],
                         Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}))),
                    (var_b"b'29",
                     itb([(bop(And,mop(Not,var_b"b'31"),
                               bop(And,mop(Not,var_b"b'30"),mop(Not,var_b"b'27"))),
                           call
                             ("instruction.ArithI",@{typ instruction},
                              call
                                ("ArithI.ADDIU",@{typ ArithI},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,mop(Not,var_b"b'31"),bop(And,mop(Not,var_b"b'30"),var_b"b'27")),
                           call
                             ("instruction.ArithI",@{typ instruction},
                              call
                                ("ArithI.SLTIU",@{typ ArithI},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,mop(Not,var_b"b'31"),bop(And,var_b"b'30",mop(Not,var_b"b'27"))),
                           call
                             ("instruction.ArithI",@{typ instruction},
                              call
                                ("ArithI.DADDIU",@{typ ArithI},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,mop(Not,var_b"b'31"),bop(And,var_b"b'30",var_b"b'27")),
                           call
                             ("instruction.Load",@{typ instruction},
                              call
                                ("Load.LDR",@{typ Load},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,var_b"b'31",bop(And,mop(Not,var_b"b'30"),mop(Not,var_b"b'27"))),
                           call
                             ("instruction.Store",@{typ instruction},
                              call
                                ("Store.SH",@{typ Store},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,var_b"b'31",bop(And,mop(Not,var_b"b'30"),var_b"b'27")),
                           call
                             ("instruction.Store",@{typ instruction},
                              call
                                ("Store.SW",@{typ Store},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,var_b"b'31",bop(And,var_b"b'30",mop(Not,var_b"b'27"))),
                           call
                             ("SWC1Decode",@{typ instruction},
                              tp[mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 mop(Cast w16,
                                     ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                        var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                        var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                        var_b"b'0"]),
                                 mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"])],
                              @{theory}))],
                         Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}))),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,mop(Not,var_b"b'20"),
                                     bop(And,mop(Not,var_b"b'19"),
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,mop(Not,var_b"b'17"),mop(Not,var_b"b'16")))))))),
                     call
                       ("instruction.Branch",@{typ instruction},
                        call
                          ("Branch.BLTZ",@{typ Branch},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,mop(Not,var_b"b'20"),
                                     bop(And,mop(Not,var_b"b'19"),
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,mop(Not,var_b"b'17"),var_b"b'16"))))))),
                     call
                       ("instruction.Branch",@{typ instruction},
                        call
                          ("Branch.BGEZ",@{typ Branch},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,mop(Not,var_b"b'20"),
                                     bop(And,mop(Not,var_b"b'19"),
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,var_b"b'17",mop(Not,var_b"b'16")))))))),
                     call
                       ("instruction.Branch",@{typ instruction},
                        call
                          ("Branch.BLTZL",@{typ Branch},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,mop(Not,var_b"b'20"),
                                     bop(And,mop(Not,var_b"b'19"),
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,var_b"b'17",var_b"b'16"))))))),
                     call
                       ("instruction.Branch",@{typ instruction},
                        call
                          ("Branch.BGEZL",@{typ Branch},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,mop(Not,var_b"b'20"),
                                     bop(And,var_b"b'19",
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,mop(Not,var_b"b'17"),mop(Not,var_b"b'16")))))))),
                     call
                       ("instruction.Trap",@{typ instruction},
                        call
                          ("Trap.TGEI",@{typ Trap},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,mop(Not,var_b"b'20"),
                                     bop(And,var_b"b'19",
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,mop(Not,var_b"b'17"),var_b"b'16"))))))),
                     call
                       ("instruction.Trap",@{typ instruction},
                        call
                          ("Trap.TGEIU",@{typ Trap},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,mop(Not,var_b"b'20"),
                                     bop(And,var_b"b'19",
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,var_b"b'17",mop(Not,var_b"b'16")))))))),
                     call
                       ("instruction.Trap",@{typ instruction},
                        call
                          ("Trap.TLTI",@{typ Trap},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,mop(Not,var_b"b'20"),
                                     bop(And,var_b"b'19",
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,var_b"b'17",var_b"b'16"))))))),
                     call
                       ("instruction.Trap",@{typ instruction},
                        call
                          ("Trap.TLTIU",@{typ Trap},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,mop(Not,var_b"b'20"),
                                     bop(And,var_b"b'19",
                                         bop(And,var_b"b'18",
                                             bop(And,mop(Not,var_b"b'17"),mop(Not,var_b"b'16")))))))),
                     call
                       ("instruction.Trap",@{typ instruction},
                        call
                          ("Trap.TEQI",@{typ Trap},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,mop(Not,var_b"b'20"),
                                     bop(And,var_b"b'19",
                                         bop(And,var_b"b'18",
                                             bop(And,var_b"b'17",mop(Not,var_b"b'16")))))))),
                     call
                       ("instruction.Trap",@{typ instruction},
                        call
                          ("Trap.TNEI",@{typ Trap},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,var_b"b'25",
                                     bop(And,var_b"b'24",
                                         bop(And,var_b"b'23",
                                             bop(And,var_b"b'22",
                                                 bop(And,var_b"b'21",
                                                     bop(And,var_b"b'20",
                                                         bop(And,mop(Not,var_b"b'19"),
                                                             mop(Not,var_b"b'18"))))))))))),
                     Term.Const(@{const_name "Unpredictable"},@{typ instruction})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,var_b"b'20",
                                     bop(And,mop(Not,var_b"b'19"),
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,mop(Not,var_b"b'17"),mop(Not,var_b"b'16")))))))),
                     call
                       ("instruction.Branch",@{typ instruction},
                        call
                          ("Branch.BLTZAL",@{typ Branch},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,var_b"b'20",
                                     bop(And,mop(Not,var_b"b'19"),
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,mop(Not,var_b"b'17"),var_b"b'16"))))))),
                     call
                       ("instruction.Branch",@{typ instruction},
                        call
                          ("Branch.BGEZAL",@{typ Branch},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,var_b"b'20",
                                     bop(And,mop(Not,var_b"b'19"),
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,var_b"b'17",mop(Not,var_b"b'16")))))))),
                     call
                       ("instruction.Branch",@{typ instruction},
                        call
                          ("Branch.BLTZALL",@{typ Branch},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),
                         bop(And,mop(Not,var_b"b'30"),
                             bop(And,mop(Not,var_b"b'27"),
                                 bop(And,var_b"b'20",
                                     bop(And,mop(Not,var_b"b'19"),
                                         bop(And,mop(Not,var_b"b'18"),
                                             bop(And,var_b"b'17",var_b"b'16"))))))),
                     call
                       ("instruction.Branch",@{typ instruction},
                        call
                          ("Branch.BGEZALL",@{typ Branch},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),bop(And,mop(Not,var_b"b'30"),var_b"b'27")),
                     call
                       ("instruction.Branch",@{typ instruction},
                        call
                          ("Branch.JAL",@{typ Branch},
                           mop(Cast (Word_Lib.mk_wordT 26),
                               ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21",
                                  var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16",
                                  var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                  var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                  var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                           @{theory}),@{theory})),
                    (bop(And,var_b"b'31",bop(And,mop(Not,var_b"b'30"),mop(Not,var_b"b'27"))),
                     call
                       ("instruction.Load",@{typ instruction},
                        call
                          ("Load.LH",@{typ Load},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,var_b"b'31",bop(And,mop(Not,var_b"b'30"),var_b"b'27")),
                     call
                       ("instruction.Load",@{typ instruction},
                        call
                          ("Load.LW",@{typ Load},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),bop(And,var_b"b'30",mop(Not,var_b"b'27"))),
                     call
                       ("COP1Decode",@{typ instruction},
                        mop(Cast (Word_Lib.mk_wordT 26),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21",
                               var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16",
                               var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                               var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",
                               var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),@{theory})),
                    (bop(And,mop(Not,var_b"b'31"),bop(And,var_b"b'30",var_b"b'27")),
                     call
                       ("COP3Decode",@{typ instruction},
                        mop(Cast (Word_Lib.mk_wordT 26),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21",
                               var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16",
                               var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                               var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",
                               var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),@{theory})),
                    (bop(And,var_b"b'31",bop(And,var_b"b'30",mop(Not,var_b"b'27"))),
                     call
                       ("LWC1Decode",@{typ instruction},
                        tp[mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                           mop(Cast w16,
                               ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                  var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                  var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),
                           mop(Cast (Word_Lib.mk_wordT 5),
                               ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"])],
                        @{theory}))],
                   Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}))),
              (var_b"b'30",
               itb([(var_b"b'29",
                     itb([(var_b"b'28",
                           itb([(bop(And,mop(Not,var_b"b'31"),
                                     bop(And,mop(Not,var_b"b'27"),
                                         bop(And,mop(Not,var_b"b'15"),
                                             bop(And,mop(Not,var_b"b'14"),
                                                 bop(And,mop(Not,var_b"b'13"),
                                                     bop(And,mop(Not,var_b"b'12"),
                                                         bop(And,mop(Not,var_b"b'11"),
                                                             bop(And,mop(Not,var_b"b'10"),
                                                                 bop(And,mop(Not,var_b"b'9"),
                                                                     bop(And,mop(Not,var_b"b'8"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'7"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'6"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'5"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'4"),
                                                                                         bop(And,
                                                                                             mop(Not,
                                                                                                 var_b"b'3"),
                                                                                             bop(And,
                                                                                                 mop(Not,
                                                                                                     var_b"b'2"),
                                                                                                 bop(And,
                                                                                                     mop(Not,
                                                                                                         var_b"b'1"),
                                                                                                     mop(Not,
                                                                                                         var_b"b'0")))))))))))))))))),
                                 call
                                   ("instruction.MultDiv",@{typ instruction},
                                    call
                                      ("MultDiv.MADD",@{typ MultDiv},
                                       tp[mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                                 var_b"b'21"]),
                                          mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                                 var_b"b'16"])],@{theory}),@{theory})),
                                (bop(And,mop(Not,var_b"b'31"),
                                     bop(And,mop(Not,var_b"b'27"),
                                         bop(And,mop(Not,var_b"b'15"),
                                             bop(And,mop(Not,var_b"b'14"),
                                                 bop(And,mop(Not,var_b"b'13"),
                                                     bop(And,mop(Not,var_b"b'12"),
                                                         bop(And,mop(Not,var_b"b'11"),
                                                             bop(And,mop(Not,var_b"b'10"),
                                                                 bop(And,mop(Not,var_b"b'9"),
                                                                     bop(And,mop(Not,var_b"b'8"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'7"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'6"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'5"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'4"),
                                                                                         bop(And,
                                                                                             mop(Not,
                                                                                                 var_b"b'3"),
                                                                                             bop(And,
                                                                                                 mop(Not,
                                                                                                     var_b"b'2"),
                                                                                                 bop(And,
                                                                                                     mop(Not,
                                                                                                         var_b"b'1"),
                                                                                                     var_b"b'0"))))))))))))))))),
                                 call
                                   ("instruction.MultDiv",@{typ instruction},
                                    call
                                      ("MultDiv.MADDU",@{typ MultDiv},
                                       tp[mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                                 var_b"b'21"]),
                                          mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                                 var_b"b'16"])],@{theory}),@{theory})),
                                (bop(And,mop(Not,var_b"b'31"),
                                     bop(And,mop(Not,var_b"b'27"),
                                         bop(And,mop(Not,var_b"b'15"),
                                             bop(And,mop(Not,var_b"b'14"),
                                                 bop(And,mop(Not,var_b"b'13"),
                                                     bop(And,mop(Not,var_b"b'12"),
                                                         bop(And,mop(Not,var_b"b'11"),
                                                             bop(And,mop(Not,var_b"b'10"),
                                                                 bop(And,mop(Not,var_b"b'9"),
                                                                     bop(And,mop(Not,var_b"b'8"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'7"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'6"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'5"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'4"),
                                                                                         bop(And,
                                                                                             mop(Not,
                                                                                                 var_b"b'3"),
                                                                                             bop(And,
                                                                                                 var_b"b'2",
                                                                                                 bop(And,
                                                                                                     mop(Not,
                                                                                                         var_b"b'1"),
                                                                                                     mop(Not,
                                                                                                         var_b"b'0")))))))))))))))))),
                                 call
                                   ("instruction.MultDiv",@{typ instruction},
                                    call
                                      ("MultDiv.MSUB",@{typ MultDiv},
                                       tp[mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                                 var_b"b'21"]),
                                          mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                                 var_b"b'16"])],@{theory}),@{theory})),
                                (bop(And,mop(Not,var_b"b'31"),
                                     bop(And,mop(Not,var_b"b'27"),
                                         bop(And,mop(Not,var_b"b'15"),
                                             bop(And,mop(Not,var_b"b'14"),
                                                 bop(And,mop(Not,var_b"b'13"),
                                                     bop(And,mop(Not,var_b"b'12"),
                                                         bop(And,mop(Not,var_b"b'11"),
                                                             bop(And,mop(Not,var_b"b'10"),
                                                                 bop(And,mop(Not,var_b"b'9"),
                                                                     bop(And,mop(Not,var_b"b'8"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'7"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'6"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'5"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'4"),
                                                                                         bop(And,
                                                                                             mop(Not,
                                                                                                 var_b"b'3"),
                                                                                             bop(And,
                                                                                                 var_b"b'2",
                                                                                                 bop(And,
                                                                                                     mop(Not,
                                                                                                         var_b"b'1"),
                                                                                                     var_b"b'0"))))))))))))))))),
                                 call
                                   ("instruction.MultDiv",@{typ instruction},
                                    call
                                      ("MultDiv.MSUBU",@{typ MultDiv},
                                       tp[mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                                 var_b"b'21"]),
                                          mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                                 var_b"b'16"])],@{theory}),@{theory})),
                                (bop(And,mop(Not,var_b"b'31"),
                                     bop(And,mop(Not,var_b"b'27"),
                                         bop(And,mop(Not,var_b"b'10"),
                                             bop(And,mop(Not,var_b"b'9"),
                                                 bop(And,mop(Not,var_b"b'8"),
                                                     bop(And,mop(Not,var_b"b'7"),
                                                         bop(And,mop(Not,var_b"b'6"),
                                                             bop(And,mop(Not,var_b"b'5"),
                                                                 bop(And,mop(Not,var_b"b'4"),
                                                                     bop(And,mop(Not,var_b"b'3"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'2"),
                                                                             bop(And,var_b"b'1",
                                                                                 mop(Not,var_b"b'0"))))))))))))),
                                 call
                                   ("instruction.MultDiv",@{typ instruction},
                                    call
                                      ("MultDiv.MUL",@{typ MultDiv},
                                       tp[mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                                 var_b"b'21"]),
                                          mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                                 var_b"b'16"]),
                                          mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                                 var_b"b'11"])],@{theory}),@{theory})),
                                (bop(And,var_b"b'31",mop(Not,var_b"b'27")),
                                 call
                                   ("instruction.Store",@{typ instruction},
                                    call
                                      ("Store.SCD",@{typ Store},
                                       tp[mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                                 var_b"b'21"]),
                                          mop(Cast (Word_Lib.mk_wordT 5),
                                              ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                                 var_b"b'16"]),
                                          mop(Cast w16,
                                              ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                                 var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                                                 var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",
                                                 var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])],
                                       @{theory}),@{theory})),
                                (bop(And,var_b"b'31",var_b"b'27"),
                                 call
                                   ("SDC2Decode",@{typ instruction},
                                    tp[mop(Cast (Word_Lib.mk_wordT 5),
                                           ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                              var_b"b'21"]),
                                       mop(Cast (Word_Lib.mk_wordT 5),
                                           ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                              var_b"b'16"]),
                                       mop(Cast (Word_Lib.mk_wordT 5),
                                           ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                              var_b"b'11"]),
                                       mop(Cast (Word_Lib.mk_wordT 11),
                                           ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                              var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",
                                              var_b"b'2",var_b"b'1",var_b"b'0"])],@{theory}))],
                               Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}))),
                          (bop(And,mop(Not,var_b"b'31"),mop(Not,var_b"b'27")),
                           call
                             ("instruction.ArithI",@{typ instruction},
                              call
                                ("ArithI.DADDI",@{typ ArithI},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,mop(Not,var_b"b'31"),var_b"b'27"),
                           call
                             ("instruction.Load",@{typ instruction},
                              call
                                ("Load.LDL",@{typ Load},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,var_b"b'31",mop(Not,var_b"b'27")),
                           call
                             ("instruction.Store",@{typ instruction},
                              call
                                ("Store.SC",@{typ Store},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,var_b"b'31",var_b"b'27"),
                           call
                             ("SWC2Decode",@{typ instruction},
                              tp[mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                                 mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                                 mop(Cast w8,
                                     ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                        var_b"b'5",var_b"b'4",var_b"b'3"]),
                                 mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"])],
                              @{theory}))],
                         Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}))),
                    (var_b"b'31",
                     itb([(bop(And,mop(Not,var_b"b'28"),mop(Not,var_b"b'27")),
                           call
                             ("instruction.Load",@{typ instruction},
                              call
                                ("Load.LL",@{typ Load},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,var_b"b'28",mop(Not,var_b"b'27")),
                           call
                             ("instruction.Load",@{typ instruction},
                              call
                                ("Load.LLD",@{typ Load},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,mop(Not,var_b"b'28"),var_b"b'27"),
                           call
                             ("LWC2Decode",@{typ instruction},
                              tp[mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                                 mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                                 mop(Cast w8,
                                     ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                        var_b"b'5",var_b"b'4",var_b"b'3"]),
                                 mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"])],
                              @{theory})),
                          (bop(And,var_b"b'28",var_b"b'27"),
                           call
                             ("LDC2Decode",@{typ instruction},
                              tp[mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                                 mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                                 mop(Cast (Word_Lib.mk_wordT 5),
                                     ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                                 mop(Cast (Word_Lib.mk_wordT 11),
                                     ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                        var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                        var_b"b'0"])],@{theory}))],
                         Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}))),
                    (bop(And,mop(Not,var_b"b'28"),
                         bop(And,mop(Not,var_b"b'27"),
                             bop(And,var_b"b'25",
                                 bop(And,mop(Not,var_b"b'24"),
                                     bop(And,mop(Not,var_b"b'23"),
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,mop(Not,var_b"b'21"),
                                                 bop(And,mop(Not,var_b"b'20"),
                                                     bop(And,mop(Not,var_b"b'19"),
                                                         bop(And,mop(Not,var_b"b'18"),
                                                             bop(And,mop(Not,var_b"b'17"),
                                                                 bop(And,mop(Not,var_b"b'16"),
                                                                     bop(And,mop(Not,var_b"b'15"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'14"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'13"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'12"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'11"),
                                                                                         bop(And,
                                                                                             mop(Not,
                                                                                                 var_b"b'10"),
                                                                                             bop(And,
                                                                                                 mop(Not,
                                                                                                     var_b"b'9"),
                                                                                                 bop(And,
                                                                                                     mop(Not,
                                                                                                         var_b"b'8"),
                                                                                                     bop(And,
                                                                                                         mop(Not,
                                                                                                             var_b"b'7"),
                                                                                                         bop(And,
                                                                                                             mop(Not,
                                                                                                                 var_b"b'6"),
                                                                                                             bop(And,
                                                                                                                 mop(Not,
                                                                                                                     var_b"b'5"),
                                                                                                                 bop(And,
                                                                                                                     mop(Not,
                                                                                                                         var_b"b'4"),
                                                                                                                     bop(And,
                                                                                                                         mop(Not,
                                                                                                                             var_b"b'3"),
                                                                                                                         bop(And,
                                                                                                                             mop(Not,
                                                                                                                                 var_b"b'2"),
                                                                                                                             bop(And,
                                                                                                                                 mop(Not,
                                                                                                                                     var_b"b'1"),
                                                                                                                                 var_b"b'0"))))))))))))))))))))))))))),
                     Term.Const(@{const_name "TLBR"},@{typ instruction})),
                    (bop(And,mop(Not,var_b"b'28"),
                         bop(And,mop(Not,var_b"b'27"),
                             bop(And,var_b"b'25",
                                 bop(And,mop(Not,var_b"b'24"),
                                     bop(And,mop(Not,var_b"b'23"),
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,mop(Not,var_b"b'21"),
                                                 bop(And,mop(Not,var_b"b'20"),
                                                     bop(And,mop(Not,var_b"b'19"),
                                                         bop(And,mop(Not,var_b"b'18"),
                                                             bop(And,mop(Not,var_b"b'17"),
                                                                 bop(And,mop(Not,var_b"b'16"),
                                                                     bop(And,mop(Not,var_b"b'15"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'14"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'13"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'12"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'11"),
                                                                                         bop(And,
                                                                                             mop(Not,
                                                                                                 var_b"b'10"),
                                                                                             bop(And,
                                                                                                 mop(Not,
                                                                                                     var_b"b'9"),
                                                                                                 bop(And,
                                                                                                     mop(Not,
                                                                                                         var_b"b'8"),
                                                                                                     bop(And,
                                                                                                         mop(Not,
                                                                                                             var_b"b'7"),
                                                                                                         bop(And,
                                                                                                             mop(Not,
                                                                                                                 var_b"b'6"),
                                                                                                             bop(And,
                                                                                                                 mop(Not,
                                                                                                                     var_b"b'5"),
                                                                                                                 bop(And,
                                                                                                                     mop(Not,
                                                                                                                         var_b"b'4"),
                                                                                                                     bop(And,
                                                                                                                         mop(Not,
                                                                                                                             var_b"b'3"),
                                                                                                                         bop(And,
                                                                                                                             mop(Not,
                                                                                                                                 var_b"b'2"),
                                                                                                                             bop(And,
                                                                                                                                 var_b"b'1",
                                                                                                                                 mop(Not,
                                                                                                                                     var_b"b'0")))))))))))))))))))))))))))),
                     Term.Const(@{const_name "TLBWI"},@{typ instruction})),
                    (bop(And,mop(Not,var_b"b'28"),
                         bop(And,mop(Not,var_b"b'27"),
                             bop(And,var_b"b'25",
                                 bop(And,mop(Not,var_b"b'24"),
                                     bop(And,mop(Not,var_b"b'23"),
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,mop(Not,var_b"b'21"),
                                                 bop(And,mop(Not,var_b"b'20"),
                                                     bop(And,mop(Not,var_b"b'19"),
                                                         bop(And,mop(Not,var_b"b'18"),
                                                             bop(And,mop(Not,var_b"b'17"),
                                                                 bop(And,mop(Not,var_b"b'16"),
                                                                     bop(And,mop(Not,var_b"b'15"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'14"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'13"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'12"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'11"),
                                                                                         bop(And,
                                                                                             mop(Not,
                                                                                                 var_b"b'10"),
                                                                                             bop(And,
                                                                                                 mop(Not,
                                                                                                     var_b"b'9"),
                                                                                                 bop(And,
                                                                                                     mop(Not,
                                                                                                         var_b"b'8"),
                                                                                                     bop(And,
                                                                                                         mop(Not,
                                                                                                             var_b"b'7"),
                                                                                                         bop(And,
                                                                                                             mop(Not,
                                                                                                                 var_b"b'6"),
                                                                                                             bop(And,
                                                                                                                 mop(Not,
                                                                                                                     var_b"b'5"),
                                                                                                                 bop(And,
                                                                                                                     mop(Not,
                                                                                                                         var_b"b'4"),
                                                                                                                     bop(And,
                                                                                                                         mop(Not,
                                                                                                                             var_b"b'3"),
                                                                                                                         bop(And,
                                                                                                                             var_b"b'2",
                                                                                                                             bop(And,
                                                                                                                                 var_b"b'1",
                                                                                                                                 mop(Not,
                                                                                                                                     var_b"b'0")))))))))))))))))))))))))))),
                     Term.Const(@{const_name "TLBWR"},@{typ instruction})),
                    (bop(And,mop(Not,var_b"b'28"),
                         bop(And,mop(Not,var_b"b'27"),
                             bop(And,var_b"b'25",
                                 bop(And,mop(Not,var_b"b'24"),
                                     bop(And,mop(Not,var_b"b'23"),
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,mop(Not,var_b"b'21"),
                                                 bop(And,mop(Not,var_b"b'20"),
                                                     bop(And,mop(Not,var_b"b'19"),
                                                         bop(And,mop(Not,var_b"b'18"),
                                                             bop(And,mop(Not,var_b"b'17"),
                                                                 bop(And,mop(Not,var_b"b'16"),
                                                                     bop(And,mop(Not,var_b"b'15"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'14"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'13"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'12"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'11"),
                                                                                         bop(And,
                                                                                             mop(Not,
                                                                                                 var_b"b'10"),
                                                                                             bop(And,
                                                                                                 mop(Not,
                                                                                                     var_b"b'9"),
                                                                                                 bop(And,
                                                                                                     mop(Not,
                                                                                                         var_b"b'8"),
                                                                                                     bop(And,
                                                                                                         mop(Not,
                                                                                                             var_b"b'7"),
                                                                                                         bop(And,
                                                                                                             mop(Not,
                                                                                                                 var_b"b'6"),
                                                                                                             bop(And,
                                                                                                                 mop(Not,
                                                                                                                     var_b"b'5"),
                                                                                                                 bop(And,
                                                                                                                     mop(Not,
                                                                                                                         var_b"b'4"),
                                                                                                                     bop(And,
                                                                                                                         var_b"b'3",
                                                                                                                         bop(And,
                                                                                                                             mop(Not,
                                                                                                                                 var_b"b'2"),
                                                                                                                             bop(And,
                                                                                                                                 mop(Not,
                                                                                                                                     var_b"b'1"),
                                                                                                                                 mop(Not,
                                                                                                                                     var_b"b'0")))))))))))))))))))))))))))),
                     Term.Const(@{const_name "TLBP"},@{typ instruction})),
                    (bop(And,mop(Not,var_b"b'28"),
                         bop(And,mop(Not,var_b"b'27"),
                             bop(And,var_b"b'25",
                                 bop(And,mop(Not,var_b"b'24"),
                                     bop(And,mop(Not,var_b"b'23"),
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,mop(Not,var_b"b'21"),
                                                 bop(And,mop(Not,var_b"b'20"),
                                                     bop(And,mop(Not,var_b"b'19"),
                                                         bop(And,mop(Not,var_b"b'18"),
                                                             bop(And,mop(Not,var_b"b'17"),
                                                                 bop(And,mop(Not,var_b"b'16"),
                                                                     bop(And,mop(Not,var_b"b'15"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'14"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'13"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'12"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'11"),
                                                                                         bop(And,
                                                                                             mop(Not,
                                                                                                 var_b"b'10"),
                                                                                             bop(And,
                                                                                                 mop(Not,
                                                                                                     var_b"b'9"),
                                                                                                 bop(And,
                                                                                                     mop(Not,
                                                                                                         var_b"b'8"),
                                                                                                     bop(And,
                                                                                                         mop(Not,
                                                                                                             var_b"b'7"),
                                                                                                         bop(And,
                                                                                                             mop(Not,
                                                                                                                 var_b"b'6"),
                                                                                                             bop(And,
                                                                                                                 mop(Not,
                                                                                                                     var_b"b'5"),
                                                                                                                 bop(And,
                                                                                                                     var_b"b'4",
                                                                                                                     bop(And,
                                                                                                                         var_b"b'3",
                                                                                                                         bop(And,
                                                                                                                             mop(Not,
                                                                                                                                 var_b"b'2"),
                                                                                                                             bop(And,
                                                                                                                                 mop(Not,
                                                                                                                                     var_b"b'1"),
                                                                                                                                 mop(Not,
                                                                                                                                     var_b"b'0")))))))))))))))))))))))))))),
                     Term.Const(@{const_name "ERET"},@{typ instruction})),
                    (bop(And,mop(Not,var_b"b'28"),
                         bop(And,mop(Not,var_b"b'27"),
                             bop(And,mop(Not,var_b"b'25"),
                                 bop(And,mop(Not,var_b"b'24"),
                                     bop(And,mop(Not,var_b"b'23"),
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,mop(Not,var_b"b'21"),
                                                 bop(And,mop(Not,var_b"b'10"),
                                                     bop(And,mop(Not,var_b"b'9"),
                                                         bop(And,mop(Not,var_b"b'8"),
                                                             bop(And,mop(Not,var_b"b'7"),
                                                                 bop(And,mop(Not,var_b"b'6"),
                                                                     bop(And,mop(Not,var_b"b'5"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'4"),
                                                                             mop(Not,var_b"b'3"))))))))))))))),
                     call
                       ("instruction.CP",@{typ instruction},
                        call
                          ("CP.MFC0",@{typ CP},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                              mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'28"),
                         bop(And,mop(Not,var_b"b'27"),
                             bop(And,mop(Not,var_b"b'25"),
                                 bop(And,mop(Not,var_b"b'24"),
                                     bop(And,mop(Not,var_b"b'23"),
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,var_b"b'21",
                                                 bop(And,mop(Not,var_b"b'10"),
                                                     bop(And,mop(Not,var_b"b'9"),
                                                         bop(And,mop(Not,var_b"b'8"),
                                                             bop(And,mop(Not,var_b"b'7"),
                                                                 bop(And,mop(Not,var_b"b'6"),
                                                                     bop(And,mop(Not,var_b"b'5"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'4"),
                                                                             mop(Not,var_b"b'3"))))))))))))))),
                     call
                       ("instruction.CP",@{typ instruction},
                        call
                          ("CP.DMFC0",@{typ CP},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                              mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'28"),
                         bop(And,mop(Not,var_b"b'27"),
                             bop(And,mop(Not,var_b"b'25"),
                                 bop(And,mop(Not,var_b"b'24"),
                                     bop(And,var_b"b'23",
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,mop(Not,var_b"b'21"),
                                                 bop(And,mop(Not,var_b"b'10"),
                                                     bop(And,mop(Not,var_b"b'9"),
                                                         bop(And,mop(Not,var_b"b'8"),
                                                             bop(And,mop(Not,var_b"b'7"),
                                                                 bop(And,mop(Not,var_b"b'6"),
                                                                     bop(And,mop(Not,var_b"b'5"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'4"),
                                                                             mop(Not,var_b"b'3"))))))))))))))),
                     call
                       ("instruction.CP",@{typ instruction},
                        call
                          ("CP.MTC0",@{typ CP},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                              mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"])],
                           @{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'28"),
                         bop(And,mop(Not,var_b"b'27"),
                             bop(And,mop(Not,var_b"b'25"),
                                 bop(And,mop(Not,var_b"b'24"),
                                     bop(And,var_b"b'23",
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,var_b"b'21",
                                                 bop(And,mop(Not,var_b"b'10"),
                                                     bop(And,mop(Not,var_b"b'9"),
                                                         bop(And,mop(Not,var_b"b'8"),
                                                             bop(And,mop(Not,var_b"b'7"),
                                                                 bop(And,mop(Not,var_b"b'6"),
                                                                     bop(And,mop(Not,var_b"b'5"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'4"),
                                                                             mop(Not,var_b"b'3"))))))))))))))),
                     call
                       ("instruction.CP",@{typ instruction},
                        call
                          ("CP.DMTC0",@{typ CP},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                              mop(Cast (Word_Lib.mk_wordT 3),ll[var_b"b'2",var_b"b'1",var_b"b'0"])],
                           @{theory}),@{theory})),
                    (bop(And,var_b"b'28",
                         bop(And,var_b"b'27",
                             bop(And,mop(Not,var_b"b'20"),
                                 bop(And,mop(Not,var_b"b'19"),
                                     bop(And,mop(Not,var_b"b'18"),
                                         bop(And,mop(Not,var_b"b'17"),mop(Not,var_b"b'16"))))))),
                     call
                       ("instruction.Branch",@{typ instruction},
                        call
                          ("Branch.BLEZL",@{typ Branch},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,var_b"b'28",mop(Not,var_b"b'27")),
                     call
                       ("instruction.Branch",@{typ instruction},
                        call
                          ("Branch.BEQL",@{typ Branch},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'28"),
                         bop(And,mop(Not,var_b"b'27"),
                             bop(And,var_b"b'25",
                                 bop(And,mop(Not,var_b"b'24"),
                                     bop(And,mop(Not,var_b"b'23"),
                                         bop(And,mop(Not,var_b"b'22"),
                                             bop(And,mop(Not,var_b"b'21"),
                                                 bop(And,mop(Not,var_b"b'20"),
                                                     bop(And,mop(Not,var_b"b'19"),
                                                         bop(And,mop(Not,var_b"b'18"),
                                                             bop(And,mop(Not,var_b"b'17"),
                                                                 bop(And,mop(Not,var_b"b'16"),
                                                                     bop(And,mop(Not,var_b"b'15"),
                                                                         bop(And,
                                                                             mop(Not,var_b"b'14"),
                                                                             bop(And,
                                                                                 mop(Not,var_b"b'13"),
                                                                                 bop(And,
                                                                                     mop(Not,
                                                                                         var_b"b'12"),
                                                                                     bop(And,
                                                                                         mop(Not,
                                                                                             var_b"b'11"),
                                                                                         bop(And,
                                                                                             mop(Not,
                                                                                                 var_b"b'10"),
                                                                                             bop(And,
                                                                                                 mop(Not,
                                                                                                     var_b"b'9"),
                                                                                                 bop(And,
                                                                                                     mop(Not,
                                                                                                         var_b"b'8"),
                                                                                                     bop(And,
                                                                                                         mop(Not,
                                                                                                             var_b"b'7"),
                                                                                                         bop(And,
                                                                                                             mop(Not,
                                                                                                                 var_b"b'6"),
                                                                                                             bop(And,
                                                                                                                 var_b"b'5",
                                                                                                                 bop(And,
                                                                                                                     mop(Not,
                                                                                                                         var_b"b'4"),
                                                                                                                     bop(And,
                                                                                                                         mop(Not,
                                                                                                                             var_b"b'3"),
                                                                                                                         bop(And,
                                                                                                                             mop(Not,
                                                                                                                                 var_b"b'2"),
                                                                                                                             bop(And,
                                                                                                                                 mop(Not,
                                                                                                                                     var_b"b'1"),
                                                                                                                                 mop(Not,
                                                                                                                                     var_b"b'0")))))))))))))))))))))))))))),
                     Term.Const(@{const_name "WAIT"},@{typ instruction})),
                    (bop(And,mop(Not,var_b"b'28"),var_b"b'27"),
                     call
                       ("COP2Decode",@{typ instruction},
                        mop(Cast (Word_Lib.mk_wordT 26),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21",
                               var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16",
                               var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                               var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",
                               var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"]),@{theory}))],
                   Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}))),
              (var_b"b'31",
               itb([(var_b"b'29",
                     itb([(bop(And,mop(Not,var_b"b'28"),mop(Not,var_b"b'27")),
                           call
                             ("instruction.Store",@{typ instruction},
                              call
                                ("Store.SB",@{typ Store},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,mop(Not,var_b"b'28"),var_b"b'27"),
                           call
                             ("instruction.Store",@{typ instruction},
                              call
                                ("Store.SWL",@{typ Store},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,var_b"b'28",mop(Not,var_b"b'27")),
                           call
                             ("instruction.Store",@{typ instruction},
                              call
                                ("Store.SDL",@{typ Store},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory})),
                          (bop(And,var_b"b'28",var_b"b'27"),
                           call
                             ("instruction.Store",@{typ instruction},
                              call
                                ("Store.SWR",@{typ Store},
                                 tp[mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",
                                           var_b"b'21"]),
                                    mop(Cast (Word_Lib.mk_wordT 5),
                                        ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",
                                           var_b"b'16"]),
                                    mop(Cast w16,
                                        ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",
                                           var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",
                                           var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                                           var_b"b'1",var_b"b'0"])],@{theory}),@{theory}))],
                         Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}))),
                    (bop(And,mop(Not,var_b"b'28"),mop(Not,var_b"b'27")),
                     call
                       ("instruction.Load",@{typ instruction},
                        call
                          ("Load.LB",@{typ Load},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'28"),var_b"b'27"),
                     call
                       ("instruction.Load",@{typ instruction},
                        call
                          ("Load.LWL",@{typ Load},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,var_b"b'28",mop(Not,var_b"b'27")),
                     call
                       ("instruction.Load",@{typ instruction},
                        call
                          ("Load.LBU",@{typ Load},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,var_b"b'28",var_b"b'27"),
                     call
                       ("instruction.Load",@{typ instruction},
                        call
                          ("Load.LWR",@{typ Load},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory}))],
                   Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}))),
              (var_b"b'29",
               itb([(bop(And,mop(Not,var_b"b'28"),mop(Not,var_b"b'27")),
                     call
                       ("instruction.ArithI",@{typ instruction},
                        call
                          ("ArithI.ADDI",@{typ ArithI},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,mop(Not,var_b"b'28"),var_b"b'27"),
                     call
                       ("instruction.ArithI",@{typ instruction},
                        call
                          ("ArithI.SLTI",@{typ ArithI},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,var_b"b'28",mop(Not,var_b"b'27")),
                     call
                       ("instruction.ArithI",@{typ instruction},
                        call
                          ("ArithI.ANDI",@{typ ArithI},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory})),
                    (bop(And,var_b"b'28",var_b"b'27"),
                     call
                       ("instruction.ArithI",@{typ instruction},
                        call
                          ("ArithI.XORI",@{typ ArithI},
                           tp[mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                              mop(Cast (Word_Lib.mk_wordT 5),
                                  ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                              mop(Cast w16,
                                  ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                                     var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",
                                     var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",
                                     var_b"b'0"])],@{theory}),@{theory}))],
                   Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}))),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))))))),
               call
                 ("MOVCIDecode",@{typ instruction},
                  tp[mop(Cast (Word_Lib.mk_wordT 5),
                         ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                     mop(Cast (Word_Lib.mk_wordT 5),
                         ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                     mop(Cast (Word_Lib.mk_wordT 5),
                         ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,mop(Not,var_b"b'1"),
                                                               mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.SLL",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.SRL",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,var_b"b'1",var_b"b'0")))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.SRA",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,var_b"b'2",
                                                           bop(And,mop(Not,var_b"b'1"),
                                                               mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.SLLV",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,var_b"b'2",
                                                           bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.SRLV",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,var_b"b'2",
                                                           bop(And,var_b"b'1",var_b"b'0")))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.SRAV",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'20"),
                           bop(And,mop(Not,var_b"b'19"),
                               bop(And,mop(Not,var_b"b'18"),
                                   bop(And,mop(Not,var_b"b'17"),
                                       bop(And,mop(Not,var_b"b'16"),
                                           bop(And,mop(Not,var_b"b'15"),
                                               bop(And,mop(Not,var_b"b'14"),
                                                   bop(And,mop(Not,var_b"b'13"),
                                                       bop(And,mop(Not,var_b"b'12"),
                                                           bop(And,mop(Not,var_b"b'11"),
                                                               bop(And,mop(Not,var_b"b'5"),
                                                                   bop(And,mop(Not,var_b"b'4"),
                                                                       bop(And,var_b"b'3",
                                                                           bop(And,
                                                                               mop(Not,var_b"b'2"),
                                                                               bop(And,
                                                                                   mop(Not,
                                                                                       var_b"b'1"),
                                                                                   mop(Not,
                                                                                       var_b"b'0")))))))))))))))))),
               call
                 ("instruction.Branch",@{typ instruction},
                  call
                    ("Branch.JR",@{typ Branch},
                     mop(Cast (Word_Lib.mk_wordT 5),
                         ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'20"),
                           bop(And,mop(Not,var_b"b'19"),
                               bop(And,mop(Not,var_b"b'18"),
                                   bop(And,mop(Not,var_b"b'17"),
                                       bop(And,mop(Not,var_b"b'16"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,var_b"b'3",
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))))))),
               call
                 ("instruction.Branch",@{typ instruction},
                  call
                    ("Branch.JALR",@{typ Branch},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,var_b"b'3",
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.MOVZ",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,var_b"b'3",
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,var_b"b'1",var_b"b'0")))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.MOVN",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,var_b"b'3",
                                                       bop(And,var_b"b'2",
                                                           bop(And,mop(Not,var_b"b'1"),
                                                               mop(Not,var_b"b'0"))))))))))))),
               Term.Const(@{const_name "SYSCALL"},@{typ instruction})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,var_b"b'3",
                                                       bop(And,var_b"b'2",
                                                           bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))))))),
               Term.Const(@{const_name "BREAK"},@{typ instruction})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,mop(Not,var_b"b'20"),
                                               bop(And,mop(Not,var_b"b'19"),
                                                   bop(And,mop(Not,var_b"b'18"),
                                                       bop(And,mop(Not,var_b"b'17"),
                                                           bop(And,mop(Not,var_b"b'16"),
                                                               bop(And,mop(Not,var_b"b'15"),
                                                                   bop(And,mop(Not,var_b"b'14"),
                                                                       bop(And,mop(Not,var_b"b'13"),
                                                                           bop(And,
                                                                               mop(Not,var_b"b'12"),
                                                                               bop(And,
                                                                                   mop(Not,
                                                                                       var_b"b'11"),
                                                                                   bop(And,
                                                                                       mop(Not,
                                                                                           var_b"b'5"),
                                                                                       bop(And,
                                                                                           mop(Not,
                                                                                               var_b"b'4"),
                                                                                           bop(And,
                                                                                               var_b"b'3",
                                                                                               bop(And,
                                                                                                   var_b"b'2",
                                                                                                   bop(And,
                                                                                                       var_b"b'1",
                                                                                                       var_b"b'0")))))))))))))))))))))),
               call
                 ("instruction.SYNC",@{typ instruction},
                  mop(Cast (Word_Lib.mk_wordT 5),
                      ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"]),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,mop(Not,var_b"b'20"),
                                               bop(And,mop(Not,var_b"b'19"),
                                                   bop(And,mop(Not,var_b"b'18"),
                                                       bop(And,mop(Not,var_b"b'17"),
                                                           bop(And,mop(Not,var_b"b'16"),
                                                               bop(And,mop(Not,var_b"b'10"),
                                                                   bop(And,mop(Not,var_b"b'9"),
                                                                       bop(And,mop(Not,var_b"b'8"),
                                                                           bop(And,
                                                                               mop(Not,var_b"b'7"),
                                                                               bop(And,
                                                                                   mop(Not,
                                                                                       var_b"b'6"),
                                                                                   bop(And,
                                                                                       mop(Not,
                                                                                           var_b"b'5"),
                                                                                       bop(And,
                                                                                           var_b"b'4",
                                                                                           bop(And,
                                                                                               mop(Not,
                                                                                                   var_b"b'3"),
                                                                                               bop(And,
                                                                                                   mop(Not,
                                                                                                       var_b"b'2"),
                                                                                                   bop(And,
                                                                                                       mop(Not,
                                                                                                           var_b"b'1"),
                                                                                                       mop(Not,
                                                                                                           var_b"b'0"))))))))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.MFHI",@{typ MultDiv},
                     mop(Cast (Word_Lib.mk_wordT 5),
                         ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'20"),
                           bop(And,mop(Not,var_b"b'19"),
                               bop(And,mop(Not,var_b"b'18"),
                                   bop(And,mop(Not,var_b"b'17"),
                                       bop(And,mop(Not,var_b"b'16"),
                                           bop(And,mop(Not,var_b"b'15"),
                                               bop(And,mop(Not,var_b"b'14"),
                                                   bop(And,mop(Not,var_b"b'13"),
                                                       bop(And,mop(Not,var_b"b'12"),
                                                           bop(And,mop(Not,var_b"b'11"),
                                                               bop(And,mop(Not,var_b"b'10"),
                                                                   bop(And,mop(Not,var_b"b'9"),
                                                                       bop(And,mop(Not,var_b"b'8"),
                                                                           bop(And,
                                                                               mop(Not,var_b"b'7"),
                                                                               bop(And,
                                                                                   mop(Not,
                                                                                       var_b"b'6"),
                                                                                   bop(And,
                                                                                       mop(Not,
                                                                                           var_b"b'5"),
                                                                                       bop(And,
                                                                                           var_b"b'4",
                                                                                           bop(And,
                                                                                               mop(Not,
                                                                                                   var_b"b'3"),
                                                                                               bop(And,
                                                                                                   mop(Not,
                                                                                                       var_b"b'2"),
                                                                                                   bop(And,
                                                                                                       mop(Not,
                                                                                                           var_b"b'1"),
                                                                                                       var_b"b'0")))))))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.MTHI",@{typ MultDiv},
                     mop(Cast (Word_Lib.mk_wordT 5),
                         ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,mop(Not,var_b"b'20"),
                                               bop(And,mop(Not,var_b"b'19"),
                                                   bop(And,mop(Not,var_b"b'18"),
                                                       bop(And,mop(Not,var_b"b'17"),
                                                           bop(And,mop(Not,var_b"b'16"),
                                                               bop(And,mop(Not,var_b"b'10"),
                                                                   bop(And,mop(Not,var_b"b'9"),
                                                                       bop(And,mop(Not,var_b"b'8"),
                                                                           bop(And,
                                                                               mop(Not,var_b"b'7"),
                                                                               bop(And,
                                                                                   mop(Not,
                                                                                       var_b"b'6"),
                                                                                   bop(And,
                                                                                       mop(Not,
                                                                                           var_b"b'5"),
                                                                                       bop(And,
                                                                                           var_b"b'4",
                                                                                           bop(And,
                                                                                               mop(Not,
                                                                                                   var_b"b'3"),
                                                                                               bop(And,
                                                                                                   mop(Not,
                                                                                                       var_b"b'2"),
                                                                                                   bop(And,
                                                                                                       var_b"b'1",
                                                                                                       mop(Not,
                                                                                                           var_b"b'0"))))))))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.MFLO",@{typ MultDiv},
                     mop(Cast (Word_Lib.mk_wordT 5),
                         ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'20"),
                           bop(And,mop(Not,var_b"b'19"),
                               bop(And,mop(Not,var_b"b'18"),
                                   bop(And,mop(Not,var_b"b'17"),
                                       bop(And,mop(Not,var_b"b'16"),
                                           bop(And,mop(Not,var_b"b'15"),
                                               bop(And,mop(Not,var_b"b'14"),
                                                   bop(And,mop(Not,var_b"b'13"),
                                                       bop(And,mop(Not,var_b"b'12"),
                                                           bop(And,mop(Not,var_b"b'11"),
                                                               bop(And,mop(Not,var_b"b'10"),
                                                                   bop(And,mop(Not,var_b"b'9"),
                                                                       bop(And,mop(Not,var_b"b'8"),
                                                                           bop(And,
                                                                               mop(Not,var_b"b'7"),
                                                                               bop(And,
                                                                                   mop(Not,
                                                                                       var_b"b'6"),
                                                                                   bop(And,
                                                                                       mop(Not,
                                                                                           var_b"b'5"),
                                                                                       bop(And,
                                                                                           var_b"b'4",
                                                                                           bop(And,
                                                                                               mop(Not,
                                                                                                   var_b"b'3"),
                                                                                               bop(And,
                                                                                                   mop(Not,
                                                                                                       var_b"b'2"),
                                                                                                   bop(And,
                                                                                                       var_b"b'1",
                                                                                                       var_b"b'0")))))))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.MTLO",@{typ MultDiv},
                     mop(Cast (Word_Lib.mk_wordT 5),
                         ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,var_b"b'4",
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,var_b"b'2",
                                                           bop(And,mop(Not,var_b"b'1"),
                                                               mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.DSLLV",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,var_b"b'4",
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,var_b"b'2",
                                                           bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.DSRLV",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,mop(Not,var_b"b'5"),
                                               bop(And,var_b"b'4",
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,var_b"b'2",
                                                           bop(And,var_b"b'1",var_b"b'0")))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.DSRAV",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'15"),
                           bop(And,mop(Not,var_b"b'14"),
                               bop(And,mop(Not,var_b"b'13"),
                                   bop(And,mop(Not,var_b"b'12"),
                                       bop(And,mop(Not,var_b"b'11"),
                                           bop(And,mop(Not,var_b"b'10"),
                                               bop(And,mop(Not,var_b"b'9"),
                                                   bop(And,mop(Not,var_b"b'8"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,mop(Not,var_b"b'6"),
                                                               bop(And,mop(Not,var_b"b'5"),
                                                                   bop(And,var_b"b'4",
                                                                       bop(And,var_b"b'3",
                                                                           bop(And,
                                                                               mop(Not,var_b"b'2"),
                                                                               bop(And,
                                                                                   mop(Not,
                                                                                       var_b"b'1"),
                                                                                   mop(Not,
                                                                                       var_b"b'0")))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.MULT",@{typ MultDiv},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'15"),
                           bop(And,mop(Not,var_b"b'14"),
                               bop(And,mop(Not,var_b"b'13"),
                                   bop(And,mop(Not,var_b"b'12"),
                                       bop(And,mop(Not,var_b"b'11"),
                                           bop(And,mop(Not,var_b"b'10"),
                                               bop(And,mop(Not,var_b"b'9"),
                                                   bop(And,mop(Not,var_b"b'8"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,mop(Not,var_b"b'6"),
                                                               bop(And,mop(Not,var_b"b'5"),
                                                                   bop(And,var_b"b'4",
                                                                       bop(And,var_b"b'3",
                                                                           bop(And,
                                                                               mop(Not,var_b"b'2"),
                                                                               bop(And,
                                                                                   mop(Not,
                                                                                       var_b"b'1"),
                                                                                   var_b"b'0"))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.MULTU",@{typ MultDiv},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'15"),
                           bop(And,mop(Not,var_b"b'14"),
                               bop(And,mop(Not,var_b"b'13"),
                                   bop(And,mop(Not,var_b"b'12"),
                                       bop(And,mop(Not,var_b"b'11"),
                                           bop(And,mop(Not,var_b"b'10"),
                                               bop(And,mop(Not,var_b"b'9"),
                                                   bop(And,mop(Not,var_b"b'8"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,mop(Not,var_b"b'6"),
                                                               bop(And,mop(Not,var_b"b'5"),
                                                                   bop(And,var_b"b'4",
                                                                       bop(And,var_b"b'3",
                                                                           bop(And,
                                                                               mop(Not,var_b"b'2"),
                                                                               bop(And,var_b"b'1",
                                                                                   mop(Not,
                                                                                       var_b"b'0")))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.DIV",@{typ MultDiv},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'15"),
                           bop(And,mop(Not,var_b"b'14"),
                               bop(And,mop(Not,var_b"b'13"),
                                   bop(And,mop(Not,var_b"b'12"),
                                       bop(And,mop(Not,var_b"b'11"),
                                           bop(And,mop(Not,var_b"b'10"),
                                               bop(And,mop(Not,var_b"b'9"),
                                                   bop(And,mop(Not,var_b"b'8"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,mop(Not,var_b"b'6"),
                                                               bop(And,mop(Not,var_b"b'5"),
                                                                   bop(And,var_b"b'4",
                                                                       bop(And,var_b"b'3",
                                                                           bop(And,
                                                                               mop(Not,var_b"b'2"),
                                                                               bop(And,var_b"b'1",
                                                                                   var_b"b'0"))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.DIVU",@{typ MultDiv},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'15"),
                           bop(And,mop(Not,var_b"b'14"),
                               bop(And,mop(Not,var_b"b'13"),
                                   bop(And,mop(Not,var_b"b'12"),
                                       bop(And,mop(Not,var_b"b'11"),
                                           bop(And,mop(Not,var_b"b'10"),
                                               bop(And,mop(Not,var_b"b'9"),
                                                   bop(And,mop(Not,var_b"b'8"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,mop(Not,var_b"b'6"),
                                                               bop(And,mop(Not,var_b"b'5"),
                                                                   bop(And,var_b"b'4",
                                                                       bop(And,var_b"b'3",
                                                                           bop(And,var_b"b'2",
                                                                               bop(And,
                                                                                   mop(Not,
                                                                                       var_b"b'1"),
                                                                                   mop(Not,
                                                                                       var_b"b'0")))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.DMULT",@{typ MultDiv},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'15"),
                           bop(And,mop(Not,var_b"b'14"),
                               bop(And,mop(Not,var_b"b'13"),
                                   bop(And,mop(Not,var_b"b'12"),
                                       bop(And,mop(Not,var_b"b'11"),
                                           bop(And,mop(Not,var_b"b'10"),
                                               bop(And,mop(Not,var_b"b'9"),
                                                   bop(And,mop(Not,var_b"b'8"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,mop(Not,var_b"b'6"),
                                                               bop(And,mop(Not,var_b"b'5"),
                                                                   bop(And,var_b"b'4",
                                                                       bop(And,var_b"b'3",
                                                                           bop(And,var_b"b'2",
                                                                               bop(And,
                                                                                   mop(Not,
                                                                                       var_b"b'1"),
                                                                                   var_b"b'0"))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.DMULTU",@{typ MultDiv},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'15"),
                           bop(And,mop(Not,var_b"b'14"),
                               bop(And,mop(Not,var_b"b'13"),
                                   bop(And,mop(Not,var_b"b'12"),
                                       bop(And,mop(Not,var_b"b'11"),
                                           bop(And,mop(Not,var_b"b'10"),
                                               bop(And,mop(Not,var_b"b'9"),
                                                   bop(And,mop(Not,var_b"b'8"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,mop(Not,var_b"b'6"),
                                                               bop(And,mop(Not,var_b"b'5"),
                                                                   bop(And,var_b"b'4",
                                                                       bop(And,var_b"b'3",
                                                                           bop(And,var_b"b'2",
                                                                               bop(And,var_b"b'1",
                                                                                   mop(Not,
                                                                                       var_b"b'0")))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.DDIV",@{typ MultDiv},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'15"),
                           bop(And,mop(Not,var_b"b'14"),
                               bop(And,mop(Not,var_b"b'13"),
                                   bop(And,mop(Not,var_b"b'12"),
                                       bop(And,mop(Not,var_b"b'11"),
                                           bop(And,mop(Not,var_b"b'10"),
                                               bop(And,mop(Not,var_b"b'9"),
                                                   bop(And,mop(Not,var_b"b'8"),
                                                       bop(And,mop(Not,var_b"b'7"),
                                                           bop(And,mop(Not,var_b"b'6"),
                                                               bop(And,mop(Not,var_b"b'5"),
                                                                   bop(And,var_b"b'4",
                                                                       bop(And,var_b"b'3",
                                                                           bop(And,var_b"b'2",
                                                                               bop(And,var_b"b'1",
                                                                                   var_b"b'0"))))))))))))))))),
               call
                 ("instruction.MultDiv",@{typ instruction},
                  call
                    ("MultDiv.DDIVU",@{typ MultDiv},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,mop(Not,var_b"b'1"),
                                                               mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.ADD",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.ADDU",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.SUB",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,var_b"b'1",var_b"b'0")))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.SUBU",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,var_b"b'2",
                                                           bop(And,mop(Not,var_b"b'1"),
                                                               mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.AND",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,var_b"b'2",
                                                           bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.OR",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,var_b"b'2",
                                                           bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.XOR",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,mop(Not,var_b"b'3"),
                                                       bop(And,var_b"b'2",
                                                           bop(And,var_b"b'1",var_b"b'0")))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.NOR",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,var_b"b'3",
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.SLT",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,var_b"b'3",
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,var_b"b'1",var_b"b'0")))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.SLTU",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,var_b"b'3",
                                                       bop(And,var_b"b'2",
                                                           bop(And,mop(Not,var_b"b'1"),
                                                               mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.DADD",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,var_b"b'3",
                                                       bop(And,var_b"b'2",
                                                           bop(And,mop(Not,var_b"b'1"),var_b"b'0")))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.DADDU",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,var_b"b'3",
                                                       bop(And,var_b"b'2",
                                                           bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.DSUB",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'10"),
                           bop(And,mop(Not,var_b"b'9"),
                               bop(And,mop(Not,var_b"b'8"),
                                   bop(And,mop(Not,var_b"b'7"),
                                       bop(And,mop(Not,var_b"b'6"),
                                           bop(And,var_b"b'5",
                                               bop(And,mop(Not,var_b"b'4"),
                                                   bop(And,var_b"b'3",
                                                       bop(And,var_b"b'2",
                                                           bop(And,var_b"b'1",var_b"b'0")))))))))))),
               call
                 ("instruction.ArithR",@{typ instruction},
                  call
                    ("ArithR.DSUBU",@{typ ArithR},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,var_b"b'5",
                           bop(And,var_b"b'4",
                               bop(And,mop(Not,var_b"b'3"),
                                   bop(And,mop(Not,var_b"b'2"),
                                       bop(And,mop(Not,var_b"b'1"),mop(Not,var_b"b'0")))))))),
               call
                 ("instruction.Trap",@{typ instruction},
                  call
                    ("Trap.TGE",@{typ Trap},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,var_b"b'5",
                           bop(And,var_b"b'4",
                               bop(And,mop(Not,var_b"b'3"),
                                   bop(And,mop(Not,var_b"b'2"),
                                       bop(And,mop(Not,var_b"b'1"),var_b"b'0"))))))),
               call
                 ("instruction.Trap",@{typ instruction},
                  call
                    ("Trap.TGEU",@{typ Trap},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,var_b"b'5",
                           bop(And,var_b"b'4",
                               bop(And,mop(Not,var_b"b'3"),
                                   bop(And,mop(Not,var_b"b'2"),
                                       bop(And,var_b"b'1",mop(Not,var_b"b'0")))))))),
               call
                 ("instruction.Trap",@{typ instruction},
                  call
                    ("Trap.TLT",@{typ Trap},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,var_b"b'5",
                           bop(And,var_b"b'4",
                               bop(And,mop(Not,var_b"b'3"),
                                   bop(And,mop(Not,var_b"b'2"),bop(And,var_b"b'1",var_b"b'0"))))))),
               call
                 ("instruction.Trap",@{typ instruction},
                  call
                    ("Trap.TLTU",@{typ Trap},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,var_b"b'5",
                           bop(And,var_b"b'4",
                               bop(And,mop(Not,var_b"b'3"),
                                   bop(And,var_b"b'2",
                                       bop(And,mop(Not,var_b"b'1"),mop(Not,var_b"b'0")))))))),
               call
                 ("instruction.Trap",@{typ instruction},
                  call
                    ("Trap.TEQ",@{typ Trap},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,var_b"b'5",
                           bop(And,var_b"b'4",
                               bop(And,mop(Not,var_b"b'3"),
                                   bop(And,var_b"b'2",bop(And,var_b"b'1",mop(Not,var_b"b'0")))))))),
               call
                 ("instruction.Trap",@{typ instruction},
                  call
                    ("Trap.TNE",@{typ Trap},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"])],
                     @{theory}),@{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,var_b"b'5",
                                               bop(And,var_b"b'4",
                                                   bop(And,var_b"b'3",
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,mop(Not,var_b"b'1"),
                                                               mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.DSLL",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,var_b"b'5",
                                               bop(And,var_b"b'4",
                                                   bop(And,var_b"b'3",
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.DSRL",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,var_b"b'5",
                                               bop(And,var_b"b'4",
                                                   bop(And,var_b"b'3",
                                                       bop(And,mop(Not,var_b"b'2"),
                                                           bop(And,var_b"b'1",var_b"b'0")))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.DSRA",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,var_b"b'5",
                                               bop(And,var_b"b'4",
                                                   bop(And,var_b"b'3",
                                                       bop(And,var_b"b'2",
                                                           bop(And,mop(Not,var_b"b'1"),
                                                               mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.DSLL32",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,var_b"b'5",
                                               bop(And,var_b"b'4",
                                                   bop(And,var_b"b'3",
                                                       bop(And,var_b"b'2",
                                                           bop(And,var_b"b'1",mop(Not,var_b"b'0"))))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.DSRL32",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),
                   bop(And,mop(Not,var_b"b'27"),
                       bop(And,mop(Not,var_b"b'25"),
                           bop(And,mop(Not,var_b"b'24"),
                               bop(And,mop(Not,var_b"b'23"),
                                   bop(And,mop(Not,var_b"b'22"),
                                       bop(And,mop(Not,var_b"b'21"),
                                           bop(And,var_b"b'5",
                                               bop(And,var_b"b'4",
                                                   bop(And,var_b"b'3",
                                                       bop(And,var_b"b'2",
                                                           bop(And,var_b"b'1",var_b"b'0")))))))))))),
               call
                 ("instruction.Shift",@{typ instruction},
                  call
                    ("Shift.DSRA32",@{typ Shift},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6"])],@{theory}),
                  @{theory})),
              (bop(And,mop(Not,var_b"b'28"),var_b"b'27"),
               call
                 ("instruction.Branch",@{typ instruction},
                  call
                    ("Branch.J",@{typ Branch},
                     mop(Cast (Word_Lib.mk_wordT 26),
                         ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21",var_b"b'20",
                            var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16",var_b"b'15",var_b"b'14",
                            var_b"b'13",var_b"b'12",var_b"b'11",var_b"b'10",var_b"b'9",var_b"b'8",
                            var_b"b'7",var_b"b'6",var_b"b'5",var_b"b'4",var_b"b'3",var_b"b'2",
                            var_b"b'1",var_b"b'0"]),@{theory}),@{theory})),
              (bop(And,var_b"b'28",
                   bop(And,var_b"b'27",
                       bop(And,mop(Not,var_b"b'20"),
                           bop(And,mop(Not,var_b"b'19"),
                               bop(And,mop(Not,var_b"b'18"),
                                   bop(And,mop(Not,var_b"b'17"),mop(Not,var_b"b'16"))))))),
               call
                 ("instruction.Branch",@{typ instruction},
                  call
                    ("Branch.BLEZ",@{typ Branch},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast w16,
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                               var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",
                               var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])],@{theory}),
                  @{theory})),
              (bop(And,var_b"b'28",mop(Not,var_b"b'27")),
               call
                 ("instruction.Branch",@{typ instruction},
                  call
                    ("Branch.BEQ",@{typ Branch},
                     tp[mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'25",var_b"b'24",var_b"b'23",var_b"b'22",var_b"b'21"]),
                        mop(Cast (Word_Lib.mk_wordT 5),
                            ll[var_b"b'20",var_b"b'19",var_b"b'18",var_b"b'17",var_b"b'16"]),
                        mop(Cast w16,
                            ll[var_b"b'15",var_b"b'14",var_b"b'13",var_b"b'12",var_b"b'11",
                               var_b"b'10",var_b"b'9",var_b"b'8",var_b"b'7",var_b"b'6",var_b"b'5",
                               var_b"b'4",var_b"b'3",var_b"b'2",var_b"b'1",var_b"b'0"])],@{theory}),
                  @{theory}))],Term.Const(@{const_name "ReservedInstruction"},@{typ instruction})))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("COP1InstructionToString",close(var("i",@{typ instruction}),ls"default COP1 instruction"))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("COP1Encode",close(var("i",@{typ instruction}),cc[lw(17,6),lw(0,26)]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("gr",close(var_w("n",5),cc[ls"$",mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("n",5)))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("cr",close(var_w("n",5),cc[ls"c",mop(Cast(@{typ string}),mop(Cast HOLogic.natT,var_w("n",5)))]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("imm",
   close
     (var("n",@{typ "'N::len word"}),
      ite(bop(Ult,var("n",@{typ "'N::len word"}),ly(10,"N")),
          mop(Cast(@{typ string}),var("n",@{typ "'N::len word"})),
          cc[ls"0x",mop(ToLower,mop(Cast(@{typ string}),var("n",@{typ "'N::len word"})))])))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_cr",
   close
     (tp[var_s"op",var_w("cr1",5)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("cr",@{typ string},var_w("cr1",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_gr",
   close
     (tp[var_s"op",var_w("r1",5)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),call("gr",@{typ string},var_w("r1",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_imm",
   close
     (tp[var_s"op",var("i",@{typ "'N::len word"})],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("imm",@{typ string},var("i",@{typ "'N::len word"}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_gr_imm",
   close
     (tp[var_s"op",var_w("gr1",5),var("i",@{typ "'N::len word"})],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("gr",@{typ string},var_w("gr1",5),@{theory}),ls", ",
         call("imm",@{typ string},var("i",@{typ "'N::len word"}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_cr_imm",
   close
     (tp[var_s"op",var_w("cr1",5),var("i",@{typ "'N::len word"})],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("cr",@{typ string},var_w("cr1",5),@{theory}),ls", ",
         call("imm",@{typ string},var("i",@{typ "'N::len word"}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_cr_gr",
   close
     (tp[var_s"op",var_w("cr1",5),var_w("r1",5)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("cr",@{typ string},var_w("cr1",5),@{theory}),ls", ",
         call("gr",@{typ string},var_w("r1",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_gr_cr",
   close
     (tp[var_s"op",var_w("r1",5),var_w("cr1",5)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("gr",@{typ string},var_w("r1",5),@{theory}),ls", ",
         call("cr",@{typ string},var_w("cr1",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_cr_cr",
   close
     (tp[var_s"op",var_w("cr1",5),var_w("cr2",5)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("cr",@{typ string},var_w("cr1",5),@{theory}),ls", ",
         call("cr",@{typ string},var_w("cr2",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_cr_cr_gr",
   close
     (tp[var_s"op",var_w("cr1",5),var_w("cr2",5),var_w("r1",5)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("cr",@{typ string},var_w("cr1",5),@{theory}),ls", ",
         call("cr",@{typ string},var_w("cr2",5),@{theory}),ls", ",
         call("gr",@{typ string},var_w("r1",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_cr_cr_imm",
   close
     (tp[var_s"op",var_w("cr1",5),var_w("cr2",5),var("i",@{typ "'N::len word"})],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("cr",@{typ string},var_w("cr1",5),@{theory}),ls", ",
         call("cr",@{typ string},var_w("cr2",5),@{theory}),ls", ",
         call("imm",@{typ string},var("i",@{typ "'N::len word"}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_cr_cr_cr",
   close
     (tp[var_s"op",var_w("cr1",5),var_w("cr2",5),var_w("cr3",5)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("cr",@{typ string},var_w("cr1",5),@{theory}),ls", ",
         call("cr",@{typ string},var_w("cr2",5),@{theory}),ls", ",
         call("cr",@{typ string},var_w("cr3",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_gr_cr_cr",
   close
     (tp[var_s"op",var_w("r1",5),var_w("cr1",5),var_w("cr2",5)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("gr",@{typ string},var_w("r1",5),@{theory}),ls", ",
         call("cr",@{typ string},var_w("cr1",5),@{theory}),ls", ",
         call("cr",@{typ string},var_w("cr2",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_gr_cr_gr_imm",
   close
     (tp[var_s"op",var_w("r1",5),var_w("cr1",5),var_w("r2",5),var("i",@{typ "'N::len word"})],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("gr",@{typ string},var_w("r1",5),@{theory}),ls", ",
         call("cr",@{typ string},var_w("cr1",5),@{theory}),ls", ",
         call("gr",@{typ string},var_w("r2",5),@{theory}),ls", ",
         call("imm",@{typ string},var("i",@{typ "'N::len word"}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_cr_cr_gr_imm",
   close
     (tp[var_s"op",var_w("cr1",5),var_w("cr2",5),var_w("r1",5),var("i",@{typ "'N::len word"})],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("cr",@{typ string},var_w("cr1",5),@{theory}),ls", ",
         call("cr",@{typ string},var_w("cr2",5),@{theory}),ls", ",
         call("gr",@{typ string},var_w("r1",5),@{theory}),ls", ",
         call("imm",@{typ string},var("i",@{typ "'N::len word"}),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("op_gr_gr_cr",
   close
     (tp[var_s"op",var_w("r1",5),var_w("r2",5),var_w("cr1",5)],
      cc[mop(PadRight,tp[lsc #" ",ln 12,var_s"op"]),
         call("gr",@{typ string},var_w("r1",5),@{theory}),ls", ",
         call("gr",@{typ string},var_w("r2",5),@{theory}),ls", ",
         call("cr",@{typ string},var_w("cr1",5),@{theory})]))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("COP2InstructionToString",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call
             ("instruction.COP2",@{typ instruction},
              call("COP2.CHERICOP2",@{typ COP2},var("j",@{typ CHERICOP2}),@{theory}),@{theory}),
           cs(var("j",@{typ CHERICOP2}),
              [(Term.Const(@{const_name "DumpCapReg"},@{typ CHERICOP2}),ls"mtc2 ?,?,6"),
               (call
                  ("CHERICOP2.CGet",@{typ CHERICOP2},
                   call("CGet.CGetBase",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                   @{theory}),
                call
                  ("op_gr_cr",@{typ string},tp[ls"cgetbase",var_w("rd",5),var_w("cb",5)],@{theory})),
               (call
                  ("CHERICOP2.CGet",@{typ CHERICOP2},
                   call("CGet.CGetOffset",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                   @{theory}),
                call
                  ("op_gr_cr",@{typ string},tp[ls"cgetoffset",var_w("rd",5),var_w("cb",5)],@{theory})),
               (call
                  ("CHERICOP2.CGet",@{typ CHERICOP2},
                   call("CGet.CGetLen",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                   @{theory}),
                call("op_gr_cr",@{typ string},tp[ls"cgetlen",var_w("rd",5),var_w("cb",5)],@{theory})),
               (call
                  ("CHERICOP2.CGet",@{typ CHERICOP2},
                   call("CGet.CGetTag",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                   @{theory}),
                call("op_gr_cr",@{typ string},tp[ls"cgettag",var_w("rd",5),var_w("cb",5)],@{theory})),
               (call
                  ("CHERICOP2.CGet",@{typ CHERICOP2},
                   call("CGet.CGetSealed",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                   @{theory}),
                call
                  ("op_gr_cr",@{typ string},tp[ls"cgetsealed",var_w("rd",5),var_w("cb",5)],@{theory})),
               (call
                  ("CHERICOP2.CGet",@{typ CHERICOP2},
                   call("CGet.CGetPerm",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                   @{theory}),
                call
                  ("op_gr_cr",@{typ string},tp[ls"cgetperm",var_w("rd",5),var_w("cb",5)],@{theory})),
               (call
                  ("CHERICOP2.CGet",@{typ CHERICOP2},
                   call("CGet.CGetType",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                   @{theory}),
                call
                  ("op_gr_cr",@{typ string},tp[ls"cgettype",var_w("rd",5),var_w("cb",5)],@{theory})),
               (call
                  ("CHERICOP2.CGet",@{typ CHERICOP2},
                   call("CGet.CGetPCC",@{typ CGet},var_w("cd",5),@{theory}),@{theory}),
                call("op_cr",@{typ string},tp[ls"cgetpcc",var_w("cd",5)],@{theory})),
               (call
                  ("CHERICOP2.CGet",@{typ CHERICOP2},
                   call
                     ("CGet.CGetPCCSetOffset",@{typ CGet},tp[var_w("cd",5),var_w("rs",5)],@{theory}),
                   @{theory}),
                call
                  ("op_cr_gr",@{typ string},tp[ls"cgetpccsetoffset",var_w("cd",5),var_w("rs",5)],
                   @{theory})),
               (call
                  ("CHERICOP2.CGet",@{typ CHERICOP2},
                   call("CGet.CGetCause",@{typ CGet},var_w("rd",5),@{theory}),@{theory}),
                call("op_gr",@{typ string},tp[ls"cgetcause",var_w("rd",5)],@{theory})),
               (call
                  ("CHERICOP2.CSet",@{typ CHERICOP2},
                   call("CSet.CSetCause",@{typ CSet},var_w("rt",5),@{theory}),@{theory}),
                call("op_gr",@{typ string},tp[ls"csetcause",var_w("rt",5)],@{theory})),
               (call
                  ("CHERICOP2.CSet",@{typ CHERICOP2},
                   call
                     ("CSet.CSetBounds",@{typ CSet},tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
                      @{theory}),@{theory}),
                call
                  ("op_cr_cr_gr",@{typ string},
                   tp[ls"csetbounds",var_w("cd",5),var_w("cb",5),var_w("rt",5)],@{theory})),
               (call
                  ("CHERICOP2.CSet",@{typ CHERICOP2},
                   call
                     ("CSet.CSetBoundsExact",@{typ CSet},
                      tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],@{theory}),@{theory}),
                call
                  ("op_cr_cr_gr",@{typ string},
                   tp[ls"csetboundsexact",var_w("cd",5),var_w("cb",5),var_w("rt",5)],@{theory})),
               (call
                  ("CHERICOP2.CSet",@{typ CHERICOP2},
                   call
                     ("CSet.CSetBoundsImmediate",@{typ CSet},
                      tp[var_w("cd",5),var_w("cb",5),var_w("len",11)],@{theory}),@{theory}),
                call
                  ("op_cr_cr_imm",@{typ string},
                   tp[ls"csetboundimmediate",var_w("cd",5),var_w("cb",5),var_w("len",11)],@{theory})),
               (call
                  ("CHERICOP2.CSet",@{typ CHERICOP2},
                   call
                     ("CSet.CIncOffset",@{typ CSet},tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
                      @{theory}),@{theory}),
                call
                  ("op_cr_cr_gr",@{typ string},
                   tp[ls"cincoffset",var_w("cd",5),var_w("cb",5),var_w("rt",5)],@{theory})),
               (call
                  ("CHERICOP2.CSet",@{typ CHERICOP2},
                   call
                     ("CSet.CIncOffsetImmediate",@{typ CSet},
                      tp[var_w("cd",5),var_w("cb",5),var_w("inc",11)],@{theory}),@{theory}),
                call
                  ("op_cr_cr_imm",@{typ string},
                   tp[ls"cincoffsetimmediate",var_w("cd",5),var_w("cb",5),var_w("inc",11)],@{theory})),
               (call("CHERICOP2.ClearLo",@{typ CHERICOP2},var_w("mask",16),@{theory}),
                call("op_imm",@{typ string},tp[ls"clearlo",var_w("mask",16)],@{theory})),
               (call("CHERICOP2.ClearHi",@{typ CHERICOP2},var_w("mask",16),@{theory}),
                call("op_imm",@{typ string},tp[ls"clearhi",var_w("mask",16)],@{theory})),
               (call("CHERICOP2.CClearLo",@{typ CHERICOP2},var_w("mask",16),@{theory}),
                call("op_imm",@{typ string},tp[ls"cclearlo",var_w("mask",16)],@{theory})),
               (call("CHERICOP2.CClearHi",@{typ CHERICOP2},var_w("mask",16),@{theory}),
                call("op_imm",@{typ string},tp[ls"cclearhi",var_w("mask",16)],@{theory})),
               (call
                  ("CHERICOP2.CSet",@{typ CHERICOP2},
                   call("CSet.CClearTag",@{typ CSet},tp[var_w("cd",5),var_w("cb",5)],@{theory}),
                   @{theory}),
                call
                  ("op_cr_cr",@{typ string},tp[ls"ccleartag",var_w("cd",5),var_w("cb",5)],@{theory})),
               (call
                  ("CHERICOP2.CSet",@{typ CHERICOP2},
                   call
                     ("CSet.CAndPerm",@{typ CSet},tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
                      @{theory}),@{theory}),
                call
                  ("op_cr_cr_gr",@{typ string},
                   tp[ls"candperm",var_w("cd",5),var_w("cb",5),var_w("rt",5)],@{theory})),
               (call
                  ("CHERICOP2.CSet",@{typ CHERICOP2},
                   call
                     ("CSet.CSetOffset",@{typ CSet},tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
                      @{theory}),@{theory}),
                call
                  ("op_cr_cr_gr",@{typ string},
                   tp[ls"csetoffset",var_w("cd",5),var_w("cb",5),var_w("rt",5)],@{theory})),
               (call
                  ("CHERICOP2.CSub",@{typ CHERICOP2},tp[var_w("rd",5),var_w("cb",5),var_w("ct",5)],
                   @{theory}),
                call
                  ("op_gr_cr_cr",@{typ string},
                   tp[ls"csub",var_w("rd",5),var_w("cb",5),var_w("ct",5)],@{theory})),
               (call
                  ("CHERICOP2.CCheck",@{typ CHERICOP2},
                   call("CCheck.CCheckPerm",@{typ CCheck},tp[var_w("cs",5),var_w("rt",5)],@{theory}),
                   @{theory}),
                call
                  ("op_cr_gr",@{typ string},tp[ls"ccheckperm",var_w("cs",5),var_w("rt",5)],@{theory})),
               (call
                  ("CHERICOP2.CCheck",@{typ CHERICOP2},
                   call("CCheck.CCheckType",@{typ CCheck},tp[var_w("cs",5),var_w("cb",5)],@{theory}),
                   @{theory}),
                call
                  ("op_cr_cr",@{typ string},tp[ls"cchecktype",var_w("cs",5),var_w("cb",5)],@{theory})),
               (call
                  ("CHERICOP2.CSet",@{typ CHERICOP2},
                   call
                     ("CSet.CFromPtr",@{typ CSet},tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
                      @{theory}),@{theory}),
                call
                  ("op_cr_cr_gr",@{typ string},
                   tp[ls"cfromptr",var_w("cd",5),var_w("cb",5),var_w("rt",5)],@{theory})),
               (call
                  ("CHERICOP2.CGet",@{typ CHERICOP2},
                   call
                     ("CGet.CToPtr",@{typ CGet},tp[var_w("rd",5),var_w("cb",5),var_w("ct",5)],
                      @{theory}),@{theory}),
                call
                  ("op_gr_cr_cr",@{typ string},
                   tp[ls"ctoptr",var_w("rd",5),var_w("cb",5),var_w("ct",5)],@{theory})),
               (call
                  ("CHERICOP2.CEQ",@{typ CHERICOP2},tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                   @{theory}),
                call
                  ("op_gr_cr_cr",@{typ string},
                   tp[ls"ceq",var_w("rd",5),var_w("cb",5),var_w("cs",5)],@{theory})),
               (call
                  ("CHERICOP2.CNE",@{typ CHERICOP2},tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                   @{theory}),
                call
                  ("op_gr_cr_cr",@{typ string},
                   tp[ls"cne",var_w("rd",5),var_w("cb",5),var_w("cs",5)],@{theory})),
               (call
                  ("CHERICOP2.CLT",@{typ CHERICOP2},tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                   @{theory}),
                call
                  ("op_gr_cr_cr",@{typ string},
                   tp[ls"clt",var_w("rd",5),var_w("cb",5),var_w("cs",5)],@{theory})),
               (call
                  ("CHERICOP2.CLE",@{typ CHERICOP2},tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                   @{theory}),
                call
                  ("op_gr_cr_cr",@{typ string},
                   tp[ls"cle",var_w("rd",5),var_w("cb",5),var_w("cs",5)],@{theory})),
               (call
                  ("CHERICOP2.CLTU",@{typ CHERICOP2},tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                   @{theory}),
                call
                  ("op_gr_cr_cr",@{typ string},
                   tp[ls"cltu",var_w("rd",5),var_w("cb",5),var_w("cs",5)],@{theory})),
               (call
                  ("CHERICOP2.CLEU",@{typ CHERICOP2},tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                   @{theory}),
                call
                  ("op_gr_cr_cr",@{typ string},
                   tp[ls"cleu",var_w("rd",5),var_w("cb",5),var_w("cs",5)],@{theory})),
               (call
                  ("CHERICOP2.CEXEQ",@{typ CHERICOP2},tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                   @{theory}),
                call
                  ("op_gr_cr_cr",@{typ string},
                   tp[ls"cexeq",var_w("rd",5),var_w("cb",5),var_w("cs",5)],@{theory})),
               (call
                  ("CHERICOP2.CNEXEQ",@{typ CHERICOP2},
                   tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],@{theory}),
                call
                  ("op_gr_cr_cr",@{typ string},
                   tp[ls"cnexeq",var_w("rd",5),var_w("cb",5),var_w("cs",5)],@{theory})),
               (call
                  ("CHERICOP2.CBTU",@{typ CHERICOP2},tp[var_w("cb",5),var_w("offset",16)],@{theory}),
                call
                  ("op_cr_imm",@{typ string},tp[ls"cbtu",var_w("cb",5),var_w("offset",16)],@{theory})),
               (call
                  ("CHERICOP2.CBTS",@{typ CHERICOP2},tp[var_w("cb",5),var_w("offset",16)],@{theory}),
                call
                  ("op_cr_imm",@{typ string},tp[ls"cbts",var_w("cb",5),var_w("offset",16)],@{theory})),
               (call("CHERICOP2.CJR",@{typ CHERICOP2},var_w("cb",5),@{theory}),
                call("op_cr",@{typ string},tp[ls"cjr",var_w("cb",5)],@{theory})),
               (call("CHERICOP2.CJALR",@{typ CHERICOP2},tp[var_w("cd",5),var_w("cb",5)],@{theory}),
                call("op_cr_cr",@{typ string},tp[ls"cjalr",var_w("cb",5),var_w("cd",5)],@{theory})),
               (call
                  ("CHERICOP2.CSeal",@{typ CHERICOP2},tp[var_w("cd",5),var_w("cs",5),var_w("ct",5)],
                   @{theory}),
                call
                  ("op_cr_cr_cr",@{typ string},
                   tp[ls"cseal",var_w("cd",5),var_w("cs",5),var_w("ct",5)],@{theory})),
               (call
                  ("CHERICOP2.CUnseal",@{typ CHERICOP2},
                   tp[var_w("cd",5),var_w("cs",5),var_w("ct",5)],@{theory}),
                call
                  ("op_cr_cr_cr",@{typ string},
                   tp[ls"cunseal",var_w("cd",5),var_w("cs",5),var_w("ct",5)],@{theory})),
               (call
                  ("CHERICOP2.CCall",@{typ CHERICOP2},
                   tp[var_w("cs",5),var_w("cb",5),var_w("selector",11)],@{theory}),
                call
                  ("op_cr_cr_imm",@{typ string},
                   tp[ls"ccall",var_w("cs",5),var_w("cb",5),var_w("selector",11)],@{theory})),
               (call
                  ("CHERICOP2.CCallFast",@{typ CHERICOP2},tp[var_w("cs",5),var_w("cb",5)],@{theory}),
                call
                  ("op_cr_cr",@{typ string},tp[ls"ccallfast",var_w("cs",5),var_w("cb",5)],@{theory})),
               (Term.Const(@{const_name "CReturn"},@{typ CHERICOP2}),ls"creturn"),
               (call
                  ("CHERICOP2.CLLx",@{typ CHERICOP2},tp[var_w("rd",5),var_w("cb",5),var_w("stt",3)],
                   @{theory}),
                itb([(eq(var_w("stt",3),lw(0,3)),
                      call
                        ("op_gr_cr",@{typ string},tp[ls"cllbu",var_w("rd",5),var_w("cb",5)],
                         @{theory})),
                     (eq(var_w("stt",3),lw(1,3)),
                      call
                        ("op_gr_cr",@{typ string},tp[ls"cllhu",var_w("rd",5),var_w("cb",5)],
                         @{theory})),
                     (eq(var_w("stt",3),lw(2,3)),
                      call
                        ("op_gr_cr",@{typ string},tp[ls"cllwu",var_w("rd",5),var_w("cb",5)],
                         @{theory})),
                     (eq(var_w("stt",3),lw(3,3)),
                      call
                        ("op_gr_cr",@{typ string},tp[ls"clld",var_w("rd",5),var_w("cb",5)],@{theory})),
                     (eq(var_w("stt",3),lw(4,3)),
                      call
                        ("op_gr_cr",@{typ string},tp[ls"cllb",var_w("rd",5),var_w("cb",5)],@{theory})),
                     (eq(var_w("stt",3),lw(5,3)),
                      call
                        ("op_gr_cr",@{typ string},tp[ls"cllh",var_w("rd",5),var_w("cb",5)],@{theory})),
                     (eq(var_w("stt",3),lw(6,3)),
                      call
                        ("op_gr_cr",@{typ string},tp[ls"cllw",var_w("rd",5),var_w("cb",5)],@{theory})),
                     (eq(var_w("stt",3),lw(7,3)),
                      call
                        ("op_gr_cr",@{typ string},tp[ls"cllx",var_w("rd",5),var_w("cb",5)],@{theory}))],
                    lx(@{typ string}))),
               (call("CHERICOP2.CLLC",@{typ CHERICOP2},tp[var_w("cd",5),var_w("cb",5)],@{theory}),
                call("op_cr_cr",@{typ string},tp[ls"cllc",var_w("cd",5),var_w("cb",5)],@{theory})),
               (call
                  ("CHERICOP2.CSCx",@{typ CHERICOP2},
                   tp[var_w("rs",5),var_w("cb",5),var_w("rd",5),var_w("tt",2)],@{theory}),
                itb([(eq(var_w("tt",2),lw(0,2)),
                      call
                        ("op_gr_gr_cr",@{typ string},
                         tp[ls"cscb",var_w("rd",5),var_w("rs",5),var_w("cb",5)],@{theory})),
                     (eq(var_w("tt",2),lw(1,2)),
                      call
                        ("op_gr_gr_cr",@{typ string},
                         tp[ls"csch",var_w("rd",5),var_w("rs",5),var_w("cb",5)],@{theory})),
                     (eq(var_w("tt",2),lw(2,2)),
                      call
                        ("op_gr_gr_cr",@{typ string},
                         tp[ls"cscw",var_w("rd",5),var_w("rs",5),var_w("cb",5)],@{theory})),
                     (eq(var_w("tt",2),lw(3,2)),
                      call
                        ("op_gr_gr_cr",@{typ string},
                         tp[ls"cscd",var_w("rd",5),var_w("rs",5),var_w("cb",5)],@{theory}))],
                    lx(@{typ string}))),
               (call
                  ("CHERICOP2.CSCC",@{typ CHERICOP2},tp[var_w("cs",5),var_w("cb",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op_gr_cr_cr",@{typ string},
                   tp[ls"cscc",var_w("rd",5),var_w("cs",5),var_w("cb",5)],@{theory})),
               (call("CHERICOP2.CMove",@{typ CHERICOP2},tp[var_w("cd",5),var_w("cs",5)],@{theory}),
                call("op_cr_cr",@{typ string},tp[ls"cmove",var_w("cd",5),var_w("cs",5)],@{theory})),
               (call
                  ("CHERICOP2.CMOVN",@{typ CHERICOP2},tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
                   @{theory}),
                call
                  ("op_cr_cr_gr",@{typ string},
                   tp[ls"cmovn",var_w("cd",5),var_w("cb",5),var_w("rt",5)],@{theory})),
               (call
                  ("CHERICOP2.CMOVZ",@{typ CHERICOP2},tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
                   @{theory}),
                call
                  ("op_cr_cr_gr",@{typ string},
                   tp[ls"cmovz",var_w("cd",5),var_w("cb",5),var_w("rt",5)],@{theory})),
               (Term.Const(@{const_name "UnknownCapInstruction"},@{typ CHERICOP2}),
                ls"unknown_cap_inst")],@{context})),
          (var_a @{typ instruction},ls"unmatched_cap_inst")],@{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("LWC2InstructionToString",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call
             ("instruction.LWC2",@{typ instruction},
              call("LWC2.CHERILWC2",@{typ LWC2},var("j",@{typ CHERILWC2}),@{theory}),@{theory}),
           cs(var("j",@{typ CHERILWC2}),
              [(call
                  ("CHERILWC2.CLoad",@{typ CHERILWC2},
                   var("v#0",
                       @{typ
                       "5 word \<times>
                        5 word \<times> 5 word \<times> 8 word \<times> 1 word \<times> 2 word"}),
                   @{theory}),
                cs(var("v#0",
                       @{typ
                       "5 word \<times>
                        5 word \<times> 5 word \<times> 8 word \<times> 1 word \<times> 2 word"}),
                   [(tp[var_w("v",5),var_w("v0",5),var_w("v1",5),var_w("v2",8),var_w("v3",1),
                        var_w("v4",2)],
                     itb([(eq(var_w("v3",1),lw(0,1)),
                           itb([(eq(var_w("v4",2),lw(0,2)),
                                 call
                                   ("op_gr_cr_gr_imm",@{typ string},
                                    tp[ls"clbu",var_w("v",5),var_w("v0",5),var_w("v1",5),
                                       var_w("v2",8)],@{theory})),
                                (eq(var_w("v4",2),lw(1,2)),
                                 call
                                   ("op_gr_cr_gr_imm",@{typ string},
                                    tp[ls"clhu",var_w("v",5),var_w("v0",5),var_w("v1",5),
                                       var_w("v2",8)],@{theory})),
                                (eq(var_w("v4",2),lw(2,2)),
                                 call
                                   ("op_gr_cr_gr_imm",@{typ string},
                                    tp[ls"clwu",var_w("v",5),var_w("v0",5),var_w("v1",5),
                                       var_w("v2",8)],@{theory})),
                                (eq(var_w("v4",2),lw(3,2)),
                                 call
                                   ("op_gr_cr_gr_imm",@{typ string},
                                    tp[ls"cld",var_w("v",5),var_w("v0",5),var_w("v1",5),
                                       var_w("v2",8)],@{theory}))],lx(@{typ string}))),
                          (bop(And,eq(var_w("v3",1),lw(1,1)),eq(var_w("v4",2),lw(0,2))),
                           call
                             ("op_gr_cr_gr_imm",@{typ string},
                              tp[ls"clb",var_w("v",5),var_w("v0",5),var_w("v1",5),var_w("v2",8)],
                              @{theory})),
                          (bop(And,eq(var_w("v3",1),lw(1,1)),eq(var_w("v4",2),lw(1,2))),
                           call
                             ("op_gr_cr_gr_imm",@{typ string},
                              tp[ls"clh",var_w("v",5),var_w("v0",5),var_w("v1",5),var_w("v2",8)],
                              @{theory})),
                          (bop(And,eq(var_w("v3",1),lw(1,1)),eq(var_w("v4",2),lw(2,2))),
                           call
                             ("op_gr_cr_gr_imm",@{typ string},
                              tp[ls"clw",var_w("v",5),var_w("v0",5),var_w("v1",5),var_w("v2",8)],
                              @{theory}))],ls"unmatched_cap_inst"))],@{context}))],@{context})),
          (var_a @{typ instruction},ls"unmatched_cap_inst")],@{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("LDC2InstructionToString",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call
             ("instruction.LDC2",@{typ instruction},
              call("LDC2.CHERILDC2",@{typ LDC2},var("j",@{typ CHERILDC2}),@{theory}),@{theory}),
           cs(var("j",@{typ CHERILDC2}),
              [(call
                  ("CHERILDC2.CLC",@{typ CHERILDC2},
                   tp[var_w("cd",5),var_w("cb",5),var_w("rt",5),var_w("offset",11)],@{theory}),
                call
                  ("op_cr_cr_gr_imm",@{typ string},
                   tp[ls"clc",var_w("cd",5),var_w("cb",5),var_w("rt",5),var_w("offset",11)],
                   @{theory}))],@{context})),(var_a @{typ instruction},ls"unmatched_cap_inst")],
         @{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SWC2InstructionToString",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call
             ("instruction.SWC2",@{typ instruction},
              call("SWC2.CHERISWC2",@{typ SWC2},var("j",@{typ CHERISWC2}),@{theory}),@{theory}),
           cs(var("j",@{typ CHERISWC2}),
              [(call
                  ("CHERISWC2.CStore",@{typ CHERISWC2},
                   tp[var_w("rs",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),var_w("t",2)],
                   @{theory}),
                itb([(eq(var_w("t",2),lw(0,2)),
                      call
                        ("op_gr_cr_gr_imm",@{typ string},
                         tp[ls"csb",var_w("rs",5),var_w("cb",5),var_w("rt",5),var_w("offset",8)],
                         @{theory})),
                     (eq(var_w("t",2),lw(1,2)),
                      call
                        ("op_gr_cr_gr_imm",@{typ string},
                         tp[ls"csh",var_w("rs",5),var_w("cb",5),var_w("rt",5),var_w("offset",8)],
                         @{theory})),
                     (eq(var_w("t",2),lw(2,2)),
                      call
                        ("op_gr_cr_gr_imm",@{typ string},
                         tp[ls"csw",var_w("rs",5),var_w("cb",5),var_w("rt",5),var_w("offset",8)],
                         @{theory})),
                     (eq(var_w("t",2),lw(3,2)),
                      call
                        ("op_gr_cr_gr_imm",@{typ string},
                         tp[ls"csd",var_w("rs",5),var_w("cb",5),var_w("rt",5),var_w("offset",8)],
                         @{theory}))],lx(@{typ string})))],@{context})),
          (var_a @{typ instruction},ls"unmatched_cap_inst")],@{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("SDC2InstructionToString",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call
             ("instruction.SDC2",@{typ instruction},
              call("SDC2.CHERISDC2",@{typ SDC2},var("j",@{typ CHERISDC2}),@{theory}),@{theory}),
           cs(var("j",@{typ CHERISDC2}),
              [(call
                  ("CHERISDC2.CSC",@{typ CHERISDC2},
                   tp[var_w("cs",5),var_w("cb",5),var_w("rt",5),var_w("offset",11)],@{theory}),
                call
                  ("op_cr_cr_gr_imm",@{typ string},
                   tp[ls"csc",var_w("cs",5),var_w("cb",5),var_w("rt",5),var_w("offset",11)],
                   @{theory}))],@{context})),(var_a @{typ instruction},ls"unmatched_cap_inst")],
         @{context})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("CHERICOP2Encode",
   close
     (var("j",@{typ CHERICOP2}),
      cs(var("j",@{typ CHERICOP2}),
         [(Term.Const(@{const_name "DumpCapReg"},@{typ CHERICOP2}),
           mu(cc[lw(4,5),lw(0,18),lw(6,3)],qTy)),
          (call("CHERICOP2.CGet",@{typ CHERICOP2},var("v#0",@{typ CGet}),@{theory}),
           cs(var("v#0",@{typ CGet}),
              [(call("CGet.CGetPerm",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),lw(0,5),lw(63,6)],qTy)),
               (call("CGet.CGetType",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),lw(1,5),lw(63,6)],qTy)),
               (call("CGet.CGetBase",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),lw(2,5),lw(63,6)],qTy)),
               (call("CGet.CGetLen",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),lw(3,5),lw(63,6)],qTy)),
               (call("CGet.CGetTag",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),lw(4,5),lw(63,6)],qTy)),
               (call("CGet.CGetSealed",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),lw(5,5),lw(63,6)],qTy)),
               (call("CGet.CGetOffset",@{typ CGet},tp[var_w("rd",5),var_w("cb",5)],@{theory}),
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),lw(6,5),lw(63,6)],qTy)),
               (call("CGet.CGetPCC",@{typ CGet},var_w("cd",5),@{theory}),
                mu(cc[lw(0,5),var_w("cd",5),lw(0,5),lw(31,5),lw(63,6)],qTy)),
               (call("CGet.CGetPCCSetOffset",@{typ CGet},tp[var_w("cd",5),var_w("rs",5)],@{theory}),
                mu(cc[lw(0,5),var_w("cd",5),var_w("rs",5),lw(7,5),lw(63,6)],qTy)),
               (call
                  ("CGet.CToPtr",@{typ CGet},tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],@{theory}),
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),var_w("cs",5),lw(18,6)],qTy)),
               (call("CGet.CGetCause",@{typ CGet},var_w("rd",5),@{theory}),
                mu(cc[lw(0,5),var_w("rd",5),lw(1,5),lw(31,5),lw(63,6)],qTy)),
               (var_a @{typ CGet},mu(lx (Word_Lib.mk_wordT 26),qTy))],@{context})),
          (call
             ("CHERICOP2.CSeal",@{typ CHERICOP2},
              var("v#1",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#1",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("cd",5),var_w("cs",5),var_w("ct",5)],
                mu(cc[lw(0,5),var_w("cd",5),var_w("cs",5),var_w("ct",5),lw(11,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CUnseal",@{typ CHERICOP2},
              var("v#2",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#2",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("cd",5),var_w("cs",5),var_w("ct",5)],
                mu(cc[lw(0,5),var_w("cd",5),var_w("cs",5),var_w("ct",5),lw(12,6)],qTy))],@{context})),
          (call("CHERICOP2.CSet",@{typ CHERICOP2},var("v#3",@{typ CSet}),@{theory}),
           cs(var("v#3",@{typ CSet}),
              [(call
                  ("CSet.CAndPerm",@{typ CSet},tp[var_w("cd",5),var_w("cs",5),var_w("rt",5)],
                   @{theory}),mu(cc[lw(0,5),var_w("cd",5),var_w("cs",5),var_w("rt",5),lw(13,6)],qTy)),
               (call
                  ("CSet.CSetOffset",@{typ CSet},tp[var_w("cd",5),var_w("cs",5),var_w("rt",5)],
                   @{theory}),mu(cc[lw(0,5),var_w("cd",5),var_w("cs",5),var_w("rt",5),lw(15,6)],qTy)),
               (call
                  ("CSet.CSetBounds",@{typ CSet},tp[var_w("cd",5),var_w("cs",5),var_w("rt",5)],
                   @{theory}),mu(cc[lw(0,5),var_w("cd",5),var_w("cs",5),var_w("rt",5),lw(16,6)],qTy)),
               (call
                  ("CSet.CSetBoundsExact",@{typ CSet},tp[var_w("cd",5),var_w("cs",5),var_w("rt",5)],
                   @{theory}),mu(cc[lw(0,5),var_w("cd",5),var_w("cs",5),var_w("rt",5),lw(9,6)],qTy)),
               (call("CSet.CClearTag",@{typ CSet},tp[var_w("cd",5),var_w("cb",5)],@{theory}),
                mu(cc[lw(0,5),var_w("cd",5),var_w("cb",5),lw(11,5),lw(63,6)],qTy)),
               (call
                  ("CSet.CIncOffset",@{typ CSet},tp[var_w("cd",5),var_w("cb",5),var_w("rt",5)],
                   @{theory}),mu(cc[lw(0,5),var_w("cd",5),var_w("cb",5),var_w("rt",5),lw(17,6)],qTy)),
               (call
                  ("CSet.CFromPtr",@{typ CSet},tp[var_w("cd",5),var_w("cb",5),var_w("rs",5)],
                   @{theory}),mu(cc[lw(0,5),var_w("cd",5),var_w("cb",5),var_w("rs",5),lw(19,6)],qTy)),
               (call("CSet.CSetCause",@{typ CSet},var_w("rs",5),@{theory}),
                mu(cc[lw(0,5),var_w("rs",5),lw(2,5),lw(31,5),lw(63,6)],qTy)),
               (var_a @{typ CSet},mu(lx (Word_Lib.mk_wordT 26),qTy))],@{context})),
          (call
             ("CHERICOP2.CSub",@{typ CHERICOP2},
              var("v#4",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#4",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("rt",5),var_w("cb",5),var_w("cs",5)],
                mu(cc[lw(0,5),var_w("rt",5),var_w("cb",5),var_w("cs",5),lw(10,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CMove",@{typ CHERICOP2},var("v#5",@{typ "5 word \<times> 5 word"}),
              @{theory}),
           cs(var("v#5",@{typ "5 word \<times> 5 word"}),
              [(tp[var_w("cd",5),var_w("cs",5)],
                mu(cc[lw(0,5),var_w("cd",5),var_w("cs",5),lw(10,5),lw(63,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CMOVZ",@{typ CHERICOP2},
              var("v#6",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#6",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("cd",5),var_w("cs",5),var_w("rs",5)],
                mu(cc[lw(0,5),var_w("cd",5),var_w("cs",5),var_w("rs",5),lw(27,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CMOVN",@{typ CHERICOP2},
              var("v#7",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#7",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("cd",5),var_w("cs",5),var_w("rs",5)],
                mu(cc[lw(0,5),var_w("cd",5),var_w("cs",5),var_w("rs",5),lw(28,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CEQ",@{typ CHERICOP2},
              var("v#8",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#8",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),var_w("cs",5),lw(20,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CNE",@{typ CHERICOP2},
              var("v#9",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#9",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),var_w("cs",5),lw(21,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CLT",@{typ CHERICOP2},
              var("v#10",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#10",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),var_w("cs",5),lw(22,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CLE",@{typ CHERICOP2},
              var("v#11",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#11",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),var_w("cs",5),lw(23,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CLTU",@{typ CHERICOP2},
              var("v#12",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#12",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),var_w("cs",5),lw(24,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CLEU",@{typ CHERICOP2},
              var("v#13",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#13",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),var_w("cs",5),lw(25,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CEXEQ",@{typ CHERICOP2},
              var("v#14",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#14",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),var_w("cs",5),lw(26,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CNEXEQ",@{typ CHERICOP2},
              var("v#15",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#15",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("rd",5),var_w("cb",5),var_w("cs",5)],
                mu(cc[lw(0,5),var_w("rd",5),var_w("cb",5),var_w("cs",5),lw(33,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CBTU",@{typ CHERICOP2},var("v#16",@{typ "5 word \<times> 16 word"}),
              @{theory}),
           cs(var("v#16",@{typ "5 word \<times> 16 word"}),
              [(tp[var_w("cd",5),var_w("offset",16)],
                mu(cc[lw(9,5),var_w("cd",5),var_w("offset",16)],qTy))],@{context})),
          (call
             ("CHERICOP2.CBTS",@{typ CHERICOP2},var("v#17",@{typ "5 word \<times> 16 word"}),
              @{theory}),
           cs(var("v#17",@{typ "5 word \<times> 16 word"}),
              [(tp[var_w("cd",5),var_w("offset",16)],
                mu(cc[lw(10,5),var_w("cd",5),var_w("offset",16)],qTy))],@{context})),
          (call("CHERICOP2.CJR",@{typ CHERICOP2},var_w("v#18",5),@{theory}),
           mu(cc[lw(0,5),var_w("v#18",5),lw(3,5),lw(31,5),lw(63,6)],qTy)),
          (call
             ("CHERICOP2.CJALR",@{typ CHERICOP2},var("v#19",@{typ "5 word \<times> 5 word"}),
              @{theory}),
           cs(var("v#19",@{typ "5 word \<times> 5 word"}),
              [(tp[var_w("cd",5),var_w("cb",5)],
                mu(cc[lw(0,5),var_w("cd",5),var_w("cb",5),lw(12,5),lw(63,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CCallFast",@{typ CHERICOP2},var("v#20",@{typ "5 word \<times> 5 word"}),
              @{theory}),
           cs(var("v#20",@{typ "5 word \<times> 5 word"}),
              [(tp[var_w("cs",5),var_w("cb",5)],
                mu(cc[lw(5,5),var_w("cs",5),var_w("cb",5),lw(0,5),lw(1,6)],qTy))],@{context})),
          (call
             ("CHERICOP2.CCall",@{typ CHERICOP2},
              var("v#21",@{typ "5 word \<times> 5 word \<times> 11 word"}),@{theory}),
           cs(var("v#21",@{typ "5 word \<times> 5 word \<times> 11 word"}),
              [(tp[var_w("cs",5),var_w("cb",5),var_w("selector",11)],
                mu(cc[lw(5,5),var_w("cs",5),var_w("cb",5),var_w("selector",11)],qTy))],@{context})),
          (call("CHERICOP2.CCheck",@{typ CHERICOP2},var("v#22",@{typ CCheck}),@{theory}),
           cs(var("v#22",@{typ CCheck}),
              [(call("CCheck.CCheckPerm",@{typ CCheck},tp[var_w("cs",5),var_w("rt",5)],@{theory}),
                mu(cc[lw(0,5),var_w("cs",5),var_w("rt",5),lw(8,5),lw(63,6)],qTy)),
               (call("CCheck.CCheckType",@{typ CCheck},tp[var_w("cs",5),var_w("cb",5)],@{theory}),
                mu(cc[lw(0,5),var_w("cs",5),var_w("cb",5),lw(9,5),lw(63,6)],qTy)),
               (var_a @{typ CCheck},mu(lx (Word_Lib.mk_wordT 26),qTy))],@{context})),
          (call("CHERICOP2.ClearLo",@{typ CHERICOP2},var_w("v#23",16),@{theory}),
           mu(cc[lw(15,5),lw(0,5),var_w("v#23",16)],qTy)),
          (call("CHERICOP2.ClearHi",@{typ CHERICOP2},var_w("v#24",16),@{theory}),
           mu(cc[lw(15,5),lw(1,5),var_w("v#24",16)],qTy)),
          (call("CHERICOP2.CClearLo",@{typ CHERICOP2},var_w("v#25",16),@{theory}),
           mu(cc[lw(15,5),lw(2,5),var_w("v#25",16)],qTy)),
          (call("CHERICOP2.CClearHi",@{typ CHERICOP2},var_w("v#26",16),@{theory}),
           mu(cc[lw(15,5),lw(3,5),var_w("v#26",16)],qTy)),
          (call
             ("CHERICOP2.CLLx",@{typ CHERICOP2},
              var("v#27",@{typ "5 word \<times> 5 word \<times> 3 word"}),@{theory}),
           cs(tp[mop(Fst,var("v#27",@{typ "5 word \<times> 5 word \<times> 3 word"})),
                 mop(Fst,mop(Snd,var("v#27",@{typ "5 word \<times> 5 word \<times> 3 word"}))),
                 call
                   ("boolify'3",@{typ "bool \<times> bool \<times> bool"},
                    mop(Snd,mop(Snd,var("v#27",@{typ "5 word \<times> 5 word \<times> 3 word"}))),
                    @{theory})],
              [(tp[var_w("rd",5),var_w("cb",5),var_b"s'0",lf,lf],
                mu(cc[lw(16,5),var_w("rd",5),var_w("cb",5),lw(0,7),lw(1,1),
                      mop(Cast w1,ll[var_b"s'0"]),lw(0,2)],qTy)),
               (tp[var_w("rd",5),var_w("cb",5),var_b"s'0",lf,lt],
                mu(cc[lw(16,5),var_w("rd",5),var_w("cb",5),lw(0,7),lw(1,1),
                      mop(Cast w1,ll[var_b"s'0"]),lw(1,2)],qTy)),
               (tp[var_w("rd",5),var_w("cb",5),var_b"s'0",lt,lf],
                mu(cc[lw(16,5),var_w("rd",5),var_w("cb",5),lw(0,7),lw(1,1),
                      mop(Cast w1,ll[var_b"s'0"]),lw(2,2)],qTy)),
               (tp[var_w("rd",5),var_w("cb",5),lf,lt,lt],
                mu(cc[lw(16,5),var_w("rd",5),var_w("cb",5),lw(0,7),lw(11,4)],qTy)),
               (tp[var_w("rd",5),var_w("cb",5),lt,lt,lt],
                mb(call
                     ("next_unknown",
                      @{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                      ls"instruction-encoding",@{theory}),
                   close
                     (var("v",@{typ "nat \<times> string"}),
                      mu(apply
                           (lx(@{typ "(nat \<times> string) \<Rightarrow> 26 word"}),
                            var("v",@{typ "nat \<times> string"})),qTy)))),
               (tp[var_a (Word_Lib.mk_wordT 5),var_a (Word_Lib.mk_wordT 5),var_a HOLogic.boolT,
                   var_a HOLogic.boolT,var_a HOLogic.boolT],mu(lx (Word_Lib.mk_wordT 26),qTy))],
              @{context})),
          (call
             ("CHERICOP2.CLLC",@{typ CHERICOP2},var("v#28",@{typ "5 word \<times> 5 word"}),
              @{theory}),
           cs(var("v#28",@{typ "5 word \<times> 5 word"}),
              [(tp[var_w("cd",5),var_w("cb",5)],
                mu(cc[lw(16,5),var_w("cd",5),var_w("cb",5),lw(0,7),lw(15,4)],qTy))],@{context})),
          (call
             ("CHERICOP2.CSCx",@{typ CHERICOP2},
              var("v#29",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 2 word"}),@{theory}),
           cs(var("v#29",@{typ "5 word \<times> 5 word \<times> 5 word \<times> 2 word"}),
              [(tp[var_w("rs",5),var_w("cb",5),var_w("rd",5),var_w("tt",2)],
                mu(cc[lw(16,5),var_w("rs",5),var_w("cb",5),var_w("rd",5),lw(0,2),lw(0,2),
                      var_w("tt",2)],qTy))],@{context})),
          (call
             ("CHERICOP2.CSCC",@{typ CHERICOP2},
              var("v#30",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
           cs(var("v#30",@{typ "5 word \<times> 5 word \<times> 5 word"}),
              [(tp[var_w("cs",5),var_w("cb",5),var_w("rd",5)],
                mu(cc[lw(16,5),var_w("cs",5),var_w("cb",5),var_w("rd",5),lw(0,2),lw(7,4)],qTy))],
              @{context})),
          (Term.Const(@{const_name "UnknownCapInstruction"},@{typ CHERICOP2}),
           mu(cc[lw(31,5),lw(0,21)],qTy)),(var_a @{typ CHERICOP2},mu(lx (Word_Lib.mk_wordT 26),qTy))],
         @{context})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("COP2Encode",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call
             ("instruction.COP2",@{typ instruction},
              call("COP2.CHERICOP2",@{typ COP2},var("j",@{typ CHERICOP2}),@{theory}),@{theory}),
           mb(call
                ("CHERICOP2Encode",@{typ "state \<Rightarrow> (26 word \<times> state)"},
                 var("j",@{typ CHERICOP2}),@{theory}),
              close(var_w("v",26),mu(cc[lw(18,6),var_w("v",26)],qTy)))),
          (var_a @{typ instruction},
           mb(call
                ("next_unknown",@{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                 ls"instruction-encoding",@{theory}),
              close
                (var("v",@{typ "nat \<times> string"}),
                 mu(apply
                      (lx(@{typ "(nat \<times> string) \<Rightarrow> 32 word"}),
                       var("v",@{typ "nat \<times> string"})),qTy))))],@{context})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LWC2Encode",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call("instruction.LWC2",@{typ instruction},var("v#0",@{typ LWC2}),@{theory}),
           cs(var("v#0",@{typ LWC2}),
              [(call("LWC2.CHERILWC2",@{typ LWC2},var("v#1",@{typ CHERILWC2}),@{theory}),
                cs(var("v#1",@{typ CHERILWC2}),
                   [(call
                       ("CHERILWC2.CLoad",@{typ CHERILWC2},
                        var("v#2",
                            @{typ
                            "5 word \<times>
                             5 word \<times> 5 word \<times> 8 word \<times> 1 word \<times> 2 word"}),
                        @{theory}),
                     cs(var("v#2",
                            @{typ
                            "5 word \<times>
                             5 word \<times> 5 word \<times> 8 word \<times> 1 word \<times> 2 word"}),
                        [(tp[var_w("v",5),var_w("v0",5),var_w("v1",5),var_w("v2",8),var_w("v3",1),
                             var_w("v4",2)],
                          itb([(eq(var_w("v3",1),lw(0,1)),
                                mu(cc[lw(50,6),var_w("v",5),var_w("v0",5),var_w("v1",5),
                                      var_w("v2",8),lw(0,1),var_w("v4",2)],qTy)),
                               (bop(And,eq(var_w("v3",1),lw(1,1)),eq(var_w("v4",2),lw(0,2))),
                                mu(cc[lw(50,6),var_w("v",5),var_w("v0",5),var_w("v1",5),
                                      var_w("v2",8),lw(4,3)],qTy)),
                               (bop(And,eq(var_w("v3",1),lw(1,1)),eq(var_w("v4",2),lw(1,2))),
                                mu(cc[lw(50,6),var_w("v",5),var_w("v0",5),var_w("v1",5),
                                      var_w("v2",8),lw(5,3)],qTy)),
                               (bop(And,eq(var_w("v3",1),lw(1,1)),eq(var_w("v4",2),lw(2,2))),
                                mu(cc[lw(50,6),var_w("v",5),var_w("v0",5),var_w("v1",5),
                                      var_w("v2",8),lw(6,3)],qTy))],
                              mb(call
                                   ("next_unknown",
                                    @{typ
                                    "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                                    ls"instruction-encoding",@{theory}),
                                 close
                                   (var("v",@{typ "nat \<times> string"}),
                                    mu(apply
                                         (lx(@{typ "(nat \<times> string) \<Rightarrow> 32 word"}),
                                          var("v",@{typ "nat \<times> string"})),qTy)))))],
                        @{context}))],@{context}))],@{context})),
          (var_a @{typ instruction},
           mb(call
                ("next_unknown",@{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                 ls"instruction-encoding",@{theory}),
              close
                (var("v",@{typ "nat \<times> string"}),
                 mu(apply
                      (lx(@{typ "(nat \<times> string) \<Rightarrow> 32 word"}),
                       var("v",@{typ "nat \<times> string"})),qTy))))],@{context})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("LDC2Encode",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call
             ("instruction.LDC2",@{typ instruction},
              call
                ("LDC2.CHERILDC2",@{typ LDC2},
                 call
                   ("CHERILDC2.CLC",@{typ CHERILDC2},
                    tp[var_w("c",5),var_w("cb",5),var_w("rt",5),var_w("offset",11)],@{theory}),
                 @{theory}),@{theory}),
           mu(cc[lw(54,6),var_w("c",5),var_w("cb",5),var_w("rt",5),var_w("offset",11)],qTy)),
          (var_a @{typ instruction},
           mb(call
                ("next_unknown",@{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                 ls"instruction-encoding",@{theory}),
              close
                (var("v",@{typ "nat \<times> string"}),
                 mu(apply
                      (lx(@{typ "(nat \<times> string) \<Rightarrow> 32 word"}),
                       var("v",@{typ "nat \<times> string"})),qTy))))],@{context})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SWC2Encode",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call
             ("instruction.SWC2",@{typ instruction},
              call
                ("SWC2.CHERISWC2",@{typ SWC2},
                 call
                   ("CHERISWC2.CStore",@{typ CHERISWC2},
                    tp[var_w("rs",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),var_w("t",2)],
                    @{theory}),@{theory}),@{theory}),
           mu(cc[lw(58,6),var_w("rs",5),var_w("cb",5),var_w("rt",5),var_w("offset",8),lw(0,1),
                 var_w("t",2)],qTy)),
          (var_a @{typ instruction},
           mb(call
                ("next_unknown",@{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                 ls"instruction-encoding",@{theory}),
              close
                (var("v",@{typ "nat \<times> string"}),
                 mu(apply
                      (lx(@{typ "(nat \<times> string) \<Rightarrow> 32 word"}),
                       var("v",@{typ "nat \<times> string"})),qTy))))],@{context})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("SDC2Encode",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call
             ("instruction.SDC2",@{typ instruction},
              call
                ("SDC2.CHERISDC2",@{typ SDC2},
                 call
                   ("CHERISDC2.CSC",@{typ CHERISDC2},
                    tp[var_w("c",5),var_w("cb",5),var_w("rt",5),var_w("offset",11)],@{theory}),
                 @{theory}),@{theory}),
           mu(cc[lw(62,6),var_w("c",5),var_w("cb",5),var_w("rt",5),var_w("offset",11)],qTy)),
          (var_a @{typ instruction},
           mb(call
                ("next_unknown",@{typ "state \<Rightarrow> ((nat \<times> string) \<times> state)"},
                 ls"instruction-encoding",@{theory}),
              close
                (var("v",@{typ "nat \<times> string"}),
                 mu(apply
                      (lx(@{typ "(nat \<times> string) \<Rightarrow> 32 word"}),
                       var("v",@{typ "nat \<times> string"})),qTy))))],@{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("instructionToString",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call("instruction.Shift",@{typ instruction},var("v#0",@{typ Shift}),@{theory}),
           cs(var("v#0",@{typ Shift}),
              [(call
                  ("Shift.SLL",@{typ Shift},
                   var("v#18",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#18",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                     itb([(bop(And,eq(var_w("rt",5),lw(0,5)),
                               bop(And,eq(var_w("rd",5),lw(0,5)),eq(var_w("imm5",5),lw(0,5)))),
                           ls"nop"),
                          (bop(And,eq(var_w("rt",5),lw(0,5)),
                               bop(And,eq(var_w("rd",5),lw(0,5)),eq(var_w("imm5",5),lw(1,5)))),
                           ls"ssnop")],
                         call
                           ("op2ri",@{typ string},
                            tp[ls"sll",var_w("rd",5),var_w("rt",5),var_w("imm5",5)],@{theory})))],
                   @{context})),
               (call
                  ("Shift.SRL",@{typ Shift},
                   var("v#19",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#19",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                     call
                       ("op2ri",@{typ string},
                        tp[ls"srl",var_w("rd",5),var_w("rt",5),var_w("imm5",5)],@{theory}))],
                   @{context})),
               (call
                  ("Shift.SRA",@{typ Shift},
                   var("v#20",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#20",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                     call
                       ("op2ri",@{typ string},
                        tp[ls"sra",var_w("rd",5),var_w("rt",5),var_w("imm5",5)],@{theory}))],
                   @{context})),
               (call
                  ("Shift.SLLV",@{typ Shift},
                   var("v#21",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#21",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                     call
                       ("op3r",@{typ string},tp[ls"sllv",var_w("rd",5),var_w("rt",5),var_w("rs",5)],
                        @{theory}))],@{context})),
               (call
                  ("Shift.SRLV",@{typ Shift},
                   var("v#22",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#22",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                     call
                       ("op3r",@{typ string},tp[ls"srlv",var_w("rd",5),var_w("rt",5),var_w("rs",5)],
                        @{theory}))],@{context})),
               (call
                  ("Shift.SRAV",@{typ Shift},
                   var("v#23",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#23",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                     call
                       ("op3r",@{typ string},tp[ls"srav",var_w("rd",5),var_w("rt",5),var_w("rs",5)],
                        @{theory}))],@{context})),
               (call
                  ("Shift.DSLLV",@{typ Shift},
                   var("v#24",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#24",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                     call
                       ("op3r",@{typ string},
                        tp[ls"dsllv",var_w("rd",5),var_w("rt",5),var_w("rs",5)],@{theory}))],
                   @{context})),
               (call
                  ("Shift.DSRLV",@{typ Shift},
                   var("v#25",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#25",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                     call
                       ("op3r",@{typ string},
                        tp[ls"dsrlv",var_w("rd",5),var_w("rt",5),var_w("rs",5)],@{theory}))],
                   @{context})),
               (call
                  ("Shift.DSRAV",@{typ Shift},
                   var("v#26",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#26",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                     call
                       ("op3r",@{typ string},
                        tp[ls"dsrav",var_w("rd",5),var_w("rt",5),var_w("rs",5)],@{theory}))],
                   @{context})),
               (call
                  ("Shift.DSLL",@{typ Shift},
                   var("v#27",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#27",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                     call
                       ("op2ri",@{typ string},
                        tp[ls"dsll",var_w("rd",5),var_w("rt",5),var_w("imm5",5)],@{theory}))],
                   @{context})),
               (call
                  ("Shift.DSRL",@{typ Shift},
                   var("v#28",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#28",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                     call
                       ("op2ri",@{typ string},
                        tp[ls"dsrl",var_w("rd",5),var_w("rt",5),var_w("imm5",5)],@{theory}))],
                   @{context})),
               (call
                  ("Shift.DSRA",@{typ Shift},
                   var("v#29",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#29",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                     call
                       ("op2ri",@{typ string},
                        tp[ls"dsra",var_w("rd",5),var_w("rt",5),var_w("imm5",5)],@{theory}))],
                   @{context})),
               (call
                  ("Shift.DSLL32",@{typ Shift},
                   var("v#30",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#30",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                     call
                       ("op2ri",@{typ string},
                        tp[ls"dsll32",var_w("rd",5),var_w("rt",5),var_w("imm5",5)],@{theory}))],
                   @{context})),
               (call
                  ("Shift.DSRL32",@{typ Shift},
                   var("v#31",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#31",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                     call
                       ("op2ri",@{typ string},
                        tp[ls"dsrl32",var_w("rd",5),var_w("rt",5),var_w("imm5",5)],@{theory}))],
                   @{context})),
               (call
                  ("Shift.DSRA32",@{typ Shift},
                   var("v#32",@{typ "5 word \<times> 5 word \<times> 5 word"}),@{theory}),
                cs(var("v#32",@{typ "5 word \<times> 5 word \<times> 5 word"}),
                   [(tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                     call
                       ("op2ri",@{typ string},
                        tp[ls"dsra32",var_w("rd",5),var_w("rt",5),var_w("imm5",5)],@{theory}))],
                   @{context}))],@{context})),
          (call("instruction.Branch",@{typ instruction},var("v#1",@{typ Branch}),@{theory}),
           cs(var("v#1",@{typ Branch}),
              [(call("Branch.JR",@{typ Branch},var_w("v#33",5),@{theory}),
                call("op1r",@{typ string},tp[ls"jr",var_w("v#33",5)],@{theory})),
               (call
                  ("Branch.JALR",@{typ Branch},var("v#34",@{typ "5 word \<times> 5 word"}),@{theory}),
                cs(var("v#34",@{typ "5 word \<times> 5 word"}),
                   [(tp[var_w("rs",5),var_w("rd",5)],
                     call("op2r",@{typ string},tp[ls"jalr",var_w("rd",5),var_w("rs",5)],@{theory}))],
                   @{context})),
               (call
                  ("Branch.BLTZ",@{typ Branch},var("v#35",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#35",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rai",@{typ string},tp[ls"bltz",var_w("rs",5),var_w("imm",16)],@{theory}))],
                   @{context})),
               (call
                  ("Branch.BGEZ",@{typ Branch},var("v#36",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#36",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rai",@{typ string},tp[ls"bgez",var_w("rs",5),var_w("imm",16)],@{theory}))],
                   @{context})),
               (call
                  ("Branch.BLTZL",@{typ Branch},var("v#37",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#37",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rlai",@{typ string},tp[ls"bltzl",var_w("rs",5),var_w("imm",16)],
                        @{theory}))],@{context})),
               (call
                  ("Branch.BGEZL",@{typ Branch},var("v#38",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#38",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rlai",@{typ string},tp[ls"bgezl",var_w("rs",5),var_w("imm",16)],
                        @{theory}))],@{context})),
               (call
                  ("Branch.BLTZAL",@{typ Branch},var("v#39",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#39",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rai",@{typ string},tp[ls"bltzal",var_w("rs",5),var_w("imm",16)],
                        @{theory}))],@{context})),
               (call
                  ("Branch.BGEZAL",@{typ Branch},var("v#40",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#40",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rai",@{typ string},tp[ls"bgezal",var_w("rs",5),var_w("imm",16)],
                        @{theory}))],@{context})),
               (call
                  ("Branch.BLTZALL",@{typ Branch},var("v#41",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#41",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rlai",@{typ string},tp[ls"bltzall",var_w("rs",5),var_w("imm",16)],
                        @{theory}))],@{context})),
               (call
                  ("Branch.BGEZALL",@{typ Branch},var("v#42",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#42",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rlai",@{typ string},tp[ls"bgezall",var_w("rs",5),var_w("imm",16)],
                        @{theory}))],@{context})),
               (call("Branch.J",@{typ Branch},var_w("v#43",26),@{theory}),
                call("op1ai",@{typ string},tp[ls"j",var_w("v#43",26)],@{theory})),
               (call("Branch.JAL",@{typ Branch},var_w("v#44",26),@{theory}),
                call("op1ai",@{typ string},tp[ls"jal",var_w("v#44",26)],@{theory})),
               (call
                  ("Branch.BEQ",@{typ Branch},
                   var("v#45",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                cs(var("v#45",@{typ "5 word \<times> 5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                     ite(bop(And,eq(var_w("rs",5),lw(0,5)),eq(var_w("rt",5),lw(0,5))),
                         call("op1ai",@{typ string},tp[ls"b",var_w("imm",16)],@{theory}),
                         call
                           ("op2rai",@{typ string},
                            tp[ls"beq",var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory})))],
                   @{context})),
               (call
                  ("Branch.BNE",@{typ Branch},
                   var("v#46",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                cs(var("v#46",@{typ "5 word \<times> 5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                     call
                       ("op2rai",@{typ string},
                        tp[ls"bne",var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}))],
                   @{context})),
               (call
                  ("Branch.BLEZ",@{typ Branch},var("v#47",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#47",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rai",@{typ string},tp[ls"blez",var_w("rs",5),var_w("imm",16)],@{theory}))],
                   @{context})),
               (call
                  ("Branch.BGTZ",@{typ Branch},var("v#48",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#48",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rai",@{typ string},tp[ls"bgtz",var_w("rs",5),var_w("imm",16)],@{theory}))],
                   @{context})),
               (call
                  ("Branch.BEQL",@{typ Branch},
                   var("v#49",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                cs(var("v#49",@{typ "5 word \<times> 5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                     call
                       ("op2rlai",@{typ string},
                        tp[ls"beql",var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}))],
                   @{context})),
               (call
                  ("Branch.BNEL",@{typ Branch},
                   var("v#50",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
                cs(var("v#50",@{typ "5 word \<times> 5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                     call
                       ("op2rlai",@{typ string},
                        tp[ls"bnel",var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}))],
                   @{context})),
               (call
                  ("Branch.BLEZL",@{typ Branch},var("v#51",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#51",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rlai",@{typ string},tp[ls"blezl",var_w("rs",5),var_w("imm",16)],
                        @{theory}))],@{context})),
               (call
                  ("Branch.BGTZL",@{typ Branch},var("v#52",@{typ "5 word \<times> 16 word"}),
                   @{theory}),
                cs(var("v#52",@{typ "5 word \<times> 16 word"}),
                   [(tp[var_w("rs",5),var_w("imm",16)],
                     call
                       ("op1rlai",@{typ string},tp[ls"bgtzl",var_w("rs",5),var_w("imm",16)],
                        @{theory}))],@{context}))],@{context})),
          (call("instruction.MultDiv",@{typ instruction},var("v#2",@{typ MultDiv}),@{theory}),
           cs(var("v#2",@{typ MultDiv}),
              [(call("MultDiv.MFHI",@{typ MultDiv},var_w("rd",5),@{theory}),
                call("op1r",@{typ string},tp[ls"mfhi",var_w("rd",5)],@{theory})),
               (call("MultDiv.MTHI",@{typ MultDiv},var_w("rd",5),@{theory}),
                call("op1r",@{typ string},tp[ls"mthi",var_w("rd",5)],@{theory})),
               (call("MultDiv.MFLO",@{typ MultDiv},var_w("rs",5),@{theory}),
                call("op1r",@{typ string},tp[ls"mflo",var_w("rs",5)],@{theory})),
               (call("MultDiv.MTLO",@{typ MultDiv},var_w("rs",5),@{theory}),
                call("op1r",@{typ string},tp[ls"mtlo",var_w("rs",5)],@{theory})),
               (call("MultDiv.MADD",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"madd",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("MultDiv.MADDU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"maddu",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("MultDiv.MSUB",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"msub",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("MultDiv.MSUBU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"msubu",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call
                  ("MultDiv.MUL",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"mul",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call("MultDiv.MULT",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"mult",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("MultDiv.MULTU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"multu",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("MultDiv.DIV",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"div",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("MultDiv.DIVU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"divu",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("MultDiv.DMULT",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"dmult",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("MultDiv.DMULTU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"dmultu",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("MultDiv.DDIV",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"ddiv",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("MultDiv.DDIVU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"ddivu",var_w("rs",5),var_w("rt",5)],@{theory}))],
              @{context})),
          (call("instruction.ArithR",@{typ instruction},var("v#3",@{typ ArithR}),@{theory}),
           cs(var("v#3",@{typ ArithR}),
              [(call
                  ("ArithR.MOVN",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"movn",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.MOVZ",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"movz",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.ADD",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"add",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.ADDU",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"addu",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.SUB",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"sub",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.SUBU",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"subu",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.AND",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"and",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.OR",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
                call
                  ("op3r",@{typ string},tp[ls"or",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.XOR",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"xor",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.NOR",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"nor",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.SLT",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"slt",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.SLTU",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"sltu",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.DADD",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"dadd",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.DADDU",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"daddu",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.DSUB",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"dsub",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory})),
               (call
                  ("ArithR.DSUBU",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                   @{theory}),
                call
                  ("op3r",@{typ string},tp[ls"dsubu",var_w("rd",5),var_w("rs",5),var_w("rt",5)],
                   @{theory}))],@{context})),
          (call("instruction.Trap",@{typ instruction},var("v#4",@{typ Trap}),@{theory}),
           cs(var("v#4",@{typ Trap}),
              [(call("Trap.TGE",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"tge",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("Trap.TGEU",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"tgeu",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("Trap.TLT",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"tlt",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("Trap.TLTU",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"tltu",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("Trap.TEQ",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"teq",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("Trap.TNE",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
                call("op2r",@{typ string},tp[ls"tne",var_w("rs",5),var_w("rt",5)],@{theory})),
               (call("Trap.TGEI",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
                call("op1ri",@{typ string},tp[ls"tgei",var_w("rs",5),var_w("imm",16)],@{theory})),
               (call("Trap.TGEIU",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
                call("op1ri",@{typ string},tp[ls"tgeiu",var_w("rs",5),var_w("imm",16)],@{theory})),
               (call("Trap.TLTI",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
                call("op1ri",@{typ string},tp[ls"tlti",var_w("rs",5),var_w("imm",16)],@{theory})),
               (call("Trap.TLTIU",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
                call("op1ri",@{typ string},tp[ls"tltiu",var_w("rs",5),var_w("imm",16)],@{theory})),
               (call("Trap.TEQI",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
                call("op1ri",@{typ string},tp[ls"teqi",var_w("rs",5),var_w("imm",16)],@{theory})),
               (call("Trap.TNEI",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
                call("op1ri",@{typ string},tp[ls"tnei",var_w("rs",5),var_w("imm",16)],@{theory}))],
              @{context})),
          (call("instruction.CP",@{typ instruction},var("v#5",@{typ CP}),@{theory}),
           cs(var("v#5",@{typ CP}),
              [(call("CP.MFC0",@{typ CP},tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),
                call
                  ("op2roi",@{typ string},tp[ls"mfc0",var_w("rt",5),var_w("rd",5),var_w("sel",3)],
                   @{theory})),
               (call("CP.DMFC0",@{typ CP},tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),
                call
                  ("op2roi",@{typ string},tp[ls"dmfc0",var_w("rt",5),var_w("rd",5),var_w("sel",3)],
                   @{theory})),
               (call("CP.MTC0",@{typ CP},tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),
                call
                  ("op2roi",@{typ string},tp[ls"mtc0",var_w("rt",5),var_w("rd",5),var_w("sel",3)],
                   @{theory})),
               (call("CP.DMTC0",@{typ CP},tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),
                call
                  ("op2roi",@{typ string},tp[ls"dmtc0",var_w("rt",5),var_w("rd",5),var_w("sel",3)],
                   @{theory}))],@{context})),
          (call("instruction.ArithI",@{typ instruction},var("v#6",@{typ ArithI}),@{theory}),
           cs(var("v#6",@{typ ArithI}),
              [(call
                  ("ArithI.ADDI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("op2ri",@{typ string},tp[ls"addi",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("ArithI.ADDIU",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("op2ri",@{typ string},tp[ls"addiu",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("ArithI.SLTI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("op2ri",@{typ string},tp[ls"slti",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("ArithI.SLTIU",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("op2ri",@{typ string},tp[ls"sltiu",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("ArithI.ANDI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("op2ri",@{typ string},tp[ls"andi",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("ArithI.ORI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("op2ri",@{typ string},tp[ls"ori",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("ArithI.XORI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("op2ri",@{typ string},tp[ls"xori",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call("ArithI.LUI",@{typ ArithI},tp[var_w("rt",5),var_w("imm",16)],@{theory}),
                call("op1ri",@{typ string},tp[ls"lui",var_w("rt",5),var_w("imm",16)],@{theory})),
               (call
                  ("ArithI.DADDI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("op2ri",@{typ string},tp[ls"daddi",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("ArithI.DADDIU",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("op2ri",@{typ string},tp[ls"daddiu",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory}))],@{context})),
          (call("instruction.Load",@{typ instruction},var("v#7",@{typ Load}),@{theory}),
           cs(var("v#7",@{typ Load}),
              [(call
                  ("Load.LDL",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"ldl",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LDR",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"ldr",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LB",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"lb",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LH",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"lh",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LWL",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"lwl",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LW",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"lw",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LBU",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"lbu",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LHU",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"lhu",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LWR",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"lwr",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LWU",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"lwu",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LL",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"ll",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LLD",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"lld",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Load.LD",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"ld",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory}))],@{context})),
          (call("instruction.Store",@{typ instruction},var("v#8",@{typ Store}),@{theory}),
           cs(var("v#8",@{typ Store}),
              [(call
                  ("Store.SB",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"sb",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Store.SH",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"sh",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Store.SWL",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("opmem",@{typ string},tp[ls"swl",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Store.SW",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"sw",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Store.SDL",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("opmem",@{typ string},tp[ls"sdl",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Store.SDR",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("opmem",@{typ string},tp[ls"sdr",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Store.SWR",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("opmem",@{typ string},tp[ls"swr",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Store.SC",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"sc",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Store.SCD",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                   @{theory}),
                call
                  ("opmem",@{typ string},tp[ls"scd",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory})),
               (call
                  ("Store.SD",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
                call
                  ("opmem",@{typ string},tp[ls"sd",var_w("rt",5),var_w("rs",5),var_w("imm",16)],
                   @{theory}))],@{context})),
          (call
             ("instruction.CACHE",@{typ instruction},
              var("v#9",@{typ "5 word \<times> 5 word \<times> 16 word"}),@{theory}),
           cs(var("v#9",@{typ "5 word \<times> 5 word \<times> 16 word"}),
              [(tp[var_w("rs",5),var_w("opn",5),var_w("imm",16)],
                cc[ls"cache ",call("ihex",@{typ string},var_w("opn",5),@{theory}),ls", ",
                   call("ihex",@{typ string},var_w("imm",16),@{theory}),ls"(",
                   call("reg_name",@{typ string},var_w("rs",5),@{theory}),ls")"])],@{context})),
          (Term.Const(@{const_name "SYSCALL"},@{typ instruction}),ls"syscall"),
          (Term.Const(@{const_name "BREAK"},@{typ instruction}),ls"break"),
          (call("instruction.SYNC",@{typ instruction},var_w("v#10",5),@{theory}),
           cc[ls"sync ",call("ihex",@{typ string},var_w("v#10",5),@{theory})]),
          (Term.Const(@{const_name "TLBR"},@{typ instruction}),ls"tlbr"),
          (Term.Const(@{const_name "TLBWI"},@{typ instruction}),ls"tlbwi"),
          (Term.Const(@{const_name "TLBWR"},@{typ instruction}),ls"tlbwr"),
          (Term.Const(@{const_name "TLBP"},@{typ instruction}),ls"tlbp"),
          (Term.Const(@{const_name "ERET"},@{typ instruction}),ls"eret"),
          (call
             ("instruction.RDHWR",@{typ instruction},var("v#11",@{typ "5 word \<times> 5 word"}),
              @{theory}),
           cs(var("v#11",@{typ "5 word \<times> 5 word"}),
              [(tp[var_w("rt",5),var_w("rd",5)],
                call("op2r",@{typ string},tp[ls"rdhwr",var_w("rt",5),var_w("rd",5)],@{theory}))],
              @{context})),(Term.Const(@{const_name "WAIT"},@{typ instruction}),ls"wait"),
          (call("instruction.COP1",@{typ instruction},var_u"v#12",@{theory}),
           call("COP1InstructionToString",@{typ string},var("i",@{typ instruction}),@{theory})),
          (call("instruction.COP2",@{typ instruction},var("v#13",@{typ COP2}),@{theory}),
           call("COP2InstructionToString",@{typ string},var("i",@{typ instruction}),@{theory})),
          (call("instruction.LWC2",@{typ instruction},var("v#14",@{typ LWC2}),@{theory}),
           call("LWC2InstructionToString",@{typ string},var("i",@{typ instruction}),@{theory})),
          (call("instruction.LDC2",@{typ instruction},var("v#15",@{typ LDC2}),@{theory}),
           call("LDC2InstructionToString",@{typ string},var("i",@{typ instruction}),@{theory})),
          (call("instruction.SWC2",@{typ instruction},var("v#16",@{typ SWC2}),@{theory}),
           call("SWC2InstructionToString",@{typ string},var("i",@{typ instruction}),@{theory})),
          (call("instruction.SDC2",@{typ instruction},var("v#17",@{typ SDC2}),@{theory}),
           call("SDC2InstructionToString",@{typ string},var("i",@{typ instruction}),@{theory})),
          (Term.Const(@{const_name "Unpredictable"},@{typ instruction}),ls"???"),
          (Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}),ls"???")],@{context})))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("Encode",
   close
     (var("i",@{typ instruction}),
      cs(var("i",@{typ instruction}),
         [(call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.SLL",@{typ Shift},tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[lw(0,5),var_w("rt",5),var_w("rd",5),var_w("imm5",5),lw(0,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.SRL",@{typ Shift},tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[lw(0,5),var_w("rt",5),var_w("rd",5),var_w("imm5",5),lw(2,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.SRA",@{typ Shift},tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[lw(0,5),var_w("rt",5),var_w("rd",5),var_w("imm5",5),lw(3,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.SLLV",@{typ Shift},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(4,6)],@{theory}),
              qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.SRLV",@{typ Shift},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(6,6)],@{theory}),
              qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.SRAV",@{typ Shift},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(7,6)],@{theory}),
              qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.JR",@{typ Branch},var_w("rs",5),@{theory}),@{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),lw(0,5),lw(0,5),lw(0,5),lw(8,6)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.JALR",@{typ Branch},tp[var_w("rs",5),var_w("rd",5)],@{theory}),@{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),lw(0,5),var_w("rd",5),lw(0,5),lw(9,6)],@{theory}),
              qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.MFHI",@{typ MultDiv},var_w("rd",5),@{theory}),@{theory}),
           mu(call("form1",w32,tp[lw(0,5),lw(0,5),var_w("rd",5),lw(0,5),lw(16,6)],@{theory}),qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.MTHI",@{typ MultDiv},var_w("rs",5),@{theory}),@{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),lw(0,5),lw(0,5),lw(0,5),lw(17,6)],@{theory}),qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.MFLO",@{typ MultDiv},var_w("rd",5),@{theory}),@{theory}),
           mu(call("form1",w32,tp[lw(0,5),lw(0,5),var_w("rd",5),lw(0,5),lw(18,6)],@{theory}),qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.MTLO",@{typ MultDiv},var_w("rs",5),@{theory}),@{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),lw(0,5),lw(0,5),lw(0,5),lw(19,6)],@{theory}),qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.DSLLV",@{typ Shift},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(20,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.DSRLV",@{typ Shift},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(22,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.DSRAV",@{typ Shift},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(23,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.MADD",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
              @{theory}),
           mu(call("form5",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,6)],@{theory}),qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.MADDU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
              @{theory}),
           mu(call("form5",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(1,6)],@{theory}),qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.MSUB",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
              @{theory}),
           mu(call("form5",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(4,6)],@{theory}),qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.MSUBU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
              @{theory}),
           mu(call("form5",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(5,6)],@{theory}),qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call
                ("MultDiv.MUL",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                 @{theory}),@{theory}),
           mu(call("form5",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(2,6)],@{theory}),qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.MULT",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
              @{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(24,6)],@{theory}),
              qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.MULTU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
              @{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(25,6)],@{theory}),
              qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.DIV",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),@{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(26,6)],@{theory}),
              qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.DIVU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
              @{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(27,6)],@{theory}),
              qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.DMULT",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
              @{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(28,6)],@{theory}),
              qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.DMULTU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
              @{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(29,6)],@{theory}),
              qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.DDIV",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
              @{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(30,6)],@{theory}),
              qTy)),
          (call
             ("instruction.MultDiv",@{typ instruction},
              call("MultDiv.DDIVU",@{typ MultDiv},tp[var_w("rs",5),var_w("rt",5)],@{theory}),
              @{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(31,6)],@{theory}),
              qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.MOVZ",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(10,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.MOVN",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(11,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.ADD",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(32,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.ADDU",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(33,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.SUB",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(34,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.SUBU",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(35,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.AND",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(36,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.OR",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(37,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.XOR",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(38,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.NOR",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(39,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.SLT",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(42,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.SLTU",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(43,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.DADD",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(44,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.DADDU",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                 @{theory}),@{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(45,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.DSUB",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(46,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.ArithR",@{typ instruction},
              call
                ("ArithR.DSUBU",@{typ ArithR},tp[var_w("rs",5),var_w("rt",5),var_w("rd",5)],
                 @{theory}),@{theory}),
           mu(call
                ("form1",w32,tp[var_w("rs",5),var_w("rt",5),var_w("rd",5),lw(0,5),lw(47,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TGE",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),@{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(48,6)],@{theory}),
              qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TGEU",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),@{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(49,6)],@{theory}),
              qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TLT",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),@{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(50,6)],@{theory}),
              qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TLTU",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),@{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(51,6)],@{theory}),
              qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TEQ",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),@{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(52,6)],@{theory}),
              qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TNE",@{typ Trap},tp[var_w("rs",5),var_w("rt",5)],@{theory}),@{theory}),
           mu(call("form1",w32,tp[var_w("rs",5),var_w("rt",5),lw(0,5),lw(0,5),lw(54,6)],@{theory}),
              qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.DSLL",@{typ Shift},tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[lw(0,5),var_w("rt",5),var_w("rd",5),var_w("imm5",5),lw(56,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.DSRL",@{typ Shift},tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[lw(0,5),var_w("rt",5),var_w("rd",5),var_w("imm5",5),lw(58,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.DSRA",@{typ Shift},tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],@{theory}),
              @{theory}),
           mu(call
                ("form1",w32,tp[lw(0,5),var_w("rt",5),var_w("rd",5),var_w("imm5",5),lw(59,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.DSLL32",@{typ Shift},tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                 @{theory}),@{theory}),
           mu(call
                ("form1",w32,tp[lw(0,5),var_w("rt",5),var_w("rd",5),var_w("imm5",5),lw(60,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.DSRL32",@{typ Shift},tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                 @{theory}),@{theory}),
           mu(call
                ("form1",w32,tp[lw(0,5),var_w("rt",5),var_w("rd",5),var_w("imm5",5),lw(62,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Shift",@{typ instruction},
              call
                ("Shift.DSRA32",@{typ Shift},tp[var_w("rt",5),var_w("rd",5),var_w("imm5",5)],
                 @{theory}),@{theory}),
           mu(call
                ("form1",w32,tp[lw(0,5),var_w("rt",5),var_w("rd",5),var_w("imm5",5),lw(63,6)],
                 @{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BLTZ",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(0,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BGEZ",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(1,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BLTZL",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(2,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BGEZL",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(3,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TGEI",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),@{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(8,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TGEIU",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),@{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(9,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TLTI",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),@{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(10,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TLTIU",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),@{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(11,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TEQI",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),@{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(12,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Trap",@{typ instruction},
              call("Trap.TNEI",@{typ Trap},tp[var_w("rs",5),var_w("imm",16)],@{theory}),@{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(14,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BLTZAL",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(16,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BGEZAL",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(17,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BLTZALL",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(18,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BGEZALL",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form2",w32,tp[var_w("rs",5),lw(19,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.J",@{typ Branch},var_w("imm",26),@{theory}),@{theory}),
           mu(cc[lw(2,6),var_w("imm",26)],qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.JAL",@{typ Branch},var_w("imm",26),@{theory}),@{theory}),
           mu(cc[lw(3,6),var_w("imm",26)],qTy)),
          (call
             ("instruction.CP",@{typ instruction},
              call("CP.MFC0",@{typ CP},tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),
              @{theory}),
           mu(call("form3",w32,tp[lw(0,5),var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),qTy)),
          (call
             ("instruction.CP",@{typ instruction},
              call("CP.DMFC0",@{typ CP},tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),
              @{theory}),
           mu(call("form3",w32,tp[lw(1,5),var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),qTy)),
          (call
             ("instruction.CP",@{typ instruction},
              call("CP.MTC0",@{typ CP},tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),
              @{theory}),
           mu(call("form3",w32,tp[lw(4,5),var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),qTy)),
          (call
             ("instruction.CP",@{typ instruction},
              call("CP.DMTC0",@{typ CP},tp[var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),
              @{theory}),
           mu(call("form3",w32,tp[lw(5,5),var_w("rt",5),var_w("rd",5),var_w("sel",3)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call
                ("Branch.BEQ",@{typ Branch},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(4,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call
                ("Branch.BNE",@{typ Branch},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(5,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BLEZ",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(6,6),var_w("rs",5),lw(0,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BGTZ",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(7,6),var_w("rs",5),lw(0,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.ArithI",@{typ instruction},
              call
                ("ArithI.ADDI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(8,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.ArithI",@{typ instruction},
              call
                ("ArithI.ADDIU",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(9,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.ArithI",@{typ instruction},
              call
                ("ArithI.SLTI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(10,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.ArithI",@{typ instruction},
              call
                ("ArithI.SLTIU",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(11,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.ArithI",@{typ instruction},
              call
                ("ArithI.ANDI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(12,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.ArithI",@{typ instruction},
              call
                ("ArithI.ORI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(13,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.ArithI",@{typ instruction},
              call
                ("ArithI.XORI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(14,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.ArithI",@{typ instruction},
              call("ArithI.LUI",@{typ ArithI},tp[var_w("rt",5),var_w("imm",16)],@{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(15,6),lw(0,5),var_w("rt",5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call
                ("Branch.BEQL",@{typ Branch},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(20,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call
                ("Branch.BNEL",@{typ Branch},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(21,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BLEZL",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(22,6),var_w("rs",5),lw(0,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.Branch",@{typ instruction},
              call("Branch.BGTZL",@{typ Branch},tp[var_w("rs",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(23,6),var_w("rs",5),lw(0,5),var_w("imm",16)],@{theory}),qTy)),
          (call
             ("instruction.ArithI",@{typ instruction},
              call
                ("ArithI.DADDI",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(24,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.ArithI",@{typ instruction},
              call
                ("ArithI.DADDIU",@{typ ArithI},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],
                 @{theory}),@{theory}),
           mu(call("form4",w32,tp[lw(25,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LDL",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(26,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LDR",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(27,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LB",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(32,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LH",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(33,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LWL",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(34,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LW",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(35,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LBU",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(36,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LHU",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(37,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LWR",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(38,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LWU",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(39,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Store",@{typ instruction},
              call
                ("Store.SB",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(40,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Store",@{typ instruction},
              call
                ("Store.SH",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(41,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Store",@{typ instruction},
              call
                ("Store.SWL",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(42,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Store",@{typ instruction},
              call
                ("Store.SW",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(43,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Store",@{typ instruction},
              call
                ("Store.SDL",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(44,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Store",@{typ instruction},
              call
                ("Store.SDR",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(45,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Store",@{typ instruction},
              call
                ("Store.SWR",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(46,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LL",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(48,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LLD",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(52,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Load",@{typ instruction},
              call("Load.LD",@{typ Load},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(55,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Store",@{typ instruction},
              call
                ("Store.SC",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(56,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Store",@{typ instruction},
              call
                ("Store.SCD",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(60,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.Store",@{typ instruction},
              call
                ("Store.SD",@{typ Store},tp[var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              @{theory}),
           mu(call("form4",w32,tp[lw(63,6),var_w("rs",5),var_w("rt",5),var_w("imm",16)],@{theory}),
              qTy)),
          (call
             ("instruction.CACHE",@{typ instruction},
              tp[var_w("rs",5),var_w("opn",5),var_w("imm",16)],@{theory}),
           mu(call("form4",w32,tp[lw(47,6),var_w("rs",5),var_w("opn",5),var_w("imm",16)],@{theory}),
              qTy)),
          (Term.Const(@{const_name "SYSCALL"},@{typ instruction}),mu(mop(Cast w32,lw(12,6)),qTy)),
          (Term.Const(@{const_name "BREAK"},@{typ instruction}),mu(mop(Cast w32,lw(13,6)),qTy)),
          (call("instruction.SYNC",@{typ instruction},var_w("imm5",5),@{theory}),
           mu(mop(Cast w32,cc[var_w("imm5",5),lw(15,6)]),qTy)),
          (Term.Const(@{const_name "TLBR"},@{typ instruction}),mu(lw(1107296257,32),qTy)),
          (Term.Const(@{const_name "TLBWI"},@{typ instruction}),mu(lw(1107296258,32),qTy)),
          (Term.Const(@{const_name "TLBWR"},@{typ instruction}),mu(lw(1107296262,32),qTy)),
          (Term.Const(@{const_name "TLBP"},@{typ instruction}),mu(lw(1107296264,32),qTy)),
          (Term.Const(@{const_name "ERET"},@{typ instruction}),mu(lw(1107296280,32),qTy)),
          (call("instruction.RDHWR",@{typ instruction},tp[var_w("rt",5),var_w("rd",5)],@{theory}),
           mu(call("form6",w32,tp[var_w("rt",5),var_w("rd",5),lw(59,6)],@{theory}),qTy)),
          (Term.Const(@{const_name "WAIT"},@{typ instruction}),mu(lw(1107296288,32),qTy)),
          (call("instruction.COP1",@{typ instruction},var_a HOLogic.unitT,@{theory}),
           mu(call("COP1Encode",w32,var("i",@{typ instruction}),@{theory}),qTy)),
          (call("instruction.COP2",@{typ instruction},var_a @{typ COP2},@{theory}),
           call
             ("COP2Encode",@{typ "state \<Rightarrow> (32 word \<times> state)"},
              var("i",@{typ instruction}),@{theory})),
          (call("instruction.LWC2",@{typ instruction},var_a @{typ LWC2},@{theory}),
           call
             ("LWC2Encode",@{typ "state \<Rightarrow> (32 word \<times> state)"},
              var("i",@{typ instruction}),@{theory})),
          (call("instruction.LDC2",@{typ instruction},var_a @{typ LDC2},@{theory}),
           call
             ("LDC2Encode",@{typ "state \<Rightarrow> (32 word \<times> state)"},
              var("i",@{typ instruction}),@{theory})),
          (call("instruction.SWC2",@{typ instruction},var_a @{typ SWC2},@{theory}),
           call
             ("SWC2Encode",@{typ "state \<Rightarrow> (32 word \<times> state)"},
              var("i",@{typ instruction}),@{theory})),
          (call("instruction.SDC2",@{typ instruction},var_a @{typ SDC2},@{theory}),
           call
             ("SDC2Encode",@{typ "state \<Rightarrow> (32 word \<times> state)"},
              var("i",@{typ instruction}),@{theory})),
          (Term.Const(@{const_name "Unpredictable"},@{typ instruction}),mu(lw(133169152,32),qTy)),
          (Term.Const(@{const_name "ReservedInstruction"},@{typ instruction}),mu(lw(0,32),qTy))],
         @{context})))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("hasCP1",lf)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("COP1Init",close(var_a HOLogic.unitT,lu))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("log_instruction",
   close
     (tp[var_w("w",32),var("inst",@{typ instruction})],
      mb(mr(close(var("s",qTy),call("state.procID",w8,var("s",qTy),@{theory}))),
         close
           (var_w("v",8),
            mb(mb(mu(mop(Cast(@{typ string}),var_w("v",8)),qTy),
                  close
                    (var_s"v",
                     mb(mr(close
                             (var("s",qTy),call("state.instCnt",HOLogic.natT,var("s",qTy),@{theory}))),
                        close
                          (var_n"v0",
                           mb(mb(mb(mu(mop(Cast(@{typ string}),var_n"v0"),qTy),
                                    close
                                      (var_s"v",
                                       mb(const
                                            ("PC",
                                             @{typ "state \<Rightarrow> (64 word \<times> state)"},
                                             @{theory}),
                                          close
                                            (var_w("v0",64),
                                             mb(mb(mb(mb(mb(mb(mb(const
                                                                    ("PCC",
                                                                     @{typ
                                                                     "state \<Rightarrow>
                                                                      (Capability \<times> state)"},
                                                                     @{theory}),
                                                                  close
                                                                    (var("v1",@{typ Capability}),
                                                                     mb(mu(call
                                                                             ("getBase",w64,
                                                                              var("v1",
                                                                                  @{typ Capability}),
                                                                              @{theory}),qTy),
                                                                        close
                                                                          (var_w("v1",64),
                                                                           mu(bop(Add,
                                                                                  var_w("v0",64),
                                                                                  var_w("v1",64)),
                                                                              qTy))))),
                                                               close
                                                                 (var_w("v",64),
                                                                  mu(call
                                                                       ("hex",@{typ string},
                                                                        var_w("v",64),@{theory}),qTy))),
                                                            close
                                                              (var_s"v",mu(tp[ln 2,var_s"v"],qTy))),
                                                         close
                                                           (var("v",@{typ "nat \<times> string"}),
                                                            mu(mop(Drop,
                                                                   var("v",
                                                                       @{typ "nat \<times> string"})),
                                                               qTy))),
                                                      close
                                                        (var_s"v",
                                                         mu(cc[var_s"v",ls" : ",
                                                               mop(Drop,
                                                                   tp[ln 2,
                                                                      call
                                                                        ("hex",@{typ string},
                                                                         var_w("w",32),@{theory})]),
                                                               ls"   ",
                                                               call
                                                                 ("instructionToString",
                                                                  @{typ string},
                                                                  var("inst",@{typ instruction}),
                                                                  @{theory})],qTy))),
                                                   close(var_s"v",mu(cc[ls" ",var_s"v"],qTy))),
                                                close(var_s"v0",mu(cc[var_s"v",var_s"v0"],qTy))))))),
                                 close(var_s"v",mu(cc[ls" ",var_s"v"],qTy))),
                              close(var_s"v0",mu(cc[var_s"v",var_s"v0"],qTy))))))),
               close(var_s"v",mu(cc[ls"instr ",var_s"v"],qTy)))))))
end
\<close>

ML \<open>
local 
open L3 
val qTy = @{typ state} 
in
val () = def
  ("Next",
   mb(mw(close(var("s",qTy),rupd("state.currentInst",tp[var("s",qTy),lo w32],@{theory}))),
      close
        (var_u"_0",
         mb(const("Fetch",@{typ "state \<Rightarrow> ((32 word option) \<times> state)"},@{theory}),
            close
              (var("v",@{typ "32 word option"}),
               mb(mw(close
                       (var("s",qTy),
                        rupd
                          ("state.currentInst",tp[var("s",qTy),var("v",@{typ "32 word option"})],
                           @{theory}))),
                  close
                    (var_u"_0",
                     mb(mr(close
                             (var("s",qTy),
                              call
                                ("state.currentInst",@{typ "32 word option"},var("s",qTy),@{theory}))),
                        close
                          (var("v",@{typ "32 word option"}),
                           mb(cs(var("v",@{typ "32 word option"}),
                                 [(mop(Some,var_w("w",32)),
                                   call
                                     ("Run",@{typ "state \<Rightarrow> (unit \<times> state)"},
                                      call("Decode",@{typ instruction},var_w("w",32),@{theory}),
                                      @{theory})),(lo w32,mu(lu,qTy))],@{context}),
                              close
                                (var_u"_0",
                                 mb(const
                                      ("BranchDelay",
                                       @{typ
                                       "state \<Rightarrow> ((64 word option) \<times> state)"},
                                       @{theory}),
                                    close
                                      (var("v",@{typ "64 word option"}),
                                       mb(mb(mb(const
                                                  ("BranchTo",
                                                   @{typ
                                                   "state \<Rightarrow>
                                                    ((64 word option) \<times> state)"},@{theory}),
                                                close
                                                  (var("v0",@{typ "64 word option"}),
                                                   mb(mb(mr(close
                                                              (var("s",qTy),
                                                               call
                                                                 ("state.BranchDelayPCC",
                                                                  @{typ
                                                                  "(64 word \<times> Capability)
                                                                      option"},var("s",qTy),
                                                                  @{theory}))),
                                                         close
                                                           (var("v1",
                                                                @{typ
                                                                "(64 word \<times> Capability)
                                                                    option"}),
                                                            mb(mb(mr(close
                                                                       (var("s",qTy),
                                                                        call
                                                                          ("state.BranchToPCC",
                                                                           @{typ
                                                                           "(64 word \<times>
                                                                              Capability)
                                                                               option"},
                                                                           var("s",qTy),@{theory}))),
                                                                  close
                                                                    (var("v2",
                                                                         @{typ
                                                                         "(64 word \<times>
                                                                            Capability)
                                                                             option"}),
                                                                     mu(tp[var("v1",
                                                                               @{typ
                                                                               "(64 word \<times>
                                                                                  Capability)
                                                                                   option"}),
                                                                           var("v2",
                                                                               @{typ
                                                                               "(64 word \<times>
                                                                                  Capability)
                                                                                   option"})],qTy))),
                                                               close
                                                                 (var("v1",
                                                                      @{typ
                                                                      "((64 word \<times> Capability)
                                                                           option) \<times>
                                                                       (64 word \<times> Capability)
                                                                          option"}),
                                                                  mu(tp[var("v0",
                                                                            @{typ "64 word option"}),
                                                                        var("v1",
                                                                            @{typ
                                                                            "((64 word \<times>
                                                                                Capability)
                                                                                 option) \<times>
                                                                             (64 word \<times>
                                                                               Capability)
                                                                                option"})],qTy))))),
                                                      close
                                                        (var("v0",
                                                             @{typ
                                                             "(64 word option) \<times>
                                                              ((64 word \<times> Capability) option) \<times>
                                                              (64 word \<times> Capability) option"}),
                                                         mu(tp[var("v",@{typ "64 word option"}),
                                                               var("v0",
                                                                   @{typ
                                                                   "(64 word option) \<times>
                                                                    ((64 word \<times> Capability)
                                                                        option) \<times>
                                                                    (64 word \<times> Capability)
                                                                       option"})],qTy))))),
                                             close
                                               (var("x",
                                                    @{typ
                                                    "(64 word option) \<times>
                                                     (64 word option) \<times>
                                                     ((64 word \<times> Capability) option) \<times>
                                                     (64 word \<times> Capability) option"}),
                                                cs(var("x",
                                                       @{typ
                                                       "(64 word option) \<times>
                                                        (64 word option) \<times>
                                                        ((64 word \<times> Capability) option) \<times>
                                                        (64 word \<times> Capability) option"}),
                                                   [(tp[lo w64,lo w64,
                                                        lo(@{typ "64 word \<times> Capability"}),
                                                        lo(@{typ "64 word \<times> Capability"})],
                                                     mb(const
                                                          ("exceptionSignalled",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (bool \<times> state)"},@{theory}),
                                                        close
                                                          (var_b"v",
                                                           mb(mu(mop(Not,var_b"v"),qTy),
                                                              close
                                                                (var_b"b",
                                                                 ite(var_b"b",
                                                                     mb(const
                                                                          ("PC",
                                                                           @{typ
                                                                           "state \<Rightarrow>
                                                                            (64 word \<times> state)"},
                                                                           @{theory}),
                                                                        close
                                                                          (var_w("v",64),
                                                                           mb(mu(bop(Add,
                                                                                     var_w("v",64),
                                                                                     lw(4,64)),qTy),
                                                                              close
                                                                                (var_w("v",64),
                                                                                 call
                                                                                   ("write'PC",
                                                                                    @{typ
                                                                                    "state \<Rightarrow>
                                                                                     (unit \<times>
                                                                                      state)"},
                                                                                    var_w("v",64),
                                                                                    @{theory}))))),
                                                                     mu(lu,qTy))))))),
                                                    (tp[mop(Some,var_w("addr",64)),lo w64,
                                                        lo(@{typ "64 word \<times> Capability"}),
                                                        lo(@{typ "64 word \<times> Capability"})],
                                                     mb(call
                                                          ("write'BranchDelay",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (unit \<times> state)"},lo w64,@{theory}),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mb(mw(close
                                                                   (var("s",qTy),
                                                                    rupd
                                                                      ("state.CCallBranchDelay",
                                                                       tp[var("s",qTy),lf],@{theory}))),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 call
                                                                   ("write'PC",
                                                                    @{typ
                                                                    "state \<Rightarrow>
                                                                     (unit \<times> state)"},
                                                                    var_w("addr",64),@{theory})))))),
                                                    (tp[lo w64,mop(Some,var_w("addr",64)),
                                                        lo(@{typ "64 word \<times> Capability"}),
                                                        lo(@{typ "64 word \<times> Capability"})],
                                                     mb(call
                                                          ("write'BranchDelay",
                                                           @{typ
                                                           "state \<Rightarrow>
                                                            (unit \<times> state)"},
                                                           mop(Some,var_w("addr",64)),@{theory}),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mb(mr(close
                                                                   (var("s",qTy),
                                                                    call
                                                                      ("state.CCallBranch",
                                                                       HOLogic.boolT,var("s",qTy),
                                                                       @{theory}))),
                                                              close
                                                                (var_b"v",
                                                                 mb(mw(close
                                                                         (var("s",qTy),
                                                                          rupd
                                                                            ("state.CCallBranchDelay",
                                                                             tp[var("s",qTy),
                                                                                var_b"v"],@{theory}))),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mb(call
                                                                            ("write'BranchTo",
                                                                             @{typ
                                                                             "state \<Rightarrow>
                                                                              (unit \<times> state)"},
                                                                             lo w64,@{theory}),
                                                                          close
                                                                            (var_a HOLogic.unitT,
                                                                             mb(mw(close
                                                                                     (var("s",qTy),
                                                                                      rupd
                                                                                        ("state.CCallBranch",
                                                                                         tp[var("s",
                                                                                                qTy),
                                                                                            lf],
                                                                                         @{theory}))),
                                                                                close
                                                                                  (var_a
                                                                                     HOLogic.unitT,
                                                                                   mb(const
                                                                                        ("PC",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (64 word \<times>
                                                                                           state)"},
                                                                                         @{theory}),
                                                                                      close
                                                                                        (var_w("v",64),
                                                                                         mb(mu(bop(Add,
                                                                                                   var_w("v",64),
                                                                                                   lw(4,
                                                                                                      64)),
                                                                                               qTy),
                                                                                            close
                                                                                              (var_w("v",64),
                                                                                               call
                                                                                                 ("write'PC",
                                                                                                  @{typ
                                                                                                  "state \<Rightarrow>
                                                                                                   (unit \<times>
                                                                                                    state)"},
                                                                                                  var_w("v",64),
                                                                                                  @{theory})))))))))))))))),
                                                    (tp[lo w64,lo w64,
                                                        mop(Some,
                                                            tp[var_w("addr",64),
                                                               var("cap",@{typ Capability})]),
                                                        lo(@{typ "64 word \<times> Capability"})],
                                                     mb(mw(close
                                                             (var("s",qTy),
                                                              rupd
                                                                ("state.BranchDelayPCC",
                                                                 tp[var("s",qTy),
                                                                    lo(@{typ
                                                                       "64 word \<times> Capability"})],
                                                                 @{theory}))),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mb(mw(close
                                                                   (var("s",qTy),
                                                                    rupd
                                                                      ("state.CCallBranchDelay",
                                                                       tp[var("s",qTy),lf],@{theory}))),
                                                              close
                                                                (var_a HOLogic.unitT,
                                                                 mb(call
                                                                      ("write'PC",
                                                                       @{typ
                                                                       "state \<Rightarrow>
                                                                        (unit \<times> state)"},
                                                                       var_w("addr",64),@{theory}),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       call
                                                                         ("write'PCC",
                                                                          @{typ
                                                                          "state \<Rightarrow>
                                                                           (unit \<times> state)"},
                                                                          var("cap",
                                                                              @{typ Capability}),
                                                                          @{theory})))))))),
                                                    (tp[lo w64,lo w64,
                                                        lo(@{typ "64 word \<times> Capability"}),
                                                        mop(Some,
                                                            tp[var_w("addr",64),
                                                               var("cap",@{typ Capability})])],
                                                     mb(mw(close
                                                             (var("s",qTy),
                                                              rupd
                                                                ("state.BranchDelayPCC",
                                                                 tp[var("s",qTy),
                                                                    mop(Some,
                                                                        tp[var_w("addr",64),
                                                                           var("cap",
                                                                               @{typ Capability})])],
                                                                 @{theory}))),
                                                        close
                                                          (var_a HOLogic.unitT,
                                                           mb(mr(close
                                                                   (var("s",qTy),
                                                                    call
                                                                      ("state.CCallBranch",
                                                                       HOLogic.boolT,var("s",qTy),
                                                                       @{theory}))),
                                                              close
                                                                (var_b"v",
                                                                 mb(mw(close
                                                                         (var("s",qTy),
                                                                          rupd
                                                                            ("state.CCallBranchDelay",
                                                                             tp[var("s",qTy),
                                                                                var_b"v"],@{theory}))),
                                                                    close
                                                                      (var_a HOLogic.unitT,
                                                                       mb(mw(close
                                                                               (var("s",qTy),
                                                                                rupd
                                                                                  ("state.BranchToPCC",
                                                                                   tp[var("s",qTy),
                                                                                      lo(@{typ
                                                                                         "64 word \<times>
                                                                                          Capability"})],
                                                                                   @{theory}))),
                                                                          close
                                                                            (var_a HOLogic.unitT,
                                                                             mb(mw(close
                                                                                     (var("s",qTy),
                                                                                      rupd
                                                                                        ("state.CCallBranch",
                                                                                         tp[var("s",
                                                                                                qTy),
                                                                                            lf],
                                                                                         @{theory}))),
                                                                                close
                                                                                  (var_a
                                                                                     HOLogic.unitT,
                                                                                   mb(const
                                                                                        ("PC",
                                                                                         @{typ
                                                                                         "state \<Rightarrow>
                                                                                          (64 word \<times>
                                                                                           state)"},
                                                                                         @{theory}),
                                                                                      close
                                                                                        (var_w("v",64),
                                                                                         mb(mu(bop(Add,
                                                                                                   var_w("v",64),
                                                                                                   lw(4,
                                                                                                      64)),
                                                                                               qTy),
                                                                                            close
                                                                                              (var_w("v",64),
                                                                                               call
                                                                                                 ("write'PC",
                                                                                                  @{typ
                                                                                                  "state \<Rightarrow>
                                                                                                   (unit \<times>
                                                                                                    state)"},
                                                                                                  var_w("v",64),
                                                                                                  @{theory})))))))))))))))),
                                                    (var_a
                                                       (@{typ
                                                        "(64 word option) \<times>
                                                         (64 word option) \<times>
                                                         ((64 word \<times> Capability) option) \<times>
                                                         (64 word \<times> Capability) option"}),
                                                     call
                                                       ("raise'exception",
                                                        @{typ
                                                        "state \<Rightarrow> (unit \<times> state)"},
                                                        call
                                                          ("exception.UNPREDICTABLE",
                                                           @{typ exception},
                                                           ls"Branch follows branch",@{theory}),
                                                        @{theory}))],@{context}))),
                                          close
                                            (var_a HOLogic.unitT,
                                             mb(call
                                                  ("write'exceptionSignalled",
                                                   @{typ
                                                   "state \<Rightarrow> (unit \<times> state)"},lf,
                                                   @{theory}),
                                                close
                                                  (var_a HOLogic.unitT,
                                                   mb(const
                                                        ("CP0",
                                                         @{typ
                                                         "state \<Rightarrow> (CP0 \<times> state)"},
                                                         @{theory}),
                                                      close
                                                        (var("x",@{typ CP0}),
                                                         mb(const
                                                              ("CP0",
                                                               @{typ
                                                               "state \<Rightarrow>
                                                                (CP0 \<times> state)"},@{theory}),
                                                            close
                                                              (var("v",@{typ CP0}),
                                                               mb(mb(mb(mb(mu(call
                                                                                ("CP0.Count",w32,
                                                                                 var("v",@{typ CP0}),
                                                                                 @{theory}),qTy),
                                                                           close
                                                                             (var_w("v",32),
                                                                              mu(bop(Add,
                                                                                     var_w("v",32),
                                                                                     lw(1,32)),qTy))),
                                                                        close
                                                                          (var_w("v",32),
                                                                           mu(tp[var("x",@{typ CP0}),
                                                                                 var_w("v",32)],qTy))),
                                                                     close
                                                                       (var("v",
                                                                            @{typ
                                                                            "CP0 \<times> 32 word"}),
                                                                        mu(rupd
                                                                             ("CP0.Count",
                                                                              var("v",
                                                                                  @{typ
                                                                                  "CP0 \<times>
                                                                                   32 word"}),
                                                                              @{theory}),qTy))),
                                                                  close
                                                                    (var("v",@{typ CP0}),
                                                                     call
                                                                       ("write'CP0",
                                                                        @{typ
                                                                        "state \<Rightarrow>
                                                                         (unit \<times> state)"},
                                                                        var("v",@{typ CP0}),
                                                                        @{theory}))))))))))))))))))))))))
end
\<close>

ML \<open>
local 
open L3 
in
val () = def ("hasCP2",lt)
end
\<close>

ML \<open>
local 
open L3 
in
val () = def
  ("COP2Init",
   close
     (var_a HOLogic.unitT,
      mn(lx @{typ CapCause},
         mb(mr(close
                 (var("s",@{typ "CapCause \<times> state"}),
                  mop(Fst,var("s",@{typ "CapCause \<times> state"})))),
            close
              (var("v",@{typ CapCause}),
               mb(mb(mb(mu(tp[var("v",@{typ CapCause}),lw(0,8)],@{typ "CapCause \<times> state"}),
                        close
                          (var("v",@{typ "CapCause \<times> 8 word"}),
                           mu(rupd
                                ("CapCause.ExcCode",var("v",@{typ "CapCause \<times> 8 word"}),
                                 @{theory}),@{typ "CapCause \<times> state"}))),
                     close
                       (var("v",@{typ CapCause}),
                        mw(close
                             (var("s",@{typ "CapCause \<times> state"}),
                              tp[var("v",@{typ CapCause}),
                                 mop(Snd,var("s",@{typ "CapCause \<times> state"}))])))),
                  close
                    (var_a HOLogic.unitT,
                     mb(mr(close
                             (var("s",@{typ "CapCause \<times> state"}),
                              mop(Fst,var("s",@{typ "CapCause \<times> state"})))),
                        close
                          (var("v",@{typ CapCause}),
                           mb(mb(mb(mu(tp[var("v",@{typ CapCause}),lw(0,8)],
                                       @{typ "CapCause \<times> state"}),
                                    close
                                      (var("v",@{typ "CapCause \<times> 8 word"}),
                                       mu(rupd
                                            ("CapCause.RegNum",
                                             var("v",@{typ "CapCause \<times> 8 word"}),@{theory}),
                                          @{typ "CapCause \<times> state"}))),
                                 close
                                   (var("v",@{typ CapCause}),
                                    mw(close
                                         (var("s",@{typ "CapCause \<times> state"}),
                                          tp[var("v",@{typ CapCause}),
                                             mop(Snd,var("s",@{typ "CapCause \<times> state"}))])))),
                              close
                                (var_a HOLogic.unitT,
                                 mb(mr(close
                                         (var("s",@{typ "CapCause \<times> state"}),
                                          mop(Fst,var("s",@{typ "CapCause \<times> state"})))),
                                    close
                                      (var("v",@{typ CapCause}),
                                       mb(mw(close
                                               (var("s",@{typ "CapCause \<times> state"}),
                                                tp[mop(Fst,var("s",@{typ "CapCause \<times> state"})),
                                                   rupd
                                                     ("state.capcause",
                                                      tp[mop(Snd,
                                                             var("s",
                                                                 @{typ "CapCause \<times> state"})),
                                                         var("v",@{typ CapCause})],@{theory})])),
                                          close
                                            (var_a HOLogic.unitT,
                                             mb(md(call
                                                     ("write'PCC",
                                                      @{typ
                                                      "state \<Rightarrow> (unit \<times> state)"},
                                                      const
                                                        ("defaultCap",@{typ Capability},@{theory}),
                                                      @{theory}),@{typ CapCause}),
                                                close
                                                  (var_a HOLogic.unitT,
                                                   forloop
                                                     (tp[ln 0,ln 31,
                                                         close
                                                           (var_n"i",
                                                            md(call
                                                                 ("write'CAPR",
                                                                  @{typ
                                                                  "state \<Rightarrow>
                                                                   (unit \<times> state)"},
                                                                  tp[const
                                                                       ("defaultCap",
                                                                        @{typ Capability},@{theory}),
                                                                     mop(Cast (Word_Lib.mk_wordT 5),
                                                                         var_n"i")],@{theory}),
                                                               @{typ CapCause}))]))))))))))))))))))
end
\<close>
end